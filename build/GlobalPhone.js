/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	__webpack_require__(185);

	var _home = __webpack_require__(189);

	var _home2 = _interopRequireDefault(_home);

	var _land = __webpack_require__(233);

	var _land2 = _interopRequireDefault(_land);

	var _themeHead = __webpack_require__(236);

	var _themeHead2 = _interopRequireDefault(_themeHead);

	var _smartg = __webpack_require__(239);

	var _smartg2 = _interopRequireDefault(_smartg);

	var _Router = __webpack_require__(293);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	(0, _reactDom.render)(_react2.default.createElement(_Router2.default, null), document.getElementById('app'));

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "main.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(3);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactBaseClasses = __webpack_require__(6);
	var ReactChildren = __webpack_require__(15);
	var ReactDOMFactories = __webpack_require__(23);
	var ReactElement = __webpack_require__(17);
	var ReactPropTypes = __webpack_require__(29);
	var ReactVersion = __webpack_require__(34);

	var createReactClass = __webpack_require__(35);
	var onlyChild = __webpack_require__(37);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  var lowPriorityWarning = __webpack_require__(14);
	  var canDefineProperty = __webpack_require__(11);
	  var ReactElementValidator = __webpack_require__(24);
	  var didWarnPropTypesDeprecated = false;
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;
	var createMixin = function (mixin) {
	  return mixin;
	};

	if (process.env.NODE_ENV !== 'production') {
	  var warnedForSpread = false;
	  var warnedForCreateMixin = false;
	  __spread = function () {
	    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
	    warnedForSpread = true;
	    return _assign.apply(null, arguments);
	  };

	  createMixin = function (mixin) {
	    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
	    warnedForCreateMixin = true;
	    return mixin;
	  };
	}

	var React = {
	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactBaseClasses.Component,
	  PureComponent: ReactBaseClasses.PureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: createReactClass,
	  createFactory: createFactory,
	  createMixin: createMixin,

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	if (process.env.NODE_ENV !== 'production') {
	  var warnedForCreateClass = false;
	  if (canDefineProperty) {
	    Object.defineProperty(React, 'PropTypes', {
	      get: function () {
	        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
	        didWarnPropTypesDeprecated = true;
	        return ReactPropTypes;
	      }
	    });

	    Object.defineProperty(React, 'createClass', {
	      get: function () {
	        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
	        warnedForCreateClass = true;
	        return createReactClass;
	      }
	    });
	  }

	  // React.DOM factories are deprecated. Wrap these methods so that
	  // invocations of the React.DOM namespace and alert users to switch
	  // to the `react-dom-factories` package.
	  React.DOM = {};
	  var warnedForFactories = false;
	  Object.keys(ReactDOMFactories).forEach(function (factory) {
	    React.DOM[factory] = function () {
	      if (!warnedForFactories) {
	        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
	        warnedForFactories = true;
	      }
	      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
	    };
	  });
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 5 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(5);

	var ReactNoopUpdateQueue = __webpack_require__(8);

	var canDefineProperty = __webpack_require__(11);
	var emptyObject = __webpack_require__(12);
	var invariant = __webpack_require__(13);
	var lowPriorityWarning = __webpack_require__(14);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = {
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 7 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var warning = __webpack_require__(9);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(10);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = lowPriorityWarning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var PooledClass = __webpack_require__(16);
	var ReactElement = __webpack_require__(17);

	var emptyFunction = __webpack_require__(10);
	var traverseAllChildren = __webpack_require__(20);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(13);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactCurrentOwner = __webpack_require__(18);

	var warning = __webpack_require__(9);
	var canDefineProperty = __webpack_require__(11);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var REACT_ELEMENT_TYPE = __webpack_require__(19);

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 18 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	};

	module.exports = ReactCurrentOwner;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(18);
	var REACT_ELEMENT_TYPE = __webpack_require__(19);

	var getIteratorFn = __webpack_require__(21);
	var invariant = __webpack_require__(13);
	var KeyEscapeUtils = __webpack_require__(22);
	var warning = __webpack_require__(9);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 21 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 22 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactElement = __webpack_require__(17);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(24);
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(18);
	var ReactComponentTreeHook = __webpack_require__(25);
	var ReactElement = __webpack_require__(17);

	var checkReactTypeSpec = __webpack_require__(26);

	var canDefineProperty = __webpack_require__(11);
	var getIteratorFn = __webpack_require__(21);
	var warning = __webpack_require__(9);
	var lowPriorityWarning = __webpack_require__(14);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getSourceInfoErrorAddendum(elementProps) {
	  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
	    var source = elementProps.__source;
	    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
	    var lineNumber = source.lineNumber;
	    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      if (typeof type !== 'function' && typeof type !== 'string') {
	        var info = '';
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
	        }

	        var sourceInfo = getSourceInfoErrorAddendum(props);
	        if (sourceInfo) {
	          info += sourceInfo;
	        } else {
	          info += getDeclarationErrorAddendum();
	        }

	        info += ReactComponentTreeHook.getCurrentStackAddendum();

	        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
	        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
	        ReactComponentTreeHook.popNonStandardWarningStack();
	      }
	    }

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(18);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty
	  // Strip regex characters so we can use it for regex
	  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
	  // Remove hasOwnProperty from the template to make it generic
	  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;

	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();

	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };

	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};

	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };

	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };

	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}

	var unmountedIDs = [];

	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },


	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs,

	  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
	    if (typeof console.reactStack !== 'function') {
	      return;
	    }

	    var stack = [];
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    try {
	      if (isCreatingElement) {
	        stack.push({
	          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
	          fileName: currentSource ? currentSource.fileName : null,
	          lineNumber: currentSource ? currentSource.lineNumber : null
	        });
	      }

	      while (id) {
	        var element = ReactComponentTreeHook.getElement(id);
	        var parentID = ReactComponentTreeHook.getParentID(id);
	        var ownerID = ReactComponentTreeHook.getOwnerID(id);
	        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
	        var source = element && element._source;
	        stack.push({
	          name: ownerName,
	          fileName: source ? source.fileName : null,
	          lineNumber: source ? source.lineNumber : null
	        });
	        id = parentID;
	      }
	    } catch (err) {
	      // Internal state is messed up.
	      // Stop building the stack (it's just a nice to have).
	    }

	    console.reactStack(stack);
	  },
	  popNonStandardWarningStack: function () {
	    if (typeof console.reactStackEnd !== 'function') {
	      return;
	    }
	    console.reactStackEnd();
	  }
	};

	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactPropTypeLocationNames = __webpack_require__(27);
	var ReactPropTypesSecret = __webpack_require__(28);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(25);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(25);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 28 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _require = __webpack_require__(17),
	    isValidElement = _require.isValidElement;

	var factory = __webpack_require__(30);

	module.exports = factory(isValidElement);

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	// React 15.5 references this module, and assumes PropTypes are still callable in production.
	// Therefore we re-export development-only version with all the PropTypes checks here.
	// However if one is migrating to the `prop-types` npm library, they will go through the
	// `index.js` entry point, and it will branch depending on the environment.
	var factory = __webpack_require__(31);
	module.exports = function(isValidElement) {
	  // It is still allowed in 15.5.
	  var throwOnDirectAccess = false;
	  return factory(isValidElement, throwOnDirectAccess);
	};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(10);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var ReactPropTypesSecret = __webpack_require__(32);
	var checkPropTypes = __webpack_require__(33);

	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          invariant(
	            false,
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            warning(
	              false,
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `%s` prop on `%s`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
	              propFullName,
	              componentName
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        warning(
	          false,
	          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
	          'received %s at index %s.',
	          getPostfixForTypeWarning(checker),
	          i
	        );
	        return emptyFunction.thatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }

	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 32 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	if (process.env.NODE_ENV !== 'production') {
	  var invariant = __webpack_require__(13);
	  var warning = __webpack_require__(9);
	  var ReactPropTypesSecret = __webpack_require__(32);
	  var loggedTypeFailures = {};
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
	        }
	      }
	    }
	  }
	}

	module.exports = checkPropTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 34 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	module.exports = '15.6.1';

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _require = __webpack_require__(6),
	    Component = _require.Component;

	var _require2 = __webpack_require__(17),
	    isValidElement = _require2.isValidElement;

	var ReactNoopUpdateQueue = __webpack_require__(8);
	var factory = __webpack_require__(36);

	module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var emptyObject = __webpack_require__(12);
	var _invariant = __webpack_require__(13);

	if (process.env.NODE_ENV !== 'production') {
	  var warning = __webpack_require__(9);
	}

	var MIXINS_KEY = 'mixins';

	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}

	var ReactPropTypeLocationNames;
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	} else {
	  ReactPropTypeLocationNames = {};
	}

	function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
	  /**
	   * Policies that describe methods in `ReactClassInterface`.
	   */

	  var injectedMixins = [];

	  /**
	   * Composite components are higher-level components that compose other composite
	   * or host components.
	   *
	   * To create a new type of `ReactClass`, pass a specification of
	   * your new class to `React.createClass`. The only requirement of your class
	   * specification is that you implement a `render` method.
	   *
	   *   var MyComponent = React.createClass({
	   *     render: function() {
	   *       return <div>Hello World</div>;
	   *     }
	   *   });
	   *
	   * The class specification supports a specific protocol of methods that have
	   * special meaning (e.g. `render`). See `ReactClassInterface` for
	   * more the comprehensive protocol. Any other properties and methods in the
	   * class specification will be available on the prototype.
	   *
	   * @interface ReactClassInterface
	   * @internal
	   */
	  var ReactClassInterface = {
	    /**
	     * An array of Mixin objects to include when defining your component.
	     *
	     * @type {array}
	     * @optional
	     */
	    mixins: 'DEFINE_MANY',

	    /**
	     * An object containing properties and methods that should be defined on
	     * the component's constructor instead of its prototype (static methods).
	     *
	     * @type {object}
	     * @optional
	     */
	    statics: 'DEFINE_MANY',

	    /**
	     * Definition of prop types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    propTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    contextTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types this component sets for its children.
	     *
	     * @type {object}
	     * @optional
	     */
	    childContextTypes: 'DEFINE_MANY',

	    // ==== Definition methods ====

	    /**
	     * Invoked when the component is mounted. Values in the mapping will be set on
	     * `this.props` if that prop is not specified (i.e. using an `in` check).
	     *
	     * This method is invoked before `getInitialState` and therefore cannot rely
	     * on `this.state` or use `this.setState`.
	     *
	     * @return {object}
	     * @optional
	     */
	    getDefaultProps: 'DEFINE_MANY_MERGED',

	    /**
	     * Invoked once before the component is mounted. The return value will be used
	     * as the initial value of `this.state`.
	     *
	     *   getInitialState: function() {
	     *     return {
	     *       isOn: false,
	     *       fooBaz: new BazFoo()
	     *     }
	     *   }
	     *
	     * @return {object}
	     * @optional
	     */
	    getInitialState: 'DEFINE_MANY_MERGED',

	    /**
	     * @return {object}
	     * @optional
	     */
	    getChildContext: 'DEFINE_MANY_MERGED',

	    /**
	     * Uses props from `this.props` and state from `this.state` to render the
	     * structure of the component.
	     *
	     * No guarantees are made about when or how often this method is invoked, so
	     * it must not have side effects.
	     *
	     *   render: function() {
	     *     var name = this.props.name;
	     *     return <div>Hello, {name}!</div>;
	     *   }
	     *
	     * @return {ReactComponent}
	     * @required
	     */
	    render: 'DEFINE_ONCE',

	    // ==== Delegate methods ====

	    /**
	     * Invoked when the component is initially created and about to be mounted.
	     * This may have side effects, but any external subscriptions or data created
	     * by this method must be cleaned up in `componentWillUnmount`.
	     *
	     * @optional
	     */
	    componentWillMount: 'DEFINE_MANY',

	    /**
	     * Invoked when the component has been mounted and has a DOM representation.
	     * However, there is no guarantee that the DOM node is in the document.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been mounted (initialized and rendered) for the first time.
	     *
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidMount: 'DEFINE_MANY',

	    /**
	     * Invoked before the component receives new props.
	     *
	     * Use this as an opportunity to react to a prop transition by updating the
	     * state using `this.setState`. Current props are accessed via `this.props`.
	     *
	     *   componentWillReceiveProps: function(nextProps, nextContext) {
	     *     this.setState({
	     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	     *     });
	     *   }
	     *
	     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	     * transition may cause a state change, but the opposite is not true. If you
	     * need it, you are probably looking for `componentWillUpdate`.
	     *
	     * @param {object} nextProps
	     * @optional
	     */
	    componentWillReceiveProps: 'DEFINE_MANY',

	    /**
	     * Invoked while deciding if the component should be updated as a result of
	     * receiving new props, state and/or context.
	     *
	     * Use this as an opportunity to `return false` when you're certain that the
	     * transition to the new props/state/context will not require a component
	     * update.
	     *
	     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	     *     return !equal(nextProps, this.props) ||
	     *       !equal(nextState, this.state) ||
	     *       !equal(nextContext, this.context);
	     *   }
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @return {boolean} True if the component should update.
	     * @optional
	     */
	    shouldComponentUpdate: 'DEFINE_ONCE',

	    /**
	     * Invoked when the component is about to update due to a transition from
	     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	     * and `nextContext`.
	     *
	     * Use this as an opportunity to perform preparation before an update occurs.
	     *
	     * NOTE: You **cannot** use `this.setState()` in this method.
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @param {ReactReconcileTransaction} transaction
	     * @optional
	     */
	    componentWillUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component's DOM representation has been updated.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been updated.
	     *
	     * @param {object} prevProps
	     * @param {?object} prevState
	     * @param {?object} prevContext
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component is about to be removed from its parent and have
	     * its DOM representation destroyed.
	     *
	     * Use this as an opportunity to deallocate any external resources.
	     *
	     * NOTE: There is no `componentDidUnmount` since your component will have been
	     * destroyed by that point.
	     *
	     * @optional
	     */
	    componentWillUnmount: 'DEFINE_MANY',

	    // ==== Advanced methods ====

	    /**
	     * Updates the component's currently mounted DOM representation.
	     *
	     * By default, this implements React's rendering and reconciliation algorithm.
	     * Sophisticated clients may wish to override this.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     * @overridable
	     */
	    updateComponent: 'OVERRIDE_BASE'
	  };

	  /**
	   * Mapping from class specification keys to special processing functions.
	   *
	   * Although these are declared like instance properties in the specification
	   * when defining classes using `React.createClass`, they are actually static
	   * and are accessible on the constructor instead of the prototype. Despite
	   * being static, they must be defined outside of the "statics" key under
	   * which all other static methods are defined.
	   */
	  var RESERVED_SPEC_KEYS = {
	    displayName: function(Constructor, displayName) {
	      Constructor.displayName = displayName;
	    },
	    mixins: function(Constructor, mixins) {
	      if (mixins) {
	        for (var i = 0; i < mixins.length; i++) {
	          mixSpecIntoComponent(Constructor, mixins[i]);
	        }
	      }
	    },
	    childContextTypes: function(Constructor, childContextTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, childContextTypes, 'childContext');
	      }
	      Constructor.childContextTypes = _assign(
	        {},
	        Constructor.childContextTypes,
	        childContextTypes
	      );
	    },
	    contextTypes: function(Constructor, contextTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, contextTypes, 'context');
	      }
	      Constructor.contextTypes = _assign(
	        {},
	        Constructor.contextTypes,
	        contextTypes
	      );
	    },
	    /**
	     * Special case getDefaultProps which should move into statics but requires
	     * automatic merging.
	     */
	    getDefaultProps: function(Constructor, getDefaultProps) {
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps = createMergedResultFunction(
	          Constructor.getDefaultProps,
	          getDefaultProps
	        );
	      } else {
	        Constructor.getDefaultProps = getDefaultProps;
	      }
	    },
	    propTypes: function(Constructor, propTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, propTypes, 'prop');
	      }
	      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	    },
	    statics: function(Constructor, statics) {
	      mixStaticSpecIntoComponent(Constructor, statics);
	    },
	    autobind: function() {}
	  };

	  function validateTypeDef(Constructor, typeDef, location) {
	    for (var propName in typeDef) {
	      if (typeDef.hasOwnProperty(propName)) {
	        // use a warning instead of an _invariant so components
	        // don't show up in prod but only in __DEV__
	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            typeof typeDef[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	              'React.PropTypes.',
	            Constructor.displayName || 'ReactClass',
	            ReactPropTypeLocationNames[location],
	            propName
	          );
	        }
	      }
	    }
	  }

	  function validateMethodOverride(isAlreadyDefined, name) {
	    var specPolicy = ReactClassInterface.hasOwnProperty(name)
	      ? ReactClassInterface[name]
	      : null;

	    // Disallow overriding of base class methods unless explicitly allowed.
	    if (ReactClassMixin.hasOwnProperty(name)) {
	      _invariant(
	        specPolicy === 'OVERRIDE_BASE',
	        'ReactClassInterface: You are attempting to override ' +
	          '`%s` from your class specification. Ensure that your method names ' +
	          'do not overlap with React methods.',
	        name
	      );
	    }

	    // Disallow defining methods more than once unless explicitly allowed.
	    if (isAlreadyDefined) {
	      _invariant(
	        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
	        'ReactClassInterface: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be due ' +
	          'to a mixin.',
	        name
	      );
	    }
	  }

	  /**
	   * Mixin helper which handles policy validation and reserved
	   * specification keys when building React classes.
	   */
	  function mixSpecIntoComponent(Constructor, spec) {
	    if (!spec) {
	      if (process.env.NODE_ENV !== 'production') {
	        var typeofSpec = typeof spec;
	        var isMixinValid = typeofSpec === 'object' && spec !== null;

	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            isMixinValid,
	            "%s: You're attempting to include a mixin that is either null " +
	              'or not an object. Check the mixins included by the component, ' +
	              'as well as any mixins they include themselves. ' +
	              'Expected object but got %s.',
	            Constructor.displayName || 'ReactClass',
	            spec === null ? null : typeofSpec
	          );
	        }
	      }

	      return;
	    }

	    _invariant(
	      typeof spec !== 'function',
	      "ReactClass: You're attempting to " +
	        'use a component class or function as a mixin. Instead, just use a ' +
	        'regular object.'
	    );
	    _invariant(
	      !isValidElement(spec),
	      "ReactClass: You're attempting to " +
	        'use a component as a mixin. Instead, just use a regular object.'
	    );

	    var proto = Constructor.prototype;
	    var autoBindPairs = proto.__reactAutoBindPairs;

	    // By handling mixins before any other properties, we ensure the same
	    // chaining order is applied to methods with DEFINE_MANY policy, whether
	    // mixins are listed before or after these methods in the spec.
	    if (spec.hasOwnProperty(MIXINS_KEY)) {
	      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	    }

	    for (var name in spec) {
	      if (!spec.hasOwnProperty(name)) {
	        continue;
	      }

	      if (name === MIXINS_KEY) {
	        // We have already handled mixins in a special case above.
	        continue;
	      }

	      var property = spec[name];
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      validateMethodOverride(isAlreadyDefined, name);

	      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	        RESERVED_SPEC_KEYS[name](Constructor, property);
	      } else {
	        // Setup methods on prototype:
	        // The following member methods should not be automatically bound:
	        // 1. Expected ReactClass methods (in the "interface").
	        // 2. Overridden methods (that were mixed in).
	        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	        var isFunction = typeof property === 'function';
	        var shouldAutoBind =
	          isFunction &&
	          !isReactClassMethod &&
	          !isAlreadyDefined &&
	          spec.autobind !== false;

	        if (shouldAutoBind) {
	          autoBindPairs.push(name, property);
	          proto[name] = property;
	        } else {
	          if (isAlreadyDefined) {
	            var specPolicy = ReactClassInterface[name];

	            // These cases should already be caught by validateMethodOverride.
	            _invariant(
	              isReactClassMethod &&
	                (specPolicy === 'DEFINE_MANY_MERGED' ||
	                  specPolicy === 'DEFINE_MANY'),
	              'ReactClass: Unexpected spec policy %s for key %s ' +
	                'when mixing in component specs.',
	              specPolicy,
	              name
	            );

	            // For methods which are defined more than once, call the existing
	            // methods before calling the new property, merging if appropriate.
	            if (specPolicy === 'DEFINE_MANY_MERGED') {
	              proto[name] = createMergedResultFunction(proto[name], property);
	            } else if (specPolicy === 'DEFINE_MANY') {
	              proto[name] = createChainedFunction(proto[name], property);
	            }
	          } else {
	            proto[name] = property;
	            if (process.env.NODE_ENV !== 'production') {
	              // Add verbose displayName to the function, which helps when looking
	              // at profiling tools.
	              if (typeof property === 'function' && spec.displayName) {
	                proto[name].displayName = spec.displayName + '_' + name;
	              }
	            }
	          }
	        }
	      }
	    }
	  }

	  function mixStaticSpecIntoComponent(Constructor, statics) {
	    if (!statics) {
	      return;
	    }
	    for (var name in statics) {
	      var property = statics[name];
	      if (!statics.hasOwnProperty(name)) {
	        continue;
	      }

	      var isReserved = name in RESERVED_SPEC_KEYS;
	      _invariant(
	        !isReserved,
	        'ReactClass: You are attempting to define a reserved ' +
	          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	          'as an instance property instead; it will still be accessible on the ' +
	          'constructor.',
	        name
	      );

	      var isInherited = name in Constructor;
	      _invariant(
	        !isInherited,
	        'ReactClass: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be ' +
	          'due to a mixin.',
	        name
	      );
	      Constructor[name] = property;
	    }
	  }

	  /**
	   * Merge two objects, but throw if both contain the same key.
	   *
	   * @param {object} one The first object, which is mutated.
	   * @param {object} two The second object
	   * @return {object} one after it has been mutated to contain everything in two.
	   */
	  function mergeIntoWithNoDuplicateKeys(one, two) {
	    _invariant(
	      one && two && typeof one === 'object' && typeof two === 'object',
	      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	    );

	    for (var key in two) {
	      if (two.hasOwnProperty(key)) {
	        _invariant(
	          one[key] === undefined,
	          'mergeIntoWithNoDuplicateKeys(): ' +
	            'Tried to merge two objects with the same key: `%s`. This conflict ' +
	            'may be due to a mixin; in particular, this may be caused by two ' +
	            'getInitialState() or getDefaultProps() methods returning objects ' +
	            'with clashing keys.',
	          key
	        );
	        one[key] = two[key];
	      }
	    }
	    return one;
	  }

	  /**
	   * Creates a function that invokes two functions and merges their return values.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createMergedResultFunction(one, two) {
	    return function mergedResult() {
	      var a = one.apply(this, arguments);
	      var b = two.apply(this, arguments);
	      if (a == null) {
	        return b;
	      } else if (b == null) {
	        return a;
	      }
	      var c = {};
	      mergeIntoWithNoDuplicateKeys(c, a);
	      mergeIntoWithNoDuplicateKeys(c, b);
	      return c;
	    };
	  }

	  /**
	   * Creates a function that invokes two functions and ignores their return vales.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createChainedFunction(one, two) {
	    return function chainedFunction() {
	      one.apply(this, arguments);
	      two.apply(this, arguments);
	    };
	  }

	  /**
	   * Binds a method to the component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   * @param {function} method Method to be bound.
	   * @return {function} The bound method.
	   */
	  function bindAutoBindMethod(component, method) {
	    var boundMethod = method.bind(component);
	    if (process.env.NODE_ENV !== 'production') {
	      boundMethod.__reactBoundContext = component;
	      boundMethod.__reactBoundMethod = method;
	      boundMethod.__reactBoundArguments = null;
	      var componentName = component.constructor.displayName;
	      var _bind = boundMethod.bind;
	      boundMethod.bind = function(newThis) {
	        for (
	          var _len = arguments.length,
	            args = Array(_len > 1 ? _len - 1 : 0),
	            _key = 1;
	          _key < _len;
	          _key++
	        ) {
	          args[_key - 1] = arguments[_key];
	        }

	        // User is trying to bind() an autobound method; we effectively will
	        // ignore the value of "this" that the user is trying to use, so
	        // let's warn.
	        if (newThis !== component && newThis !== null) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): React component methods may only be bound to the ' +
	                'component instance. See %s',
	              componentName
	            );
	          }
	        } else if (!args.length) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): You are binding a component method to the component. ' +
	                'React does this for you automatically in a high-performance ' +
	                'way, so you can safely remove this call. See %s',
	              componentName
	            );
	          }
	          return boundMethod;
	        }
	        var reboundMethod = _bind.apply(boundMethod, arguments);
	        reboundMethod.__reactBoundContext = component;
	        reboundMethod.__reactBoundMethod = method;
	        reboundMethod.__reactBoundArguments = args;
	        return reboundMethod;
	      };
	    }
	    return boundMethod;
	  }

	  /**
	   * Binds all auto-bound methods in a component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   */
	  function bindAutoBindMethods(component) {
	    var pairs = component.__reactAutoBindPairs;
	    for (var i = 0; i < pairs.length; i += 2) {
	      var autoBindKey = pairs[i];
	      var method = pairs[i + 1];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }

	  var IsMountedPreMixin = {
	    componentDidMount: function() {
	      this.__isMounted = true;
	    }
	  };

	  var IsMountedPostMixin = {
	    componentWillUnmount: function() {
	      this.__isMounted = false;
	    }
	  };

	  /**
	   * Add more to the ReactClass base class. These are all legacy features and
	   * therefore not already part of the modern ReactComponent.
	   */
	  var ReactClassMixin = {
	    /**
	     * TODO: This will be deprecated because state should always keep a consistent
	     * type signature and the only use case for this, is to avoid that.
	     */
	    replaceState: function(newState, callback) {
	      this.updater.enqueueReplaceState(this, newState, callback);
	    },

	    /**
	     * Checks whether or not this composite component is mounted.
	     * @return {boolean} True if mounted, false otherwise.
	     * @protected
	     * @final
	     */
	    isMounted: function() {
	      if (process.env.NODE_ENV !== 'production') {
	        warning(
	          this.__didWarnIsMounted,
	          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
	            'subscriptions and pending requests in componentWillUnmount to ' +
	            'prevent memory leaks.',
	          (this.constructor && this.constructor.displayName) ||
	            this.name ||
	            'Component'
	        );
	        this.__didWarnIsMounted = true;
	      }
	      return !!this.__isMounted;
	    }
	  };

	  var ReactClassComponent = function() {};
	  _assign(
	    ReactClassComponent.prototype,
	    ReactComponent.prototype,
	    ReactClassMixin
	  );

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  function createClass(spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	            'JSX instead. See: https://fb.me/react-legacyfactory'
	        );
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (
	          initialState === undefined &&
	          this.getInitialState._isMockFunction
	        ) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      _invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      );

	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
	    mixSpecIntoComponent(Constructor, spec);
	    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    _invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    );

	    if (process.env.NODE_ENV !== 'production') {
	      warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	          'The name is phrased as a question because the function is ' +
	          'expected to return a value.',
	        spec.displayName || 'A component'
	      );
	      warning(
	        !Constructor.prototype.componentWillRecieveProps,
	        '%s has a method called ' +
	          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
	        spec.displayName || 'A component'
	      );
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  }

	  return createClass;
	}

	module.exports = factory;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactElement = __webpack_require__(17);

	var invariant = __webpack_require__(13);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(39);


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDefaultInjection = __webpack_require__(44);
	var ReactMount = __webpack_require__(173);
	var ReactReconciler = __webpack_require__(65);
	var ReactUpdates = __webpack_require__(62);
	var ReactVersion = __webpack_require__(178);

	var findDOMNode = __webpack_require__(179);
	var getHostComponentFromComposite = __webpack_require__(180);
	var renderSubtreeIntoContainer = __webpack_require__(181);
	var warning = __webpack_require__(9);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	  /* eslint-enable camelcase */
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(54);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(68);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(182);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(183);
	  var ReactDOMInvalidARIAHook = __webpack_require__(184);

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}

	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var DOMProperty = __webpack_require__(42);
	var ReactDOMComponentFlags = __webpack_require__(43);

	var invariant = __webpack_require__(13);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 41 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 43 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = __webpack_require__(45);
	var BeforeInputEventPlugin = __webpack_require__(46);
	var ChangeEventPlugin = __webpack_require__(61);
	var DefaultEventPluginOrder = __webpack_require__(79);
	var EnterLeaveEventPlugin = __webpack_require__(80);
	var HTMLDOMPropertyConfig = __webpack_require__(85);
	var ReactComponentBrowserEnvironment = __webpack_require__(86);
	var ReactDOMComponent = __webpack_require__(99);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMEmptyComponent = __webpack_require__(144);
	var ReactDOMTreeTraversal = __webpack_require__(145);
	var ReactDOMTextComponent = __webpack_require__(146);
	var ReactDefaultBatchingStrategy = __webpack_require__(147);
	var ReactEventListener = __webpack_require__(148);
	var ReactInjection = __webpack_require__(151);
	var ReactReconcileTransaction = __webpack_require__(152);
	var SVGDOMPropertyConfig = __webpack_require__(160);
	var SelectEventPlugin = __webpack_require__(161);
	var SimpleEventPlugin = __webpack_require__(162);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ }),
/* 45 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};

	module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(47);
	var ExecutionEnvironment = __webpack_require__(54);
	var FallbackCompositionState = __webpack_require__(55);
	var SyntheticCompositionEvent = __webpack_require__(58);
	var SyntheticInputEvent = __webpack_require__(60);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(48);
	var EventPluginUtils = __webpack_require__(50);

	var accumulateInto = __webpack_require__(52);
	var forEachAccumulated = __webpack_require__(53);
	var warning = __webpack_require__(9);

	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var EventPluginRegistry = __webpack_require__(49);
	var EventPluginUtils = __webpack_require__(50);
	var ReactErrorUtils = __webpack_require__(51);

	var accumulateInto = __webpack_require__(52);
	var forEachAccumulated = __webpack_require__(53);
	var invariant = __webpack_require__(13);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }
	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var ReactErrorUtils = __webpack_require__(51);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}

	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = func.bind(null, a);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 53 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ }),
/* 54 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(56);

	var getTextContentAccessor = __webpack_require__(57);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(59);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(56);

	var emptyFunction = __webpack_require__(10);
	var warning = __webpack_require__(9);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	      // eslint-disable-next-line valid-typeof
	    } else if (typeof event.returnValue !== 'unknown') {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	      // eslint-disable-next-line valid-typeof
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	});

	SyntheticEvent.Interface = EventInterface;

	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(59);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(48);
	var EventPropagators = __webpack_require__(47);
	var ExecutionEnvironment = __webpack_require__(54);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(62);
	var SyntheticEvent = __webpack_require__(59);

	var inputValueTracking = __webpack_require__(75);
	var getEventTarget = __webpack_require__(76);
	var isEventSupported = __webpack_require__(77);
	var isTextInputElement = __webpack_require__(78);

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};

	function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
	  event.type = 'change';
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getInstIfValueChanged(targetInst, nativeEvent) {
	  var updated = inputValueTracking.updateValueIfChanged(targetInst);
	  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;

	  if (updated || simulated) {
	    return targetInst;
	  }
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}

	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.

	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}

	/**
	 * (For IE <=9) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For IE <=9) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementInst = null;
	}

	/**
	 * (For IE <=9) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
	    manualDispatchChangeEvent(nativeEvent);
	  }
	}

	function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    return getInstIfValueChanged(activeElementInst, nativeEvent);
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topClick') {
	    return getInstIfValueChanged(targetInst, nativeEvent);
	  }
	}

	function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
	    return getInstIfValueChanged(targetInst, nativeEvent);
	  }
	}

	function handleControlledInputBlur(inst, node) {
	  // TODO: In IE, inst is occasionally null. Why?
	  if (inst == null) {
	    return;
	  }

	  // Fiber and ReactDOM keep wrapper state in separate places
	  var state = inst._wrapperState || node._wrapperState;

	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }

	  // If controlled, assign the value attribute to the current value on blur
	  var value = '' + node.value;
	  if (node.getAttribute('value') !== value) {
	    node.setAttribute('value', value);
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	  eventTypes: eventTypes,

	  _allowSimulatedPassThrough: true,
	  _isInputEventSupported: isInputEventSupported,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventPolyfill;
	        handleEventFunc = handleEventsForInputEventPolyfill;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
	      if (inst) {
	        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }

	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === 'topBlur') {
	      handleControlledInputBlur(targetInst, targetNode);
	    }
	  }
	};

	module.exports = ChangeEventPlugin;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41),
	    _assign = __webpack_require__(5);

	var CallbackQueue = __webpack_require__(63);
	var PooledClass = __webpack_require__(56);
	var ReactFeatureFlags = __webpack_require__(64);
	var ReactReconciler = __webpack_require__(65);
	var Transaction = __webpack_require__(74);

	var invariant = __webpack_require__(13);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PooledClass = __webpack_require__(56);

	var invariant = __webpack_require__(13);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */

	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);

	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */


	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };

	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };

	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };

	  /**
	   * `PooledClass` looks for this.
	   */


	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };

	  return CallbackQueue;
	}();

	module.exports = PooledClass.addPoolingTo(CallbackQueue);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 64 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactRef = __webpack_require__(66);
	var ReactInstrumentation = __webpack_require__(68);

	var warning = __webpack_require__(9);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
	  {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	};

	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactOwner = __webpack_require__(67);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }

	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }

	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// Trust the developer to only use ReactInstrumentation with a __DEV__ check

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(69);
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactInvalidSetStateWarningHook = __webpack_require__(70);
	var ReactHostOperationHistoryHook = __webpack_require__(71);
	var ReactComponentTreeHook = __webpack_require__(25);
	var ExecutionEnvironment = __webpack_require__(54);

	var performanceNow = __webpack_require__(72);
	var warning = __webpack_require__(9);

	var hooks = [];
	var didHookThrowForEvent = {};

	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}

	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}

	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = [];
	var currentFlushStartTime = 0;
	var currentTimerDebugID = null;
	var currentTimerStartTime = 0;
	var currentTimerNestedFlushDuration = 0;
	var currentTimerType = null;

	var lifeCycleTimerHasWarned = false;

	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements;
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();

	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = 0;
	    currentFlushMeasurements = [];
	    clearHistory();
	    return;
	  }

	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }

	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}

	function checkDebugID(debugID) {
	  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}

	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
	      startTime = _lifeCycleTimerStack$.startTime,
	      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
	      debugID = _lifeCycleTimerStack$.debugID,
	      timerType = _lifeCycleTimerStack$.timerType;

	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	var lastMarkTimeStamp = 0;
	var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

	function shouldMark(debugID) {
	  if (!isProfiling || !canUsePerformanceMeasure) {
	    return false;
	  }
	  var element = ReactComponentTreeHook.getElement(debugID);
	  if (element == null || typeof element !== 'object') {
	    return false;
	  }
	  var isHostElement = typeof element.type === 'string';
	  if (isHostElement) {
	    return false;
	  }
	  return true;
	}

	function markBegin(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }

	  var markName = debugID + '::' + markType;
	  lastMarkTimeStamp = performanceNow();
	  performance.mark(markName);
	}

	function markEnd(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }

	  var markName = debugID + '::' + markType;
	  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

	  // Chrome has an issue of dropping markers recorded too fast:
	  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
	  // To work around this, we will not report very small measurements.
	  // I determined the magic number by tweaking it back and forth.
	  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
	  // When the bug is fixed, we can `measure()` unconditionally if we want to.
	  var timeStamp = performanceNow();
	  if (timeStamp - lastMarkTimeStamp > 0.1) {
	    var measurementName = displayName + ' [' + markType + ']';
	    performance.measure(measurementName, markName);
	  }

	  performance.clearMarks(markName);
	  if (measurementName) {
	    performance.clearMeasures(measurementName);
	  }
	}

	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }

	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }

	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    markBegin(debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    markEnd(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (operation) {
	    checkDebugID(operation.instanceID);
	    emitEvent('onHostOperation', operation);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	    markBegin(debugID, 'mount');
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'mount');
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	    markBegin(debugID, 'update');
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'update');
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	    markBegin(debugID, 'unmount');
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'unmount');
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};

	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}

	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var warning = __webpack_require__(9);

	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 71 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var history = [];

	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (operation) {
	    history.push(operation);
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};

	module.exports = ReactHostOperationHistoryHook;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(73);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	var OBSERVED_ERROR = {};

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /* eslint-disable space-before-function-paren */

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    /* eslint-enable space-before-function-paren */
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	module.exports = TransactionImpl;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(40);

	function isCheckable(elem) {
	  var type = elem.type;
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
	}

	function getTracker(inst) {
	  return inst._wrapperState.valueTracker;
	}

	function attachTracker(inst, tracker) {
	  inst._wrapperState.valueTracker = tracker;
	}

	function detachTracker(inst) {
	  delete inst._wrapperState.valueTracker;
	}

	function getValueFromNode(node) {
	  var value;
	  if (node) {
	    value = isCheckable(node) ? '' + node.checked : node.value;
	  }
	  return value;
	}

	var inputValueTracking = {
	  // exposed for testing
	  _getTrackerFromNode: function (node) {
	    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
	  },


	  track: function (inst) {
	    if (getTracker(inst)) {
	      return;
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var valueField = isCheckable(node) ? 'checked' : 'value';
	    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

	    var currentValue = '' + node[valueField];

	    // if someone has already defined a value or Safari, then bail
	    // and don't track value will cause over reporting of changes,
	    // but it's better then a hard failure
	    // (needed for certain tests that spyOn input values and Safari)
	    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
	      return;
	    }

	    Object.defineProperty(node, valueField, {
	      enumerable: descriptor.enumerable,
	      configurable: true,
	      get: function () {
	        return descriptor.get.call(this);
	      },
	      set: function (value) {
	        currentValue = '' + value;
	        descriptor.set.call(this, value);
	      }
	    });

	    attachTracker(inst, {
	      getValue: function () {
	        return currentValue;
	      },
	      setValue: function (value) {
	        currentValue = '' + value;
	      },
	      stopTracking: function () {
	        detachTracker(inst);
	        delete node[valueField];
	      }
	    });
	  },

	  updateValueIfChanged: function (inst) {
	    if (!inst) {
	      return false;
	    }
	    var tracker = getTracker(inst);

	    if (!tracker) {
	      inputValueTracking.track(inst);
	      return true;
	    }

	    var lastValue = tracker.getValue();
	    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));

	    if (nextValue !== lastValue) {
	      tracker.setValue(nextValue);
	      return true;
	    }

	    return false;
	  },
	  stopTracking: function (inst) {
	    var tracker = getTracker(inst);
	    if (tracker) {
	      tracker.stopTracking();
	    }
	  }
	};

	module.exports = inputValueTracking;

/***/ }),
/* 76 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ }),
/* 78 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  color: true,
	  date: true,
	  datetime: true,
	  'datetime-local': true,
	  email: true,
	  month: true,
	  number: true,
	  password: true,
	  range: true,
	  search: true,
	  tel: true,
	  text: true,
	  time: true,
	  url: true,
	  week: true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ }),
/* 79 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */

	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(47);
	var ReactDOMComponentTree = __webpack_require__(40);
	var SyntheticMouseEvent = __webpack_require__(81);

	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};

	var EnterLeaveEventPlugin = {
	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }
	};

	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(82);
	var ViewportMetrics = __webpack_require__(83);

	var getEventModifierState = __webpack_require__(84);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(59);

	var getEventTarget = __webpack_require__(76);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ }),
/* 83 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ViewportMetrics = {
	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	};

	module.exports = ViewportMetrics;

/***/ }),
/* 84 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  Alt: 'altKey',
	  Control: 'ctrlKey',
	  Meta: 'metaKey',
	  Shift: 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(42);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {},
	  DOMMutationMethods: {
	    value: function (node, value) {
	      if (value == null) {
	        return node.removeAttribute('value');
	      }

	      // Number inputs get special treatment due to some edge cases in
	      // Chrome. Let everything else assign the value attribute as normal.
	      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
	      if (node.type !== 'number' || node.hasAttribute('value') === false) {
	        node.setAttribute('value', '' + value);
	      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
	        // Don't assign an attribute if validation reports bad
	        // input. Chrome will clear the value. Additionally, don't
	        // operate on inputs that have focus, otherwise Chrome might
	        // strip off trailing decimal places and cause the user's
	        // cursor position to jump to the beginning of the input.
	        //
	        // In ReactDOMInput, we have an onBlur event that will trigger
	        // this function again when focus is lost.
	        node.setAttribute('value', '' + value);
	      }
	    }
	  }
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(87);
	var ReactDOMIDOperations = __webpack_require__(98);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(88);
	var Danger = __webpack_require__(94);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactInstrumentation = __webpack_require__(68);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(91);
	var setInnerHTML = __webpack_require__(90);
	var setTextContent = __webpack_require__(92);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: {
	                toIndex: update.toIndex,
	                content: update.content.toString()
	              }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	};

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(89);
	var setInnerHTML = __webpack_require__(90);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(91);
	var setTextContent = __webpack_require__(92);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ }),
/* 89 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);
	var DOMNamespaces = __webpack_require__(89);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(91);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xfeff) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ }),
/* 91 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);
	var escapeTextContentForBrowser = __webpack_require__(93);
	var setInnerHTML = __webpack_require__(90);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ }),
/* 93 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var DOMLazyTree = __webpack_require__(88);
	var ExecutionEnvironment = __webpack_require__(54);

	var createNodesFromMarkup = __webpack_require__(95);
	var emptyFunction = __webpack_require__(10);
	var invariant = __webpack_require__(13);

	var Danger = {
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(54);

	var createArrayFromMixed = __webpack_require__(96);
	var getMarkupWrap = __webpack_require__(97);
	var invariant = __webpack_require__(13);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(13);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(54);

	var invariant = __webpack_require__(13);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(87);
	var ReactDOMComponentTree = __webpack_require__(40);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(41),
	    _assign = __webpack_require__(5);

	var AutoFocusUtils = __webpack_require__(100);
	var CSSPropertyOperations = __webpack_require__(102);
	var DOMLazyTree = __webpack_require__(88);
	var DOMNamespaces = __webpack_require__(89);
	var DOMProperty = __webpack_require__(42);
	var DOMPropertyOperations = __webpack_require__(110);
	var EventPluginHub = __webpack_require__(48);
	var EventPluginRegistry = __webpack_require__(49);
	var ReactBrowserEventEmitter = __webpack_require__(112);
	var ReactDOMComponentFlags = __webpack_require__(43);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMInput = __webpack_require__(115);
	var ReactDOMOption = __webpack_require__(118);
	var ReactDOMSelect = __webpack_require__(119);
	var ReactDOMTextarea = __webpack_require__(120);
	var ReactInstrumentation = __webpack_require__(68);
	var ReactMultiChild = __webpack_require__(121);
	var ReactServerRenderingTransaction = __webpack_require__(140);

	var emptyFunction = __webpack_require__(10);
	var escapeTextContentForBrowser = __webpack_require__(93);
	var invariant = __webpack_require__(13);
	var isEventSupported = __webpack_require__(77);
	var shallowEqual = __webpack_require__(130);
	var inputValueTracking = __webpack_require__(75);
	var validateDOMNesting = __webpack_require__(143);
	var warning = __webpack_require__(9);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { string: true, number: true };

	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setAndValidateContentChildDev = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trackInputValue() {
	  inputValueTracking.track(this);
	}

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  area: true,
	  base: true,
	  br: true,
	  col: true,
	  embed: true,
	  hr: true,
	  img: true,
	  input: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};

	var newlineEatingTags = {
	  listing: true,
	  pre: true,
	  textarea: true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  menuitem: true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trackInputValue, this);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trackInputValue, this);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (process.env.NODE_ENV !== 'production') {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setAndValidateContentChildDev.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	      case 'textarea':
	        inputValueTracking.stopTracking(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (process.env.NODE_ENV !== 'production') {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }
	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(40);

	var focusNode = __webpack_require__(101);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ }),
/* 101 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(103);
	var ExecutionEnvironment = __webpack_require__(54);
	var ReactInstrumentation = __webpack_require__(68);

	var camelizeStyleName = __webpack_require__(104);
	var dangerousStyleValue = __webpack_require__(106);
	var hyphenateStyleName = __webpack_require__(107);
	var memoizeStringOnly = __webpack_require__(109);
	var warning = __webpack_require__(9);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var isCustomProperty = styleName.indexOf('--') === 0;
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        if (!isCustomProperty) {
	          warnValidStyle(styleName, styleValue, component);
	        }
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var isCustomProperty = styleName.indexOf('--') === 0;
	      if (process.env.NODE_ENV !== 'production') {
	        if (!isCustomProperty) {
	          warnValidStyle(styleName, styles[styleName], component);
	        }
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (isCustomProperty) {
	        style.setProperty(styleName, styleValue);
	      } else if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	};

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 103 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridRowEnd: true,
	  gridRowSpan: true,
	  gridRowStart: true,
	  gridColumn: true,
	  gridColumnEnd: true,
	  gridColumnSpan: true,
	  gridColumnStart: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(105);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ }),
/* 105 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(103);
	var warning = __webpack_require__(9);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component, isCustomProperty) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(108);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ }),
/* 108 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ }),
/* 109 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactInstrumentation = __webpack_require__(68);

	var quoteAttributeValueForBrowser = __webpack_require__(111);
	var warning = __webpack_require__(9);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	};

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(93);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var EventPluginRegistry = __webpack_require__(49);
	var ReactEventEmitterMixin = __webpack_require__(113);
	var ViewportMetrics = __webpack_require__(83);

	var getVendorPrefixedEventName = __webpack_require__(114);
	var isEventSupported = __webpack_require__(77);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	});

	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(48);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41),
	    _assign = __webpack_require__(5);

	var DOMPropertyOperations = __webpack_require__(110);
	var LinkedValueUtils = __webpack_require__(116);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(62);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      controlled: isControlled(props)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      if (value === 0 && node.value === '') {
	        node.value = '0';
	        // Note: IE9 reports a number inputs as 'text', so check props instead.
	      } else if (props.type === 'number') {
	        // Simulate `input.valueAsNumber`. IE9 does not support it
	        var valueAsNumber = parseFloat(node.value, 10) || 0;

	        if (
	        // eslint-disable-next-line
	        value != valueAsNumber ||
	        // eslint-disable-next-line
	        value == valueAsNumber && node.value != value) {
	          // Cast `value` to a string to ensure the value is set correctly. While
	          // browsers typically do this as necessary, jsdom doesn't.
	          node.value = '' + value;
	        }
	      } else if (node.value !== '' + value) {
	        // Cast `value` to a string to ensure the value is set correctly. While
	        // browsers typically do this as necessary, jsdom doesn't.
	        node.value = '' + value;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var ReactPropTypesSecret = __webpack_require__(117);
	var propTypesFactory = __webpack_require__(30);

	var React = __webpack_require__(3);
	var PropTypes = propTypesFactory(React.isValidElement);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var hasReadOnlyValue = {
	  button: true,
	  checkbox: true,
	  image: true,
	  hidden: true,
	  radio: true,
	  reset: true,
	  submit: true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: PropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 117 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var React = __webpack_require__(3);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMSelect = __webpack_require__(119);

	var warning = __webpack_require__(9);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }
	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var LinkedValueUtils = __webpack_require__(116);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(62);

	var warning = __webpack_require__(9);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41),
	    _assign = __webpack_require__(5);

	var LinkedValueUtils = __webpack_require__(116);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(62);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;

	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var ReactComponentEnvironment = __webpack_require__(122);
	var ReactInstanceMap = __webpack_require__(123);
	var ReactInstrumentation = __webpack_require__(68);

	var ReactCurrentOwner = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(65);
	var ReactChildReconciler = __webpack_require__(124);

	var emptyFunction = __webpack_require__(10);
	var flattenChildren = __webpack_require__(139);
	var invariant = __webpack_require__(13);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (process.env.NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	  }
	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	var injected = false;

	var ReactComponentEnvironment = {
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 123 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	};

	module.exports = ReactInstanceMap;

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(65);

	var instantiateReactComponent = __webpack_require__(125);
	var KeyEscapeUtils = __webpack_require__(135);
	var shouldUpdateReactComponent = __webpack_require__(131);
	var traverseAllChildren = __webpack_require__(136);
	var warning = __webpack_require__(9);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(25);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(25);
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
	  {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
	  {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41),
	    _assign = __webpack_require__(5);

	var ReactCompositeComponent = __webpack_require__(126);
	var ReactEmptyComponent = __webpack_require__(132);
	var ReactHostComponent = __webpack_require__(133);

	var getNextDebugID = __webpack_require__(134);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (process.env.NODE_ENV !== 'production') {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41),
	    _assign = __webpack_require__(5);

	var React = __webpack_require__(3);
	var ReactComponentEnvironment = __webpack_require__(122);
	var ReactCurrentOwner = __webpack_require__(18);
	var ReactErrorUtils = __webpack_require__(51);
	var ReactInstanceMap = __webpack_require__(123);
	var ReactInstrumentation = __webpack_require__(68);
	var ReactNodeTypes = __webpack_require__(127);
	var ReactReconciler = __webpack_require__(65);

	if (process.env.NODE_ENV !== 'production') {
	  var checkReactTypeSpec = __webpack_require__(128);
	}

	var emptyObject = __webpack_require__(12);
	var invariant = __webpack_require__(13);
	var shallowEqual = __webpack_require__(130);
	var shouldUpdateReactComponent = __webpack_require__(131);
	var warning = __webpack_require__(9);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }

	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;

	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }

	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (process.env.NODE_ENV !== 'production') {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;

	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }

	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

	    if (process.env.NODE_ENV !== 'production') {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }

	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;

	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;

	    if (inst.getChildContext) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }

	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;

	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();

	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }

	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

	      if (process.env.NODE_ENV !== 'production') {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;

	    if (process.env.NODE_ENV !== 'production') {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }

	    return renderedElement;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedElement;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null
	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var React = __webpack_require__(3);

	var invariant = __webpack_require__(13);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var ReactPropTypeLocationNames = __webpack_require__(129);
	var ReactPropTypesSecret = __webpack_require__(117);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(25);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(25);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 130 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ }),
/* 131 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 132 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	var genericComponentClass = null;
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 134 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var nextDebugID = 1;

	function getNextDebugID() {
	  return nextDebugID++;
	}

	module.exports = getNextDebugID;

/***/ }),
/* 135 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var ReactCurrentOwner = __webpack_require__(18);
	var REACT_ELEMENT_TYPE = __webpack_require__(137);

	var getIteratorFn = __webpack_require__(138);
	var invariant = __webpack_require__(13);
	var KeyEscapeUtils = __webpack_require__(135);
	var warning = __webpack_require__(9);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 137 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 138 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(135);
	var traverseAllChildren = __webpack_require__(136);
	var warning = __webpack_require__(9);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(25);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(25);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(56);
	var Transaction = __webpack_require__(74);
	var ReactInstrumentation = __webpack_require__(68);
	var ReactServerUpdateQueue = __webpack_require__(141);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(142);

	var warning = __webpack_require__(9);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var ReactCurrentOwner = __webpack_require__(18);
	var ReactInstanceMap = __webpack_require__(123);
	var ReactInstrumentation = __webpack_require__(68);
	var ReactUpdates = __webpack_require__(62);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    // Future-proof 15.5
	    if (callback !== undefined && callback !== null) {
	      ReactUpdateQueue.validateCallback(callback, 'replaceState');
	      if (internalInstance._pendingCallbacks) {
	        internalInstance._pendingCallbacks.push(callback);
	      } else {
	        internalInstance._pendingCallbacks = [callback];
	      }
	    }

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var emptyFunction = __webpack_require__(10);
	var warning = __webpack_require__(9);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var DOMLazyTree = __webpack_require__(88);
	var ReactDOMComponentTree = __webpack_require__(40);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var invariant = __webpack_require__(13);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41),
	    _assign = __webpack_require__(5);

	var DOMChildrenOperations = __webpack_require__(87);
	var DOMLazyTree = __webpack_require__(88);
	var ReactDOMComponentTree = __webpack_require__(40);

	var escapeTextContentForBrowser = __webpack_require__(93);
	var invariant = __webpack_require__(13);
	var validateDOMNesting = __webpack_require__(143);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactUpdates = __webpack_require__(62);
	var Transaction = __webpack_require__(74);

	var emptyFunction = __webpack_require__(10);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var EventListener = __webpack_require__(149);
	var ExecutionEnvironment = __webpack_require__(54);
	var PooledClass = __webpack_require__(56);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(62);

	var getEventTarget = __webpack_require__(76);
	var getUnboundedScrollPosition = __webpack_require__(150);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(10);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 150 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(42);
	var EventPluginHub = __webpack_require__(48);
	var EventPluginUtils = __webpack_require__(50);
	var ReactComponentEnvironment = __webpack_require__(122);
	var ReactEmptyComponent = __webpack_require__(132);
	var ReactBrowserEventEmitter = __webpack_require__(112);
	var ReactHostComponent = __webpack_require__(133);
	var ReactUpdates = __webpack_require__(62);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var CallbackQueue = __webpack_require__(63);
	var PooledClass = __webpack_require__(56);
	var ReactBrowserEventEmitter = __webpack_require__(112);
	var ReactInputSelection = __webpack_require__(153);
	var ReactInstrumentation = __webpack_require__(68);
	var Transaction = __webpack_require__(74);
	var ReactUpdateQueue = __webpack_require__(142);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(154);

	var containsNode = __webpack_require__(156);
	var focusNode = __webpack_require__(101);
	var getActiveElement = __webpack_require__(159);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	var getNodeForCharacterOffset = __webpack_require__(155);
	var getTextContentAccessor = __webpack_require__(57);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ }),
/* 155 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(157);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(158);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ }),
/* 158 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ }),
/* 159 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}

	module.exports = getActiveElement;

/***/ }),
/* 160 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(47);
	var ExecutionEnvironment = __webpack_require__(54);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactInputSelection = __webpack_require__(153);
	var SyntheticEvent = __webpack_require__(59);

	var getActiveElement = __webpack_require__(159);
	var isTextInputElement = __webpack_require__(78);
	var shallowEqual = __webpack_require__(130);

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var EventListener = __webpack_require__(149);
	var EventPropagators = __webpack_require__(47);
	var ReactDOMComponentTree = __webpack_require__(40);
	var SyntheticAnimationEvent = __webpack_require__(163);
	var SyntheticClipboardEvent = __webpack_require__(164);
	var SyntheticEvent = __webpack_require__(59);
	var SyntheticFocusEvent = __webpack_require__(165);
	var SyntheticKeyboardEvent = __webpack_require__(166);
	var SyntheticMouseEvent = __webpack_require__(81);
	var SyntheticDragEvent = __webpack_require__(169);
	var SyntheticTouchEvent = __webpack_require__(170);
	var SyntheticTransitionEvent = __webpack_require__(171);
	var SyntheticUIEvent = __webpack_require__(82);
	var SyntheticWheelEvent = __webpack_require__(172);

	var emptyFunction = __webpack_require__(10);
	var getEventCharCode = __webpack_require__(167);
	var invariant = __webpack_require__(13);

	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;

	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});

	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	var SimpleEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(59);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(59);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(82);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(82);

	var getEventCharCode = __webpack_require__(167);
	var getEventKey = __webpack_require__(168);
	var getEventModifierState = __webpack_require__(84);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 167 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(167);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  Esc: 'Escape',
	  Spacebar: ' ',
	  Left: 'ArrowLeft',
	  Up: 'ArrowUp',
	  Right: 'ArrowRight',
	  Down: 'ArrowDown',
	  Del: 'Delete',
	  Win: 'OS',
	  Menu: 'ContextMenu',
	  Apps: 'ContextMenu',
	  Scroll: 'ScrollLock',
	  MozPrintableKey: 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1',
	  113: 'F2',
	  114: 'F3',
	  115: 'F4',
	  116: 'F5',
	  117: 'F6',
	  118: 'F7',
	  119: 'F8',
	  120: 'F9',
	  121: 'F10',
	  122: 'F11',
	  123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(81);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(82);

	var getEventModifierState = __webpack_require__(84);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(59);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(81);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var DOMLazyTree = __webpack_require__(88);
	var DOMProperty = __webpack_require__(42);
	var React = __webpack_require__(3);
	var ReactBrowserEventEmitter = __webpack_require__(112);
	var ReactCurrentOwner = __webpack_require__(18);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMContainerInfo = __webpack_require__(174);
	var ReactDOMFeatureFlags = __webpack_require__(175);
	var ReactFeatureFlags = __webpack_require__(64);
	var ReactInstanceMap = __webpack_require__(123);
	var ReactInstrumentation = __webpack_require__(68);
	var ReactMarkupChecksum = __webpack_require__(176);
	var ReactReconciler = __webpack_require__(65);
	var ReactUpdateQueue = __webpack_require__(142);
	var ReactUpdates = __webpack_require__(62);

	var emptyObject = __webpack_require__(12);
	var instantiateReactComponent = __webpack_require__(125);
	var invariant = __webpack_require__(13);
	var setInnerHTML = __webpack_require__(90);
	var shouldUpdateReactComponent = __webpack_require__(131);
	var warning = __webpack_require__(9);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = React.createElement(TopLevelWrapper, {
	      child: nextElement
	    });

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(143);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 175 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var adler32 = __webpack_require__(177);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ }),
/* 177 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ }),
/* 178 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	module.exports = '15.6.1';

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(41);

	var ReactCurrentOwner = __webpack_require__(18);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactInstanceMap = __webpack_require__(123);

	var getHostComponentFromComposite = __webpack_require__(180);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(127);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactMount = __webpack_require__(173);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(42);
	var EventPluginRegistry = __webpack_require__(49);
	var ReactComponentTreeHook = __webpack_require__(25);

	var warning = __webpack_require__(9);

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,

	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};

	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}

	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}

	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactComponentTreeHook = __webpack_require__(25);

	var warning = __webpack_require__(9);

	var didWarnValueNull = false;

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

	    didWarnValueNull = true;
	  }
	}

	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMNullInputValuePropHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(42);
	var ReactComponentTreeHook = __webpack_require__(25);

	var warning = __webpack_require__(9);

	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

	function validateProperty(tagName, name, debugID) {
	  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	    return true;
	  }

	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  return true;
	}

	function warnInvalidARIAProps(debugID, element) {
	  var invalidProps = [];

	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }

	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (invalidProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (invalidProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }

	  warnInvalidARIAProps(debugID, element);
	}

	var ReactDOMInvalidARIAHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  }
	};

	module.exports = ReactDOMInvalidARIAHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(186);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./reset.css", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./reset.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "html, body, div, span,\r\nh1, h2, h3, h4, h5, h6, p, em, img, strong, i,\r\ndl, dt, dd, ol, ul, li,\r\nform, label,\r\ntable, caption, tbody, tfoot, thead, tr, th, td {font-family:'\\5FAE\\8F6F\\96C5\\9ED1';margin: 0;padding: 0;-webkit-tap-highlight-color:rgba(0,0,0,0);}\r\nimg { border: none; vertical-align: top;}\r\na{ text-decoration: none; outline: none;display: block;text-decoration:none;-webkit-tap-highlight-color:rgba(0,0,0,0);/* 去掉链接触摸高亮 */}\r\nul { list-style: none; }\r\ntable { border-collapse: collapse; border-spacing: 0; }\r\ninput,button,textarea,select,optgroup,option{ font-size: 100%; font: inherit; background: none; border: none; outline: none;}\r\nh1,h2,h3,h4,h5,h6,em,i,b{font-weight:normal;font-style:normal;}\r\n/*img{width: 100%;display: block;margin: 0 auto;}*/\r\n\r\ninput[type=\"button\"], input[type=\"text\"], input[type=\"submit\"], input[type=\"reset\"]{-webkit-appearance:none;-webkit-tap-highlight-color:rgba(0,0,0,0);}\r\ntextarea {-webkit-appearance:none;} \r\n/*清除浮动代码*/ \r\n._1BmuQQuUVf8DFXNiACQuJI:after{\r\n\tdisplay:block;\r\n\tclear:both;\r\n\tcontent:\"\";\r\n\tvisibility:hidden;\r\n\theight:0\r\n} \r\n._1BmuQQuUVf8DFXNiACQuJI{\r\n\tzoom:1\r\n} \r\nbody{\r\n\toverflow-x: hidden;\r\n}", ""]);

	// exports
	exports.locals = {
		"clearfloat": "_1BmuQQuUVf8DFXNiACQuJI"
	};

/***/ }),
/* 187 */
/***/ (function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _reactRouterDom = __webpack_require__(190);

	var _home = __webpack_require__(230);

	var _home2 = _interopRequireDefault(_home);

	var _data = __webpack_require__(232);

	var _data2 = _interopRequireDefault(_data);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	//公共list组件
	var Commonli = function (_Component) {
		_inherits(Commonli, _Component);

		function Commonli() {
			_classCallCheck(this, Commonli);

			return _possibleConstructorReturn(this, (Commonli.__proto__ || Object.getPrototypeOf(Commonli)).apply(this, arguments));
		}

		_createClass(Commonli, [{
			key: 'goOther',
			value: function goOther(event) {
				var hrefCon = this.refs.title.innerText;
				window.open("http://m.lab.geovis.ai:10019/#/earth/" + hrefCon + "");
			}
		}, {
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					{ className: _home2.default['themes-li'], onClick: this.goOther.bind(this) },
					_react2.default.createElement('img', { src: this.props.themesliImg }),
					_react2.default.createElement(
						'div',
						null,
						_react2.default.createElement(
							'p',
							{ className: _home2.default["themes-li-title"], ref: 'title' },
							this.props.titleDesc
						),
						_react2.default.createElement(
							'p',
							{ className: _home2.default["themes-li-lettertitle"] },
							this.props.letterDesc
						),
						_react2.default.createElement(
							'p',
							{ className: _home2.default["themes-li-descdesc"] },
							this.props.connentDesc
						)
					),
					_react2.default.createElement(
						'div',
						{ className: _home2.default["themes-li-foot"] },
						_react2.default.createElement('img', { src: './src/assets/user.png' }),
						_react2.default.createElement(
							'span',
							{ className: _home2.default["user-home"] },
							this.props.author
						),
						_react2.default.createElement(
							'span',
							{ className: _home2.default["fr"] },
							this.props.time
						)
					)
				);
			}
		}]);

		return Commonli;
	}(_react.Component);
	//全部部分的组件


	var Allthemes = function (_Component2) {
		_inherits(Allthemes, _Component2);

		function Allthemes(props) {
			_classCallCheck(this, Allthemes);

			var _this2 = _possibleConstructorReturn(this, (Allthemes.__proto__ || Object.getPrototypeOf(Allthemes)).call(this, props));

			_this2.state = {
				searchStr: 'aa',
				data: _data2.default.details1,
				allData: '',
				isReady: false
			};
			return _this2;
		}

		_createClass(Allthemes, [{
			key: 'componentWillMount',
			value: function componentWillMount() {
				//   	const re = this;
				// let toke = 'feaQuaIKtUxemo8maVp4q8AO+qJj0qN2h1TZdKvLHCogm5zgLiTc1oXdQq8/akUbfqm/2c/njmGOp3QqTweoctXYV17RC9myFmeqt2wnxfHJMcUPQ3jNMAm4wY+im/PmoHGHknyzmzoj/ftsR3YnzeqLL+cIOywHCo/AuU5YyDA=';
				// fetch("http://192.168.48.3:8808/metadata-service/metadata/manage/query", {
				// 	  method: "POST",
				// 	  headers: {
				// 	    'Content-Type': 'application/x-www-form-urlencoded'
				// 	  },
				// 	  body: "dataType=LAB0&token="+toke+""
				// 	}).then(function(response) {
				//   		response.json().then( (dataval) => {
				//   			re.setState({
				//   				data : dataval,
				//   				allData : dataval ,
				//   				isReady : true
				//   			})
				//   		})
				// });
			}
		}, {
			key: 'componentDidMount',
			value: function componentDidMount() {
				// console.log(this.state.data)
			}
		}, {
			key: 'tabTheme',
			value: function tabTheme(msg, event) {
				var len = document.querySelectorAll('.' + _home2.default['theme-tab'] + ' > ' + 'li').length;
				for (var i = 0; i < len; i++) {
					// document.querySelectorAll(`.${styles['theme-tab']} > ${'li'}`)[i].style.background = 'white';
					document.querySelectorAll('.' + _home2.default['theme-tab'] + ' > ' + 'li')[i].style.color = 'black';
				}
				// event.target.style.background = '#009999';				
				event.target.style.color = '#009999';
				switch (msg) {
					case '全部':
						this.setState({ data: _data2.default.details1 });break;
					case '学校分布':
						// let arr = [];
						// this.state.allData.map( (val) => {
						// 	if(val.subject == '学校分布'){
						// 		arr.push(val)
						// 	}
						// })
						// this.setState({data:arr})
						this.setState({ data: _data2.default.details2 });break;
					case '人口普查':
						// let arr2 = [];
						// this.state.allData.map( (val) => {
						// 	if(val.subject == '人口普查'){
						// 		arr2.push(val)
						// 	}
						// })
						// this.setState({data:arr2})
						this.setState({ data: _data2.default.details3 });break;
					case '交通':
						// let arr3 = [];
						// this.state.allData.map( (val) => {
						// 	if(val.subject == '交通'){
						// 		arr3.push(val)
						// 	}
						// })
						// this.setState({data:arr3})
						this.setState({ data: _data2.default.details4 });break;
					case '自然灾害':
						// let arr4 = [];
						// this.state.allData.map( (val) => {
						// 	if(val.subject == '自然灾害'){
						// 		arr4.push(val)
						// 	}
						// })
						// this.setState({data:arr4})
						this.setState({ data: _data2.default.details5 });break;
					case '社会焦点':
						// let arr5 = [];
						// this.state.allData.map( (val) => {
						// 	if(val.subject == '社会焦点'){
						// 		arr5.push(val)
						// 	}
						// })
						// this.setState({data:arr5})
						this.setState({ data: _data2.default.details6 });break;
					case '智慧城市':
						// let arr6 = [];
						// this.state.allData.map( (val) => {
						// 	if(val.subject == '智慧城市'){
						// 		arr6.push(val)
						// 	}
						// })
						// this.setState({data:arr6})
						this.setState({ data: _data2.default.details7 });break;
					case '街景':
						// let arr7 = [];
						// this.state.allData.map( (val) => {
						// 	if(val.subject == '街景'){
						// 		arr7.push(val)
						// 	}
						// })
						// this.setState({data:arr7})
						this.setState({ data: _data2.default.details8 });break;
					default:
						alert("组件不存在");
				}
			}
		}, {
			key: 'getLocalTime',
			value: function getLocalTime(chuo) {
				var time = new Date(chuo).toLocaleString();
				return time.slice(0, time.indexOf(' '));
			}
		}, {
			key: 'render',
			value: function render() {
				var _this3 = this;

				return _react2.default.createElement(
					'div',
					{ className: _home2.default["content-main"] },
					_react2.default.createElement(
						'ul',
						{ className: _home2.default["theme-tab"] },
						_data2.default.titleArr.map(function (val) {
							return _react2.default.createElement(
								'li',
								{ key: val.toString(), onClick: _this3.tabTheme.bind(_this3, val) },
								val
							);
						})
					),
					_react2.default.createElement(
						'div',
						null,
						this.state.data.map(function (val) {
							return _react2.default.createElement(Commonli, { key: val.author.toString(), themesliImg: val.themesliImg, titleDesc: val.titleDesc, letterDesc: val.letterDesc, connentDesc: val.connentDesc, author: val.author, time: val.time });
						})
					)
				);
			}
		}]);

		return Allthemes;
	}(_react.Component);
	//home页面总体结构


	var Home = function (_Component3) {
		_inherits(Home, _Component3);

		function Home() {
			_classCallCheck(this, Home);

			return _possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).apply(this, arguments));
		}

		_createClass(Home, [{
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					{ className: _home2.default["home-main"] },
					_react2.default.createElement(
						'header',
						null,
						_react2.default.createElement('img', { src: './src/assets/logo.png' }),
						_react2.default.createElement(
							'span',
							null,
							'GV Lab'
						),
						_react2.default.createElement(
							'a',
							{ href: '#', className: _home2.default["register"] },
							'\u6CE8\u518C'
						),
						_react2.default.createElement(
							_reactRouterDom.Link,
							{ to: '/land', className: _home2.default['homephone-land'] },
							'\u767B\u9646'
						),
						_react2.default.createElement('img', { className: _home2.default["userpng"], src: './src/assets/user.png' })
					),
					_react2.default.createElement(
						'nav',
						null,
						_react2.default.createElement('img', { src: './src/assets/indexbg.png' })
					),
					_react2.default.createElement(
						_reactRouterDom.Link,
						{ to: '/smartGPhone', className: _home2.default["global-enter"] },
						'GV Lab'
					),
					_react2.default.createElement(Allthemes, null),
					_react2.default.createElement(
						'div',
						{ className: _home2.default["home-footer"] },
						'\u822A\u5929\u661F\u56FE\u79D1\u6280(\u5317\u4EAC)\u6709\u9650\u516C\u53F8\u7248\u6743\u6240\u6709'
					)
				);
			}
		}]);

		return Home;
	}(_react.Component);

	exports.default = Home;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.withRouter = exports.matchPath = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.Redirect = exports.Prompt = exports.NavLink = exports.MemoryRouter = exports.Link = exports.HashRouter = exports.BrowserRouter = undefined;

	var _BrowserRouter2 = __webpack_require__(191);

	var _BrowserRouter3 = _interopRequireDefault(_BrowserRouter2);

	var _HashRouter2 = __webpack_require__(205);

	var _HashRouter3 = _interopRequireDefault(_HashRouter2);

	var _Link2 = __webpack_require__(207);

	var _Link3 = _interopRequireDefault(_Link2);

	var _MemoryRouter2 = __webpack_require__(208);

	var _MemoryRouter3 = _interopRequireDefault(_MemoryRouter2);

	var _NavLink2 = __webpack_require__(211);

	var _NavLink3 = _interopRequireDefault(_NavLink2);

	var _Prompt2 = __webpack_require__(217);

	var _Prompt3 = _interopRequireDefault(_Prompt2);

	var _Redirect2 = __webpack_require__(219);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	var _Route2 = __webpack_require__(212);

	var _Route3 = _interopRequireDefault(_Route2);

	var _Router2 = __webpack_require__(203);

	var _Router3 = _interopRequireDefault(_Router2);

	var _StaticRouter2 = __webpack_require__(222);

	var _StaticRouter3 = _interopRequireDefault(_StaticRouter2);

	var _Switch2 = __webpack_require__(224);

	var _Switch3 = _interopRequireDefault(_Switch2);

	var _matchPath2 = __webpack_require__(226);

	var _matchPath3 = _interopRequireDefault(_matchPath2);

	var _withRouter2 = __webpack_require__(227);

	var _withRouter3 = _interopRequireDefault(_withRouter2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.BrowserRouter = _BrowserRouter3.default;
	exports.HashRouter = _HashRouter3.default;
	exports.Link = _Link3.default;
	exports.MemoryRouter = _MemoryRouter3.default;
	exports.NavLink = _NavLink3.default;
	exports.Prompt = _Prompt3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	exports.Router = _Router3.default;
	exports.StaticRouter = _StaticRouter3.default;
	exports.Switch = _Switch3.default;
	exports.matchPath = _matchPath3.default;
	exports.withRouter = _withRouter3.default;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createBrowserHistory = __webpack_require__(195);

	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);

	var _Router = __webpack_require__(203);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that uses HTML5 history.
	 */
	var BrowserRouter = function (_React$Component) {
	  _inherits(BrowserRouter, _React$Component);

	  function BrowserRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, BrowserRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createBrowserHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  BrowserRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<BrowserRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { BrowserRouter as Router }`.');
	  };

	  BrowserRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };

	  return BrowserRouter;
	}(_react2.default.Component);

	BrowserRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  forceRefresh: _propTypes2.default.bool,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = BrowserRouter;

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	if (process.env.NODE_ENV !== 'production') {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;

	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(31)(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(194)();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(10);
	var invariant = __webpack_require__(13);
	var ReactPropTypesSecret = __webpack_require__(32);

	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim
	  };

	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _LocationUtils = __webpack_require__(197);

	var _PathUtils = __webpack_require__(200);

	var _createTransitionManager = __webpack_require__(201);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _DOMUtils = __webpack_require__(202);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var PopStateEvent = 'popstate';
	var HashChangeEvent = 'hashchange';

	var getHistoryState = function getHistoryState() {
	  try {
	    return window.history.state || {};
	  } catch (e) {
	    // IE 11 sometimes throws when accessing window.history.state
	    // See https://github.com/ReactTraining/history/pull/289
	    return {};
	  }
	};

	/**
	 * Creates a history object that uses the HTML5 history API including
	 * pushState, replaceState, and the popstate event.
	 */
	var createBrowserHistory = function createBrowserHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');

	  var globalHistory = window.history;
	  var canUseHistory = (0, _DOMUtils.supportsHistory)();
	  var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();

	  var _props$forceRefresh = props.forceRefresh,
	      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,
	      _props$getUserConfirm = props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
	      _props$keyLength = props.keyLength,
	      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;

	  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';

	  var getDOMLocation = function getDOMLocation(historyState) {
	    var _ref = historyState || {},
	        key = _ref.key,
	        state = _ref.state;

	    var _window$location = window.location,
	        pathname = _window$location.pathname,
	        search = _window$location.search,
	        hash = _window$location.hash;


	    var path = pathname + search + hash;

	    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');

	    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);

	    return (0, _LocationUtils.createLocation)(path, state, key);
	  };

	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  };

	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = globalHistory.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var handlePopState = function handlePopState(event) {
	    // Ignore extraneous popstate events in WebKit.
	    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;

	    handlePop(getDOMLocation(event.state));
	  };

	  var handleHashChange = function handleHashChange() {
	    handlePop(getDOMLocation(getHistoryState()));
	  };

	  var forceNextPop = false;

	  var handlePop = function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';

	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({ action: action, location: location });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  };

	  var revertPop = function revertPop(fromLocation) {
	    var toLocation = history.location;

	    // TODO: We could probably make this more reliable by
	    // keeping a list of keys we've seen in sessionStorage.
	    // Instead, we just default to 0 for keys we don't know.

	    var toIndex = allKeys.indexOf(toLocation.key);

	    if (toIndex === -1) toIndex = 0;

	    var fromIndex = allKeys.indexOf(fromLocation.key);

	    if (fromIndex === -1) fromIndex = 0;

	    var delta = toIndex - fromIndex;

	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  };

	  var initialLocation = getDOMLocation(getHistoryState());
	  var allKeys = [initialLocation.key];

	  // Public interface

	  var createHref = function createHref(location) {
	    return basename + (0, _PathUtils.createPath)(location);
	  };

	  var push = function push(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;


	      if (canUseHistory) {
	        globalHistory.pushState({ key: key, state: state }, null, href);

	        if (forceRefresh) {
	          window.location.href = href;
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);
	          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);

	          nextKeys.push(location.key);
	          allKeys = nextKeys;

	          setState({ action: action, location: location });
	        }
	      } else {
	        (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');

	        window.location.href = href;
	      }
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;


	      if (canUseHistory) {
	        globalHistory.replaceState({ key: key, state: state }, null, href);

	        if (forceRefresh) {
	          window.location.replace(href);
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);

	          if (prevIndex !== -1) allKeys[prevIndex] = location.key;

	          setState({ action: action, location: location });
	        }
	      } else {
	        (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');

	        window.location.replace(href);
	      }
	    });
	  };

	  var go = function go(n) {
	    globalHistory.go(n);
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var listenerCount = 0;

	  var checkDOMListeners = function checkDOMListeners(delta) {
	    listenerCount += delta;

	    if (listenerCount === 1) {
	      (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);

	      if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);

	      if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	    }
	  };

	  var isBlocked = false;

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var unblock = transitionManager.setPrompt(prompt);

	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }

	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }

	      return unblock();
	    };
	  };

	  var listen = function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);

	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  };

	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createBrowserHistory;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.locationsAreEqual = exports.createLocation = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _resolvePathname = __webpack_require__(198);

	var _resolvePathname2 = _interopRequireDefault(_resolvePathname);

	var _valueEqual = __webpack_require__(199);

	var _valueEqual2 = _interopRequireDefault(_valueEqual);

	var _PathUtils = __webpack_require__(200);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {
	  var location = void 0;
	  if (typeof path === 'string') {
	    // Two-arg form: push(path, state)
	    location = (0, _PathUtils.parsePath)(path);
	    location.state = state;
	  } else {
	    // One-arg form: push(location)
	    location = _extends({}, path);

	    if (location.pathname === undefined) location.pathname = '';

	    if (location.search) {
	      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
	    } else {
	      location.search = '';
	    }

	    if (location.hash) {
	      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
	    } else {
	      location.hash = '';
	    }

	    if (state !== undefined && location.state === undefined) location.state = state;
	  }

	  try {
	    location.pathname = decodeURI(location.pathname);
	  } catch (e) {
	    if (e instanceof URIError) {
	      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
	    } else {
	      throw e;
	    }
	  }

	  if (key) location.key = key;

	  if (currentLocation) {
	    // Resolve incomplete/relative pathname relative to current location.
	    if (!location.pathname) {
	      location.pathname = currentLocation.pathname;
	    } else if (location.pathname.charAt(0) !== '/') {
	      location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);
	    }
	  } else {
	    // When there is no prior location and pathname is empty, set it to /
	    if (!location.pathname) {
	      location.pathname = '/';
	    }
	  }

	  return location;
	};

	var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);
	};

/***/ }),
/* 198 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	function isAbsolute(pathname) {
	  return pathname.charAt(0) === '/';
	}

	// About 1.5x faster than the two-arg version of Array#splice()
	function spliceOne(list, index) {
	  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
	    list[i] = list[k];
	  }

	  list.pop();
	}

	// This implementation is based heavily on node's url.parse
	function resolvePathname(to) {
	  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

	  var toParts = to && to.split('/') || [];
	  var fromParts = from && from.split('/') || [];

	  var isToAbs = to && isAbsolute(to);
	  var isFromAbs = from && isAbsolute(from);
	  var mustEndAbs = isToAbs || isFromAbs;

	  if (to && isAbsolute(to)) {
	    // to is absolute
	    fromParts = toParts;
	  } else if (toParts.length) {
	    // to is relative, drop the filename
	    fromParts.pop();
	    fromParts = fromParts.concat(toParts);
	  }

	  if (!fromParts.length) return '/';

	  var hasTrailingSlash = void 0;
	  if (fromParts.length) {
	    var last = fromParts[fromParts.length - 1];
	    hasTrailingSlash = last === '.' || last === '..' || last === '';
	  } else {
	    hasTrailingSlash = false;
	  }

	  var up = 0;
	  for (var i = fromParts.length; i >= 0; i--) {
	    var part = fromParts[i];

	    if (part === '.') {
	      spliceOne(fromParts, i);
	    } else if (part === '..') {
	      spliceOne(fromParts, i);
	      up++;
	    } else if (up) {
	      spliceOne(fromParts, i);
	      up--;
	    }
	  }

	  if (!mustEndAbs) for (; up--; up) {
	    fromParts.unshift('..');
	  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');

	  var result = fromParts.join('/');

	  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

	  return result;
	}

	exports.default = resolvePathname;
	module.exports = exports['default'];

/***/ }),
/* 199 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function valueEqual(a, b) {
	  if (a === b) return true;

	  if (a == null || b == null) return false;

	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return valueEqual(item, b[index]);
	    });
	  }

	  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
	  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);

	  if (aType !== bType) return false;

	  if (aType === 'object') {
	    var aValue = a.valueOf();
	    var bValue = b.valueOf();

	    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

	    var aKeys = Object.keys(a);
	    var bKeys = Object.keys(b);

	    if (aKeys.length !== bKeys.length) return false;

	    return aKeys.every(function (key) {
	      return valueEqual(a[key], b[key]);
	    });
	  }

	  return false;
	}

	exports.default = valueEqual;
	module.exports = exports['default'];

/***/ }),
/* 200 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path : '/' + path;
	};

	var stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path.substr(1) : path;
	};

	var hasBasename = exports.hasBasename = function hasBasename(path, prefix) {
	  return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
	};

	var stripBasename = exports.stripBasename = function stripBasename(path, prefix) {
	  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
	};

	var stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {
	  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
	};

	var parsePath = exports.parsePath = function parsePath(path) {
	  var pathname = path || '/';
	  var search = '';
	  var hash = '';

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substr(hashIndex);
	    pathname = pathname.substr(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substr(searchIndex);
	    pathname = pathname.substr(0, searchIndex);
	  }

	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	};

	var createPath = exports.createPath = function createPath(location) {
	  var pathname = location.pathname,
	      search = location.search,
	      hash = location.hash;


	  var path = pathname || '/';

	  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;

	  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;

	  return path;
	};

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createTransitionManager = function createTransitionManager() {
	  var prompt = null;

	  var setPrompt = function setPrompt(nextPrompt) {
	    (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');

	    prompt = nextPrompt;

	    return function () {
	      if (prompt === nextPrompt) prompt = null;
	    };
	  };

	  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {
	    // TODO: If another transition starts while we're still confirming
	    // the previous one, we may end up in a weird state. Figure out the
	    // best way to handle this.
	    if (prompt != null) {
	      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

	      if (typeof result === 'string') {
	        if (typeof getUserConfirmation === 'function') {
	          getUserConfirmation(result, callback);
	        } else {
	          (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');

	          callback(true);
	        }
	      } else {
	        // Return false from a transition hook to cancel the transition.
	        callback(result !== false);
	      }
	    } else {
	      callback(true);
	    }
	  };

	  var listeners = [];

	  var appendListener = function appendListener(fn) {
	    var isActive = true;

	    var listener = function listener() {
	      if (isActive) fn.apply(undefined, arguments);
	    };

	    listeners.push(listener);

	    return function () {
	      isActive = false;
	      listeners = listeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };

	  var notifyListeners = function notifyListeners() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    listeners.forEach(function (listener) {
	      return listener.apply(undefined, args);
	    });
	  };

	  return {
	    setPrompt: setPrompt,
	    confirmTransitionTo: confirmTransitionTo,
	    appendListener: appendListener,
	    notifyListeners: notifyListeners
	  };
	};

	exports.default = createTransitionManager;

/***/ }),
/* 202 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
	  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
	};

	var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
	  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
	};

	var getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {
	  return callback(window.confirm(message));
	}; // eslint-disable-line no-alert

	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
	 */
	var supportsHistory = exports.supportsHistory = function supportsHistory() {
	  var ua = window.navigator.userAgent;

	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;

	  return window.history && 'pushState' in window.history;
	};

	/**
	 * Returns true if browser fires popstate on hash change.
	 * IE10 and IE11 do not.
	 */
	var supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
	  return window.navigator.userAgent.indexOf('Trident') === -1;
	};

	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
	  return window.navigator.userAgent.indexOf('Firefox') === -1;
	};

	/**
	 * Returns true if a given popstate event is an extraneous WebKit event.
	 * Accounts for the fact that Chrome on iOS fires real popstate events
	 * containing undefined state when pressing the back button.
	 */
	var isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {
	  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
	};

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Router = __webpack_require__(204);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Router2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for putting history on context.
	 */
	var Router = function (_React$Component) {
	  _inherits(Router, _React$Component);

	  function Router() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Router);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props.history.location.pathname)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Router.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        history: this.props.history,
	        route: {
	          location: this.props.history.location,
	          match: this.state.match
	        }
	      })
	    };
	  };

	  Router.prototype.computeMatch = function computeMatch(pathname) {
	    return {
	      path: '/',
	      url: '/',
	      params: {},
	      isExact: pathname === '/'
	    };
	  };

	  Router.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;

	    var _props = this.props,
	        children = _props.children,
	        history = _props.history;


	    (0, _invariant2.default)(children == null || _react2.default.Children.count(children) === 1, 'A <Router> may have only one child element');

	    // Do this here so we can setState when a <Redirect> changes the
	    // location in componentWillMount. This happens e.g. when doing
	    // server rendering using a <StaticRouter>.
	    this.unlisten = history.listen(function () {
	      _this2.setState({
	        match: _this2.computeMatch(history.location.pathname)
	      });
	    });
	  };

	  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(this.props.history === nextProps.history, 'You cannot change <Router history>');
	  };

	  Router.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unlisten();
	  };

	  Router.prototype.render = function render() {
	    var children = this.props.children;

	    return children ? _react2.default.Children.only(children) : null;
	  };

	  return Router;
	}(_react2.default.Component);

	Router.propTypes = {
	  history: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.node
	};
	Router.contextTypes = {
	  router: _propTypes2.default.object
	};
	Router.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Router;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createHashHistory = __webpack_require__(206);

	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

	var _Router = __webpack_require__(203);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that uses window.location.hash.
	 */
	var HashRouter = function (_React$Component) {
	  _inherits(HashRouter, _React$Component);

	  function HashRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, HashRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createHashHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  HashRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<HashRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { HashRouter as Router }`.');
	  };

	  HashRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };

	  return HashRouter;
	}(_react2.default.Component);

	HashRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  getUserConfirmation: _propTypes2.default.func,
	  hashType: _propTypes2.default.oneOf(['hashbang', 'noslash', 'slash']),
	  children: _propTypes2.default.node
	};
	exports.default = HashRouter;

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _LocationUtils = __webpack_require__(197);

	var _PathUtils = __webpack_require__(200);

	var _createTransitionManager = __webpack_require__(201);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _DOMUtils = __webpack_require__(202);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HashChangeEvent = 'hashchange';

	var HashPathCoders = {
	  hashbang: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);
	    },
	    decodePath: function decodePath(path) {
	      return path.charAt(0) === '!' ? path.substr(1) : path;
	    }
	  },
	  noslash: {
	    encodePath: _PathUtils.stripLeadingSlash,
	    decodePath: _PathUtils.addLeadingSlash
	  },
	  slash: {
	    encodePath: _PathUtils.addLeadingSlash,
	    decodePath: _PathUtils.addLeadingSlash
	  }
	};

	var getHashPath = function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var hashIndex = href.indexOf('#');
	  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
	};

	var pushHashPath = function pushHashPath(path) {
	  return window.location.hash = path;
	};

	var replaceHashPath = function replaceHashPath(path) {
	  var hashIndex = window.location.href.indexOf('#');

	  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
	};

	var createHashHistory = function createHashHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');

	  var globalHistory = window.history;
	  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();

	  var _props$getUserConfirm = props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
	      _props$hashType = props.hashType,
	      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;

	  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';

	  var _HashPathCoders$hashT = HashPathCoders[hashType],
	      encodePath = _HashPathCoders$hashT.encodePath,
	      decodePath = _HashPathCoders$hashT.decodePath;


	  var getDOMLocation = function getDOMLocation() {
	    var path = decodePath(getHashPath());

	    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');

	    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);

	    return (0, _LocationUtils.createLocation)(path);
	  };

	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = globalHistory.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var forceNextPop = false;
	  var ignorePath = null;

	  var handleHashChange = function handleHashChange() {
	    var path = getHashPath();
	    var encodedPath = encodePath(path);

	    if (path !== encodedPath) {
	      // Ensure we always have a properly-encoded hash.
	      replaceHashPath(encodedPath);
	    } else {
	      var location = getDOMLocation();
	      var prevLocation = history.location;

	      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.

	      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.

	      ignorePath = null;

	      handlePop(location);
	    }
	  };

	  var handlePop = function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';

	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({ action: action, location: location });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  };

	  var revertPop = function revertPop(fromLocation) {
	    var toLocation = history.location;

	    // TODO: We could probably make this more reliable by
	    // keeping a list of paths we've seen in sessionStorage.
	    // Instead, we just default to 0 for paths we don't know.

	    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));

	    if (toIndex === -1) toIndex = 0;

	    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));

	    if (fromIndex === -1) fromIndex = 0;

	    var delta = toIndex - fromIndex;

	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  };

	  // Ensure the hash is encoded properly before doing anything else.
	  var path = getHashPath();
	  var encodedPath = encodePath(path);

	  if (path !== encodedPath) replaceHashPath(encodedPath);

	  var initialLocation = getDOMLocation();
	  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];

	  // Public interface

	  var createHref = function createHref(location) {
	    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));
	  };

	  var push = function push(path, state) {
	    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var path = (0, _PathUtils.createPath)(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;

	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a PUSH, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        pushHashPath(encodedPath);

	        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));
	        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);

	        nextPaths.push(path);
	        allPaths = nextPaths;

	        setState({ action: action, location: location });
	      } else {
	        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');

	        setState();
	      }
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var path = (0, _PathUtils.createPath)(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;

	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        replaceHashPath(encodedPath);
	      }

	      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));

	      if (prevIndex !== -1) allPaths[prevIndex] = path;

	      setState({ action: action, location: location });
	    });
	  };

	  var go = function go(n) {
	    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');

	    globalHistory.go(n);
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var listenerCount = 0;

	  var checkDOMListeners = function checkDOMListeners(delta) {
	    listenerCount += delta;

	    if (listenerCount === 1) {
	      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	    }
	  };

	  var isBlocked = false;

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var unblock = transitionManager.setPrompt(prompt);

	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }

	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }

	      return unblock();
	    };
	  };

	  var listen = function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);

	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  };

	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createHashHistory;

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var isModifiedEvent = function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	};

	/**
	 * The public API for rendering a history-aware <a>.
	 */

	var Link = function (_React$Component) {
	  _inherits(Link, _React$Component);

	  function Link() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Link);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
	      if (_this.props.onClick) _this.props.onClick(event);

	      if (!event.defaultPrevented && // onClick prevented default
	      event.button === 0 && // ignore right clicks
	      !_this.props.target && // let browser handle "target=_blank" etc.
	      !isModifiedEvent(event) // ignore clicks with modifier keys
	      ) {
	          event.preventDefault();

	          var history = _this.context.router.history;
	          var _this$props = _this.props,
	              replace = _this$props.replace,
	              to = _this$props.to;


	          if (replace) {
	            history.replace(to);
	          } else {
	            history.push(to);
	          }
	        }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Link.prototype.render = function render() {
	    var _props = this.props,
	        replace = _props.replace,
	        to = _props.to,
	        innerRef = _props.innerRef,
	        props = _objectWithoutProperties(_props, ['replace', 'to', 'innerRef']); // eslint-disable-line no-unused-vars

	    (0, _invariant2.default)(this.context.router, 'You should not use <Link> outside a <Router>');

	    var href = this.context.router.history.createHref(typeof to === 'string' ? { pathname: to } : to);

	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));
	  };

	  return Link;
	}(_react2.default.Component);

	Link.propTypes = {
	  onClick: _propTypes2.default.func,
	  target: _propTypes2.default.string,
	  replace: _propTypes2.default.bool,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired,
	  innerRef: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
	};
	Link.defaultProps = {
	  replace: false
	};
	Link.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired,
	      createHref: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Link;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _MemoryRouter = __webpack_require__(209);

	var _MemoryRouter2 = _interopRequireDefault(_MemoryRouter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _MemoryRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createMemoryHistory = __webpack_require__(210);

	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

	var _Router = __webpack_require__(204);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that stores location in memory.
	 */
	var MemoryRouter = function (_React$Component) {
	  _inherits(MemoryRouter, _React$Component);

	  function MemoryRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, MemoryRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createMemoryHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  MemoryRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<MemoryRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { MemoryRouter as Router }`.');
	  };

	  MemoryRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };

	  return MemoryRouter;
	}(_react2.default.Component);

	MemoryRouter.propTypes = {
	  initialEntries: _propTypes2.default.array,
	  initialIndex: _propTypes2.default.number,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = MemoryRouter;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _PathUtils = __webpack_require__(200);

	var _LocationUtils = __webpack_require__(197);

	var _createTransitionManager = __webpack_require__(201);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var clamp = function clamp(n, lowerBound, upperBound) {
	  return Math.min(Math.max(n, lowerBound), upperBound);
	};

	/**
	 * Creates a history object that stores locations in memory.
	 */
	var createMemoryHistory = function createMemoryHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var getUserConfirmation = props.getUserConfirmation,
	      _props$initialEntries = props.initialEntries,
	      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,
	      _props$initialIndex = props.initialIndex,
	      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,
	      _props$keyLength = props.keyLength,
	      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;


	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = history.entries.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  };

	  var index = clamp(initialIndex, 0, initialEntries.length - 1);
	  var entries = initialEntries.map(function (entry) {
	    return typeof entry === 'string' ? (0, _LocationUtils.createLocation)(entry, undefined, createKey()) : (0, _LocationUtils.createLocation)(entry, undefined, entry.key || createKey());
	  });

	  // Public interface

	  var createHref = _PathUtils.createPath;

	  var push = function push(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var prevIndex = history.index;
	      var nextIndex = prevIndex + 1;

	      var nextEntries = history.entries.slice(0);
	      if (nextEntries.length > nextIndex) {
	        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
	      } else {
	        nextEntries.push(location);
	      }

	      setState({
	        action: action,
	        location: location,
	        index: nextIndex,
	        entries: nextEntries
	      });
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      history.entries[history.index] = location;

	      setState({ action: action, location: location });
	    });
	  };

	  var go = function go(n) {
	    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);

	    var action = 'POP';
	    var location = history.entries[nextIndex];

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (ok) {
	        setState({
	          action: action,
	          location: location,
	          index: nextIndex
	        });
	      } else {
	        // Mimic the behavior of DOM histories by
	        // causing a render after a cancelled POP.
	        setState();
	      }
	    });
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var canGo = function canGo(n) {
	    var nextIndex = history.index + n;
	    return nextIndex >= 0 && nextIndex < history.entries.length;
	  };

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    return transitionManager.setPrompt(prompt);
	  };

	  var listen = function listen(listener) {
	    return transitionManager.appendListener(listener);
	  };

	  var history = {
	    length: entries.length,
	    action: 'POP',
	    location: entries[index],
	    index: index,
	    entries: entries,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    canGo: canGo,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createMemoryHistory;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Route = __webpack_require__(212);

	var _Route2 = _interopRequireDefault(_Route);

	var _Link = __webpack_require__(207);

	var _Link2 = _interopRequireDefault(_Link);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A <Link> wrapper that knows if it's "active" or not.
	 */
	var NavLink = function NavLink(_ref) {
	  var to = _ref.to,
	      exact = _ref.exact,
	      strict = _ref.strict,
	      location = _ref.location,
	      activeClassName = _ref.activeClassName,
	      className = _ref.className,
	      activeStyle = _ref.activeStyle,
	      style = _ref.style,
	      getIsActive = _ref.isActive,
	      ariaCurrent = _ref.ariaCurrent,
	      rest = _objectWithoutProperties(_ref, ['to', 'exact', 'strict', 'location', 'activeClassName', 'className', 'activeStyle', 'style', 'isActive', 'ariaCurrent']);

	  return _react2.default.createElement(_Route2.default, {
	    path: (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object' ? to.pathname : to,
	    exact: exact,
	    strict: strict,
	    location: location,
	    children: function children(_ref2) {
	      var location = _ref2.location,
	          match = _ref2.match;

	      var isActive = !!(getIsActive ? getIsActive(match, location) : match);

	      return _react2.default.createElement(_Link2.default, _extends({
	        to: to,
	        className: isActive ? [className, activeClassName].filter(function (i) {
	          return i;
	        }).join(' ') : className,
	        style: isActive ? _extends({}, style, activeStyle) : style,
	        'aria-current': isActive && ariaCurrent
	      }, rest));
	    }
	  });
	};

	NavLink.propTypes = {
	  to: _Link2.default.propTypes.to,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  location: _propTypes2.default.object,
	  activeClassName: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	  activeStyle: _propTypes2.default.object,
	  style: _propTypes2.default.object,
	  isActive: _propTypes2.default.func,
	  ariaCurrent: _propTypes2.default.oneOf(['page', 'step', 'location', 'true'])
	};

	NavLink.defaultProps = {
	  activeClassName: 'active',
	  ariaCurrent: 'true'
	};

	exports.default = NavLink;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Route = __webpack_require__(213);

	var _Route2 = _interopRequireDefault(_Route);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Route2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _matchPath = __webpack_require__(214);

	var _matchPath2 = _interopRequireDefault(_matchPath);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var isEmptyChildren = function isEmptyChildren(children) {
	  return _react2.default.Children.count(children) === 0;
	};

	/**
	 * The public API for matching a single path and rendering.
	 */

	var Route = function (_React$Component) {
	  _inherits(Route, _React$Component);

	  function Route() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Route);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props, _this.context.router)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Route.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        route: {
	          location: this.props.location || this.context.router.route.location,
	          match: this.state.match
	        }
	      })
	    };
	  };

	  Route.prototype.computeMatch = function computeMatch(_ref, router) {
	    var computedMatch = _ref.computedMatch,
	        location = _ref.location,
	        path = _ref.path,
	        strict = _ref.strict,
	        exact = _ref.exact,
	        sensitive = _ref.sensitive;

	    if (computedMatch) return computedMatch; // <Switch> already computed the match for us

	    (0, _invariant2.default)(router, 'You should not use <Route> or withRouter() outside a <Router>');

	    var route = router.route;

	    var pathname = (location || route.location).pathname;

	    return path ? (0, _matchPath2.default)(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }) : route.match;
	  };

	  Route.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!(this.props.component && this.props.render), 'You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored');

	    (0, _warning2.default)(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored');

	    (0, _warning2.default)(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored');
	  };

	  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');

	    this.setState({
	      match: this.computeMatch(nextProps, nextContext.router)
	    });
	  };

	  Route.prototype.render = function render() {
	    var match = this.state.match;
	    var _props = this.props,
	        children = _props.children,
	        component = _props.component,
	        render = _props.render;
	    var _context$router = this.context.router,
	        history = _context$router.history,
	        route = _context$router.route,
	        staticContext = _context$router.staticContext;

	    var location = this.props.location || route.location;
	    var props = { match: match, location: location, history: history, staticContext: staticContext };

	    return component ? // component prop gets first priority, only called if there's a match
	    match ? _react2.default.createElement(component, props) : null : render ? // render prop is next, only called if there's a match
	    match ? render(props) : null : children ? // children come last, always called
	    typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? _react2.default.Children.only(children) : null : null;
	  };

	  return Route;
	}(_react2.default.Component);

	Route.propTypes = {
	  computedMatch: _propTypes2.default.object, // private, from <Switch>
	  path: _propTypes2.default.string,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  sensitive: _propTypes2.default.bool,
	  component: _propTypes2.default.func,
	  render: _propTypes2.default.func,
	  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),
	  location: _propTypes2.default.object
	};
	Route.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.object.isRequired,
	    route: _propTypes2.default.object.isRequired,
	    staticContext: _propTypes2.default.object
	  })
	};
	Route.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Route;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _pathToRegexp = __webpack_require__(215);

	var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var patternCache = {};
	var cacheLimit = 10000;
	var cacheCount = 0;

	var compilePath = function compilePath(pattern, options) {
	  var cacheKey = '' + options.end + options.strict + options.sensitive;
	  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

	  if (cache[pattern]) return cache[pattern];

	  var keys = [];
	  var re = (0, _pathToRegexp2.default)(pattern, keys, options);
	  var compiledPattern = { re: re, keys: keys };

	  if (cacheCount < cacheLimit) {
	    cache[pattern] = compiledPattern;
	    cacheCount++;
	  }

	  return compiledPattern;
	};

	/**
	 * Public API for matching a URL pathname to a path pattern.
	 */
	var matchPath = function matchPath(pathname) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	  if (typeof options === 'string') options = { path: options };

	  var _options = options,
	      _options$path = _options.path,
	      path = _options$path === undefined ? '/' : _options$path,
	      _options$exact = _options.exact,
	      exact = _options$exact === undefined ? false : _options$exact,
	      _options$strict = _options.strict,
	      strict = _options$strict === undefined ? false : _options$strict,
	      _options$sensitive = _options.sensitive,
	      sensitive = _options$sensitive === undefined ? false : _options$sensitive;

	  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),
	      re = _compilePath.re,
	      keys = _compilePath.keys;

	  var match = re.exec(pathname);

	  if (!match) return null;

	  var url = match[0],
	      values = match.slice(1);

	  var isExact = pathname === url;

	  if (exact && !isExact) return null;

	  return {
	    path: path, // the path pattern used to match
	    url: path === '/' && url === '' ? '/' : url, // the matched portion of the URL
	    isExact: isExact, // whether or not we matched exactly
	    params: keys.reduce(function (memo, key, index) {
	      memo[key.name] = values[index];
	      return memo;
	    }, {})
	  };
	};

	exports.default = matchPath;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

	var isarray = __webpack_require__(216)

	/**
	 * Expose `pathToRegexp`.
	 */
	module.exports = pathToRegexp
	module.exports.parse = parse
	module.exports.compile = compile
	module.exports.tokensToFunction = tokensToFunction
	module.exports.tokensToRegExp = tokensToRegExp

	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g')

	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {string}  str
	 * @param  {Object=} options
	 * @return {!Array}
	 */
	function parse (str, options) {
	  var tokens = []
	  var key = 0
	  var index = 0
	  var path = ''
	  var defaultDelimiter = options && options.delimiter || '/'
	  var res

	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0]
	    var escaped = res[1]
	    var offset = res.index
	    path += str.slice(index, offset)
	    index = offset + m.length

	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1]
	      continue
	    }

	    var next = str[index]
	    var prefix = res[2]
	    var name = res[3]
	    var capture = res[4]
	    var group = res[5]
	    var modifier = res[6]
	    var asterisk = res[7]

	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path)
	      path = ''
	    }

	    var partial = prefix != null && next != null && next !== prefix
	    var repeat = modifier === '+' || modifier === '*'
	    var optional = modifier === '?' || modifier === '*'
	    var delimiter = res[2] || defaultDelimiter
	    var pattern = capture || group

	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      partial: partial,
	      asterisk: !!asterisk,
	      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
	    })
	  }

	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index)
	  }

	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path)
	  }

	  return tokens
	}

	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {string}             str
	 * @param  {Object=}            options
	 * @return {!function(Object=, Object=)}
	 */
	function compile (str, options) {
	  return tokensToFunction(parse(str, options))
	}

	/**
	 * Prettier encoding of URI path segments.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeURIComponentPretty (str) {
	  return encodeURI(str).replace(/[\/?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	/**
	 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeAsterisk (str) {
	  return encodeURI(str).replace(/[?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length)

	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')
	    }
	  }

	  return function (obj, opts) {
	    var path = ''
	    var data = obj || {}
	    var options = opts || {}
	    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i]

	      if (typeof token === 'string') {
	        path += token

	        continue
	      }

	      var value = data[token.name]
	      var segment

	      if (value == null) {
	        if (token.optional) {
	          // Prepend partial segment prefixes.
	          if (token.partial) {
	            path += token.prefix
	          }

	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }

	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
	        }

	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }

	        for (var j = 0; j < value.length; j++) {
	          segment = encode(value[j])

	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
	          }

	          path += (j === 0 ? token.prefix : token.delimiter) + segment
	        }

	        continue
	      }

	      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }

	      path += token.prefix + segment
	    }

	    return path
	  }
	}

	/**
	 * Escape a regular expression string.
	 *
	 * @param  {string} str
	 * @return {string}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
	}

	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {string} group
	 * @return {string}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}

	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {!RegExp} re
	 * @param  {Array}   keys
	 * @return {!RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys
	  return re
	}

	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {string}
	 */
	function flags (options) {
	  return options.sensitive ? '' : 'i'
	}

	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {!RegExp} path
	 * @param  {!Array}  keys
	 * @return {!RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g)

	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        partial: false,
	        asterisk: false,
	        pattern: null
	      })
	    }
	  }

	  return attachKeys(path, keys)
	}

	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {!Array}  path
	 * @param  {Array}   keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = []

	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source)
	  }

	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

	  return attachKeys(regexp, keys)
	}

	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {string}  path
	 * @param  {!Array}  keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  return tokensToRegExp(parse(path, options), keys, options)
	}

	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {!Array}          tokens
	 * @param  {(Array|Object)=} keys
	 * @param  {Object=}         options
	 * @return {!RegExp}
	 */
	function tokensToRegExp (tokens, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }

	  options = options || {}

	  var strict = options.strict
	  var end = options.end !== false
	  var route = ''

	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i]

	    if (typeof token === 'string') {
	      route += escapeString(token)
	    } else {
	      var prefix = escapeString(token.prefix)
	      var capture = '(?:' + token.pattern + ')'

	      keys.push(token)

	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*'
	      }

	      if (token.optional) {
	        if (!token.partial) {
	          capture = '(?:' + prefix + '(' + capture + '))?'
	        } else {
	          capture = prefix + '(' + capture + ')?'
	        }
	      } else {
	        capture = prefix + '(' + capture + ')'
	      }

	      route += capture
	    }
	  }

	  var delimiter = escapeString(options.delimiter || '/')
	  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
	  }

	  if (end) {
	    route += '$'
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
	  }

	  return attachKeys(new RegExp('^' + route, flags(options)), keys)
	}

	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(string|RegExp|Array)} path
	 * @param  {(Array|Object)=}       keys
	 * @param  {Object=}               options
	 * @return {!RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }

	  options = options || {}

	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, /** @type {!Array} */ (keys))
	  }

	  if (isarray(path)) {
	    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
	  }

	  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
	}


/***/ }),
/* 216 */
/***/ (function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Prompt = __webpack_require__(218);

	var _Prompt2 = _interopRequireDefault(_Prompt);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Prompt2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for prompting the user before navigating away
	 * from a screen with a component.
	 */
	var Prompt = function (_React$Component) {
	  _inherits(Prompt, _React$Component);

	  function Prompt() {
	    _classCallCheck(this, Prompt);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Prompt.prototype.enable = function enable(message) {
	    if (this.unblock) this.unblock();

	    this.unblock = this.context.router.history.block(message);
	  };

	  Prompt.prototype.disable = function disable() {
	    if (this.unblock) {
	      this.unblock();
	      this.unblock = null;
	    }
	  };

	  Prompt.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Prompt> outside a <Router>');

	    if (this.props.when) this.enable(this.props.message);
	  };

	  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.when) {
	      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
	    } else {
	      this.disable();
	    }
	  };

	  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.disable();
	  };

	  Prompt.prototype.render = function render() {
	    return null;
	  };

	  return Prompt;
	}(_react2.default.Component);

	Prompt.propTypes = {
	  when: _propTypes2.default.bool,
	  message: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired
	};
	Prompt.defaultProps = {
	  when: true
	};
	Prompt.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      block: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Prompt;

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Redirect = __webpack_require__(220);

	var _Redirect2 = _interopRequireDefault(_Redirect);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Redirect2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _history = __webpack_require__(221);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for updating the location programmatically
	 * with a component.
	 */
	var Redirect = function (_React$Component) {
	  _inherits(Redirect, _React$Component);

	  function Redirect() {
	    _classCallCheck(this, Redirect);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Redirect.prototype.isStatic = function isStatic() {
	    return this.context.router && this.context.router.staticContext;
	  };

	  Redirect.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Redirect> outside a <Router>');

	    if (this.isStatic()) this.perform();
	  };

	  Redirect.prototype.componentDidMount = function componentDidMount() {
	    if (!this.isStatic()) this.perform();
	  };

	  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var prevTo = (0, _history.createLocation)(prevProps.to);
	    var nextTo = (0, _history.createLocation)(this.props.to);

	    if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {
	      (0, _warning2.default)(false, 'You tried to redirect to the same route you\'re currently on: ' + ('"' + nextTo.pathname + nextTo.search + '"'));
	      return;
	    }

	    this.perform();
	  };

	  Redirect.prototype.perform = function perform() {
	    var history = this.context.router.history;
	    var _props = this.props,
	        push = _props.push,
	        to = _props.to;


	    if (push) {
	      history.push(to);
	    } else {
	      history.replace(to);
	    }
	  };

	  Redirect.prototype.render = function render() {
	    return null;
	  };

	  return Redirect;
	}(_react2.default.Component);

	Redirect.propTypes = {
	  push: _propTypes2.default.bool,
	  from: _propTypes2.default.string,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
	};
	Redirect.defaultProps = {
	  push: false
	};
	Redirect.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired
	    }).isRequired,
	    staticContext: _propTypes2.default.object
	  }).isRequired
	};
	exports.default = Redirect;

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.createPath = exports.parsePath = exports.locationsAreEqual = exports.createLocation = exports.createMemoryHistory = exports.createHashHistory = exports.createBrowserHistory = undefined;

	var _LocationUtils = __webpack_require__(197);

	Object.defineProperty(exports, 'createLocation', {
	  enumerable: true,
	  get: function get() {
	    return _LocationUtils.createLocation;
	  }
	});
	Object.defineProperty(exports, 'locationsAreEqual', {
	  enumerable: true,
	  get: function get() {
	    return _LocationUtils.locationsAreEqual;
	  }
	});

	var _PathUtils = __webpack_require__(200);

	Object.defineProperty(exports, 'parsePath', {
	  enumerable: true,
	  get: function get() {
	    return _PathUtils.parsePath;
	  }
	});
	Object.defineProperty(exports, 'createPath', {
	  enumerable: true,
	  get: function get() {
	    return _PathUtils.createPath;
	  }
	});

	var _createBrowserHistory2 = __webpack_require__(195);

	var _createBrowserHistory3 = _interopRequireDefault(_createBrowserHistory2);

	var _createHashHistory2 = __webpack_require__(206);

	var _createHashHistory3 = _interopRequireDefault(_createHashHistory2);

	var _createMemoryHistory2 = __webpack_require__(210);

	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.createBrowserHistory = _createBrowserHistory3.default;
	exports.createHashHistory = _createHashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _StaticRouter = __webpack_require__(223);

	var _StaticRouter2 = _interopRequireDefault(_StaticRouter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _StaticRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _PathUtils = __webpack_require__(200);

	var _Router = __webpack_require__(204);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var normalizeLocation = function normalizeLocation(object) {
	  var _object$pathname = object.pathname,
	      pathname = _object$pathname === undefined ? '/' : _object$pathname,
	      _object$search = object.search,
	      search = _object$search === undefined ? '' : _object$search,
	      _object$hash = object.hash,
	      hash = _object$hash === undefined ? '' : _object$hash;


	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	};

	var addBasename = function addBasename(basename, location) {
	  if (!basename) return location;

	  return _extends({}, location, {
	    pathname: (0, _PathUtils.addLeadingSlash)(basename) + location.pathname
	  });
	};

	var stripBasename = function stripBasename(basename, location) {
	  if (!basename) return location;

	  var base = (0, _PathUtils.addLeadingSlash)(basename);

	  if (location.pathname.indexOf(base) !== 0) return location;

	  return _extends({}, location, {
	    pathname: location.pathname.substr(base.length)
	  });
	};

	var createLocation = function createLocation(location) {
	  return typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : normalizeLocation(location);
	};

	var createURL = function createURL(location) {
	  return typeof location === 'string' ? location : (0, _PathUtils.createPath)(location);
	};

	var staticHandler = function staticHandler(methodName) {
	  return function () {
	    (0, _invariant2.default)(false, 'You cannot %s with <StaticRouter>', methodName);
	  };
	};

	var noop = function noop() {};

	/**
	 * The public top-level API for a "static" <Router>, so-called because it
	 * can't actually change the current location. Instead, it just records
	 * location changes in a context object. Useful mainly in testing and
	 * server-rendering scenarios.
	 */

	var StaticRouter = function (_React$Component) {
	  _inherits(StaticRouter, _React$Component);

	  function StaticRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, StaticRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
	      return (0, _PathUtils.addLeadingSlash)(_this.props.basename + createURL(path));
	    }, _this.handlePush = function (location) {
	      var _this$props = _this.props,
	          basename = _this$props.basename,
	          context = _this$props.context;

	      context.action = 'PUSH';
	      context.location = addBasename(basename, createLocation(location));
	      context.url = createURL(context.location);
	    }, _this.handleReplace = function (location) {
	      var _this$props2 = _this.props,
	          basename = _this$props2.basename,
	          context = _this$props2.context;

	      context.action = 'REPLACE';
	      context.location = addBasename(basename, createLocation(location));
	      context.url = createURL(context.location);
	    }, _this.handleListen = function () {
	      return noop;
	    }, _this.handleBlock = function () {
	      return noop;
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  StaticRouter.prototype.getChildContext = function getChildContext() {
	    return {
	      router: {
	        staticContext: this.props.context
	      }
	    };
	  };

	  StaticRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<StaticRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { StaticRouter as Router }`.');
	  };

	  StaticRouter.prototype.render = function render() {
	    var _props = this.props,
	        basename = _props.basename,
	        context = _props.context,
	        location = _props.location,
	        props = _objectWithoutProperties(_props, ['basename', 'context', 'location']);

	    var history = {
	      createHref: this.createHref,
	      action: 'POP',
	      location: stripBasename(basename, createLocation(location)),
	      push: this.handlePush,
	      replace: this.handleReplace,
	      go: staticHandler('go'),
	      goBack: staticHandler('goBack'),
	      goForward: staticHandler('goForward'),
	      listen: this.handleListen,
	      block: this.handleBlock
	    };

	    return _react2.default.createElement(_Router2.default, _extends({}, props, { history: history }));
	  };

	  return StaticRouter;
	}(_react2.default.Component);

	StaticRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  context: _propTypes2.default.object.isRequired,
	  location: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
	};
	StaticRouter.defaultProps = {
	  basename: '',
	  location: '/'
	};
	StaticRouter.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = StaticRouter;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Switch = __webpack_require__(225);

	var _Switch2 = _interopRequireDefault(_Switch);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Switch2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(192);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(196);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _matchPath = __webpack_require__(214);

	var _matchPath2 = _interopRequireDefault(_matchPath);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for rendering the first <Route> that matches.
	 */
	var Switch = function (_React$Component) {
	  _inherits(Switch, _React$Component);

	  function Switch() {
	    _classCallCheck(this, Switch);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Switch.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Switch> outside a <Router>');
	  };

	  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
	  };

	  Switch.prototype.render = function render() {
	    var route = this.context.router.route;
	    var children = this.props.children;

	    var location = this.props.location || route.location;

	    var match = void 0,
	        child = void 0;
	    _react2.default.Children.forEach(children, function (element) {
	      if (!_react2.default.isValidElement(element)) return;

	      var _element$props = element.props,
	          pathProp = _element$props.path,
	          exact = _element$props.exact,
	          strict = _element$props.strict,
	          sensitive = _element$props.sensitive,
	          from = _element$props.from;

	      var path = pathProp || from;

	      if (match == null) {
	        child = element;
	        match = path ? (0, _matchPath2.default)(location.pathname, { path: path, exact: exact, strict: strict, sensitive: sensitive }) : route.match;
	      }
	    });

	    return match ? _react2.default.cloneElement(child, { location: location, computedMatch: match }) : null;
	  };

	  return Switch;
	}(_react2.default.Component);

	Switch.contextTypes = {
	  router: _propTypes2.default.shape({
	    route: _propTypes2.default.object.isRequired
	  }).isRequired
	};
	Switch.propTypes = {
	  children: _propTypes2.default.node,
	  location: _propTypes2.default.object
	};
	exports.default = Switch;

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _matchPath = __webpack_require__(214);

	var _matchPath2 = _interopRequireDefault(_matchPath);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _matchPath2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _withRouter = __webpack_require__(228);

	var _withRouter2 = _interopRequireDefault(_withRouter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _withRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(193);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _hoistNonReactStatics = __webpack_require__(229);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _Route = __webpack_require__(213);

	var _Route2 = _interopRequireDefault(_Route);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A public higher-order component to access the imperative API
	 */
	var withRouter = function withRouter(Component) {
	  var C = function C(props) {
	    var wrappedComponentRef = props.wrappedComponentRef,
	        remainingProps = _objectWithoutProperties(props, ['wrappedComponentRef']);

	    return _react2.default.createElement(_Route2.default, { render: function render(routeComponentProps) {
	        return _react2.default.createElement(Component, _extends({}, remainingProps, routeComponentProps, { ref: wrappedComponentRef }));
	      } });
	  };

	  C.displayName = 'withRouter(' + (Component.displayName || Component.name) + ')';
	  C.WrappedComponent = Component;
	  C.propTypes = {
	    wrappedComponentRef: _propTypes2.default.func
	  };

	  return (0, _hoistNonReactStatics2.default)(C, Component);
	};

	exports.default = withRouter;

/***/ }),
/* 229 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	  name: true,
	  length: true,
	  prototype: true,
	  caller: true,
	  callee: true,
	  arguments: true,
	  arity: true
	};

	var defineProperty = Object.defineProperty;
	var getOwnPropertyNames = Object.getOwnPropertyNames;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	var getPrototypeOf = Object.getPrototypeOf;
	var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

	        if (objectPrototype) {
	            var inheritedComponent = getPrototypeOf(sourceComponent);
	            if (inheritedComponent && inheritedComponent !== objectPrototype) {
	                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	            }
	        }

	        var keys = getOwnPropertyNames(sourceComponent);

	        if (getOwnPropertySymbols) {
	            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            var key = keys[i];
	            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
	                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	                try { // Avoid failures from read-only properties
	                    defineProperty(targetComponent, key, descriptor);
	                } catch (e) {}
	            }
	        }

	        return targetComponent;
	    }

	    return targetComponent;
	};


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(231);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./home.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./home.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._1jHMbncy2MMdRtVOZ7swBK{background: #f2f2f2;position: relative;min-height: 1000px;}\r\nheader{width:100%;height:50px;color:white;line-height: 50px;font-size: 12px;position: absolute;}\r\nheader img{width:25px;margin-top: 13px; margin-left: 10px;}\r\nheader span{font-size:14px;}\r\nheader a{float: right;font-size: 14px;color: white;padding-left:5px;}\r\n._1C_g7sBU3e9kCQDQnTjojy{padding-right: 10px;display: none;}\r\n._2RBPSeTTrsICp40UM6WBY4{float: right;width: 20px;margin-top: 15px;display: none}\r\n._3q8zY_k9GDCWSHXntJcRz8{display: none}\r\nnav{width:100%;height: 145px;}\r\nnav img{height:145px;    width: 100%;}\r\n._1P3wSVUYwaljL_NxZmvz-E{padding-left: 5px;}\r\n._1d-NGh-2622P7EMvz26MMf{width: 160px;\r\n    height: 15px;\r\n    border: 1px solid white;\r\n    /*border-image: linear-gradient(to right, red , blue) 1 1;*/\r\n    position: absolute;\r\n    top: 65px;\r\n    left: 50%;\r\n    transform: translate(-89px);\r\n    color: white;\r\n    font-size: 16px;\r\n    line-height: 15px;\r\n    text-align: center;    border-radius: 20px;\r\n        /*border: 0px solid transparent;*/\r\n    /*background: linear-gradient(orange, violet);*/\r\n    /*background-clip: padding-box;*/\r\n    padding: 10px;\r\n    /*box-shadow:0 1px 1px #6eda9f, inset 0 0 3px #60ceca;*/\r\n}\r\n.rnS6oPKRpfHnUGWSRIEb{width: 280px;height: 50px;border: 2px solid white;position: absolute;top: 120px;left: 50%;transform: translate(-140px); z-index: 1;color: white;line-height: 50px;font-size: 24px;text-align: center;}\r\n._3TKFtBNJ8R8PzDDJTElJB7{height:70px;font-size: 13px;background: white;padding: 5px 15px;}\r\n._3TKFtBNJ8R8PzDDJTElJB7 li{height:30px;float: left;line-height: 37px;text-align: center;    padding: 0px 10px 0px 0px;}\r\n._3TKFtBNJ8R8PzDDJTElJB7 li:first-child{color: #009999;}\r\n.DbSZLZVixbjq_84IXeKIh{width: 100%; max-width: 1425px;margin: 0 auto;padding-bottom: 30px;}\r\n._30cfQqPNNyfpk5rdxuQsjB{width:100%;height: 30px;    font-size: 13px;background: #353f42;line-height: 30px;text-align: center;color: white;position: absolute;bottom: 0px;margin-top:20px;}\r\n/*专题列表*/\r\n._1hxqRrq1q9F-J4Js3Fl-lT{width:44%;height: 270px;background:white;font-size: 12px;color: #8a8a8a;line-height: 35px;    display: inline-block;}\r\n._1hxqRrq1q9F-J4Js3Fl-lT:hover{box-shadow: 0 0 15px 2px #8a8a8a;}\r\n._1hxqRrq1q9F-J4Js3Fl-lT:nth-child(n){margin: 4%;}\r\n._1hxqRrq1q9F-J4Js3Fl-lT:nth-child(2n){margin: 4%;margin-left: 0%;}\r\n\r\n._1hxqRrq1q9F-J4Js3Fl-lT > img{width:100%;}\r\n._1hxqRrq1q9F-J4Js3Fl-lT > div{padding-left: 10px;}\r\n._3HG_gz-j40-EEXVsri_1Rr{font-size: 14px;color: black;line-height: 30px;}\r\n._1zJEpbbEkwAIDLacHhBOVT{font-size: 14px;line-height: 30px;    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;}\r\n._2UrxNFAqP99PtVVhlEUtNt{border-top: 1px solid #d2d2d2;padding-right: 10px;}\r\n._2UrxNFAqP99PtVVhlEUtNt img{width: 20px;height:20px;margin-top: 9px;}\r\n._3iQ5UH8MLDMBUINSLc7r5r{float: right;}\r\n._3tD6fa0bULvvvTjgCdhiCH{    overflow: hidden;\r\n    white-space: nowrap;\r\n    width: 150px;\r\n    text-overflow: ellipsis;}", ""]);

	// exports
	exports.locals = {
		"home-main": "_1jHMbncy2MMdRtVOZ7swBK",
		"register": "_1C_g7sBU3e9kCQDQnTjojy",
		"userpng": "_2RBPSeTTrsICp40UM6WBY4",
		"homephone-land": "_3q8zY_k9GDCWSHXntJcRz8",
		"user-home": "_1P3wSVUYwaljL_NxZmvz-E",
		"global-enter": "_1d-NGh-2622P7EMvz26MMf",
		"go-global": "rnS6oPKRpfHnUGWSRIEb",
		"theme-tab": "_3TKFtBNJ8R8PzDDJTElJB7",
		"content-main": "DbSZLZVixbjq_84IXeKIh",
		"home-footer": "_30cfQqPNNyfpk5rdxuQsjB",
		"themes-li": "_1hxqRrq1q9F-J4Js3Fl-lT",
		"themes-li-title": "_3HG_gz-j40-EEXVsri_1Rr",
		"themes-li-lettertitle": "_1zJEpbbEkwAIDLacHhBOVT",
		"themes-li-foot": "_2UrxNFAqP99PtVVhlEUtNt",
		"fr": "_3iQ5UH8MLDMBUINSLc7r5r",
		"themes-li-descdesc": "_3tD6fa0bULvvvTjgCdhiCH"
	};

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = {
		"titleArr": ['全部', '学校分布', '人口普查', '交通', '自然灾害', '社会焦点', '智慧城市', '街景'],
		"details1": [{
			"themesliImg": "./src/assets/02_260.png",
			"themesliImg2": "./src/assets/02_30.png",
			"titleDesc": "天津爆炸",
			"letterDesc": "社会焦点",
			"connentDesc": "天津滨海新区第五大街与跃进路交叉口的一处集装箱码头发生爆炸",
			"author": "wanglei",
			"time": "2015-08-12"
		}, {
			"themesliImg": "./src/assets/260.png",
			"themesliImg2": "./src/assets/30.png",
			"titleDesc": "全球航线",
			"letterDesc": "交通",
			"connentDesc": "该航线指东南亚国家、中国、东北亚国家各港，沿大圆航线横渡北太平洋至美、加西海岸各港",
			"author": "李浩",
			"time": "2012-07-25"
		}, {
			"themesliImg": "./src/assets/10_260.png",
			"themesliImg2": "./src/assets/10_30.png",
			"titleDesc": "全国火车站",
			"letterDesc": "交通",
			"connentDesc": "中国的全国火车站分布均匀",
			"author": "陈杰",
			"time": "2015-07-14"
		}, {
			"themesliImg": "./src/assets/01_260.png",
			"themesliImg2": "./src/assets/01_30.png",
			"titleDesc": "北京市公交线路密度分布",
			"letterDesc": "交通",
			"connentDesc": "北京市的地面套交比较爱速，近年来更是取得长足的发展，但仍存在线珞长度总体偏 大",
			"author": "胡小林",
			"time": "2015-03-25"
		}, {
			"themesliImg": "./src/assets/06_260.png",
			"themesliImg2": "./src/assets/06_300.png",
			"titleDesc": "北京地质灾害",
			"letterDesc": "自然灾害",
			"connentDesc": "地质灾害是指因自然因素或者人为活动引发的、危害人民生命和财产安全的、与地质作用有关的灾害",
			"author": "吴华林",
			"time": "2013-07-23"
		}, {
			"themesliImg": "./src/assets/09_260.png",
			"themesliImg2": "./src/assets/09_300.png",
			"titleDesc": "全球地震分布",
			"letterDesc": "自然灾害",
			"connentDesc": "根据全球构造板块学说，地壳被一些构造活动带分割为彼此相对运动的板块，板块当中有的块大，有的块小",
			"author": "罗浮艳",
			"time": "2017-07-04"
		}, {
			"themesliImg": "./src/assets/00.png",
			"themesliImg2": "./src/assets/0.png",
			"titleDesc": "全国大学分布",
			"letterDesc": "学校分布",
			"connentDesc": "我国主要的高等院校基本集中在大城市",
			"author": "薛佳慧",
			"time": "2016-07-03"
		}, {
			"themesliImg": "./src/assets/07_260.png",
			"themesliImg2": "./src/assets/07_30.png",
			"titleDesc": "北京中学分布",
			"letterDesc": "学校分布",
			"connentDesc": "近年来 北京中学的门槛越来越高",
			"author": "李凤英",
			"time": "2017-08-16"
		}, {
			"themesliImg": "./src/assets/03_260.png",
			"themesliImg2": "./src/assets/03_30.png",
			"titleDesc": "全国主要城市小学分布",
			"letterDesc": "学校分布",
			"connentDesc": "我国的小学现在基本遍布在全国的各个地方",
			"author": "陈浩",
			"time": "2017-02-13"
		}, {
			"themesliImg": "./src/assets/04_260.png",
			"themesliImg2": "./src/assets/04_30.png",
			"titleDesc": "全国主要城市幼儿园分布",
			"letterDesc": "学校分布",
			"connentDesc": "18日上午，国家发改委召开新闻发布会，发布宏观经济运行情况并回应热点问题",
			"author": "周启明",
			"time": "2017-03-15"
		}, {
			"themesliImg": "./src/assets/05_260.png",
			"themesliImg2": "./src/assets/05_30.png",
			"titleDesc": "全国技术院校分布",
			"letterDesc": "学校分布",
			"connentDesc": "为了梦想，我们总有不遗余力的“折腾精神”，但这种精神并不是瞎折腾，而是坚守与执着",
			"author": "钱慧琪",
			"time": "2017-12-12"
		}, {
			"themesliImg": "./src/assets/11_260.png",
			"themesliImg2": "./src/assets/11_30.png",
			"titleDesc": "1970年全球人口",
			"letterDesc": "人口普查",
			"connentDesc": "1970年，中国人口总数8.16亿，印度人口总数才5.49亿，仅相当于中国的67.32%",
			"author": "孙立群",
			"time": "1970-07-12"
		}, {
			"themesliImg": "./src/assets/13_2600.png",
			"themesliImg2": "./src/assets/13_30.png",
			"titleDesc": "中国人口比例",
			"letterDesc": "人口普查",
			"connentDesc": "2015年末，中国大陆总人口(包括31个省、自治区、直辖市和中国人民解放军现役军人",
			"author": "王浩宇",
			"time": "2016-03-26"
		}, {
			"themesliImg": "./src/assets/14_260.png",
			"themesliImg2": "./src/assets/14_30.png",
			"titleDesc": "中国老年人口比例",
			"letterDesc": "人口普查",
			"connentDesc": "65岁以上的人口占到总人口的7%,符合其中之一就是老龄化社会了。",
			"author": "黎嘉迅",
			"time": "2016-08-01"
		}, {
			"themesliImg": "./src/assets/08_260.png",
			"themesliImg2": "./src/assets/08_30.png",
			"titleDesc": "中国就业人口",
			"letterDesc": "人口普查",
			"connentDesc": "中国的就业人口包括在城乡全民所有制、集体所有制和个体所有制就业的全部人口",
			"author": "栎迷",
			"time": "2010-03-26"
		}, {
			"themesliImg": "./src/assets/12_260.png",
			"themesliImg2": "./src/assets/12_30.png",
			"titleDesc": "全球人口",
			"letterDesc": "人口普查",
			"connentDesc": "世界人口，是指世界（地球）上在某一时刻的人口总和。根据美国人口调查局的估计",
			"author": "楚慧琴",
			"time": "2011-02-21"
		}, {
			"themesliImg": "./src/assets/115_260.png",
			"themesliImg2": "./src/assets/chengdu.png",
			"titleDesc": "成都3D图",
			"letterDesc": "智慧城市",
			"connentDesc": "成都三维地图成都天气 成都七天天气 成都空气质量 全屏 成都热门公交查询",
			"author": "李海龙",
			"time": "2015-05-05"
		}, {
			"themesliImg": "./src/assets/15_260.png",
			"themesliImg2": "./src/assets/15_30.png",
			"titleDesc": "西藏-川藏公路",
			"letterDesc": "街景",
			"connentDesc": "南线由四川成都、雅安、泸定、康定、东俄洛、雅江、理塘、巴塘，西藏芒康、左贡、邦达、八宿、波密、林芝八一镇",
			"author": "谢周清",
			"time": "2013-05-05"
		}],
		"details2": [{
			"themesliImg": "./src/assets/00.png",
			"titleDesc": "全国大学分布",
			"letterDesc": "学校分布",
			"connentDesc": "我国主要的高等院校基本集中在大城市",
			"author": "薛佳慧",
			"time": "2016-07-03"
		}, {
			"themesliImg": "./src/assets/07_260.png",
			"titleDesc": "北京中学分布",
			"letterDesc": "学校分布",
			"connentDesc": "近年来 北京中学的门槛越来越高",
			"author": "李凤英",
			"time": "2017-08-16"
		}, {
			"themesliImg": "./src/assets/03_260.png",
			"titleDesc": "全国主要城市小学分布",
			"letterDesc": "学校分布",
			"connentDesc": "我国的小学现在基本遍布在全国的各个地方",
			"author": "陈浩",
			"time": "2017-02-13"
		}, {
			"themesliImg": "./src/assets/04_260.png",
			"titleDesc": "全国主要城市幼儿园分布",
			"letterDesc": "学校分布",
			"connentDesc": "18日上午，国家发改委召开新闻发布会，发布宏观经济运行情况并回应热点问题",
			"author": "周启明",
			"time": "2017-03-15"
		}, {
			"themesliImg": "./src/assets/05_260.png",
			"titleDesc": "全国技术院校分布",
			"letterDesc": "学校分布",
			"connentDesc": "为了梦想，我们总有不遗余力的“折腾精神”，但这种精神并不是瞎折腾，而是坚守与执着",
			"author": "钱慧琪",
			"time": "2017-12-12"
		}],
		"details3": [{
			"themesliImg": "./src/assets/11_260.png",
			"titleDesc": "1970年全球人口",
			"letterDesc": "人口普查",
			"connentDesc": "1970年，中国人口总数8.16亿，印度人口总数才5.49亿，仅相当于中国的67.32%",
			"author": "孙立群",
			"time": "1970-07-12"
		}, {
			"themesliImg": "./src/assets/13_2600.png",
			"titleDesc": "中国人口比例",
			"letterDesc": "人口普查",
			"connentDesc": "2015年末，中国大陆总人口(包括31个省、自治区、直辖市和中国人民解放军现役军人",
			"author": "王浩宇",
			"time": "2016-03-26"
		}, {
			"themesliImg": "./src/assets/14_260.png",
			"titleDesc": "中国老年人口比例",
			"letterDesc": "人口普查",
			"connentDesc": "65岁以上的人口占到总人口的7%,符合其中之一就是老龄化社会了。",
			"author": "黎嘉迅",
			"time": "2016-08-01"
		}, {
			"themesliImg": "./src/assets/08_260.png",
			"titleDesc": "中国就业人口",
			"letterDesc": "人口普查",
			"connentDesc": "中国的就业人口包括在城乡全民所有制、集体所有制和个体所有制就业的全部人口",
			"author": "栎迷",
			"time": "2010-03-26"
		}, {
			"themesliImg": "./src/assets/12_260.png",
			"titleDesc": "全球人口",
			"letterDesc": "人口普查",
			"connentDesc": "世界人口，是指世界（地球）上在某一时刻的人口总和。根据美国人口调查局的估计",
			"author": "楚慧琴",
			"time": "2011-02-21"
		}],
		"details4": [{
			"themesliImg": "./src/assets/260.png",
			"titleDesc": "全球航线",
			"letterDesc": "交通",
			"connentDesc": "该航线指东南亚国家、中国、东北亚国家各港，沿大圆航线横渡北太平洋至美、加西海岸各港",
			"author": "李浩",
			"time": "2012-07-25"
		}, {
			"themesliImg": "./src/assets/10_260.png",
			"titleDesc": "全国火车站",
			"letterDesc": "交通",
			"connentDesc": "中国的全国火车站分布均匀",
			"author": "陈杰",
			"time": "2015-07-14"
		}, {
			"themesliImg": "./src/assets/01_260.png",
			"titleDesc": "北京市公交线路密度分布",
			"letterDesc": "交通",
			"connentDesc": "北京市的地面套交比较爱速，近年来更是取得长足的发展，但仍存在线珞长度总体偏 大",
			"author": "胡小林",
			"time": "2015-03-25"
		}],
		"details5": [{
			"themesliImg": "./src/assets/06_260.png",
			"titleDesc": "北京地质灾害",
			"letterDesc": "自然灾害",
			"connentDesc": "地质灾害是指因自然因素或者人为活动引发的、危害人民生命和财产安全的、与地质作用有关的灾害",
			"author": "吴华林",
			"time": "2013-07-23"
		}, {
			"themesliImg": "./src/assets/09_260.png",
			"titleDesc": "全球地震分布",
			"letterDesc": "自然灾害",
			"connentDesc": "根据全球构造板块学说，地壳被一些构造活动带分割为彼此相对运动的板块，板块当中有的块大，有的块小",
			"author": "罗浮艳",
			"time": "2017-07-04"
		}],
		"details6": [{
			"themesliImg": "./src/assets/02_260.png",
			"titleDesc": "天津爆炸",
			"letterDesc": "社会焦点",
			"connentDesc": "天津滨海新区第五大街与跃进路交叉口的一处集装箱码头发生爆炸",
			"author": "wanglei",
			"time": "2015-08-12"
		}],
		"details7": [{
			"themesliImg": "./src/assets/115_260.png",
			"titleDesc": "成都3D图",
			"letterDesc": "智慧城市",
			"connentDesc": "成都三维地图成都天气 成都七天天气 成都空气质量 全屏 成都热门公交查询",
			"author": "李海龙",
			"time": "2015-05-05"
		}],
		"details8": [{
			"themesliImg": "./src/assets/15_260.png",
			"titleDesc": "西藏-川藏公路",
			"letterDesc": "街景",
			"connentDesc": "南线由四川成都、雅安、泸定、康定、东俄洛、雅江、理塘、巴塘，西藏芒康、左贡、邦达、八宿、波密、林芝八一镇",
			"author": "谢周清",
			"time": "2013-05-05"
		}]
	};

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "data.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _reactRouterDom = __webpack_require__(190);

	var _landing = __webpack_require__(234);

	var _landing2 = _interopRequireDefault(_landing);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	//账号登陆
	var Userland = function (_Component) {
		_inherits(Userland, _Component);

		function Userland() {
			_classCallCheck(this, Userland);

			return _possibleConstructorReturn(this, (Userland.__proto__ || Object.getPrototypeOf(Userland)).apply(this, arguments));
		}

		_createClass(Userland, [{
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					null,
					_react2.default.createElement(
						'div',
						{ className: _landing2.default["input-chunk"] },
						_react2.default.createElement('img', { src: './src/assets/user.png' }),
						_react2.default.createElement('input', { type: 'text', name: '', placeholder: '\u90AE\u7BB1/\u7528\u6237\u540D' })
					),
					_react2.default.createElement(
						'div',
						{ className: _landing2.default["input-chunk"] },
						_react2.default.createElement('img', { src: './src/assets/password.png' }),
						_react2.default.createElement('input', { type: 'password', name: '', placeholder: '\u5BC6\u7801' })
					)
				);
			}
		}]);

		return Userland;
	}(_react.Component);
	//手机号登陆


	var PhoneLand = function (_Component2) {
		_inherits(PhoneLand, _Component2);

		function PhoneLand() {
			_classCallCheck(this, PhoneLand);

			return _possibleConstructorReturn(this, (PhoneLand.__proto__ || Object.getPrototypeOf(PhoneLand)).apply(this, arguments));
		}

		_createClass(PhoneLand, [{
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					null,
					_react2.default.createElement(
						'div',
						{ className: _landing2.default["input-chunk"] },
						_react2.default.createElement('img', { src: './src/assets/phone.png' }),
						_react2.default.createElement('input', { type: 'number', name: '', placeholder: '\u624B\u673A\u53F7\u7801' })
					),
					_react2.default.createElement(
						'div',
						{ className: _landing2.default["msg-chunk"] },
						_react2.default.createElement(
							'div',
							{ className: _landing2.default["input-chunk"] + ' ' + _landing2.default["msg-test"] },
							_react2.default.createElement('img', { src: './src/assets/msg.png' }),
							_react2.default.createElement('input', { type: 'number', name: '', placeholder: '\u77ED\u4FE1\u9A8C\u8BC1\u7801' })
						),
						_react2.default.createElement(
							'p',
							null,
							'\u83B7\u53D6\u9A8C\u8BC1\u7801'
						)
					)
				);
			}
		}]);

		return PhoneLand;
	}(_react.Component);

	var Tabland = function (_Component3) {
		_inherits(Tabland, _Component3);

		function Tabland() {
			_classCallCheck(this, Tabland);

			return _possibleConstructorReturn(this, (Tabland.__proto__ || Object.getPrototypeOf(Tabland)).apply(this, arguments));
		}

		_createClass(Tabland, [{
			key: 'render',
			value: function render() {
				if (this.props.istabland) {
					return _react2.default.createElement(Userland, null);
				} else {
					return _react2.default.createElement(PhoneLand, null);
				}
			}
		}]);

		return Tabland;
	}(_react.Component);
	//登陆界面


	var Landing = function (_Component4) {
		_inherits(Landing, _Component4);

		function Landing(props) {
			_classCallCheck(this, Landing);

			var _this4 = _possibleConstructorReturn(this, (Landing.__proto__ || Object.getPrototypeOf(Landing)).call(this, props));

			_this4.state = {
				landType: true
			};
			return _this4;
		}

		_createClass(Landing, [{
			key: 'userType',
			value: function userType(event) {
				this.setState({ landType: true });
				event.target.style.color = '#009999';
				event.target.nextSibling.nextSibling.style.color = '#fff';
			}
		}, {
			key: 'phoneType',
			value: function phoneType(event) {
				this.setState({ landType: false });
				event.target.style.color = '#009999';
				event.target.previousSibling.previousSibling.style.color = '#fff';
			}
		}, {
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					{ className: _landing2.default["land-container"] },
					_react2.default.createElement(
						'div',
						{ className: _landing2.default["land-header"] },
						_react2.default.createElement('img', { src: './src/assets/logo.png' }),
						_react2.default.createElement(
							'span',
							null,
							'GEOVIS LAB'
						),
						_react2.default.createElement(
							_reactRouterDom.Link,
							{ to: '/' },
							'\u8FD4\u56DE\u9996\u9875'
						)
					),
					_react2.default.createElement('img', { className: _landing2.default["landlogo-img"], src: './src/assets/landlogo.png' }),
					_react2.default.createElement(
						'article',
						null,
						_react2.default.createElement(
							'div',
							{ className: _landing2.default["title-tab"] },
							_react2.default.createElement(
								'p',
								{ onClick: this.userType.bind(this) },
								'\u8D26\u53F7\u767B\u9646'
							),
							_react2.default.createElement(
								'p',
								null,
								'|'
							),
							_react2.default.createElement(
								'p',
								{ onClick: this.phoneType.bind(this) },
								'\u624B\u673A\u767B\u9646'
							)
						),
						_react2.default.createElement(Tabland, { istabland: this.state.landType }),
						_react2.default.createElement(
							'p',
							{ className: _landing2.default["on-land"] },
							'\u767B\u9646'
						),
						_react2.default.createElement(
							'div',
							{ className: _landing2.default["foot-tab"] },
							_react2.default.createElement(
								'p',
								null,
								'\u5FD8\u8BB0\u5BC6\u7801?'
							),
							_react2.default.createElement(
								'p',
								null,
								'|'
							),
							_react2.default.createElement(
								'p',
								null,
								'\u6CE8\u518C\u8D26\u53F7'
							)
						),
						_react2.default.createElement(
							'div',
							{ className: _landing2.default["foot-split"] },
							_react2.default.createElement('div', null),
							_react2.default.createElement(
								'p',
								null,
								'\u4F7F\u7528\u7B2C\u4E09\u65B9\u8D26\u53F7\u767B\u9646'
							),
							_react2.default.createElement('div', null)
						),
						_react2.default.createElement(
							'div',
							{ className: _landing2.default["foot-icon"] },
							_react2.default.createElement('img', { src: './src/assets/webo.png' }),
							_react2.default.createElement('img', { src: './src/assets/wechat.png' }),
							_react2.default.createElement('img', { src: './src/assets/qq.png' })
						)
					)
				);
			}
		}]);

		return Landing;
	}(_react.Component);

	exports.default = Landing;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(235);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./landing.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./landing.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, ".MGkK93aBxiZSoscTPDB2b{width:100%;height:1000px;background:url('./src/assets/landgb.png');}\r\n._39W8g5qRnmIJvFxCrD3ZUU{width:100%;margin:0 auto;line-height: 50px;color: white;padding-top: 100px;}\r\n._39W8g5qRnmIJvFxCrD3ZUU img{width:30px;margin-top: 11px;margin-left: 200px;}\r\n._39W8g5qRnmIJvFxCrD3ZUU span{font-size:22px;}\r\n._39W8g5qRnmIJvFxCrD3ZUU p{float: right;}\r\n._39W8g5qRnmIJvFxCrD3ZUU a{float: right;font-size: 16px;color: white;padding:0px 200px 0px 0px;}\r\n._2n9aPx4ZRtFm2P3vY2kLBR p:nth-child(1){color:#009999;}\r\n._2n9aPx4ZRtFm2P3vY2kLBR{width:420px;height:45px;line-height: 55px;color: white;padding-left: 50px;}\r\n._2n9aPx4ZRtFm2P3vY2kLBR p{float: left;font-size: 22px;padding-left: 30px;}\r\narticle{width:420px;height:620px;float: right;margin:150px 240px 0px 0px;cursor: pointer;}\r\narticle img{width:30px;margin:7px 10px;}\r\narticle input{width:360px;height:100%;font-size: 16px;}\r\narticle > div{height:140px;}\r\n._398Z8jRhK5qhAiT-cWdwpH{width:420px;height:45px;background: white;border-radius: 3px;margin-top:25px;}\r\n.IzfsK8SVCWbdqGrxUB_-Q{width:260px;float: left;}\r\n.IzfsK8SVCWbdqGrxUB_-Q input{width:200px;}\r\n.TD2dllITFAX2DCGTQxD6Z p{width:150px;height:45px;background:red;float: right;margin-top:25px;border-radius: 3px;background: linear-gradient(to right, #6eda9f, #60ceca);line-height: 45px;text-align:center;color: white;font-size:18px;}\r\n._2equnVrTmMstktcPAdUMo_{width:420px;height:45px;line-height: 45px;text-align:center;color: white;font-size: 24px;background: linear-gradient(to right, #6eda9f, #60ceca);border-radius: 3px;}\r\n._1P3PJztkaVFxU11iR47omW{width:420px;height:65px;line-height: 55px;color: white;padding-left: 120px;color:#959595;font-size:16px;}\r\n._1P3PJztkaVFxU11iR47omW p{float: left;padding-left: 10px;}\r\n._1P3PJztkaVFxU11iR47omW p:nth-child(2){color:#aeaeae}\r\n._9kg8wQPjwZ0s_c5C4dHFW{height: 30px}\r\n._9kg8wQPjwZ0s_c5C4dHFW div{float: left;width:120px;height:1px;background: #6e787d;}\r\n._9kg8wQPjwZ0s_c5C4dHFW p{float: left;line-height: 1px;font-size: 18px;color: white;padding: 0px 8px;}\r\n._2q19suzSU3wmJOkwiBvRC7{padding-left: 110px;}\r\n._2q19suzSU3wmJOkwiBvRC7 img{width: 45px;}\r\n._398Z8jRhK5qhAiT-cWdwpH input{padding: 0}\r\n._1YvhpCNwBnXkrviswl6tpj{width: 680px;margin-left: 200px;}\r\n@media screen and (max-width: 1366px) {\r\n\t.MGkK93aBxiZSoscTPDB2b{height: 800px;}\r\n    ._1YvhpCNwBnXkrviswl6tpj{width: 420px;}\r\n    article{margin-top: 40px;margin-right: 185px;height: 400px;}\r\n}\r\n@media screen and (max-width: 900px) {\r\n\t.MGkK93aBxiZSoscTPDB2b{height: 1210px;}\r\n\t._39W8g5qRnmIJvFxCrD3ZUU img{margin-left: 180px;}\r\n\t._39W8g5qRnmIJvFxCrD3ZUU a{padding-right: 185px;}\r\n}", ""]);

	// exports
	exports.locals = {
		"land-container": "MGkK93aBxiZSoscTPDB2b",
		"land-header": "_39W8g5qRnmIJvFxCrD3ZUU",
		"title-tab": "_2n9aPx4ZRtFm2P3vY2kLBR",
		"input-chunk": "_398Z8jRhK5qhAiT-cWdwpH",
		"msg-test": "IzfsK8SVCWbdqGrxUB_-Q",
		"msg-chunk": "TD2dllITFAX2DCGTQxD6Z",
		"on-land": "_2equnVrTmMstktcPAdUMo_",
		"foot-tab": "_1P3PJztkaVFxU11iR47omW",
		"foot-split": "_9kg8wQPjwZ0s_c5C4dHFW",
		"foot-icon": "_2q19suzSU3wmJOkwiBvRC7",
		"landlogo-img": "_1YvhpCNwBnXkrviswl6tpj"
	};

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _reactRouterDom = __webpack_require__(190);

	var _themeHead = __webpack_require__(237);

	var _themeHead2 = _interopRequireDefault(_themeHead);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var toolsList = [{
	    img: './src/assets/liangce.png',
	    name: '量测'
	}, {
	    img: './src/assets/biaohui.png',
	    name: '标绘'
	}, {
	    img: './src/assets/chutu.png',
	    name: '出图'
	}, {
	    img: './src/assets/qingchu.png',
	    name: '清除'
	}, {
	    img: './src/assets/allmovies.png',
	    name: '全屏'
	}];
	var toolsList2 = [{
	    img: './src/assets/liangce.png',
	    name: '量测'
	}, {
	    img: './src/assets/biaohui.png',
	    name: '标绘'
	}, {
	    img: './src/assets/chutu.png',
	    name: '出图'
	}, {
	    img: './src/assets/qingchu.png',
	    name: '清除'
	}, {
	    img: './src/assets/allmovies.png',
	    name: '退出全屏'
	}];

	var ToolsList = function (_Component) {
	    _inherits(ToolsList, _Component);

	    function ToolsList(props) {
	        _classCallCheck(this, ToolsList);

	        var _this = _possibleConstructorReturn(this, (ToolsList.__proto__ || Object.getPrototypeOf(ToolsList)).call(this, props));

	        _this.state = {
	            toolItem: toolsList
	        };
	        return _this;
	    }

	    _createClass(ToolsList, [{
	        key: 'toolFun',
	        value: function toolFun(obj) {
	            var name = obj.name;
	            switch (name) {
	                case '量测':

	                    break;
	                case '标绘':

	                    break;
	                case '出图':

	                    break;
	                case '清除':

	                    break;
	                case '全屏':
	                    this.setState({ toolItem: toolsList2 });
	                    //根节点
	                    var docElm = document.documentElement;
	                    if (docElm.requestFullscreen) {
	                        docElm.requestFullscreen();
	                    } else if (docElm.mozRequestFullScreen) {
	                        docElm.mozRequestFullScreen();
	                    } else if (docElm.webkitRequestFullScreen) {
	                        docElm.webkitRequestFullScreen();
	                    } else if (docElm.msRequestFullscreen) {
	                        docElm.msRequestFullscreen();
	                    }
	                    break;
	                case '退出全屏':
	                    this.setState({ toolItem: toolsList });
	                    if (document.exitFullscreen) {
	                        document.exitFullscreen();
	                    } else if (document.mozCancelFullScreen) {
	                        document.mozCancelFullScreen();
	                    } else if (document.webkitCancelFullScreen) {
	                        document.webkitCancelFullScreen();
	                    } else if (document.msExitFullscreen) {
	                        document.msExitFullscreen();
	                    }
	                    break;
	                default:
	                    alert('无此按钮');
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            return _react2.default.createElement(
	                'ul',
	                { className: _themeHead2.default["tools-ul"] },
	                this.state.toolItem.map(function (val, index) {
	                    return _react2.default.createElement(
	                        'li',
	                        { key: index, onClick: _this2.toolFun.bind(_this2, val) },
	                        _react2.default.createElement('img', { alt: '', src: val.img }),
	                        _react2.default.createElement(
	                            'span',
	                            null,
	                            val.name
	                        )
	                    );
	                })
	            );
	        }
	    }]);

	    return ToolsList;
	}(_react.Component);

	var ThemeHead = function (_Component2) {
	    _inherits(ThemeHead, _Component2);

	    function ThemeHead() {
	        _classCallCheck(this, ThemeHead);

	        return _possibleConstructorReturn(this, (ThemeHead.__proto__ || Object.getPrototypeOf(ThemeHead)).apply(this, arguments));
	    }

	    _createClass(ThemeHead, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _themeHead2.default["themes-header"] },
	                _react2.default.createElement(
	                    _reactRouterDom.Link,
	                    { to: '/smartGPhone' },
	                    _react2.default.createElement('img', { src: './src/assets/globalsmartg1.png' }),
	                    _react2.default.createElement(
	                        'div',
	                        { className: _themeHead2.default["themes-goHome"] },
	                        _react2.default.createElement(
	                            'p',
	                            null,
	                            '\u5C0FG'
	                        ),
	                        _react2.default.createElement(
	                            'p',
	                            null,
	                            'GV Lab'
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { onClick: this.props.actionTool, className: _themeHead2.default["tool-slide"] },
	                    _react2.default.createElement('img', { alt: 'gotool', src: './src/assets/themeslist.png' })
	                )
	            );
	        }
	    }]);

	    return ThemeHead;
	}(_react.Component);

	exports.default = ThemeHead;

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(238);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./themeHead.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./themeHead.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._1KwwHR9nWPZPBVb0kxY8La{width: 100%;height: 50px;background: #353f42;line-height: 50px;font-size: 16px;color: white;   position: absolute;\r\n    z-index: 11;}\r\n._1KwwHR9nWPZPBVb0kxY8La a {color: white;display: inline-block;}\r\n._1KwwHR9nWPZPBVb0kxY8La a img{width: 25px; margin:12px 4px 0px 15px;}\r\n._1KwwHR9nWPZPBVb0kxY8La p{float: left;}\r\n._3-IuPj_euqcpoEDBgpjM7z{float: right;margin-right: 30px}\r\n._3-IuPj_euqcpoEDBgpjM7z li{float: left;margin-left: 45px;}\r\n._3-IuPj_euqcpoEDBgpjM7z li img{float: left;margin: 18px 5px 0px 0px}\r\n\r\n._2cl8fntfoLTSnyYC4-t6QM{    float: right;\r\n    width: 30px;\r\n    height: 26px;border:1px solid #ccc;\r\n    border-color: #353F42;\r\n    background: none;border-radius: 3px;\r\n    margin: 14px 19px 0px 0px;}\r\n._2cl8fntfoLTSnyYC4-t6QM img{width: 18px;   padding: 6px;}\r\n.B6CxAsND6j04N6RDh4KnA{display: inline-block;height: 100%;    line-height: 43px;}\r\n.B6CxAsND6j04N6RDh4KnA p{\r\n\tfloat: none;\r\n\theight: 10px;\r\n}\r\n.B6CxAsND6j04N6RDh4KnA p:first-child{font-size: 15px;color: #069BCC;}\r\n.B6CxAsND6j04N6RDh4KnA p:last-child{font-size: 12px;    line-height: 50px;}", ""]);

	// exports
	exports.locals = {
		"themes-header": "_1KwwHR9nWPZPBVb0kxY8La",
		"tools-ul": "_3-IuPj_euqcpoEDBgpjM7z",
		"tool-slide": "_2cl8fntfoLTSnyYC4-t6QM",
		"themes-goHome": "B6CxAsND6j04N6RDh4KnA"
	};

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _smartg = __webpack_require__(240);

	var _smartg2 = _interopRequireDefault(_smartg);

	var _data = __webpack_require__(232);

	var _data2 = _interopRequireDefault(_data);

	var _globalPerson = __webpack_require__(242);

	var _globalPerson2 = _interopRequireDefault(_globalPerson);

	var _tianJinExplosion = __webpack_require__(247);

	var _tianJinExplosion2 = _interopRequireDefault(_tianJinExplosion);

	var _globalPolyline = __webpack_require__(252);

	var _globalPolyline2 = _interopRequireDefault(_globalPolyline);

	var _chinaTrain = __webpack_require__(254);

	var _chinaTrain2 = _interopRequireDefault(_chinaTrain);

	var _beijingDisaster = __webpack_require__(255);

	var _beijingDisaster2 = _interopRequireDefault(_beijingDisaster);

	var _globalSeismic = __webpack_require__(257);

	var _globalSeismic2 = _interopRequireDefault(_globalSeismic);

	var _educationCollage = __webpack_require__(258);

	var _educationCollage2 = _interopRequireDefault(_educationCollage);

	var _educationMiddleschool = __webpack_require__(259);

	var _educationMiddleschool2 = _interopRequireDefault(_educationMiddleschool);

	var _educationPrimaryschool = __webpack_require__(260);

	var _educationPrimaryschool2 = _interopRequireDefault(_educationPrimaryschool);

	var _educationKindergarten = __webpack_require__(261);

	var _educationKindergarten2 = _interopRequireDefault(_educationKindergarten);

	var _educationTechnicalschool = __webpack_require__(262);

	var _educationTechnicalschool2 = _interopRequireDefault(_educationTechnicalschool);

	var _beijingBus = __webpack_require__(263);

	var _beijingBus2 = _interopRequireDefault(_beijingBus);

	var _Karpersky = __webpack_require__(264);

	var _Karpersky2 = _interopRequireDefault(_Karpersky);

	var _chengdu = __webpack_require__(265);

	var _chengdu2 = _interopRequireDefault(_chengdu);

	var _volcano = __webpack_require__(266);

	var _volcano2 = _interopRequireDefault(_volcano);

	var _chinaPerson = __webpack_require__(268);

	var _chinaPerson2 = _interopRequireDefault(_chinaPerson);

	var _chinaOldPerson = __webpack_require__(278);

	var _chinaOldPerson2 = _interopRequireDefault(_chinaOldPerson);

	var _chinaWorker = __webpack_require__(279);

	var _chinaWorker2 = _interopRequireDefault(_chinaWorker);

	var _personGlobal = __webpack_require__(280);

	var _personGlobal2 = _interopRequireDefault(_personGlobal);

	var _detail = __webpack_require__(275);

	var _detail2 = _interopRequireDefault(_detail);

	var _sinkiangPanorama = __webpack_require__(281);

	var _sinkiangPanorama2 = _interopRequireDefault(_sinkiangPanorama);

	var _TibetPanorama = __webpack_require__(287);

	var _TibetPanorama2 = _interopRequireDefault(_TibetPanorama);

	var _OgasawaraIslands = __webpack_require__(290);

	var _OgasawaraIslands2 = _interopRequireDefault(_OgasawaraIslands);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	// import createFragment from 'react-addons-create-fragment';


	//单个专题的list
	var SingerList = function (_Component) {
	    _inherits(SingerList, _Component);

	    function SingerList() {
	        _classCallCheck(this, SingerList);

	        return _possibleConstructorReturn(this, (SingerList.__proto__ || Object.getPrototypeOf(SingerList)).apply(this, arguments));
	    }

	    _createClass(SingerList, [{
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            return _react2.default.createElement(
	                'ul',
	                { className: this.props.class },
	                this.props.lists.map(function (con) {
	                    return _react2.default.createElement(
	                        'li',
	                        { key: con.name },
	                        _react2.default.createElement('input', { id: con.name, type: 'checkbox', onClick: _this2.props.checkboxEvent, value: con.name, className: _smartg2.default["smartgInput-li"] }),
	                        _react2.default.createElement('img', { onClick: _this2.props.checkboxEvent, className: _smartg2.default["smartgInput-liImg"], src: con.img }),
	                        _react2.default.createElement(
	                            'label',
	                            { className: _smartg2.default['label-input'], htmlFor: con.name },
	                            con.name
	                        )
	                    );
	                })
	            );
	        }
	    }]);

	    return SingerList;
	}(_react.Component);
	//专题列表


	var ListChunk = function (_Component2) {
	    _inherits(ListChunk, _Component2);

	    function ListChunk(props) {
	        _classCallCheck(this, ListChunk);

	        var _this3 = _possibleConstructorReturn(this, (ListChunk.__proto__ || Object.getPrototypeOf(ListChunk)).call(this, props));

	        _this3.state = {
	            isActive: _smartg2.default['themes-mainLi'],
	            lists: ['全部11', '全部22', '全部33', '全部44', '全部55'],
	            liChild: _smartg2.default['themes-mainLi-child']
	        };
	        return _this3;
	    }

	    _createClass(ListChunk, [{
	        key: 'slideDown',
	        value: function slideDown(event) {
	            if (event.target.className === _smartg2.default['themes-mainLi']) {
	                event.target.className = _smartg2.default.activeStyle + ' ' + _smartg2.default['themes-mainLi'];
	                event.target.nextSibling.className = '';
	            } else {
	                event.target.className = '' + _smartg2.default['themes-mainLi'];
	                event.target.nextSibling.className = '' + _smartg2.default['themes-mainLi-child'];
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'ul',
	                null,
	                _react2.default.createElement(
	                    'li',
	                    { className: this.state.isActive, onClick: this.slideDown.bind(this) },
	                    this.props.title
	                ),
	                _react2.default.createElement(SingerList, { lists: this.props.lists, 'class': this.state.liChild, checkboxEvent: this.props.checkEvents })
	            );
	        }
	    }]);

	    return ListChunk;
	}(_react.Component);

	var SmartG = function (_Component3) {
	    _inherits(SmartG, _Component3);

	    function SmartG(props) {
	        _classCallCheck(this, SmartG);

	        var _this4 = _possibleConstructorReturn(this, (SmartG.__proto__ || Object.getPrototypeOf(SmartG)).call(this, props));

	        _this4.state = {
	            isGoLeft: true,
	            smartgInputMove: _smartg2.default['smartgInputMoveL'] + ' ' + _smartg2.default['smartg-input'] + ' ' + _smartg2.default['fl'],
	            isGoDown: _smartg2.default['isMainVisble'] + ' ' + _smartg2.default['smartg-list'],
	            checkedArr: [],
	            data: _data2.default.details1,
	            title: '社会焦点',
	            themesTitles: [{ title: '社会焦点', lists: [{ name: '天津爆炸微博评论', img: './src/assets/02_30.png' }] }, { title: '学校分布', lists: [{ name: '全国大学分布', img: './src/assets/0.png' }, { name: '北京中学分布', img: './src/assets/07_30.png' }, { name: '全国主要城市小学分布', img: './src/assets/03_30.png' }, { name: '全国主要城市幼儿园分布', img: './src/assets/04_30.png' }, { name: '全国技术院校分布', img: './src/assets/05_30.png' }] }, { title: '自然灾害', lists: [{ name: '北京地质灾害分布', img: './src/assets/06_300.png' }, { name: '全球地震分布', img: './src/assets/09_300.png' }, { name: '全球大地震事件', img: './src/assets/dizheng.png' }] }, { title: '交通', lists: [{ name: '全球航线', img: './src/assets/30.png' }, { name: '全国火车站', img: './src/assets/10_30.png' }, { name: '北京市公交线路密度分布', img: './src/assets/01_30.png' }] }, { title: '人口普查', lists: [{ name: '1970年全球人口数据', img: './src/assets/11_30.png' }, { name: '全球人口', img: './src/assets/12_30.png' }, { name: '中国人口', img: './src/assets/13_30.png' }, { name: '中国老年人口比例', img: './src/assets/14_30.png' }, { name: '中国就业人口', img: './src/assets/08_30.png' }] }, { title: '街景', lists: [{ name: '西藏-川藏公路', img: './src/assets/15-30.png' }, { name: '新疆-新藏公路', img: './src/assets/xinjiang.png' }, { name: '三亚-三亚湾路', img: './src/assets/0.png' }, { name: '日本-小笠原诸島-父島', img: './src/assets/0.png' }] }, { title: '国土', lists: [{ name: '国土11', img: './src/assets/0.png' }, { name: '国土22', img: './src/assets/0.png' }, { name: '国土33', img: './src/assets/0.png' }] }, { title: '气象', lists: [{ name: '气象11', img: './src/assets/0.png' }, { name: '气象22', img: './src/assets/0.png' }] }, { title: '智慧城市', lists: [{ name: '成都3D图', img: './src/assets/chengdu.png' }] }, { title: '网络', lists: [{ name: '网络攻击示意', img: './src/assets/0.png' }] }],
	            themesContent: [{ title: '社会焦点', lists: [_react2.default.createElement(_tianJinExplosion2.default, null)] }, { title: '学校分布', lists: [_react2.default.createElement(_educationCollage2.default, null), _react2.default.createElement(_educationMiddleschool2.default, null), _react2.default.createElement(_educationPrimaryschool2.default, null), _react2.default.createElement(_educationKindergarten2.default, null), _react2.default.createElement(_educationTechnicalschool2.default, null)] }, { title: '自然灾害', lists: [_react2.default.createElement(_beijingDisaster2.default, null), _react2.default.createElement(_globalSeismic2.default, null), _react2.default.createElement(_volcano2.default, null)] }, { title: '交通', lists: [_react2.default.createElement(_globalPolyline2.default, null), _react2.default.createElement(_chinaTrain2.default, null), _react2.default.createElement(_beijingBus2.default, null)] }, { title: '人口普查', lists: [_react2.default.createElement(_globalPerson2.default, null), _react2.default.createElement(_personGlobal2.default, null), _react2.default.createElement(_chinaPerson2.default, null), _react2.default.createElement(_chinaOldPerson2.default, null), _react2.default.createElement(_chinaWorker2.default, null)] }, { title: '街景', lists: [_react2.default.createElement(_TibetPanorama2.default, null), _react2.default.createElement(_sinkiangPanorama2.default, null), '三亚-三亚湾路', _react2.default.createElement(_OgasawaraIslands2.default, null)] }, { title: '国土', lists: ['国土11', '国土22', '国土33'] }, { title: '气象', lists: ['气象11', '气象22'] }, { title: '智慧城市', lists: [_react2.default.createElement(_chengdu2.default, null)] }, { title: '网络', lists: [_react2.default.createElement(_Karpersky2.default, null)] }],
	            currentTheme: ''
	        };
	        return _this4;
	    }

	    _createClass(SmartG, [{
	        key: 'goRight',
	        value: function goRight() {
	            if (this.state.smartgInputMove === _smartg2.default['smartgInputMoveL'] + ' ' + _smartg2.default['smartg-input'] + ' ' + _smartg2.default['fl']) {
	                this.setState({ smartgInputMove: _smartg2.default['smartgInputMoveR'] + ' ' + _smartg2.default['smartg-input'] + ' ' + _smartg2.default['fl'] });
	                document.querySelector('.' + _smartg2.default['checked-item']).style.display = 'block';
	            } else {
	                this.setState({ smartgInputMove: _smartg2.default['smartgInputMoveL'] + ' ' + _smartg2.default['smartg-input'] + ' ' + _smartg2.default['fl'] });
	                document.querySelector('.' + _smartg2.default['checked-item']).style.display = 'none';
	            }
	            //针对下面的list部分
	            if (this.state.isGoDown === _smartg2.default['smartg-list']) {
	                this.setState({ isGoDown: _smartg2.default['isMainVisble'] + ' ' + _smartg2.default['smartg-list'] });
	            }
	        }
	    }, {
	        key: 'goDown',
	        value: function goDown() {
	            if (this.state.isGoDown === _smartg2.default['isMainVisble'] + ' ' + _smartg2.default['smartg-list']) {
	                this.setState({ isGoDown: '' + _smartg2.default['smartg-list'] });
	            } else {
	                this.setState({ isGoDown: _smartg2.default['isMainVisble'] + ' ' + _smartg2.default['smartg-list'] });
	            }
	        }
	    }, {
	        key: 'allChecked',
	        value: function allChecked() {
	            this.setState({ checkedArr: [] });
	            document.querySelectorAll('.' + _smartg2.default['smartgInput-li']).forEach(function (val, index) {
	                val.checked = false;
	            });
	        }
	    }, {
	        key: 'checkedEvents',
	        value: function checkedEvents() {
	            var re = this;
	            // if(re.state.checkedArr.length >= 5){
	            if (document.querySelectorAll('.' + _smartg2.default['smartgInput-li'] + ':checked').length > 5) {
	                document.querySelectorAll('.' + _smartg2.default['smartgInput-li'] + ':checked')[document.querySelectorAll('.' + _smartg2.default['smartgInput-li'] + ':checked').length - 1].checked = false;
	                alert("最多显示五个");
	            } else {
	                re.state.checkedArr = [];
	                var checkeds = document.querySelectorAll('.' + _smartg2.default['smartgInput-li'] + ':checked');
	                checkeds.forEach(function (val, index) {
	                    re.state.checkedArr.push(val.value);
	                });
	                re.setState({ checkedArr: re.state.checkedArr });
	            }
	        }
	    }, {
	        key: 'removeChecked',
	        value: function removeChecked(msg, event) {
	            //与多选列表中li联动
	            this.state.checkedArr.splice(this.state.checkedArr.indexOf(msg), 1);
	            this.setState({ checkedArr: this.state.checkedArr });
	            document.querySelectorAll('.' + _smartg2.default['smartgInput-li'] + ':checked').forEach(function (val, index) {
	                if (val.value === msg) {
	                    val.checked = false;
	                }
	            });
	            //点击删除专题
	            console.log(event.target.parentNode.style.background);
	            if (event.target.parentNode.style.background == 'rgb(0, 152, 153)') {
	                this.setState({ currentTheme: '' });
	            }
	        }
	    }, {
	        key: 'slideUp',
	        value: function slideUp() {
	            this.setState({ liChild: _smartg2.default['themes-mainLi-child'] });
	            for (var i = 0; i < document.querySelectorAll('.' + _smartg2.default['themes-main'] + ' > ' + 'ul' + ' > ' + 'ul').length; i++) {
	                document.querySelectorAll('.' + _smartg2.default['themes-main'] + ' > ' + 'ul' + ' > ' + 'ul')[i].className = '' + _smartg2.default['themes-mainLi-child'];
	                document.querySelectorAll('.' + _smartg2.default['themes-main'] + ' > ' + 'ul' + ' > ' + 'li')[i].className = '' + _smartg2.default['themes-mainLi'];
	            }
	        }
	    }, {
	        key: 'addEffect',
	        value: function addEffect(event) {
	            var re = this;
	            //改变当前选中样式
	            for (var e = 0; e < document.querySelectorAll('.' + _smartg2.default['checked-li']).length; e++) {
	                document.querySelectorAll('.' + _smartg2.default['checked-li'])[e].style.background = '#ebebeb';
	                document.querySelectorAll('.' + _smartg2.default['checked-li'])[e].style.color = '#818181';
	            }
	            event.target.parentNode.style.background = '#009899';
	            event.target.parentNode.style.color = 'white';
	            //添加当前专题        
	            this.state.themesTitles.map(function (val, index) {
	                val.lists.map(function (value, item) {
	                    if (value.name === event.target.innerText) {
	                        re.props.onsmartg(event);
	                        re.setState({ currentTheme: re.state.themesContent[index].lists[item] });
	                    }
	                });
	            });
	            //多选列表收起来
	            this.setState({ isGoDown: _smartg2.default['isMainVisble'] + ' ' + _smartg2.default['smartg-list'] });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this5 = this;

	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'div',
	                    { className: _smartg2.default["smartg-main"] },
	                    _react2.default.createElement(
	                        'div',
	                        { className: _smartg2.default["smartg-logo"] + ' ' + _smartg2.default.fl + ' ', onClick: this.goRight.bind(this) },
	                        _react2.default.createElement('img', { src: './src/assets/globalsmartg1.png' })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: this.state.smartgInputMove },
	                        _react2.default.createElement('input', { placeholder: '\u8BF7\u8F93\u5165\u5173\u952E\u5B57' }),
	                        _react2.default.createElement(
	                            'div',
	                            { className: _smartg2.default["fr"], onClick: this.goDown.bind(this) },
	                            _react2.default.createElement('img', { src: './src/assets/themeslist.png' })
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: this.state.isGoDown },
	                        _react2.default.createElement(
	                            'div',
	                            { className: _smartg2.default["ulList-title"] },
	                            _react2.default.createElement(
	                                'span',
	                                null,
	                                '\u4E13\u9898'
	                            ),
	                            _react2.default.createElement(
	                                'p',
	                                { className: _smartg2.default["fr"], onClick: this.allChecked.bind(this) },
	                                '\u6E05\u9664\u9009\u62E9'
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: _smartg2.default["themes-main"] },
	                            this.state.themesTitles.map(function (val) {
	                                return _react2.default.createElement(ListChunk, { title: val.title, lists: val.lists, checkEvents: _this5.checkedEvents.bind(_this5), key: val.title.toString() });
	                            })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: _smartg2.default['bottom-slide'], onClick: this.slideUp.bind(this) },
	                            _react2.default.createElement('img', { className: _smartg2.default['shouqi-png'], src: './src/assets/shouqi.png' })
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: _smartg2.default["checked-item"] },
	                    _react2.default.createElement(
	                        'ul',
	                        null,
	                        this.state.checkedArr.map(function (check) {
	                            return _react2.default.createElement(
	                                'li',
	                                { className: _smartg2.default["checked-li"], title: check, key: check.toString() },
	                                _react2.default.createElement(
	                                    'span',
	                                    { onClick: _this5.addEffect.bind(_this5) },
	                                    check
	                                ),
	                                _react2.default.createElement(
	                                    'span',
	                                    { onClick: _this5.removeChecked.bind(_this5, check) },
	                                    'X'
	                                )
	                            );
	                        })
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    this.state.currentTheme
	                )
	            );
	        }
	    }]);

	    return SmartG;
	}(_react.Component);

	exports.default = SmartG;

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(241);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./smartg.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./smartg.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._3wAQdKK9fMdTuEBDfwr6-o{float: left;}\r\n._1qt1EwUYc7Pt65HQtpuD9B{float: right;font-size: 13px;}\r\n._23VD9RXZi8bo9bNO3YC3Ay{width: 290px;height: 700px;position: absolute;border-radius: 5px;overflow: hidden;margin-left: 40px;margin-top: 80px;z-index: 10;}\r\n._2h0VR_HTo-GxiJ6RgNeX3k{width:60px;height: 40px;border:1px solid #b8b8b8;background: #ebebeb;position: absolute;z-index: 2;border-top-left-radius: 5px;border-bottom-left-radius: 5px;    box-sizing: border-box;}\r\n._2h0VR_HTo-GxiJ6RgNeX3k img{margin: 6px 0px 0px 18px;width: 23px}\r\n._1LAQMm-UK-ew-iOLMYXpFh{width: 230px;height: 40px;line-height: 40px;position: absolute;left:-200px;border:1px solid #b8b8b8;border-left-width: 0px;background: #ebebeb;border-top-right-radius: 5px;border-bottom-right-radius: 5px;    box-sizing: border-box;}\r\n._2luFbrutMMohDgLBiP-MdJ{\r\n\tanimation: _2luFbrutMMohDgLBiP-MdJ 0.5s forwards;\r\n}\r\n@keyframes _2luFbrutMMohDgLBiP-MdJ{\r\n\t0%{left: 60px;opacity: 1;}\r\n\t100%{left: -200px;opacity: 0;}\r\n}\r\n.uMfOWj3cZ3LAC2CuZxJdA{\r\n\tanimation: uMfOWj3cZ3LAC2CuZxJdA 0.5s forwards;\r\n}\r\n@keyframes uMfOWj3cZ3LAC2CuZxJdA{\r\n\t0%{left: -200px;opacity: 0;}\r\n\t100%{left: 60px;opacity: 1;}\r\n}\r\n._1LAQMm-UK-ew-iOLMYXpFh input{width:160px;height: 95%;font-size: 16px;border-right:1px solid #b8b8b8;text-indent: 10px;color: #333}\r\n._1LAQMm-UK-ew-iOLMYXpFh img{margin: 10px 16px 0px 14px}\r\n.p9Ycj5Woz38NhrjhzkHhB{width: 100%;height:650px;background: #ebebeb;position: absolute;top:41px;border-radius: 5px;}\r\n._1oS69OGiRRoHLwKyVnW0pI{display: none;}\r\n._1xRSKI93Op7U0VscWD8oHU{width:260px;height:40px;margin: 0 auto;line-height: 40px;color: #a1a1a1}\r\n._1xRSKI93Op7U0VscWD8oHU span{font-size: 16px;color: black;}\r\n._37UXN1JNGInKAh_4rPUxqz{width:260px;height: 570px;margin: 0 auto;overflow-y: scroll;line-height: 30px;    font-size: 15px;color: #1d334b;}\r\n._37UXN1JNGInKAh_4rPUxqz::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 50px 8px 1px none;\r\n    border-radius: 50px;\r\n    background-color: none;\r\n}\r\n._37UXN1JNGInKAh_4rPUxqz::-webkit-scrollbar{\r\n    width: 6px;\r\n    margin-top:6px;\r\n}\r\n._37UXN1JNGInKAh_4rPUxqz::-webkit-scrollbar-thumb{\r\n    background-color: #7d7d7d;\r\n}\t\r\n._37UXN1JNGInKAh_4rPUxqz ul{width: 250px;}\r\n._37UXN1JNGInKAh_4rPUxqz ul ul{text-indent: 10px;}\r\n._2xSJh18hB-ijtvhYYwdTH2{width:100%;height:35px;line-height:35px;background: #e2e0e0;text-align: center;font-size: 16px;background: #e2e0e0;    margin-bottom: 1px;}\r\n._2xSJh18hB-ijtvhYYwdTH2:hover{background: #009899;color: white;}\r\n._1VKFgsX-FmrBaf4EhcTdYE{background: #009899;color: white;}\r\n._2E83jOJ3c-HtmffPudk7pN{width:100%;display: none;background: #ebebeb;text-indent: 25px;}\r\n._2E83jOJ3c-HtmffPudk7pN li{width:100%;height:40px;line-height: 40px;text-align: left;font-size: 15px;}\r\n._27jyHjV_NpvDZ4DB3Qnjq2{width:100px;height: 35px;line-height: 35px;text-align: center; color: #818181;background: #ebebeb;font-size: 14px;border-radius: 5px;float: left;margin-left: 15px;cursor: pointer;margin-top: 10px;}\r\n._27jyHjV_NpvDZ4DB3Qnjq2 span{width:70px;display: inline-block; overflow: hidden;\r\n\ttext-overflow: ellipsis;\r\n    white-space: nowrap;}\r\n._27jyHjV_NpvDZ4DB3Qnjq2 span:last-child{width: 10px;cursor: pointer;}\r\n._27jyHjV_NpvDZ4DB3Qnjq2 img{width: 10px; margin: 13px 8px 0px 0px;float: right;}\r\n._2a-E50VLfXFkpfDbJ_YqzG{position: absolute;top: 73px;left: 345px;z-index: 10}\r\n.bIso2ZxIjURtGXeZLTmOS { color: #000; position: absolute;\r\n    width: 30px;\r\n    height: 30px;\r\n    opacity: 0;}\r\n    ._3caB6ZyzV5Z0ZSd1c8tlfD{    line-height: 40px;}\r\n.unEyZMS1uJClZDUvSeC0a{width: 30px;padding:5px;}\r\n.rO9v4Rm-yeLD9drpQ1wjE{margin: 15px 0px 0px 130px;}\r\n._3THq5jyG7BwCF6_iXU4S8H{height: 40px;}\r\n@media screen and (max-width: 1366px) {\r\n    ._23VD9RXZi8bo9bNO3YC3Ay {height: 550px;}\r\n    .p9Ycj5Woz38NhrjhzkHhB{height: 500px;}\r\n    ._37UXN1JNGInKAh_4rPUxqz{height: 420px;}\r\n}\r\n", ""]);

	// exports
	exports.locals = {
		"fl": "_3wAQdKK9fMdTuEBDfwr6-o",
		"fr": "_1qt1EwUYc7Pt65HQtpuD9B",
		"smartg-main": "_23VD9RXZi8bo9bNO3YC3Ay",
		"smartg-logo": "_2h0VR_HTo-GxiJ6RgNeX3k",
		"smartg-input": "_1LAQMm-UK-ew-iOLMYXpFh",
		"smartgInputMoveL": "_2luFbrutMMohDgLBiP-MdJ",
		"smartgInputMoveR": "uMfOWj3cZ3LAC2CuZxJdA",
		"smartg-list": "p9Ycj5Woz38NhrjhzkHhB",
		"isMainVisble": "_1oS69OGiRRoHLwKyVnW0pI",
		"ulList-title": "_1xRSKI93Op7U0VscWD8oHU",
		"themes-main": "_37UXN1JNGInKAh_4rPUxqz",
		"themes-mainLi": "_2xSJh18hB-ijtvhYYwdTH2",
		"activeStyle": "_1VKFgsX-FmrBaf4EhcTdYE",
		"themes-mainLi-child": "_2E83jOJ3c-HtmffPudk7pN",
		"checked-li": "_27jyHjV_NpvDZ4DB3Qnjq2",
		"checked-item": "_2a-E50VLfXFkpfDbJ_YqzG",
		"smartgInput-li": "bIso2ZxIjURtGXeZLTmOS",
		"label-input": "_3caB6ZyzV5Z0ZSd1c8tlfD",
		"smartgInput-liImg": "unEyZMS1uJClZDUvSeC0a",
		"shouqi-png": "rO9v4Rm-yeLD9drpQ1wjE",
		"bottom-slide": "_3THq5jyG7BwCF6_iXU4S8H"
	};

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _globalPersonData = __webpack_require__(243);

	var _globalPersonData2 = _interopRequireDefault(_globalPersonData);

	var _themeDesc = __webpack_require__(244);

	var _themeDesc2 = _interopRequireDefault(_themeDesc);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GlobalPerson = function (_Component) {
	    _inherits(GlobalPerson, _Component);

	    function GlobalPerson(props) {
	        _classCallCheck(this, GlobalPerson);

	        var _this = _possibleConstructorReturn(this, (GlobalPerson.__proto__ || Object.getPrototypeOf(GlobalPerson)).call(this, props));

	        _this.state = {
	            currentObj: '',
	            title: "1970年全球人口",
	            desc: "1970年，中国人口总数8.16亿，印度人口总数才5.49亿，仅相当于中国的67.32%"
	        };
	        return _this;
	    }

	    _createClass(GlobalPerson, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.earth = window.earth;
	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(80.16, 28.11, 30000000.0)
	            });
	            var newArr = [];
	            var allArr = [];
	            for (var _i = 0; _i < _globalPersonData2.default[0][1].length; _i++) {
	                if (_i % 3 == 0) {
	                    newArr.push(_globalPersonData2.default[0][1][_i]);
	                } else if ((_i + 2) % 3 == 0) {
	                    newArr.push(_globalPersonData2.default[0][1][_i]);
	                } else if ((_i + 1) % 3 == 0) {
	                    newArr.push(_globalPersonData2.default[0][1][_i]);
	                }
	                if (newArr.length % 3 == 0) {
	                    allArr.push(newArr);
	                    newArr = [];
	                }
	            }
	            allArr.splice(1000);
	            //颠倒经纬度信息
	            for (var n = 0; n < allArr.length; n++) {
	                var two = allArr[n][0];
	                allArr[n][0] = allArr[n][1];
	                allArr[n][1] = two;
	            }
	            var newAllArr = [];
	            //新增相同元素信息
	            for (var m = 0; m < allArr.length; m++) {
	                var temp = [allArr[m][0], allArr[m][1], allArr[m][2]];
	                newAllArr.push(allArr[m]);
	                newAllArr.push(temp);
	            }
	            //改变高度值  
	            for (var i = 0; i < newAllArr.length; i++) {
	                if (i % 4 == '1' || i % 4 == '2') {
	                    newAllArr[i][2] = 0;
	                } else {
	                    if (newAllArr[i][2] == '0') {
	                        newAllArr[i][2] = 800000;
	                    } else if (newAllArr[i][2] < 0.005) {
	                        newAllArr[i][2] = 800000;
	                    } else {
	                        newAllArr[i][2] = Number(newAllArr[i][2]) * 80000000;
	                    }
	                }
	            }
	            // 初始化示例
	            var colors = [];
	            for (var j = 0; j < 1000; j++) {
	                colors.push(GeoVis.Color.fromCssString("#02c874").withAlpha(0.8), GeoVis.Color.fromCssString("white").withAlpha(0), GeoVis.Color.fromCssString("#00aeae").withAlpha(0.8), GeoVis.Color.fromCssString("white").withAlpha(0), GeoVis.Color.fromCssString("#0080ff").withAlpha(0.8), GeoVis.Color.fromCssString("white").withAlpha(0));
	            }
	            var positions = [[6, 159, 100000], [30, 99, 0], [45, -109, 0], [42, 115, 700000]];
	            this.state.currentObj = new GeoVis.Polyline(newAllArr, {
	                colors: colors,
	                vertexColor: false,
	                followSurface: true,
	                width: 2.0
	            }).addTo(window.earth.features);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth.features);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(_themeDesc2.default, { title: this.state.title, desc: this.state.desc })
	            );
	        }
	    }]);

	    return GlobalPerson;
	}(_react.Component);

	exports.default = GlobalPerson;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var json = [["1990", [6, 159, 0.001, 30, 99, 0.002, 45, -109, 0.000, 42, 115, 0.007, 4, -54, 0.000, -16, -67, 0.014, 21, -103, 0.006, -20, -64, 0.004, -40, -69, 0.001, 32, 64, 0.001, 28, 67, 0.006, 8, 22, 0.000, -15, 133, 0.000, -16, 20, 0.000, 55, 42, 0.006, 32, -81, 0.010, 31, 36, 0.067, 9, 80, 0.016, 42, -91, 0.006, 19, 54, 0.001, 21, 111, 0.163, -3, -51, 0.001, 33, 119, 0.150, 65, 21, 0.002, 46, 49, 0.015, 43, 77, 0.043, 45, 130, 0.018, 4, 119, 0.006, 22, 59, 0.002, 9, -82, 0.003, 46, -60, 0.002, -14, 15, 0.006, -15, -76, 0.001, 57, 15, 0.007, 52, 9, 0.056, 10, 120, 0.004, 24, 87, 0.134, 0, -51, 0.005, -5, 123, 0.013, -24, -53, 0.010, -28, -58, 0.015, 43, 0, 0.019, 24, 70, 0.023, -9, 33, 0.012, 20, 73, 0.037, 13, 104, 0.034, 43, 41, 0.012, 23, 78, 0.095, 20, -72, 0.001, 38, -4, 0.006, 0, -77, 0.016, -9, -35, 0.056, 25, 109, 0.034, -13, 34, 0.013, 61, 18, 0.001, 58, 40, 0.002, 34, 50, 0.027, 49, 88, 0.000, 48, -99, 0.001, -42, 176, 0.002, 20, 86, 0.156, -18, 30, 0.007, 53, 44, 0.006, 29, 18, 0.001, 5, 16, 0.003, 49, -74, 0.000, 48, 131, 0.006, 14, 121, 0.210, 63, 19, 0.001, 40, 54, 0.001, 36, 57, 0.005, 16, 52, 0.000, 50, 128, 0.010, 39, 30, 0.021, 54, 12, 0.006, 16, -61, 0.011, 27, 80, 0.196, 29, 101, 0.001, 14, 78, 0.067, 7, 13, 0.003, 41, 125, 0.026, -17, 23, 0.002, 54, 27, 0.010, 30, 29, 0.001, 41, 142, 0.003, 12, 124, 0.024, 41, 43, 0.014, 18, 98, 0.004, 36, 117, 0.195, 17, 33, 0.003, 32, 109, 0.051, -7, 23, 0.011, 27, -101, 0.005, 45, -73, 0.120, 21, -83, 0.000, 55, -131, 0.001, 52, 105, 0.026, -40, -65, 0.000, 32, 36, 0.094, 31, 7, 0.001, 32, -109, 0.001, 31, 120, 0.191, 9, 124, 0.037, 46, -2, 0.001, -2, -50, 0.003, 18, -13, 0.001, 42, 28, 0.016, 4, 99, 0.008, 19, -77, 0.002, 18, 38, 0.006, 33, 4, 0.004, -5, -75, 0.000, -14, 51, 0.001, -15, -48, 0.002, 57, -5, 0.000, 52, 37, 0.017, 13, 38, 0.013, -10, -41, 0.002, -11, 36, 0.006, -18, -71, 0.003, -20, 27, 0.002, 56, 89, 0.001, 33, -94, 0.007, 44, 15, 0.001, 43, -4, 0.006, 20, 37, 0.000, -4, 27, 0.006, 47, 8, 0.075, 44, -98, 0.001, 23, 114, 0.270, 38, 24, 0.051, 14, 10, 0.006, 10, -3, 0.009, 47, 89, 0.002, -34, 152, 0.079, 38, -121, 0.062, 14, 25, 0.001, 29, 5, 0.001, -9, -78, 0.016, 20, 98, 0.018, -19, -39, 0.003, 53, 0, 0.046, -23, 150, 0.000, 49, 1, 0.028, 48, 40, 0.046, 38, 97, 0.000, 35, -99, 0.001, 16, 1, 0.004, 53, -115, 0.000, 48, 119, 0.001, 29, -85, 0.000, 63, 39, 0.001, 40, 26, 0.002, 16, 40, 0.002, 11, 120, 0.002, -8, 14, 0.002, 26, -98, 0.016, -12, -47, 0.001, -32, 28, 0.013, 40, -87, 0.006, 36, -76, 0.038, 17, 82, 0.050, 50, 19, 0.094, 12, -70, 0.001, 27, 108, 0.076, 7, 49, 0.003, 41, 105, 0.000, 3, 46, 0.006, -16, 168, 0.000, -21, 56, 0.004, 51, 83, 0.002, 50, -122, 0.000, 30, 9, 0.001, 7, -62, 0.001, 41, -6, 0.005, -17, -52, 0.001, -38, -58, 0.003, -6, 13, 0.014, 45, 6, 0.045, 60, 59, 0.001, 41, -121, 0.000, 17, -3, 0.000, -6, -64, 0.000, -7, 35, 0.002, -26, -61, 0.001, 41, -104, 0.003, 51, 30, 0.006, 32, -8, 0.039, 27, 40, 0.002, 4, 33, 0.003, 21, 98, 0.009, -1, 122, 0.001, 32, -89, 0.005, 31, 92, 0.001, 46, 42, 0.007, 8, -83, 0.003, 22, 36, 0.000, 19, 30, 0.001, -10, -64, 0.002, -2, 22, 0.001, -5, 40, 0.031, 69, 20, 0.001, 37, 35, 0.020, -2, 133, 0.001, 10, 93, 0.000, -10, 36, 0.008, -14, -41, 0.005, -34, 22, 0.001, 56, 46, 0.003, 37, -108, 0.001, 52, 49, 0.003, 13, 10, 0.016, 46, 91, 0.001, -11, 24, 0.002, -34, -59, 0.005, 56, 93, 0.024, -38, -60, 0.002, -30, -57, 0.003, 47, 27, 0.037, 44, 11, 0.055, -33, -65, 0.002, 19, 106, 0.109, -23, -45, 0.030, -24, 34, 0.001, 58, 45, 0.001, 20, -96, 0.004, 35, 78, 0.002, -38, 150, 0.000, 34, 39, 0.004, 15, 27, 0.001, 10, 33, 0.002, 47, 109, 0.000, -9, 118, 0.011, 38, -93, 0.004, 34, -6, 0.040, 15, -84, 0.001, 49, 16, 0.023, 25, 38, 0.002, 2, 39, 0.001, 1, 28, 0.003, 16, 102, 0.026, 6, 122, 0.008, 68, 65, 0.000, 49, -99, 0.002, 48, 76, 0.000, 26, 96, 0.007, 40, 111, 0.038, 2, -70, 0.000, 38, 125, 0.004, 16, -11, 0.003, 50, 85, 0.001, 12, -8, 0.031, 63, 75, 0.001, -31, 28, 0.011, -20, -49, 0.004, 40, -2, 0.002, 36, 1, 0.014, 35, 26, 0.010, -31, -55, 0.004, 6, -67, 0.001, 3, 9, 0.003, 40, -115, 0.001, 39, 102, 0.000, 54, 68, 0.002, 50, 55, 0.001, 30, 54, 0.004, 26, 49, 0.002, 60, -135, 0.001, 6, 48, 0.004, 3, 26, 0.002, 51, 111, 0.001, 12, 101, 0.006, 45, 25, 0.025, -3, 13, 0.002, -7, -46, 0.002, 30, 88, 0.000, -27, 27, 0.013, 42, 144, 0.007, 60, 23, 0.011, 32, 101, 0.001, 31, -114, 0.003, 28, 40, 0.001, 8, -13, 0.025, -30, -66, 0.002, 55, 69, 0.002, 51, 74, 0.001, -3, 115, 0.011, 31, 63, 0.001, 28, -105, 0.007, 27, 68, 0.046, 42, -78, 0.037, 22, -83, 0.019, 21, 86, 0.056, -1, 14, 0.000, -2, -57, 0.000, -5, -45, 0.007, 32, -117, 0.055, 43, 120, 0.009, 45, 93, 0.000, 55, 103, 0.001, -2, 34, 0.011, -25, 25, 0.002, 57, 70, 0.000, 37, 55, 0.011, 33, 60, 0.003, 28, 100, 0.003, 9, 34, 0.004, -9, 24, 0.002, -4, 120, 0.040, 22, 122, 0.002, 37, -88, 0.008, 8, 101, 0.011, 46, 119, 0.000, 43, -93, 0.005, -11, 124, 0.014, 0, 41, 0.003, -23, 34, 0.001, -5, 143, 0.002, 47, 47, 0.001, 43, 52, 0.006, 24, -110, 0.002, 23, 73, 0.192, 1, 105, 0.018, -4, -45, 0.010, 11, 35, 0.005, 14, 45, 0.046, 25, 84, 0.264, -13, 21, 0.001, 58, 17, 0.007, 37, 123, 0.040, 34, 75, 0.072, -4, 130, 0.003, 11, -12, 0.021, 48, -118, 0.000, 10, 21, 0.001, 5, -58, 0.001, 1, -57, 0.000, 53, 71, 0.002, 49, 76, 0.001, 29, 45, 0.001, 14, 18, 0.001, 25, 50, 0.002, 2, 11, 0.005, -18, -46, 0.003, -19, 33, 0.016, 49, -103, 0.001, -8, -72, 0.001, -12, -69, 0.000, 25, -97, 0.018, 40, 83, 0.002, 39, -88, 0.009, 50, 121, 0.001, 12, 20, 0.002, -7, 114, 0.025, 14, 107, 0.004, -37, 149, 0.001, 62, 130, 0.004, 59, 36, 0.001, 39, 57, 0.001, 36, -99, 0.001, 35, 54, 0.005, 30, -89, 0.013, -8, -42, 0.003, 7, 40, 0.036, -17, 34, 0.006, 54, 32, 0.015, -4, -50, 0.001, 30, 66, 0.001, 26, 69, 0.060, 7, -7, 0.019, -20, 34, 0.012, -3, -60, 0.026, -19, -44, 0.004, -26, 25, 0.001, -27, -54, 0.007, 21, 75, 0.072, 30, 100, 0.002, 42, 116, 0.006, 4, -53, 0.000, -16, -66, 0.000, 21, -100, 0.014, -20, -63, 0.001, -40, -68, 0.002, 32, 73, 0.073, 28, 68, 0.014, -16, 13, 0.001, -5, -41, 0.006, 55, 41, 0.007, 32, -80, 0.012, 31, 35, 0.069, 9, 79, 0.123, 42, -90, 0.007, 19, 53, 0.001, -2, -45, 0.003, 65, 24, 0.000, 46, 50, 0.001, 43, 84, 0.007, 45, 129, 0.024, 4, 120, 0.002, 22, 60, 0.003, 9, -83, 0.021, 46, -63, 0.003, -14, 16, 0.011, 52, 10, 0.061, 24, 88, 0.168, 0, -50, 0.003, 34, 126, 0.001, -5, 122, 0.006, -24, -52, 0.015, -28, -57, 0.002, 43, -1, 0.023, 24, 71, 0.011, 58, 83, 0.001, 20, 74, 0.102, -1, 11, 0.001, 13, 103, 0.025, 43, 16, 0.004, 23, 77, 0.066, 38, -7, 0.014, 0, -76, 0.005, 47, 100, 0.000, 25, 112, 0.071, -13, 33, 0.005, 61, 17, 0.003, 58, 37, 0.002, 34, 47, 0.023, 49, 87, 0.001, 48, -98, 0.001, 20, 87, 0.165, -33, -56, 0.002, -18, 35, 0.004, 53, 43, 0.005, 29, 17, 0.000, 5, 15, 0.002, 48, 132, 0.001, -19, 178, 0.001, 63, 18, 0.001, 36, 58, 0.009, 16, 45, 0.011, 50, 125, 0.002, 39, 29, 0.028, 54, 9, 0.005, -55, -66, 0.000, 27, 79, 0.257, 29, 104, 0.107, 41, 128, 0.013, -17, 22, 0.000, 54, 28, 0.008, 53, 95, 0.000, 30, 30, 0.019, 41, 141, 0.017, -21, -53, 0.000, 64, 29, 0.001, 41, 30, 0.081, 18, 95, 0.013, 36, 118, 0.246, 17, 36, 0.002, 32, 110, 0.043, -7, 26, 0.005, 27, -102, 0.000, 45, -78, 0.000, 41, -69, 0.001, 21, -80, 0.001, 52, 106, 0.001, 31, 6, 0.001, -16, 49, 0.007, 32, -108, 0.001, 31, 119, 0.212, 9, 123, 0.022, 46, 3, 0.010, 18, -12, 0.001, 6, -8, 0.018, 66, 15, 0.001, 6, 117, 0.009, 42, 25, 0.033, 18, 35, 0.001, 33, 3, 0.003, 14, 40, 0.027, -15, -49, 0.004, 22, 103, 0.011, 52, 38, 0.006, 13, 37, 0.005, 47, -91, 0.001, -10, -40, 0.011, -11, 35, 0.008, 56, 90, 0.002, 33, -95, 0.004, 44, 16, 0.011, 43, -5, 0.033, 58, 103, 0.004, -4, 28, 0.005, -10, 161, 0.002, 47, 7, 0.029, 44, -97, 0.002, -13, -44, 0.003, 23, 113, 0.122, 38, 21, 0.003, 14, -1, 0.004, 10, -2, 0.014, 47, 88, 0.002, 38, -120, 0.006, 6, 39, 0.085, 14, 26, 0.001, 29, 8, 0.001, -9, -79, 0.017, 20, 99, 0.004, 53, -1, 0.154, 49, 4, 0.023, 48, 17, 0.080, 40, 140, 0.001, 38, 98, 0.000, 35, -92, 0.005, 16, 2, 0.001, 53, -112, 0.002, 12, -3, 0.012, 48, 120, 0.002, 29, -90, 0.032, 40, 27, 0.012, 16, 17, 0.000, -8, 15, 0.005, -12, -46, 0.001, 40, -86, 0.016, 39, 129, 0.000, 17, 81, 0.070, 50, 20, 0.093, 12, -69, 0.002, 27, 107, 0.104, 7, 48, 0.004, 41, 108, 0.016, 3, 45, 0.005, 51, 82, 0.008, 50, -125, 0.001, -15, 50, 0.009, 30, 10, 0.001, 7, -63, 0.005, 41, -7, 0.016, -17, -53, 0.001, -6, 14, 0.023, 30, 121, 0.273, 23, 96, 0.020, 45, 5, 0.082, 60, 60, 0.002, -4, -41, 0.009, 17, 0, 0.001, -6, -67, 0.000, 28, 13, 0.000, -26, -60, 0.001, 41, -105, 0.001, -8, 132, 0.002, 51, 29, 0.006, 32, 1, 0.001, 27, 39, 0.002, 4, 34, 0.002, 21, 97, 0.041, -1, 121, 0.003, -3, -42, 0.002, 32, -88, 0.005, 46, 31, 0.055, 8, -82, 0.014, 19, 29, 0.001, -2, 27, 0.002, -5, 39, 0.025, 69, 19, 0.001, 57, 105, 0.000, 37, 30, 0.019, -2, 134, 0.001, -10, 33, 0.007, -14, -40, 0.008, -34, 27, 0.004, 56, 47, 0.004, 52, 50, 0.007, 13, 9, 0.031, 47, -55, 0.001, 9, 6, 0.013, 46, 92, 0.000, -11, 23, 0.002, -14, -57, 0.000, -4, 134, 0.001, -34, -58, 0.003, 56, 94, 0.004, -38, -63, 0.001, 47, 26, 0.016, 44, 12, 0.056, 19, 105, 0.009, -8, 142, 0.000, -24, 35, 0.002, 58, 46, 0.002, 38, 49, 0.031, 35, 77, 0.009, 37, 98, 0.001, 34, 40, 0.004, 15, 26, 0.001, 10, 34, 0.004, 47, 124, 0.048, -33, 30, 0.000, 38, -92, 0.009, -8, 139, 0.000, 15, -85, 0.004, 49, 15, 0.023, 2, 40, 0.001, 1, 27, 0.001, 16, 103, 0.058, -22, 34, 0.001, 49, -96, 0.002, 26, 93, 0.132, 25, -106, 0.001, 40, 112, 0.040, 2, -73, 0.001, 1, 12, 0.003, 38, 126, 0.118, 16, -10, 0.002, 50, 86, 0.000, 12, -7, 0.012, -31, 27, 0.001, 40, -1, 0.004, 36, 2, 0.029, 35, 25, 0.007, -7, 150, 0.000, -31, -52, 0.005, 6, -66, 0.000, 45, -120, 0.000, 39, 101, 0.015, 54, 65, 0.002, 50, 56, 0.001, 30, 59, 0.004, 26, 50, 0.001, 6, 45, 0.002, 3, 25, 0.002, 17, -66, 0.004, -21, 19, 0.000, 51, 110, 0.001, 12, 102, 0.019, 45, 28, 0.033, -25, -64, 0.004, -3, 16, 0.001, -7, -47, 0.003, 45, -87, 0.004, 42, 141, 0.010, 60, 24, 0.005, -29, -67, 0.000, 17, -4, 0.000, 32, 102, 0.002, 31, -115, 0.010, 28, 41, 0.001, 8, -12, 0.027, 55, 68, 0.001, 51, 73, 0.001, 31, 62, 0.005, 28, -104, 0.001, 27, 67, 0.005, 42, -81, 0.012, 4, -2, 0.002, 22, -82, 0.023, 21, 85, 0.048, -1, 13, 0.001, -39, -62, 0.008, -2, -56, 0.000, -5, -46, 0.003, 32, -116, 0.037, 46, 75, 0.003, 43, 119, 0.009, 55, 102, 0.001, -8, -76, 0.002, -25, 24, 0.002, 5, 9, 0.027, 57, 69, 0.000, 37, 66, 0.004, 33, 59, 0.002, 28, 101, 0.003, 9, 33, 0.005, -15, 39, 0.007, 37, -89, 0.009, 46, 120, 0.001, 43, -94, 0.003, -11, 123, 0.001, 0, 42, 0.001, -23, 33, 0.001, -5, 142, 0.002, 47, 46, 0.001, 23, 72, 0.029, -4, -44, 0.011, 11, 34, 0.004, -9, -41, 0.002, 25, 83, 0.311, -13, 28, 0.012, 58, 18, 0.002, 35, 121, 0.005, 37, 118, 0.160, 34, 76, 0.015, -4, 131, 0.001, 49, 94, 0.000, 11, -13, 0.006, 48, -117, 0.001, 10, 22, 0.001, -32, 153, 0.003, 53, 50, 0.037, 49, 75, 0.001, 29, 48, 0.029, 5, 122, 0.005, 25, 49, 0.002, -2, 105, 0.004, 2, 12, 0.005, -19, 36, 0.003, 68, 30, 0.001, 49, -100, 0.001, 48, 105, 0.001, 26, 129, 0.002, -12, -68, 0.000, 40, 84, 0.002, 39, -89, 0.011, 36, 15, 0.011, 50, 122, 0.004, 12, 21, 0.002, -7, 113, 0.027, 18, 123, 0.002, 59, 35, 0.002, 39, 56, 0.000, 36, -98, 0.001, 35, 53, 0.008, 30, -88, 0.020, -8, -41, 0.006, 7, 39, 0.066, -17, 33, 0.006, 54, 29, 0.018, -55, -68, 0.000, 30, 23, 0.000, 26, 70, 0.028, 7, -8, 0.016, 6, 73, 0.000, 22, 98, 0.012, -3, -61, 0.000, -26, 26, 0.012, -27, -55, 0.008, 45, 64, 0.000, 60, 5, 0.000, 41, 65, 0.003, 21, 70, 0.021, 30, 97, 0.001, 42, 113, 0.002, 4, -52, 0.002, -16, -65, 0.000, 21, -101, 0.042, -20, -62, 0.000, -41, -62, 0.000, 32, 74, 0.140, 28, 69, 0.045, 8, 24, 0.001, -16, 14, 0.003, 55, 40, 0.012, 31, 34, 0.003, -15, 26, 0.001, 21, 121, 0.001, 33, 121, 0.107, -6, 151, 0.002, 65, 23, 0.001, 43, 83, 0.008, 45, 132, 0.031, 22, 57, 0.001, 6, 2, 0.069, 9, -80, 0.001, 46, -62, 0.001, -14, 13, 0.001, -15, -74, 0.002, 57, 17, 0.003, 52, 11, 0.050, -43, 172, 0.001, 24, 81, 0.059, -5, 121, 0.025, -24, -59, 0.000, -28, -56, 0.003, 43, -2, 0.044, 24, 72, 0.038, 58, 84, 0.000, 20, 75, 0.092, -28, 23, 0.001, 23, 108, 0.066, 38, -6, 0.013, 14, -92, 0.015, 47, 99, 0.000, 25, 111, 0.073, 58, 38, 0.002, -46, 169, 0.000, 34, 48, 0.033, 49, 90, 0.000, 48, -97, 0.001, -18, 36, 0.010, 53, 38, 0.009, 44, 113, 0.000, 5, 26, 0.001, 48, 125, 0.020, 63, 17, 0.001, 40, 56, 0.000, 36, 59, 0.014, 35, 8, 0.017, 16, 46, 0.002, 50, 126, 0.005, 39, 28, 0.032, 54, 10, 0.027, 27, 78, 0.189, 29, 103, 0.030, 41, 127, 0.032, -17, 21, 0.000, 54, 25, 0.013, 53, 106, 0.001, 30, 35, 0.005, 6, 37, 0.015, 64, 30, 0.000, 41, 29, 0.149, 18, 96, 0.058, 36, 119, 0.183, 17, 35, 0.003, 32, 111, 0.054, -7, 25, 0.013, 45, -79, 0.002, 41, -82, 0.015, 52, 107, 0.001, 51, 24, 0.016, 31, 5, 0.001, -13, -43, 0.003, -16, 50, 0.006, 55, 12, 0.014, 32, -115, 0.011, 31, 118, 0.185, 46, 4, 0.013, 42, -121, 0.002, 18, -15, 0.011, -6, 123, 0.010, 66, 16, 0.000, -44, -74, 0.000, 42, 26, 0.027, 18, 36, 0.001, -1, -74, 0.000, 33, 6, 0.002, -5, -69, 0.001, -14, 49, 0.006, -15, -46, 0.002, 22, 104, 0.020, 37, -6, 0.026, 52, 39, 0.010, 13, 40, 0.027, -10, -43, 0.002, 24, 117, 0.092, -33, 118, 0.000, 56, 91, 0.007, 33, -92, 0.004, 44, 17, 0.024, 43, -6, 0.005, -4, 29, 0.018, 47, 6, 0.019, 44, -96, 0.002, -13, -45, 0.002, 23, 112, 0.072, 38, 22, 0.016, 35, 104, 0.062, 14, 0, 0.006, 10, 11, 0.020, 47, 87, 0.001, 38, -123, 0.001, 49, 118, 0.005, 29, 7, 0.001, 20, 100, 0.013, 53, 10, 0.058, 49, 3, 0.053, 48, 18, 0.052, 44, 77, 0.003, 38, 103, 0.021, 35, -93, 0.004, 53, -113, 0.028, 12, -2, 0.026, 29, -91, 0.004, 14, 110, 0.014, 40, 28, 0.011, -20, -44, 0.055, -8, 16, 0.005, 7, 94, 0.001, 40, -85, 0.018, 39, 128, 0.050, 17, 84, 0.065, 16, -95, 0.010, 50, 17, 0.037, 12, -68, 0.005, 27, 106, 0.098, 7, 47, 0.002, 41, 107, 0.002, 51, 81, 0.002, 30, -1, 0.001, 7, -64, 0.001, 41, -4, 0.021, -17, -54, 0.005, -6, 27, 0.006, -35, -57, 0.010, 30, 122, 0.126, 45, 8, 0.071, 60, 61, 0.001, 41, -119, 0.000, -35, 150, 0.001, 17, -1, 0.001, -6, -66, 0.000, -26, -63, 0.001, 8, 9, 0.024, 41, -102, 0.000, 51, 36, 0.011, 32, 2, 0.001, 28, -3, 0.000, 27, 38, 0.002, 4, 35, 0.002, 22, -105, 0.007, 21, 100, 0.008, -1, 120, 0.014, 46, 32, 0.010, 8, -81, 0.006, 19, 36, 0.000, -2, 28, 0.003, -5, 38, 0.005, -10, 151, 0.001, 22, -15, 0.000, 37, 29, 0.024, -2, 139, 0.000, -8, -62, 0.001, 10, 107, 0.305, -10, 34, 0.026, -2, 12, 0.001, -34, 28, 0.008, 56, 48, 0.034, 52, 51, 0.003, -12, -67, 0.000, 13, 12, 0.005, 9, 5, 0.006, 46, 89, 0.001, -14, -56, 0.001, -34, -53, 0.002, 56, 95, 0.001, -38, -62, 0.001, 47, 25, 0.017, 19, 96, 0.034, 34, -106, 0.003, -36, -61, 0.003, -23, -59, 0.000, -24, 36, 0.012, 44, -100, 0.001, 58, 59, 0.002, 37, 97, 0.001, 34, 37, 0.031, 15, 25, 0.001, 10, 31, 0.007, 47, 123, 0.014, 5, -76, 0.008, -33, 29, 0.016, 38, -95, 0.006, 15, -86, 0.011, 49, 18, 0.041, 25, 40, 0.003, 2, 37, 0.001, 1, 30, 0.008, 16, 104, 0.059, -22, 31, 0.003, 49, -97, 0.023, 26, 94, 0.057, 25, -107, 0.007, 40, 105, 0.000, 2, -72, 0.001, 1, 11, 0.004, -18, -69, 0.001, 16, -9, 0.001, 50, 83, 0.006, 12, -6, 0.009, -31, 30, 0.020, 40, 0, 0.005, 36, 3, 0.042, 29, 122, 0.133, -31, -53, 0.003, 6, -61, 0.001, 39, 100, 0.008, 54, 66, 0.002, 50, 53, 0.001, 30, 60, 0.003, 26, 47, 0.003, 6, 46, 0.002, 3, 16, 0.002, 17, -67, 0.001, -21, 18, 0.000, 51, 109, 0.003, 12, 103, 0.016, 45, 27, 0.023, 22, 84, 0.044, -3, 15, 0.001, -7, -44, 0.002, 45, -84, 0.003, 42, 142, 0.028, 60, 25, 0.027, 32, 103, 0.002, 31, -100, 0.004, 28, 42, 0.001, -30, -68, 0.000, 55, 67, 0.002, 51, 64, 0.001, -3, 109, 0.002, 31, 61, 0.000, 9, 101, 0.001, 27, 66, 0.002, 42, -80, 0.011, 4, -1, 0.006, 21, 88, 0.098, -1, 28, 0.001, -39, -63, 0.000, -5, -47, 0.003, 46, 76, 0.001, 43, 118, 0.005, -48, -67, 0.000, 55, 101, 0.001, -10, -63, 0.004, 46, -101, 0.000, 57, 72, 0.001, 37, 65, 0.003, 33, 62, 0.001, 28, 102, 0.009, 9, 36, 0.020, 37, -78, 0.005, -4, -73, 0.006, 13, -16, 0.026, 43, -95, 0.003, 24, 29, 0.000, 0, 43, 0.004, -23, 36, 0.003, -5, 141, 0.001, 13, 125, 0.008, 47, 45, 0.001, 23, 71, 0.012, 15, 108, 0.006, 11, 33, 0.004, -43, -74, 0.001, -9, -42, 0.002, 25, 102, 0.038, -13, 27, 0.002, 58, 15, 0.004, 35, 112, 0.097, 37, 117, 0.161, 34, 73, 0.120, -4, 132, 0.000, 49, 93, 0.000, 11, -14, 0.007, 48, -116, 0.001, -9, 113, 0.096, 5, -56, 0.001, 1, -55, 0.000, 53, 49, 0.012, 49, 46, 0.002, 29, 47, 0.008, 25, 52, 0.015, -19, 35, 0.003, 68, 31, 0.001, 49, -101, 0.000, 48, 106, 0.000, 40, 77, 0.003, 39, -90, 0.005, 36, 16, 0.003, 50, 119, 0.004, 12, 22, 0.003, -7, 116, 0.003, 11, 93, 0.001, -12, 44, 0.010, 59, 34, 0.004, 39, 55, 0.003, 36, -97, 0.006, 35, 60, 0.015, 30, -91, 0.021, -8, -40, 0.009, 7, 38, 0.078, 8, 99, 0.014, 54, 30, 0.006, 30, 24, 0.000, 7, -9, 0.005, 6, 74, 0.001, 17, -71, 0.001, -3, -66, 0.000, -26, 31, 0.004, -27, -52, 0.012, 45, 63, 0.001, 60, 6, 0.011, 41, 68, 0.002, 17, 74, 0.059, -6, -45, 0.004, 30, 98, 0.002, 45, -112, 0.001, 42, 114, 0.005, -16, -64, 0.001, 21, -106, 0.001, 54, 79, 0.001, 32, 75, 0.204, 28, 70, 0.046, 8, 17, 0.009, -16, 15, 0.004, 55, 39, 0.051, 6, 118, 0.002, 31, 33, 0.021, 9, 81, 0.030, 42, -108, 0.000, -2, -47, 0.013, -6, 152, 0.003, 5, 37, 0.007, 65, 26, 0.003, 43, 82, 0.011, 45, 131, 0.045, -4, 152, 0.000, 22, 58, 0.003, -35, 119, 0.000, 46, -73, 0.005, -11, -68, 0.003, -14, 14, 0.005, -15, -75, 0.008, 0, 105, 0.003, 52, 12, 0.025, 28, 130, 0.003, 24, 82, 0.082, -24, -58, 0.000, -28, -55, 0.018, 43, -3, 0.025, 20, 76, 0.080, -24, -43, 0.021, -28, 24, 0.004, 43, 14, 0.031, 23, 107, 0.049, 38, -1, 0.016, -25, -68, 0.002, 14, 50, 0.003, 25, 114, 0.059, -18, 146, 0.002, 34, 45, 0.012, 49, 89, 0.000, 48, -96, 0.001, -18, 33, 0.011, 53, 37, 0.007, 29, 19, 0.001, 44, 114, 0.000, 5, 25, 0.000, 48, 126, 0.030, 63, 16, 0.001, 40, 49, 0.014, 39, 10, 0.018, 36, 60, 0.038, 35, 7, 0.022, 16, 47, 0.001, 39, 27, 0.014, 27, 77, 0.111, 29, 98, 0.001, 41, 130, 0.024, 54, 26, 0.028, 53, 105, 0.001, -35, -70, 0.014, 30, 36, 0.006, 6, 38, 0.045, -25, -55, 0.004, -19, -49, 0.008, 64, 31, 0.002, 41, 32, 0.016, -29, -58, 0.003, 36, 120, 0.174, 17, 38, 0.004, 32, 112, 0.092, -7, 28, 0.003, 45, -76, 0.004, 41, -83, 0.032, 52, 108, 0.001, 51, 23, 0.035, 5, 27, 0.000, -16, 51, 0.004, 55, 11, 0.015, 51, 8, 0.204, 32, -114, 0.007, 31, 117, 0.124, 46, 1, 0.015, 18, -14, 0.001, -8, -69, 0.000, -6, 124, 0.003, 42, 23, 0.020, 18, 33, 0.001, -1, -75, 0.001, 33, 5, 0.006, -14, 50, 0.006, -18, -53, 0.001, -15, -47, 0.001, 22, 101, 0.018, 0, 125, 0.011, 37, -7, 0.010, 52, 40, 0.026, 13, 39, 0.022, 47, -109, 0.000, -10, -42, 0.003, 24, 118, 0.120, -33, 117, 0.004, 56, 92, 0.001, 33, -93, 0.004, 47, 36, 0.040, 44, 18, 0.024, 43, -7, 0.009, 20, 40, 0.004, -4, 30, 0.094, 47, 5, 0.008, 44, -95, 0.003, 62, 17, 0.003, 23, 111, 0.105, 20, -105, 0.006, 38, 27, 0.021, 35, 103, 0.018, 15, 36, 0.011, 14, -3, 0.013, 10, 12, 0.032, 47, 86, 0.001, 38, -122, 0.032, 49, 117, 0.000, 29, 2, 0.000, -13, -76, 0.072, -29, -51, 0.008, 16, 109, 0.019, 53, 9, 0.052, -23, 151, 0.000, 49, 6, 0.019, 48, 19, 0.030, 44, 78, 0.002, 38, 104, 0.007, 35, -94, 0.009, 12, -1, 0.048, 59, -151, 0.000, 40, 21, 0.025, -12, -44, 0.002, 40, -84, 0.015, -28, 153, 0.018, 39, 127, 0.054, 17, 83, 0.087, 16, -94, 0.007, 50, 18, 0.029, 27, 105, 0.075, 7, 46, 0.003, 41, 94, 0.001, 51, 104, 0.001, 50, -127, 0.000, 30, 0, 0.001, 7, -65, 0.001, 41, -5, 0.007, 3, -60, 0.003, 21, -16, 0.001, -17, -55, 0.001, 69, 89, 0.009, 30, 111, 0.049, 8, 123, 0.004, 45, 7, 0.015, -35, 149, 0.001, 17, 2, 0.000, -26, -62, 0.001, 64, 178, 0.001, 41, -103, 0.002, 51, 35, 0.009, 32, 3, 0.001, 28, -2, 0.000, 27, 37, 0.002, 4, 36, 0.002, 22, -104, 0.002, 21, 99, 0.007, -39, -72, 0.014, -52, -71, 0.001, 46, 29, 0.034, 8, -80, 0.010, 22, 39, 0.000, 19, 35, 0.000, -2, 25, 0.002, -5, 37, 0.006, 42, -5, 0.013, 37, 32, 0.016, -10, -77, 0.013, 10, 108, 0.050, -10, 39, 0.003, -14, -42, 0.005, -34, 25, 0.001, 56, 73, 0.001, 52, 52, 0.003, -44, -65, 0.002, 13, 11, 0.007, 9, 8, 0.021, 46, 90, 0.001, 24, 26, 0.000, -14, -59, 0.000, 56, 96, 0.005, 47, 24, 0.027, 19, 95, 0.013, 34, -109, 0.001, -23, -56, 0.002, -24, 29, 0.009, -43, -63, 0.000, 58, 60, 0.006, 38, 55, 0.001, 35, 83, 0.000, 37, 100, 0.001, 34, 38, 0.007, 15, 24, 0.001, 14, -23, 0.001, 10, 32, 0.003, 47, 122, 0.008, 5, -77, 0.001, 38, -94, 0.022, 15, -87, 0.029, 49, 17, 0.040, 48, -72, 0.002, -28, -50, 0.007, 25, 39, 0.003, 2, 38, 0.001, 1, 29, 0.002, 16, 81, 0.190, -22, 32, 0.004, 49, -94, 0.001, 48, 71, 0.001, 26, 107, 0.129, 25, -104, 0.002, 40, 106, 0.001, 2, -75, 0.014, 36, 37, 0.046, -18, -68, 0.002, 16, -8, 0.001, 50, 84, 0.005, 12, -5, 0.016, -21, -48, 0.015, -31, 29, 0.016, 40, -7, 0.017, 36, 4, 0.124, 35, 15, 0.012, 29, 121, 0.153, 40, -112, 0.004, 39, 99, 0.010, 54, 71, 0.002, 50, 54, 0.001, 30, 57, 0.006, 26, 48, 0.002, 3, 15, 0.002, 8, 81, 0.035, 17, -64, 0.002, -21, 17, 0.001, 51, 116, 0.002, 12, 104, 0.014, -7, -74, 0.000, 45, 22, 0.029, 6, 94, 0.000, -3, 42, 0.000, -7, -45, 0.001, 30, 91, 0.001, -27, 24, 0.002, 45, -85, 0.001, 60, 26, 0.020, -30, -56, 0.004, 32, 104, 0.005, -33, -66, 0.000, 31, -101, 0.001, 28, 43, 0.001, -30, -71, 0.002, 55, 66, 0.014, 51, 63, 0.001, -3, 112, 0.006, 31, 76, 0.188, 28, -102, 0.002, 27, 65, 0.002, 42, -83, 0.139, 21, 87, 0.109, -1, 27, 0.002, -3, -47, 0.003, -2, -58, 0.000, -5, -40, 0.012, 43, 117, 0.003, 45, 90, 0.001, 42, 64, 0.001, -1, 12, 0.000, 46, -100, 0.003, 57, 71, 0.001, 37, 68, 0.024, 33, 61, 0.002, 28, 103, 0.029, 9, 35, 0.012, -15, 41, 0.021, 56, 13, 0.011, 37, -79, 0.015, -4, -72, 0.001, 33, -82, 0.011, 9, -12, 0.015, 46, 118, 0.000, 43, -88, 0.026, -9, 37, 0.004, -4, 139, 0.004, 0, 44, 0.003, -23, 35, 0.002, -30, -52, 0.014, 23, 70, 0.010, 1, 110, 0.015, 38, -28, 0.001, 15, 107, 0.007, 11, 40, 0.050, -9, -43, 0.001, 25, 101, 0.061, -13, 26, 0.002, 61, 10, 0.001, 58, 16, 0.009, 35, 111, 0.096, 37, 120, 0.039, 34, 74, 0.062, 15, -4, 0.004, 49, 96, 0.000, 11, -15, 0.013, 48, -123, 0.014, 5, -57, 0.002, 20, 110, 0.019, 53, 52, 0.007, 49, 45, 0.002, 29, 74, 0.055, 25, 51, 0.002, 2, 10, 0.001, -19, 30, 0.009, 68, 32, 0.001, 49, -66, 0.000, 48, 107, 0.006, 26, 127, 0.000, -32, -71, 0.002, 40, 78, 0.003, 39, -91, 0.005, 50, 120, 0.001, 12, 23, 0.008, -7, 115, 0.002, 11, 100, 0.008, -12, 29, 0.004, 59, 33, 0.006, 39, 54, 0.002, 36, -96, 0.005, 35, 59, 0.008, 30, -90, 0.021, -8, -47, 0.001, 7, 37, 0.039, -18, 17, 0.004, -17, 31, 0.007, -20, 48, 0.039, 54, 35, 0.004, 7, -10, 0.005, 6, 15, 0.004, -3, -67, 0.000, -7, -62, 0.000, -26, 32, 0.025, -27, -53, 0.013, 60, 7, 0.001, 41, 67, 0.001, 21, 72, 0.070, 36, 77, 0.001, -6, -44, 0.008, 42, 111, 0.002, -16, -55, 0.008, 54, 80, 0.001, -40, -73, 0.003, 32, 76, 0.095, 28, 71, 0.073, 27, -12, 0.002, 8, 18, 0.006, -16, 16, 0.003, 55, 38, 0.369, 31, 32, 0.155, 42, -111, 0.001, -2, -46, 0.006, -6, 149, 0.001, 65, 25, 0.002, 43, 81, 0.004, 45, 126, 0.045, 52, -114, 0.001, 13, -83, 0.001, 9, -78, 0.001, 46, -72, 0.011, -11, -69, 0.001, -15, -72, 0.003, 57, 19, 0.002, 52, -3, 0.015, -10, -69, 0.000, 24, 83, 0.064, 34, 121, 0.024, -24, -57, 0.002, -28, -54, 0.013, 43, 4, 0.027, -36, -70, 0.004, 13, 100, 0.048, -28, 25, 0.008, 43, 13, 0.033, 23, 106, 0.030, 38, 0, 0.048, 25, 113, 0.092, 34, 46, 0.016, 49, 92, 0.000, -8, 113, 0.455, -18, 34, 0.002, 53, 40, 0.008, 29, 14, 0.001, 44, 115, 0.000, 5, 28, 0.001, -20, -51, 0.002, 48, 127, 0.018, 63, 15, 0.002, 40, 50, 0.051, 39, 9, 0.015, 36, 45, 0.020, 35, 6, 0.030, 16, 48, 0.000, 39, 26, 0.001, 17, 122, 0.034, 50, 11, 0.038, 27, 84, 0.146, 29, 97, 0.001, 0, 98, 0.009, 41, 129, 0.018, -36, 174, 0.001, 30, 33, 0.029, 6, 43, 0.003, -30, 31, 0.096, 41, 31, 0.009, 18, 94, 0.003, 36, 121, 0.173, 17, 37, 0.002, 32, 121, 0.282, -7, 27, 0.003, 27, -97, 0.013, 45, -77, 0.002, 42, 83, 0.004, 41, -80, 0.029, 21, -71, 0.000, 52, 93, 0.000, -26, 153, 0.002, 51, 22, 0.032, 27, 16, 0.001, 55, 10, 0.018, 51, 7, 0.186, 32, -113, 0.001, 31, 132, 0.023, 46, 2, 0.010, 42, -123, 0.003, -29, 115, 0.001, -5, 16, 0.142, -6, 121, 0.022, 66, 14, 0.001, 42, 24, 0.060, 18, 34, 0.001, 6, 11, 0.029, 33, 8, 0.004, 5, 117, 0.015, -15, -44, 0.002, 22, 102, 0.011, 37, -4, 0.029, 52, 41, 0.010, 13, 34, 0.025, -10, -37, 0.015, 24, 119, 0.103, 56, 85, 0.018, 33, -90, 0.006, 47, 35, 0.021, 44, 19, 0.028, 20, 41, 0.011, 15, 146, 0.001, 44, -94, 0.005, 62, 18, 0.003, 23, 110, 0.108, 20, -104, 0.007, 38, 28, 0.055, 35, 102, 0.004, 15, 35, 0.004, 14, -2, 0.006, 10, 9, 0.028, 47, 85, 0.001, -9, 122, 0.013, -33, -59, 0.003, 61, 50, 0.001, -18, 179, 0.006, 49, 120, 0.004, 48, -67, 0.002, -13, -77, 0.074, -19, -43, 0.005, 53, 12, 0.018, 49, 5, 0.020, 48, 20, 0.022, 44, 79, 0.004, 38, 101, 0.014, 35, -95, 0.007, 16, -3, 0.006, 12, 0, 0.022, 29, -89, 0.004, -3, 12, 0.001, 62, 78, 0.002, 59, 48, 0.001, 40, 22, 0.011, 11, 124, 0.018, -32, 24, 0.001, 40, -91, 0.005, 39, 126, 0.130, 16, -93, 0.023, 50, 15, 0.077, 27, 112, 0.192, 7, 45, 0.003, 41, 93, 0.001, -50, -74, 0.000, 39, 143, 0.000, 51, 103, 0.001, 30, -3, 0.001, -33, -70, 0.007, 7, -66, 0.003, -17, -56, 0.001, -6, 25, 0.004, 30, 112, 0.116, -37, -73, 0.015, 8, 124, 0.040, 45, 2, 0.018, -35, 152, 0.005, 17, 1, 0.001, 32, 77, 0.028, -26, -57, 0.058, 8, 11, 0.010, 41, -100, 0.001, 51, 34, 0.017, 32, 4, 0.001, 27, 44, 0.002, 4, 21, 0.004, 21, 94, 0.004, -1, 118, 0.020, -39, -73, 0.002, 46, 30, 0.030, 43, 128, 0.019, -4, 143, 0.002, 22, 40, 0.011, 19, 34, 0.001, -2, 26, 0.002, -10, 149, 0.002, 42, -4, 0.005, 57, 94, 0.001, 37, 31, 0.015, -2, 137, 0.003, 10, 105, 0.036, -10, 40, 0.007, -9, 28, 0.003, -4, 116, 0.010, -34, 26, 0.032, 56, 74, 0.001, 37, -112, 0.000, 52, 69, 0.002, 13, 6, 0.042, 9, 7, 0.018, -10, -73, 0.000, 24, 27, 0.000, -14, -58, 0.000, 23, -80, 0.001, -34, -55, 0.002, 0, 17, 0.000, -38, -64, 0.000, 47, 23, 0.025, 19, 94, 0.011, -23, -57, 0.002, -24, 30, 0.024, 58, 57, 0.029, 38, 56, 0.001, 35, 82, 0.001, 37, 99, 0.001, -8, 121, 0.000, 15, 23, 0.001, 10, 29, 0.003, 47, 121, 0.003, 38, -89, 0.012, 15, -88, 0.026, 49, 20, 0.042, 14, 14, 0.001, 25, 42, 0.003, 2, 35, 0.005, 1, 32, 0.015, 16, 82, 0.170, -22, 29, 0.004, 26, 108, 0.064, 25, -105, 0.002, 40, 107, 0.006, 2, -74, 0.001, 36, 38, 0.027, 38, 129, 0.012, 50, 81, 0.013, 12, -4, 0.011, 40, -6, 0.005, -20, -39, 0.002, -7, 151, 0.000, 40, -119, 0.000, 39, 98, 0.002, 54, 72, 0.003, 50, 51, 0.001, 30, 58, 0.004, 26, 45, 0.004, 3, 14, 0.002, 2, 103, 0.046, -20, 30, 0.010, -21, 24, 0.000, 51, 115, 0.001, -3, -68, 0.000, 12, 105, 0.021, -7, -75, 0.001, 45, 21, 0.026, -3, 41, 0.004, -35, -66, 0.002, 30, 92, 0.002, 45, -90, 0.002, 60, 27, 0.006, 32, 49, 0.021, 31, -102, 0.006, 28, 44, 0.001, -30, -70, 0.003, 55, 65, 0.003, 51, 62, 0.001, -3, 111, 0.003, 31, 75, 0.319, 28, -101, 0.003, 27, 72, 0.010, 42, -82, 0.043, 22, -79, 0.023, -1, 26, 0.001, -39, -61, 0.005, -2, -53, 0.001, 70, 24, 0.000, 66, 67, 0.003, 43, 124, 0.034, 45, 89, 0.001, 42, 61, 0.005, 55, 99, 0.002, -11, -62, 0.005, 57, 74, 0.001, 37, 67, 0.010, 33, 64, 0.002, 10, 125, 0.035, 28, 104, 0.036, 9, 22, 0.000, 56, 14, 0.007, 37, -76, 0.017, -4, -71, 0.000, 33, -83, 0.013, 9, -13, 0.053, 46, 123, 0.015, 43, -89, 0.016, 57, -152, 0.000, 0, 37, 0.011, 23, 69, 0.004, 1, 109, 0.001, 15, 106, 0.027, 11, 39, 0.040, -43, -72, 0.000, -9, -44, 0.001, 25, 104, 0.068, -13, 25, 0.002, 61, 9, 0.000, 58, 13, 0.007, 35, 110, 0.069, 37, 119, 0.113, 34, 71, 0.030, 15, -5, 0.001, 49, 95, 0.000, 11, -8, 0.007, 48, -122, 0.013, 20, 111, 0.054, 1, -53, 0.000, 53, 51, 0.056, 49, 48, 0.001, 29, 73, 0.072, 25, 70, 0.053, -19, 29, 0.008, 68, 33, 0.003, 48, 108, 0.003, 26, 128, 0.037, -32, -70, 0.002, 40, 79, 0.002, 39, -92, 0.003, 50, 117, 0.003, 12, 24, 0.007, 11, 99, 0.005, -12, 30, 0.005, 59, 40, 0.012, 39, 53, 0.001, 36, -95, 0.021, 35, 58, 0.008, 30, -85, 0.008, -8, -46, 0.001, 7, 36, 0.016, -17, 30, 0.005, 54, 36, 0.005, 7, -11, 0.020, 6, 16, 0.005, -3, -64, 0.000, -26, 29, 0.071, -27, -58, 0.004, 60, 8, 0.000, 21, 71, 0.075, 36, 78, 0.003, 17, 76, 0.086, -6, -47, 0.013, 42, 112, 0.003, -16, -54, 0.002, 21, -104, 0.012, 54, 77, 0.001, -40, -72, 0.005, 32, 69, 0.003, 28, 72, 0.033, 27, -13, 0.000, 8, 19, 0.005, -15, 40, 0.011, -16, 25, 0.002, 55, 37, 0.023, 31, 31, 0.157, 42, -110, 0.000, -6, 150, 0.001, 43, 88, 0.047, 45, 125, 0.041, 18, 27, 0.001, 52, -113, 0.004, 9, -79, 0.034, 46, -75, 0.001, -11, -74, 0.001, -15, -73, 0.002, 57, 38, 0.003, 52, -2, 0.074, 24, 84, 0.084, -24, -56, 0.004, -28, -53, 0.014, 43, 3, 0.017, 24, 67, 0.036, 13, 99, 0.012, -28, 26, 0.004, -28, -64, 0.011, 43, 20, 0.024, 23, 105, 0.042, 38, -3, 0.013, 0, -80, 0.000, 25, 116, 0.063, 61, 13, 0.000, 49, 91, 0.000, -8, 114, 0.123, -18, 23, 0.000, 53, 39, 0.020, 29, 13, 0.001, 44, 116, 0.002, 6, -1, 0.073, 48, 128, 0.011, 40, 51, 0.017, 36, 46, 0.018, 35, 5, 0.016, -19, 146, 0.000, -30, -50, 0.019, 26, -109, 0.008, 17, 121, 0.024, 50, 12, 0.042, 12, -61, 0.004, 27, 83, 0.151, 29, 100, 0.002, 6, -7, 0.011, -36, 175, 0.002, 54, -128, 0.001, 30, 34, 0.002, 6, 44, 0.002, 54, -113, 0.001, 64, 41, 0.019, -30, 32, 0.026, 41, 34, 0.010, 36, 122, 0.024, 32, 122, 0.075, -25, 153, 0.002, -7, 14, 0.002, 27, -98, 0.002, 42, 84, 0.005, 41, -81, 0.087, 52, 94, 0.000, 51, 21, 0.024, 32, 41, 0.003, 27, 15, 0.001, -9, -40, 0.004, 55, 9, 0.008, 51, 6, 0.106, 32, -112, 0.000, 31, 131, 0.052, 42, -122, 0.005, 18, -16, 0.003, -1, -46, 0.002, -38, 141, 0.002, -5, 15, 0.009, -6, 122, 0.001, 42, 21, 0.043, 18, 31, 0.001, 33, 7, 0.002, -5, -64, 0.000, -15, -45, 0.001, 22, 107, 0.033, 37, -5, 0.040, 52, 42, 0.020, 13, 33, 0.021, 47, -111, 0.003, -10, -36, 0.035, -11, 31, 0.004, -9, 14, 0.030, 56, 86, 0.003, -3, 148, 0.000, 33, -91, 0.005, 47, 34, 0.029, 44, 20, 0.027, 23, 28, 0.000, 20, 42, 0.011, -8, 146, 0.001, -4, 32, 0.012, 44, -93, 0.053, 62, 39, 0.001, 23, 109, 0.092, 20, -103, 0.123, 38, 25, 0.001, 35, 101, 0.003, -27, 154, 0.004, 15, 34, 0.012, 14, 3, 0.005, 10, 10, 0.019, 47, 132, 0.014, 61, 49, 0.001, -8, 111, 0.417, 49, 119, 0.001, 48, -66, 0.001, 29, 4, 0.001, -19, -40, 0.010, 53, 11, 0.069, -3, 102, 0.011, 49, 8, 0.053, 48, 13, 0.034, 44, 80, 0.003, 38, 102, 0.009, 16, -2, 0.001, 12, 1, 0.007, 29, -94, 0.008, 59, 47, 0.001, 40, 23, 0.045, 11, 123, 0.053, 40, -90, 0.006, 39, 125, 0.019, -44, -73, 0.000, 16, -92, 0.023, 50, 16, 0.039, 27, 111, 0.101, -22, -49, 0.012, 41, 96, 0.001, -21, -47, 0.020, 39, 142, 0.034, 51, 102, 0.000, 30, -2, 0.000, 7, -67, 0.003, -17, -57, 0.001, -6, 26, 0.003, 30, 109, 0.105, 45, 1, 0.016, 60, 64, 0.000, -29, -55, 0.005, -35, 151, 0.018, 32, 78, 0.004, -6, -55, 0.000, -26, -56, 0.016, 8, 12, 0.015, 41, -101, 0.000, 3, 100, 0.044, 55, 60, 0.010, 51, 33, 0.009, 32, -3, 0.002, 66, 77, 0.004, 27, 43, 0.001, 4, 22, 0.004, -16, -47, 0.040, 21, 93, 0.055, -1, 117, 0.006, -39, -70, 0.000, 46, 35, 0.007, 43, 127, 0.056, 19, 33, 0.001, -2, 15, 0.001, 48, 96, 0.000, -25, 48, 0.002, 9, -84, 0.037, -10, 150, 0.002, 43, 144, 0.009, 42, -7, 0.015, 57, 93, 0.001, 37, 42, 0.021, 10, 106, 0.176, 28, 77, 0.169, -10, 37, 0.003, -14, -44, 0.003, 56, 75, 0.002, 37, -113, 0.002, 52, 70, 0.002, 13, 5, 0.012, 9, 10, 0.036, 46, 80, 0.000, 24, 28, 0.000, -14, -61, 0.001, 23, -81, 0.007, -34, -54, 0.002, 0, 18, 0.000, -38, -67, 0.001, 47, 22, 0.035, 34, -111, 0.002, -23, -54, 0.008, -24, 31, 0.036, 62, 51, 0.001, 58, 58, 0.010, 35, 81, 0.001, 37, 94, 0.000, 34, 36, 0.020, 15, 22, 0.001, 10, 30, 0.009, 47, 120, 0.001, 1, -78, 0.007, 38, -88, 0.005, 15, -89, 0.015, 49, 19, 0.072, 25, 41, 0.002, -2, 101, 0.015, 2, 36, 0.003, 1, 31, 0.020, 16, 83, 0.045, -22, 30, 0.004, 48, 49, 0.000, 26, 105, 0.080, 25, -102, 0.002, 40, 108, 0.013, 2, -77, 0.006, 36, 39, 0.019, -18, -70, 0.005, 50, 82, 0.003, 12, 29, 0.004, -31, 31, 0.025, 40, -5, 0.013, 29, 123, 0.017, 7, 127, 0.017, 6, -62, 0.001, 39, 97, 0.001, 54, 69, 0.002, 50, 52, 0.001, 30, 47, 0.014, 26, 46, 0.004, 6, 49, 0.002, 3, 13, 0.004, 2, 104, 0.011, 17, -62, 0.002, -21, 23, 0.000, 51, 114, 0.001, -3, -69, 0.000, 12, 106, 0.030, 45, 24, 0.021, 6, 100, 0.007, 30, 89, 0.000, 45, -91, 0.003, 60, 28, 0.003, 32, 50, 0.012, -17, -41, 0.005, 31, -103, 0.001, 28, 45, 0.000, 55, 64, 0.002, 51, 61, 0.001, 31, 74, 0.202, 28, -100, 0.007, 9, 106, 0.113, 27, 71, 0.013, 22, -78, 0.005, -1, 25, 0.002, -2, -52, 0.000, -5, -42, 0.015, 46, 63, 0.001, 43, 123, 0.024, 45, 92, 0.001, 42, 62, 0.003, 6, -2, 0.025, 46, -102, 0.001, -11, -63, 0.001, -15, -66, 0.000, 57, 73, 0.000, 37, 62, 0.008, 33, 63, 0.002, 10, 126, 0.010, 28, 105, 0.119, 9, 21, 0.001, 56, 15, 0.007, 37, -77, 0.032, -4, -70, 0.001, 33, -80, 0.014, 46, 124, 0.019, 43, -90, 0.004, 0, 38, 0.029, -5, 146, 0.002, 13, 122, 0.052, 1, 112, 0.007, 15, 105, 0.062, 11, 38, 0.052, -43, -73, 0.003, -9, -45, 0.000, 25, 103, 0.067, -13, 16, 0.018, 61, 12, 0.001, 58, 14, 0.006, 0, 102, 0.028, -18, 169, 0.001, 35, 109, 0.049, 37, 130, 0.007, 34, 72, 0.110, 15, -6, 0.002, 14, 75, 0.040, 11, -9, 0.004, 48, -121, 0.001, -32, 149, 0.000, 53, 46, 0.018, 49, 47, 0.001, 29, 76, 0.092, -9, 126, 0.012, 25, 69, 0.093, -19, 32, 0.013, 68, 34, 0.006, 48, 101, 0.000, 40, 80, 0.003, 39, -93, 0.003, 50, 118, 0.001, 12, 25, 0.010, -12, 31, 0.003, 59, 39, 0.002, 36, -94, 0.011, 35, 57, 0.002, 30, -84, 0.011, -8, -45, 0.001, 7, 35, 0.001, -17, 29, 0.004, 54, 33, 0.006, 7, -12, 0.008, 6, 13, 0.002, 17, -98, 0.016, -3, -65, 0.000, -26, 30, 0.020, -27, -59, 0.003, -13, -39, 0.020, 60, 9, 0.001, 21, 50, 0.002, 36, 79, 0.002, 17, 75, 0.093, -6, -46, 0.002, 31, -116, 0.001, 42, 109, 0.001, -16, -53, 0.000, 21, -105, 0.009, -20, -58, 0.000, 54, 78, 0.001, 32, 70, 0.025, 28, 73, 0.018, 8, 20, 0.001, -16, 26, 0.002, 55, 36, 0.005, 31, 30, 0.065, 42, -113, 0.001, 19, 48, 0.002, 18, -87, 0.001, -3, -48, 0.003, 65, 27, 0.000, 43, 87, 0.006, 45, 128, 0.041, 18, 28, 0.001, 52, -112, 0.001, 9, -76, 0.002, 46, -74, 0.001, -11, -75, 0.005, -14, 41, 0.008, -15, -70, 0.005, 57, 37, 0.003, 52, -1, 0.157, -10, -35, 0.035, 24, 77, 0.049, 34, 119, 0.209, -24, -63, 0.002, -28, -52, 0.017, 43, 2, 0.037, 24, 68, 0.219, -9, 32, 0.009, 0, 74, 0.001, 13, 94, 0.001, -28, 27, 0.017, 43, 19, 0.022, 24, -77, 0.001, 23, 104, 0.050, 38, -2, 0.004, 25, 115, 0.077, -38, 177, 0.003, 61, 16, 0.001, 49, 126, 0.008, -8, 115, 0.018, -42, 173, 0.001, -18, 24, 0.001, 53, 18, 0.018, 44, 117, 0.002, 5, 22, 0.004, 38, 79, 0.004, 49, -68, 0.001, 48, 137, 0.000, 14, 122, 0.331, 63, 13, 0.001, 36, 47, 0.019, 35, 12, 0.002, 11, 126, 0.015, 26, -108, 0.006, -11, 30, 0.004, 39, 24, 0.002, 50, 9, 0.110, 27, 82, 0.167, 29, 99, 0.002, 6, -6, 0.027, 53, 102, 0.002, 30, -9, 0.030, 6, 41, 0.006, 17, -102, 0.001, 54, -112, 0.000, 64, 42, 0.000, -30, 29, 0.017, 41, 33, 0.025, 36, 123, 0.008, 17, 39, 0.006, -3, -44, 0.035, -25, 152, 0.000, -7, 13, 0.001, 27, -99, 0.013, 45, -83, 0.001, 42, 81, 0.004, 41, -78, 0.006, -17, -48, 0.016, 51, 28, 0.006, 32, 42, 0.002, -25, -69, 0.002, 22, -97, 0.018, -16, 46, 0.001, -20, 49, 0.010, 51, 5, 0.150, 32, -103, 0.002, -25, -70, 0.001, 19, 28, 0.001, -1, -47, 0.005, -5, 14, 0.011, 46, -121, 0.000, 42, 22, 0.050, 18, 32, 0.001, 33, 10, 0.007, -5, -65, 0.001, -15, -42, 0.009, 22, 108, 0.046, 0, 128, 0.009, 52, 43, 0.005, 13, 36, 0.004, -10, -39, 0.002, 24, 113, 0.059, 56, 87, 0.005, 33, -88, 0.007, 47, 33, 0.009, 44, 21, 0.031, 23, 27, 0.000, 20, 43, 0.009, -4, 33, 0.024, 44, -92, 0.011, 62, 40, 0.001, 20, -102, 0.035, 35, 108, 0.056, 15, 33, 0.079, 14, 4, 0.004, 10, 7, 0.011, 47, 131, 0.025, 61, 52, 0.004, 38, -119, 0.002, 49, 122, 0.004, 48, -65, 0.001, 29, 3, 0.001, -19, -41, 0.012, 53, 6, 0.012, 49, 7, 0.067, 48, 14, 0.028, 44, 81, 0.010, 40, 129, 0.030, 38, 107, 0.035, 35, -105, 0.003, 16, -1, 0.001, 53, -101, 0.000, 12, 2, 0.004, 29, -95, 0.108, 59, 46, 0.001, 40, 24, 0.008, 61, 77, 0.000, 35, 40, 0.011, 11, 122, 0.002, 40, -89, 0.015, 39, 124, 0.016, 16, -99, 0.016, 50, 13, 0.069, -12, -51, 0.000, 27, 110, 0.072, 41, 95, 0.001, 3, 40, 0.003, 2, 129, 0.002, 39, 141, 0.035, -21, 58, 0.036, -21, -64, 0.003, 30, 3, 0.001, 7, -68, 0.001, -17, -58, 0.001, -6, 23, 0.019, 30, 110, 0.066, 8, 118, 0.003, 45, 4, 0.023, 60, 65, 0.002, -35, 146, 0.000, 32, 79, 0.000, -26, -59, 0.002, 8, 5, 0.048, 3, 99, 0.153, 55, 59, 0.003, 51, 56, 0.022, 32, -2, 0.001, 27, 42, 0.001, 4, 23, 0.003, 22, -101, 0.018, -16, -46, 0.001, 21, 96, 0.077, -1, 132, 0.002, -39, -71, 0.003, 46, 36, 0.010, 43, 126, 0.117, 55, 125, 0.002, -2, 16, 0.001, -25, 47, 0.005, 9, -85, 0.002, 43, 143, 0.021, 42, -6, 0.008, -11, 38, 0.003, 57, 96, 0.000, 37, 41, 0.021, 28, 78, 0.584, -10, 38, 0.001, -14, -47, 0.001, 56, 76, 0.001, 52, 71, 0.003, 13, 8, 0.033, 9, 9, 0.041, 46, 77, 0.000, -14, -60, 0.002, 23, -82, 0.072, -34, -65, 0.002, 0, 19, 0.003, 47, 21, 0.022, 19, 100, 0.031, 34, -110, 0.001, -23, -55, 0.004, -24, 32, 0.003, 58, 55, 0.003, 35, 136, 0.059, 34, 33, 0.004, 15, 21, 0.001, 10, 43, 0.005, -9, 31, 0.002, -9, 117, 0.087, -40, 175, 0.004, 1, -79, 0.001, 38, -91, 0.005, 15, -90, 0.021, 49, 22, 0.029, 25, 44, 0.005, 2, 33, 0.030, 1, 34, 0.036, 26, 106, 0.102, 25, -103, 0.027, 40, 101, 0.000, 2, -76, 0.022, 36, 40, 0.021, 50, 79, 0.001, 12, 30, 0.006, 40, -4, 0.014, -52, -70, 0.001, 29, 118, 0.062, 7, 126, 0.070, 6, -57, 0.004, 40, -117, 0.000, 36, -122, 0.002, 54, 70, 0.011, 53, 141, 0.002, 50, 49, 0.002, 30, 48, 0.029, 26, 59, 0.003, 6, 50, 0.000, 3, 20, 0.014, 2, 101, 0.009, -21, 22, 0.000, 51, 113, 0.001, 12, 107, 0.005, 45, 23, 0.016, 30, 90, 0.001, -37, -70, 0.001, -27, 33, 0.017, 45, -88, 0.002, 60, 29, 0.006, 21, -98, 0.028, 32, 51, 0.020, 28, 46, 0.001, 8, 41, 0.024, 55, 63, 0.003, 51, 68, 0.001, -3, 137, 0.000, 31, 73, 0.126, 28, -99, 0.001, 9, 105, 0.011, 27, 70, 0.041, -1, 24, 0.003, -2, -55, 0.001, -5, -43, 0.009, 66, 65, 0.000, 46, 64, 0.000, 43, 122, 0.021, 45, 91, 0.002, 42, 75, 0.035, 55, 97, 0.001, 46, -113, 0.001, -15, -67, 0.000, 57, 76, 0.000, 37, 61, 0.003, 33, 66, 0.004, 28, 106, 0.122, 9, 24, 0.002, -11, -47, 0.001, -9, 23, 0.002, -4, 121, 0.014, 56, 16, 0.006, 37, -82, 0.011, -4, -69, 0.001, 33, -81, 0.013, 44, 62, 0.000, 46, 121, 0.005, 43, -91, 0.006, 24, 57, 0.007, 0, 39, 0.003, -5, 145, 0.003, 13, 121, 0.016, 1, 111, 0.019, 15, 104, 0.063, 11, 37, 0.020, 14, 46, 0.011, 25, 106, 0.064, -13, 15, 0.007, 61, 11, 0.002, 58, 27, 0.007, 35, 116, 0.239, 37, 129, 0.027, 34, 69, 0.015, 15, -7, 0.002, 14, 76, 0.104, 11, -10, 0.004, -8, 144, 0.001, -32, 150, 0.000, -19, -54, 0.001, 53, 45, 0.012, 49, 50, 0.001, 29, 75, 0.054, 25, 72, 0.025, -33, -67, 0.001, -19, 31, 0.011, 48, 102, 0.000, -32, -68, 0.015, 40, 73, 0.080, 39, -94, 0.038, 50, 115, 0.001, 12, 26, 0.010, -12, 32, 0.002, 59, 38, 0.012, 36, -93, 0.005, 35, 48, 0.016, 12, -87, 0.008, 30, -87, 0.015, -8, -44, 0.001, 29, 90, 0.004, 7, 34, 0.002, -36, 149, 0.001, 54, 34, 0.003, 30, 28, 0.002, 6, 14, 0.004, -20, 35, 0.018, 17, -99, 0.023, -7, -61, 0.000, -27, -56, 0.006, 60, 10, 0.001, 21, 49, 0.002, 18, 85, 0.035, 36, 80, 0.004, 17, 46, 0.001, -6, -49, 0.003, 42, 110, 0.001, -16, -52, 0.002, -20, -57, 0.001, 54, 83, 0.007, 32, 71, 0.054, 31, -4, 0.005, 28, 74, 0.022, 27, -15, 0.007, 8, 13, 0.010, -16, 27, 0.002, 55, 35, 0.004, 42, -112, 0.003, 19, 47, 0.003, 65, 30, 0.000, 43, 86, 0.003, 45, 127, 0.157, 18, 25, 0.001, 52, -111, 0.000, 13, -86, 0.021, -30, 153, 0.001, -18, -57, 0.001, -15, -71, 0.007, 57, 40, 0.029, 56, -3, 0.024, 52, 0, 0.056, 24, 78, 0.047, 34, 120, 0.147, -5, 132, 0.001, -24, -62, 0.000, 47, -116, 0.003, 43, 1, 0.013, -1, 10, 0.002, 67, 16, 0.001, 13, 93, 0.002, -28, 28, 0.007, 43, 18, 0.031, 23, 103, 0.040, -37, -60, 0.003, 0, -70, 0.000, 15, 76, 0.080, 61, 15, 0.001, 49, 125, 0.006, -8, 116, 0.001, 29, -6, 0.001, 20, 77, 0.077, -18, 21, 0.000, 53, 17, 0.013, 29, 15, 0.000, 44, 118, 0.002, 5, 21, 0.004, 38, 80, 0.003, 48, 138, 0.000, 63, 28, 0.003, 40, 45, 0.079, 36, 48, 0.011, 35, 11, 0.040, 12, 54, 0.001, 11, 125, 0.045, 26, -111, 0.000, 39, 23, 0.020, 17, 123, 0.003, -55, -67, 0.001, 50, 10, 0.042, 27, 81, 0.188, 29, 94, 0.001, 41, 118, 0.031, 54, -130, 0.001, 53, 101, 0.001, 30, -8, 0.015, 26, -13, 0.001, 6, 42, 0.002, -10, -68, 0.002, 54, -115, 0.000, -21, -54, 0.019, 64, 43, 0.000, -30, 30, 0.009, 41, 36, 0.022, 17, 42, 0.001, -3, -45, 0.007, -6, -77, 0.003, -25, 151, 0.000, -7, 16, 0.005, 45, -80, 0.000, 42, 82, 0.004, 41, -79, 0.008, 3, 118, 0.004, 51, 27, 0.010, 32, 43, 0.002, 8, 49, 0.002, -16, 47, 0.005, 51, 12, 0.051, 32, -102, 0.003, 45, 142, 0.002, 19, 27, 0.001, 6, -11, 0.006, 33, 92, 0.000, -5, 13, 0.014, -6, 120, 0.078, 65, 58, 0.002, 46, -120, 0.006, 42, 3, 0.019, 18, 29, 0.001, 33, 9, 0.002, -5, -66, 0.000, -29, 152, 0.001, -15, -43, 0.003, 22, 105, 0.031, -20, -50, 0.003, 52, 44, 0.005, 13, 35, 0.004, 47, -113, 0.000, -10, -38, 0.007, 24, 114, 0.067, 56, 88, 0.002, 33, -89, 0.004, 47, 32, 0.011, 44, 22, 0.027, 23, 26, 0.000, 20, 44, 0.007, 19, 87, 0.005, 34, -85, 0.014, -4, 34, 0.028, 44, -91, 0.008, 62, 37, 0.001, 20, -101, 0.066, 38, 31, 0.017, 35, 107, 0.055, 15, 32, 0.002, 14, 1, 0.006, 10, 8, 0.050, 47, 130, 0.018, 61, 51, 0.006, -33, 20, 0.000, -18, 178, 0.008, 6, 40, 0.013, 49, 121, 0.006, 48, -64, 0.001, 29, -2, 0.001, -13, -56, 0.000, 16, 121, 0.070, 53, 5, 0.000, 49, 10, 0.054, 48, 15, 0.033, 26, 83, 0.238, 44, 82, 0.020, 40, 130, 0.009, 38, 108, 0.002, 35, -106, 0.020, 16, 0, 0.003, 12, 3, 0.007, 29, -92, 0.001, 48, -113, 0.000, 59, 45, 0.001, 40, 17, 0.022, 35, 39, 0.022, 11, 121, 0.000, -8, 37, 0.010, 40, -88, 0.012, 39, 123, 0.060, 16, -98, 0.009, 50, 14, 0.038, 27, 109, 0.057, 3, 39, 0.001, 51, 108, 0.015, 30, 4, 0.001, 7, -69, 0.002, 3, -72, 0.001, -17, -59, 0.000, -6, 24, 0.010, 30, 115, 0.249, 23, 95, 0.011, 45, 3, 0.006, -4, -40, 0.016, 17, 6, 0.000, -6, -57, 0.000, 28, 19, 0.000, -26, -58, 0.005, 8, 6, 0.018, 3, 98, 0.011, 55, 58, 0.003, 51, 55, 0.003, 32, -1, 0.001, 31, 52, 0.009, 27, 41, 0.001, 4, 24, 0.001, 22, -100, 0.020, -16, -45, 0.001, 21, 95, 0.033, -1, 131, 0.000, -3, -43, 0.002, 46, 33, 0.033, 43, 125, 0.073, 22, 43, 0.011, 55, 92, 0.001, -2, 13, 0.001, -25, 46, 0.006, 43, 142, 0.070, 42, -9, 0.002, 57, 95, 0.000, 19, -88, 0.002, 37, 44, 0.011, -2, 128, 0.001, 10, 104, 0.006, 28, 79, 0.240, -14, -46, 0.002, 56, 69, 0.001, 37, -103, 0.000, 52, 72, 0.001, 13, 7, 0.024, 8, 94, 0.000, 47, -77, 0.000, 9, 12, 0.026, 46, 78, 0.000, 43, -80, 0.030, -11, 125, 0.002, -34, -64, 0.004, 0, 20, 0.002, 37, -118, 0.001, 47, 68, 0.007, 19, 99, 0.007, -8, 143, 0.000, -23, -52, 0.007, -24, 25, 0.001, 14, 38, 0.008, 58, 56, 0.007, 38, 59, 0.004, 35, 135, 0.026, 34, 34, 0.008, 15, 4, 0.002, 10, 44, 0.007, 14, 32, 0.005, 1, -76, 0.009, 38, -90, 0.078, 15, -91, 0.045, 49, 21, 0.036, 25, 43, 0.005, 2, 34, 0.015, 1, 33, 0.014, 16, 77, 0.063, -22, 44, 0.002, 48, 51, 0.000, 26, 103, 0.045, 25, -100, 0.098, 36, 41, 0.039, -22, -69, 0.001, 50, 80, 0.001, 12, 31, 0.007, 7, 172, 0.001, 5, 126, 0.005, -7, 156, 0.004, 29, 117, 0.090, 7, 125, 0.052, 39, 95, 0.000, 36, -121, 0.018, 54, 75, 0.003, 50, 50, 0.001, 30, 45, 0.003, 26, 60, 0.002, 3, 19, 0.004, 2, 102, 0.029, 12, 108, 0.012, -7, -70, 0.000, 45, 18, 0.012, -25, -65, 0.019, 36, 101, 0.003, -3, 38, 0.011, 30, 79, 0.060, 45, -89, 0.003, 60, 30, 0.021, -29, -60, 0.001, 21, -99, 0.012, 32, 52, 0.045, 31, -105, 0.000, 28, 47, 0.002, 8, 42, 0.015, 55, 62, 0.047, 51, 67, 0.001, -3, 140, 0.000, 31, 72, 0.046, 28, -98, 0.001, 27, 69, 0.063, 42, -71, 0.142, -1, 23, 0.003, -2, -54, 0.001, 43, 121, 0.012, 45, 86, 0.005, 42, 76, 0.008, 22, 71, 0.073, 56, -117, 0.000, 55, 96, 0.001, 52, -122, 0.001, 13, -59, 0.009, -25, 18, 0.000, 5, 12, 0.006, 46, -112, 0.002, -11, -61, 0.003, -15, -64, 0.002, 57, 75, 0.000, 37, 64, 0.002, 33, 65, 0.003, 28, 107, 0.091, 9, 23, 0.000, -11, -44, 0.002, -18, -63, 0.019, -15, 13, 0.001, 56, 41, 0.027, 37, -83, 0.006, -4, -68, 0.000, 33, -78, 0.004, 44, 63, 0.001, 46, 122, 0.009, 43, -84, 0.012, 20, 53, 0.002, 0, 40, 0.002, -5, 152, 0.002, 13, 124, 0.073, 43, 53, 0.002, 1, 114, 0.001, 34, -77, 0.012, 15, 103, 0.058, 11, 44, 0.008, 10, -83, 0.008, -9, -47, 0.001, 25, 105, 0.075, -13, 14, 0.004, 61, 6, 0.002, 58, 28, 0.001, 35, 115, 0.191, 34, 70, 0.074, 15, -8, 0.002, 49, 100, 0.000, 11, -11, 0.008, -32, 151, 0.002, -19, -55, 0.000, 53, 48, 0.005, 49, 49, 0.001, 29, 70, 0.014, 25, 71, 0.020, -2, 106, 0.005, -19, 26, 0.001, 48, 103, 0.000, 40, 74, 0.014, 39, -95, 0.008, 36, 69, 0.023, 50, 116, 0.001, 12, 27, 0.004, -7, 135, 0.001, 11, 104, 0.003, -12, 33, 0.001, 59, 37, 0.001, 5, 98, 0.013, 39, 50, 0.012, 36, -92, 0.003, 35, 47, 0.020, 12, -86, 0.040, 30, -86, 0.007, -8, -51, 0.000, 29, 89, 0.003, 7, 33, 0.004, -36, 150, 0.011, 54, 39, 0.015, 30, 25, 0.000, 6, 19, 0.002, 17, -96, 0.024, -27, -57, 0.002, 60, 11, 0.012, 21, 52, 0.002, 36, 81, 0.003, 17, 45, 0.002, -6, -48, 0.003, 42, 123, 0.041, -16, -59, 0.001, -20, -56, 0.001, 52, 85, 0.003, 54, 84, 0.026, -41, -63, 0.001, 32, 72, 0.047, 31, -5, 0.007, 28, 75, 0.030, 8, 14, 0.004, -16, 28, 0.006, 55, 34, 0.004, 31, 44, 0.006, 19, 46, 0.003, 18, -89, 0.003, 33, 127, 0.017, -5, 56, 0.002, -36, 148, 0.002, 65, 29, 0.000, 43, 85, 0.004, 45, 122, 0.013, 18, 26, 0.001, 6, 7, 0.088, 52, -110, 0.000, 13, -87, 0.027, 46, -68, 0.001, -11, -73, 0.000, -14, 39, 0.007, -15, -68, 0.001, 57, 39, 0.012, 56, -2, 0.010, 52, 1, 0.030, 24, 79, 0.061, 34, 117, 0.236, 33, -114, 0.001, -24, -61, 0.000, 47, -117, 0.013, 43, 8, 0.035, 19, 122, 0.001, 67, 15, 0.001, 43, 17, 0.017, 58, -3, 0.001, -37, -61, 0.002, 15, 75, 0.079, 47, 93, 0.000, 62, -7, 0.001, 61, 42, 0.001, -46, 170, 0.001, 49, 128, 0.004, -8, 109, 0.170, 29, -7, 0.001, 20, 78, 0.082, -18, 22, 0.000, 53, 20, 0.017, 48, -4, 0.018, 29, 42, 0.001, 44, 119, 0.006, 5, 24, 0.001, 38, 77, 0.013, 48, 139, 0.000, 63, 27, 0.001, 40, 46, 0.017, 39, 5, 0.001, 36, 49, 0.015, 35, 10, 0.021, -19, 147, 0.000, 12, 55, 0.000, 39, 22, 0.012, 50, 7, 0.077, 27, 88, 0.023, 29, 93, 0.002, 41, 117, 0.015, 53, 104, 0.005, 26, -12, 0.001, -9, 143, 0.000, 17, -100, 0.008, 54, -114, 0.000, -30, 27, 0.019, 41, 35, 0.013, 36, 109, 0.012, 32, 117, 0.188, -6, -76, 0.002, -7, 15, 0.003, 42, 79, 0.005, 41, -76, 0.009, 3, 117, 0.001, 21, -75, 0.002, 51, 26, 0.009, 32, 44, 0.002, 8, 50, 0.002, 4, 45, 0.003, 22, -99, 0.008, -16, 48, 0.005, 51, 11, 0.038, 32, -101, 0.002, 8, -63, 0.006, 19, 26, 0.001, -1, -49, 0.001, 33, 91, 0.000, -5, 20, 0.014, 46, -123, 0.004, 42, 4, 0.004, 57, 86, 0.002, 18, 30, 0.001, 33, 12, 0.003, 6, 0, 0.036, -29, 151, 0.000, -15, -40, 0.014, 22, 106, 0.021, 37, -8, 0.009, 52, 29, 0.006, 13, 30, 0.006, 47, -114, 0.001, 46, 103, 0.000, 24, 115, 0.051, 33, -86, 0.032, 47, 31, 0.008, 44, 23, 0.025, 19, 86, 0.032, 34, -84, 0.022, -4, 35, 0.014, 44, -90, 0.004, 62, 38, 0.001, 20, -100, 0.064, 38, 32, 0.015, 35, 106, 0.058, 15, 31, 0.001, 14, 2, 0.008, 10, 5, 0.009, 47, 129, 0.017, 61, 46, 0.001, -33, 19, 0.002, 49, 124, 0.004, 11, -83, 0.001, 48, -55, 0.001, 29, -3, 0.001, 16, 122, 0.038, 53, 8, 0.022, 49, 9, 0.126, 48, 16, 0.018, 26, 84, 0.316, 44, 83, 0.004, 5, -4, 0.069, 38, 105, 0.001, 35, -107, 0.001, 16, 9, 0.000, 12, 4, 0.016, 29, -93, 0.004, -37, 141, 0.000, 59, 52, 0.001, 40, 18, 0.041, -20, -43, 0.080, 35, 38, 0.052, 16, 16, 0.001, -8, 38, 0.012, 40, -95, 0.003, 39, 122, 0.073, 16, -97, 0.010, 50, 43, 0.003, 27, 116, 0.075, 3, 38, 0.001, -1, 103, 0.010, -21, 32, 0.013, 51, 107, 0.002, 30, 1, 0.000, 7, -70, 0.003, 3, -73, 0.006, -13, -38, 0.116, -6, 21, 0.007, -35, -62, 0.003, 30, 116, 0.155, -35, 148, 0.001, 17, 5, 0.000, -6, -56, 0.001, -26, -53, 0.014, 8, 7, 0.014, 41, -112, 0.004, 3, 97, 0.003, 55, 57, 0.003, 52, 125, 0.002, 51, 54, 0.002, 32, 0, 0.001, 31, 51, 0.012, 27, 48, 0.002, 4, 25, 0.001, 22, -103, 0.005, -16, -44, 0.005, 21, 106, 0.212, -39, -69, 0.003, 31, 100, 0.002, 46, 34, 0.012, 43, 132, 0.024, 22, 44, 0.006, 55, 91, 0.002, -2, 14, 0.002, -25, 45, 0.004, -10, 153, 0.000, 43, 141, 0.004, 42, -8, 0.044, 19, -89, 0.002, 37, 43, 0.015, -2, 125, 0.001, 28, 80, 0.220, -14, -49, 0.002, 56, 70, 0.003, 37, -100, 0.002, 52, 73, 0.001, -12, -66, 0.001, 13, 2, 0.012, 9, 11, 0.013, 46, 83, 0.002, 43, -81, 0.007, -14, -62, 0.000, -34, -67, 0.001, 0, 13, 0.000, 37, -119, 0.001, -23, 46, 0.002, -30, -49, 0.004, 23, 29, 0.000, 19, 98, 0.008, 34, -112, 0.003, -36, -60, 0.003, -23, -53, 0.004, -24, 26, 0.002, -43, -64, 0.001, 62, 50, 0.001, 58, 53, 0.006, 38, 60, 0.002, 35, 134, 0.025, 37, 95, 0.000, 15, 3, 0.001, 11, 0, 0.024, 10, 41, 0.011, -9, 29, 0.003, 5, -70, 0.000, -10, 162, 0.001, 1, -77, 0.028, 38, -85, 0.037, 49, 24, 0.044, 2, 31, 0.038, 1, 36, 0.014, 16, 78, 0.083, 48, 52, 0.001, 26, 104, 0.072, 25, -101, 0.007, 2, -78, 0.002, 36, 42, 0.030, -22, -68, 0.001, 50, 77, 0.000, 12, 32, 0.008, -42, -73, 0.005, -12, 22, 0.001, 59, 16, 0.007, 5, 125, 0.001, 36, -7, 0.000, 29, 120, 0.110, 7, 124, 0.031, 40, -123, 0.001, 39, 94, 0.001, 36, -120, 0.004, 54, 76, 0.002, 53, 143, 0.002, 50, 47, 0.002, 30, 46, 0.003, 26, 57, 0.001, 3, 18, 0.002, 2, 99, 0.030, 17, -61, 0.002, -21, 28, 0.005, 12, 77, 0.152, 64, -147, 0.002, 45, 17, 0.019, 6, 103, 0.022, 57, 12, 0.012, 36, 102, 0.052, -21, 165, 0.001, -3, 37, 0.004, 30, 80, 0.016, 45, -94, 0.008, 60, 31, 0.024, 32, 45, 0.037, 31, -106, 0.050, 28, 48, 0.007, 8, 43, 0.006, -16, 33, 0.002, 55, 61, 0.010, 51, 66, 0.001, -3, 139, 0.000, 31, 71, 0.034, 28, -97, 0.004, 9, 107, 0.044, 27, 76, 0.096, 42, -70, 0.028, -1, 22, 0.004, -5, -37, 0.006, 66, 63, 0.001, 46, 62, 0.001, 43, 96, 0.000, 45, 85, 0.003, 42, 73, 0.004, 22, 72, 0.060, 18, 51, 0.001, 55, 95, 0.003, -29, -50, 0.006, -15, -65, 0.000, 57, 62, 0.010, 56, -5, 0.001, 37, 63, 0.005, 33, 68, 0.008, 28, 108, 0.065, 9, 26, 0.000, -11, -45, 0.001, -15, 16, 0.004, 56, 42, 0.017, 37, -80, 0.010, 33, -79, 0.007, 44, 64, 0.000, 43, -85, 0.011, 20, 54, 0.002, -23, 26, 0.001, 13, 123, 0.025, 47, 55, 0.001, 43, 60, 0.003, 20, -155, 0.000, 1, 113, 0.002, 38, -27, 0.002, 37, 142, 0.001, 34, -76, 0.003, 15, 102, 0.032, 11, 43, 0.009, -9, -48, 0.002, 25, 108, 0.032, 58, 25, 0.004, 35, 114, 0.195, 37, 131, 0.000, 34, 67, 0.005, 15, -9, 0.005, 49, 99, 0.000, 11, -4, 0.022, -9, 112, 0.066, -32, 152, 0.001, -19, -52, 0.001, 53, 47, 0.008, 49, 52, 0.001, 48, 1, 0.015, 29, 69, 0.006, 25, 74, 0.047, -19, 25, 0.000, 48, 104, 0.000, -12, -77, 0.053, 40, 75, 0.003, 39, -96, 0.005, 36, 70, 0.016, -19, 170, 0.001, 50, 113, 0.001, 12, 28, 0.004, 11, 103, 0.001, -12, 34, 0.013, 59, 44, 0.001, 5, 97, 0.020, 39, 49, 0.023, 36, -107, 0.001, 35, 46, 0.022, 12, -85, 0.016, 30, -97, 0.028, -8, -50, 0.002, 29, 92, 0.010, 7, 32, 0.005, 8, 100, 0.043, 54, 40, 0.026, 6, 20, 0.002, -31, 152, 0.001, 17, -97, 0.011, -26, 33, 0.032, 8, 105, 0.006, 60, 12, 0.005, 41, 58, 0.002, 21, 51, 0.002, 18, 83, 0.042, 36, 82, 0.002, 17, 48, 0.001, -6, -51, 0.000, 42, 124, 0.136, -16, -58, 0.003, -20, -55, 0.001, 52, 86, 0.011, 54, 81, 0.001, 31, -6, 0.012, 28, 76, 0.071, 27, -9, 0.000, 8, 15, 0.003, -16, 21, 0.000, 55, 33, 0.003, 31, 43, 0.002, 42, -114, 0.003, 19, 45, 0.004, 18, -88, 0.005, 33, 130, 0.025, 43, 92, 0.001, 45, 121, 0.006, -4, 153, 0.001, 52, -109, 0.000, 13, -84, 0.002, 46, -71, 0.028, -14, 40, 0.012, -15, -69, 0.003, 57, 42, 0.012, 0, 103, 0.004, 52, 2, 0.031, 24, 80, 0.048, -9, 18, 0.003, 34, 118, 0.253, 33, -115, 0.001, -5, 130, 0.001, 47, -118, 0.000, 43, 7, 0.021, -13, -47, 0.001, -24, -45, 0.032, 43, 24, 0.021, 23, 101, 0.019, 38, 1, 0.003, 15, 74, 0.035, 47, 108, 0.008, 62, -6, 0.001, 61, 41, 0.001, -4, 102, 0.003, 49, 127, 0.007, -8, 110, 0.259, 29, -4, 0.000, 20, 79, 0.064, -18, 27, 0.003, 53, 19, 0.038, -3, 106, 0.008, 29, 41, 0.001, 44, 120, 0.011, 5, 23, 0.001, 38, 78, 0.016, -22, -159, 0.000, 48, 140, 0.000, 29, -102, 0.001, 63, 26, 0.001, 40, 47, 0.027, 39, 4, 0.005, 36, 50, 0.017, 35, 9, 0.015, 16, 53, 0.000, 39, 21, 0.017, 50, 8, 0.085, 27, 87, 0.031, 29, 96, 0.000, -22, -45, 0.020, 41, 120, 0.046, 3, 73, 0.000, 53, 103, 0.003, -35, -71, 0.011, -25, -56, 0.008, 17, -101, 0.004, -21, -44, 0.023, 8, 77, 0.106, -30, 28, 0.023, 41, 22, 0.023, -29, -59, 0.004, 36, 110, 0.020, 17, 44, 0.010, 32, 118, 0.144, -6, -79, 0.010, -7, 18, 0.005, 42, 80, 0.002, 41, -77, 0.006, 51, 25, 0.011, 32, 37, 0.032, 4, 46, 0.004, 22, -98, 0.013, 51, 10, 0.046, 32, -100, 0.002, -38, 178, 0.000, 8, -62, 0.020, 19, 25, 0.001, -1, -50, 0.001, 33, 94, 0.000, -5, 19, 0.022, 5, 1, 0.009, 46, -122, 0.007, 42, 1, 0.003, 57, 85, 0.001, 33, 11, 0.009, -5, -60, 0.000, -30, 150, 0.000, -18, -52, 0.001, -15, -41, 0.007, 22, 79, 0.052, 52, 30, 0.012, 13, 29, 0.004, 47, -115, 0.000, 46, 104, 0.000, 24, 116, 0.093, -14, -69, 0.001, 33, -87, 0.011, 47, 30, 0.018, 44, 24, 0.030, 19, 85, 0.088, 34, -87, 0.010, -4, 36, 0.011, 14, 44, 0.040, 44, -89, 0.009, 62, 43, 0.000, 38, 29, 0.035, 35, 105, 0.049, 15, 30, 0.001, 14, -9, 0.004, 10, 6, 0.012, 47, 128, 0.030, 61, 45, 0.001, -33, 18, 0.000, 38, -112, 0.001, 34, 11, 0.015, 49, 123, 0.003, 48, -54, 0.001, 29, 0, 0.000, 22, -12, 0.001, 16, 123, 0.003, 53, 7, 0.025, 49, 12, 0.052, 48, 25, 0.028, 26, 81, 0.298, 44, 84, 0.003, 5, -5, 0.018, 38, 106, 0.010, 35, -100, 0.001, 16, 10, 0.000, 53, -104, 0.000, 12, 5, 0.034, 29, -98, 0.048, 59, 51, 0.001, 40, 19, 0.021, 35, 37, 0.076, 16, 25, 0.001, -8, 39, 0.010, 26, -77, 0.001, -32, 29, 0.027, 40, -94, 0.002, -17, -47, 0.010, 16, -96, 0.015, 50, 44, 0.005, 27, 115, 0.086, 3, 37, 0.000, 2, 128, 0.000, -21, 31, 0.014, 51, 106, 0.001, 50, -101, 0.001, 30, 2, 0.000, 7, -71, 0.005, 3, -74, 0.044, -6, 22, 0.007, 30, 113, 0.145, -35, 147, 0.001, 17, 8, 0.000, -26, -52, 0.008, 8, 8, 0.015, 55, 56, 0.005, 52, 126, 0.002, 51, 53, 0.002, 32, 9, 0.003, 31, 50, 0.016, 27, 47, 0.002, 4, 26, 0.001, 22, -102, 0.021, -16, -51, 0.001, 21, 105, 0.028, -1, 129, 0.000, -36, 139, 0.010, 31, 99, 0.003, 46, 23, 0.011, 43, 131, 0.009, 22, 41, 0.008, 55, 90, 0.004, -2, 19, 0.004, -25, 44, 0.001, 57, 97, 0.001, 19, -90, 0.007, 37, 38, 0.030, -10, -76, 0.013, -2, 126, 0.001, 28, 81, 0.086, -14, -48, 0.002, -34, 19, 0.063, 56, 71, 0.001, 37, -101, 0.001, 34, 107, 0.047, 52, 74, 0.001, -44, -64, 0.001, 13, 1, 0.007, 47, -79, 0.001, 9, -2, 0.006, 46, 84, 0.005, 43, -82, 0.004, -34, -66, 0.003, -22, 167, 0.000, 0, 14, 0.000, -23, 45, 0.003, 43, 63, 0.000, 19, 97, 0.025, 34, -115, 0.000, -24, 27, 0.003, -43, -65, 0.001, 58, 54, 0.002, 38, 57, 0.004, 35, 133, 0.012, 37, 106, 0.019, 15, 2, 0.001, 11, -1, 0.012, 10, 42, 0.004, 5, -71, 0.001, 1, -74, 0.001, 38, -84, 0.017, 49, 23, 0.019, -28, -49, 0.011, 2, 32, 0.014, 1, 35, 0.035, 16, 79, 0.057, 48, 45, 0.048, 26, 101, 0.032, 36, 43, 0.014, 12, 33, 0.013, -42, -72, 0.004, -21, -49, 0.020, -12, 23, 0.001, 59, 15, 0.005, 39, 76, 0.015, 36, -6, 0.022, -7, 142, 0.000, 29, 119, 0.061, 7, 123, 0.025, 6, -58, 0.012, 40, -122, 0.006, 36, -119, 0.035, 54, 73, 0.003, 50, 48, 0.002, 30, 51, 0.011, 26, 58, 0.005, 7, 12, 0.004, 3, 17, 0.001, 2, 100, 0.055, 8, 82, 0.012, -21, 27, 0.001, 50, -97, 0.001, 12, 78, 0.124, 45, 20, 0.027, 36, 103, 0.044, -3, 40, 0.000, 30, 77, 0.190, -27, 30, 0.012, 45, -95, 0.003, 60, 32, 0.001, 21, -97, 0.009, 32, 46, 0.014, 31, -107, 0.001, 28, 49, 0.005, 8, 44, 0.004, -16, 34, 0.003, 55, 28, 0.005, 51, 65, 0.001, -3, 134, 0.001, 31, 70, 0.007, 28, -96, 0.003, 27, 75, 0.051, 42, -73, 0.033, 18, -63, 0.002, -1, 21, 0.003, -5, -38, 0.017, 66, 64, 0.001, 43, 95, 0.000, 45, 88, 0.002, 42, 74, 0.007, 22, 69, 0.001, 18, 52, 0.000, 55, 94, 0.001, 46, -114, 0.002, -11, -67, 0.002, -28, 152, 0.004, -15, -62, 0.000, 57, 61, 0.013, 56, -4, 0.003, 52, -9, 0.006, 33, 67, 0.005, 28, 109, 0.066, 9, 25, 0.002, -11, -50, 0.000, -15, 15, 0.004, 56, 43, 0.007, 37, -81, 0.012, 34, 79, 0.000, 44, 65, 0.001, -52, -69, 0.001, 43, -86, 0.008, -9, 36, 0.010, 20, 55, 0.001, -30, -55, 0.003, 47, 54, 0.001, 43, 59, 0.002, -12, 21, 0.001, 37, 141, 0.066, 34, -79, 0.014, 15, 101, 0.049, 11, 42, 0.003, 10, -69, 0.033, -9, -49, 0.002, 25, 107, 0.036, -13, 20, 0.001, 61, 8, 0.001, 58, 26, 0.004, 35, 113, 0.101, 37, 126, 0.009, 34, 68, 0.007, 15, -10, 0.004, 49, 102, 0.000, 11, -5, 0.012, 14, 33, 0.027, -19, -53, 0.001, 53, 58, 0.001, 49, 51, 0.000, 48, 2, 0.032, 29, 72, 0.113, 44, 125, 0.044, 25, 73, 0.034, -19, 28, 0.003, 48, 81, 0.001, -12, -76, 0.027, 40, 76, 0.001, 39, -97, 0.001, 36, 71, 0.005, 50, 114, 0.001, -38, 147, 0.001, -12, 35, 0.008, 59, 43, 0.001, 39, 48, 0.019, 36, -106, 0.001, 35, 45, 0.025, 12, -84, 0.004, 30, -96, 0.008, -8, -49, 0.003, 29, 91, 0.004, 14, 79, 0.069, 7, 31, 0.005, -17, 41, 0.001, 54, 37, 0.020, 53, 110, 0.001, 30, 15, 0.001, -22, -43, 0.027, 6, 17, 0.003, 17, -94, 0.016, -26, 34, 0.006, 8, 106, 0.007, 41, 57, 0.000, 21, 46, 0.004, 18, 84, 0.113, 36, 83, 0.001, 17, 47, 0.001, -6, -50, 0.003, 42, 121, 0.023, -16, -57, 0.002, -20, -54, 0.001, 52, 87, 0.001, 54, 82, 0.002, 31, -7, 0.023, 27, -10, 0.001, 8, 16, 0.012, -16, 22, 0.000, 55, 32, 0.002, 31, 42, 0.002, -2, -49, 0.004, 19, 52, 0.002, 18, -91, 0.002, -29, 32, 0.023, 43, 91, 0.002, 45, 124, 0.023, 52, -108, 0.001, 13, -85, 0.010, 5, 7, 0.098, 46, -70, 0.005, -14, 37, 0.001, 57, 41, 0.020, 0, 104, 0.006, -43, 148, 0.006, 24, 105, 0.039, 34, 115, 0.231, 33, -112, 0.042, 47, -119, 0.002, 44, 29, 0.023, 43, 6, 0.073, 23, -13, 0.000, -36, -69, 0.000, -24, -44, 0.003, 43, 23, 0.025, 24, -81, 0.002, 23, 100, 0.022, 20, -78, 0.001, 38, 2, 0.002, 0, -75, 0.001, 47, 107, 0.006, 61, 44, 0.001, 35, 141, 0.140, -4, 103, 0.038, 49, 130, 0.003, 48, -89, 0.004, 29, -5, 0.001, 20, 80, 0.056, -18, 28, 0.004, 53, 14, 0.017, 29, 44, 0.001, 44, 121, 0.006, 5, 34, 0.002, 38, 83, 0.001, 48, 133, 0.004, 63, 25, 0.001, 40, 48, 0.025, 39, 3, 0.015, 36, 51, 0.028, 35, 0, 0.051, 16, 54, 0.001, 26, -112, 0.000, 59, 7, 0.001, 39, 20, 0.004, 17, 96, 0.083, 50, 5, 0.119, 27, 86, 0.104, 29, 95, 0.001, 41, 119, 0.039, 54, -127, 0.000, 53, 82, 0.003, 30, -5, 0.006, -21, -45, 0.011, 8, 78, 0.178, -30, 25, 0.001, 41, 21, 0.030, 36, 111, 0.019, 17, 43, 0.014, 32, 119, 0.159, -6, -78, 0.011, -7, 17, 0.005, 42, 77, 0.006, 41, -90, 0.015, 51, 16, 0.026, 32, 38, 0.004, 4, 47, 0.003, 51, 9, 0.055, 32, -107, 0.001, 8, -61, 0.001, 45, 143, 0.000, -1, -51, 0.001, 33, 93, 0.000, -5, 18, 0.009, 46, -117, 0.003, 42, 2, 0.007, -34, 149, 0.001, 6, 12, 0.009, -44, -71, 0.001, -5, -61, 0.000, 22, 80, 0.053, 52, 31, 0.020, 13, 32, 0.010, 47, -100, 0.000, -10, -67, 0.002, 24, 109, 0.056, 20, -16, 0.001, 56, 83, 0.000, 33, -84, 0.083, 47, 29, 0.045, 44, 25, 0.031, 34, -86, 0.020, -4, 37, 0.020, 44, -88, 0.018, 62, 44, 0.000, 38, 30, 0.021, 35, 96, 0.000, 15, 29, 0.001, 14, -8, 0.003, 10, -13, 0.013, 47, 127, 0.045, -9, 121, 0.020, 61, 48, 0.002, 34, 12, 0.000, 49, 30, 0.012, 48, -53, 0.001, 29, -1, 0.001, -13, -59, 0.000, -19, -45, 0.002, 6, 123, 0.008, 49, 11, 0.041, 48, 26, 0.034, 26, 82, 0.212, 44, 85, 0.007, 40, 125, 0.064, 38, 111, 0.027, 35, -101, 0.008, 53, -105, 0.002, 12, 6, 0.026, 29, -99, 0.002, 59, 50, 0.001, 40, 20, 0.026, -11, 150, 0.001, 35, 44, 0.020, 16, 26, 0.001, -8, 40, 0.014, -32, 30, 0.022, 40, -93, 0.002, 39, 120, 0.029, 50, 41, 0.007, 27, 114, 0.149, 26, 35, 0.001, 3, 44, 0.008, -21, 30, 0.007, 51, 105, 0.001, 50, -100, 0.000, 23, 81, 0.071, 7, -72, 0.037, 3, -75, 0.017, -6, 35, 0.008, 30, 114, 0.196, 18, 81, 0.016, 45, 0, 0.017, 17, 7, 0.000, -26, -55, 0.008, 8, 1, 0.012, 41, -110, 0.001, 55, 55, 0.006, 52, 127, 0.001, 51, 60, 0.002, 32, 10, 0.001, 31, 49, 0.028, 28, 5, 0.000, 27, 46, 0.002, 4, 27, 0.001, -16, -50, 0.003, 21, 108, 0.027, -1, 128, 0.003, 31, 98, 0.003, 46, 24, 0.032, 43, 130, 0.023, -4, 144, 0.001, 22, 42, 0.011, 55, 89, 0.001, -2, 20, 0.002, 46, -89, 0.001, 57, 100, 0.000, 37, 37, 0.031, -2, 131, 0.000, 28, 82, 0.054, -9, 27, 0.006, -34, 20, 0.009, 56, 72, 0.001, 37, -106, 0.001, 34, 108, 0.091, 52, 75, 0.001, 13, 4, 0.013, 9, -3, 0.004, 46, 81, 0.001, 43, -83, 0.023, -34, -61, 0.008, 0, 15, 0.000, -23, 48, 0.013, 13, 145, 0.005, 43, 62, 0.001, 23, 59, 0.019, 34, -114, 0.002, -24, 28, 0.002, -42, 146, 0.001, 44, -124, 0.001, 38, 58, 0.002, 35, 140, 0.921, 37, 105, 0.012, 15, 1, 0.002, 11, -2, 0.012, 10, 39, 0.041, 1, -75, 0.009, 38, -87, 0.009, 49, 26, 0.027, 14, 19, 0.002, 2, 29, 0.005, 1, 38, 0.001, 16, 80, 0.072, 48, 46, 0.002, 26, 102, 0.041, 40, 97, 0.002, 36, 44, 0.015, 38, 139, 0.002, -22, -70, 0.001, 50, 107, 0.001, 12, 34, 0.005, -12, 24, 0.001, 59, 14, 0.005, 40, -8, 0.037, 39, 75, 0.001, 36, -5, 0.022, 35, 72, 0.016, -7, 141, 0.000, 29, 114, 0.112, 7, 122, 0.002, 40, -121, 0.001, 36, -118, 0.001, 54, 74, 0.025, 50, 45, 0.003, 30, 52, 0.010, 26, 55, 0.001, 7, 11, 0.011, 2, 97, 0.001, -20, 31, 0.009, -21, 26, 0.000, -3, -78, 0.018, 50, -96, 0.001, 12, 79, 0.139, -7, -69, 0.000, 45, 19, 0.018, 6, 101, 0.047, 18, 109, 0.011, 36, 104, 0.068, -3, 39, 0.004, -35, -67, 0.001, 30, 78, 0.102, -27, 29, 0.081, 45, -92, 0.007, 60, 33, 0.001, 21, -86, 0.002, 32, 47, 0.008, 31, -92, 0.007, 8, 37, 0.025, -16, 35, 0.021, 55, 27, 0.010, -3, 133, 0.001, 31, 69, 0.004, 28, -95, 0.001, 9, 93, 0.002, 27, 74, 0.033, 42, -72, 0.032, -1, 36, 0.057, -5, -39, 0.007, 66, 61, 0.000, 5, -6, 0.019, 43, 94, 0.001, 45, 87, 0.002, 42, 71, 0.007, 22, 70, 0.028, 18, 49, 0.002, 55, 93, 0.009, -11, -64, 0.001, -15, -63, 0.001, 57, 64, 0.004, 37, 73, 0.001, 52, -8, 0.010, 33, 70, 0.018, 28, 110, 0.065, 9, 28, 0.004, -11, -51, 0.001, -15, 18, 0.001, 56, 44, 0.065, 34, 80, 0.000, -4, -65, 0.000, 44, 66, 0.006, 46, 109, 0.000, 43, -87, 0.024, 24, 53, 0.000, 20, 56, 0.000, -20, 147, 0.004, -23, 28, 0.002, 47, 53, 0.002, -47, -68, 0.000, 1, 115, 0.000, 34, -78, 0.007, 14, -83, 0.002, 11, 41, 0.009, 10, -68, 0.034, -9, -50, 0.001, 25, 94, 0.031, -13, 19, 0.003, 61, 7, 0.001, 58, 23, 0.002, 37, 125, 0.001, 34, 65, 0.002, 15, -11, 0.003, 49, 101, 0.000, 11, -6, 0.009, -19, -58, 0.000, 53, 57, 0.013, 49, 54, 0.001, 48, 3, 0.330, 29, 71, 0.057, 44, 126, 0.080, 25, 76, 0.057, -19, 27, 0.002, 48, 82, 0.001, -12, -59, 0.001, 40, 69, 0.036, 39, -98, 0.001, 36, 72, 0.003, 50, 111, 0.000, -7, 140, 0.001, -12, 36, 0.005, 59, 42, 0.001, 39, 47, 0.013, 36, -105, 0.001, 35, 52, 0.287, 30, -99, 0.001, -8, -48, 0.004, 29, 86, 0.000, 7, 30, 0.006, -17, 40, 0.013, 54, 38, 0.037, 30, 16, 0.000, 6, 18, 0.004, 17, -95, 0.010, 64, 19, 0.000, 41, 60, 0.008, 21, 45, 0.004, 57, -1, 0.001, -6, -37, 0.013, 42, 122, 0.050, 4, -75, 0.071, -16, -56, 0.014, -20, -53, 0.000, 52, 88, 0.001, 54, 87, 0.020, 31, -8, 0.041, 27, -11, 0.001, -16, 23, 0.003, 55, 31, 0.014, 31, 41, 0.001, 19, 51, 0.002, 18, -90, 0.003, 33, 132, 0.046, 66, 33, 0.001, -29, 31, 0.017, 43, 90, 0.004, 45, 123, 0.028, 42, 43, 0.027, 4, 114, 0.002, 13, -90, 0.005, 46, -81, 0.003, -14, 38, 0.001, 57, 44, 0.002, 0, 113, 0.004, 24, 106, 0.026, 34, 116, 0.243, 33, -113, 0.000, -5, 136, 0.000, 47, -120, 0.003, 43, 5, 0.027, 23, -14, 0.000, 19, 111, 0.070, -24, -51, 0.041, 44, -83, 0.002, 43, 22, 0.032, 58, 12, 0.005, 20, -77, 0.016, -37, -56, 0.001, 0, -74, 0.001, 47, 106, 0.000, 61, 43, 0.001, -4, 104, 0.024, 49, 129, 0.002, -8, 112, 0.241, 29, -10, 0.002, 20, 81, 0.036, -18, 25, 0.003, 53, 13, 0.013, 29, 43, 0.000, 44, 122, 0.010, 5, 33, 0.003, -28, -59, 0.008, 48, 134, 0.002, 29, -100, 0.002, 63, 24, 0.003, 40, 41, 0.023, 39, 2, 0.001, 36, 52, 0.029, 35, -1, 0.011, 59, 6, 0.005, 39, 19, 0.005, 17, 95, 0.018, 54, -9, 0.001, 50, 6, 0.071, 27, 85, 0.085, 41, 122, 0.081, 53, 81, 0.002, 30, -4, 0.002, 54, -111, 0.000, 23, 99, 0.013, -30, 26, 0.001, 41, 24, 0.015, 36, 112, 0.078, 32, 120, 0.259, -6, -81, 0.001, -7, 20, 0.006, 42, 78, 0.002, 41, -91, 0.010, 51, 15, 0.036, 32, 39, 0.001, 8, 45, 0.005, 4, 48, 0.002, -3, -39, 0.000, 51, 0, 0.311, 32, -106, 0.005, -29, -70, 0.002, -38, 142, 0.000, -5, 17, 0.006, 46, -116, 0.002, 42, -1, 0.017, 57, 87, 0.000, -2, 120, 0.007, -5, -62, 0.000, -15, -39, 0.030, 22, 77, 0.073, 52, 32, 0.015, 13, 31, 0.010, 47, -101, 0.001, 46, 102, 0.000, 24, 110, 0.085, -14, -71, 0.015, 20, -15, 0.001, 56, 84, 0.001, -3, 147, 0.001, 33, -85, 0.011, 47, 44, 0.002, 44, 26, 0.041, 34, -89, 0.006, -4, 38, 0.036, 44, -87, 0.006, 62, 41, 0.001, 38, 35, 0.017, 35, 95, 0.000, -27, 153, 0.003, 15, 44, 0.047, 49, 144, 0.002, 10, -12, 0.012, 47, 126, 0.039, 61, 47, 0.004, 34, 9, 0.012, 15, -83, 0.001, 49, 29, 0.033, -19, -50, 0.003, -3, 101, 0.001, 48, 27, 0.028, 26, 79, 0.122, 44, 86, 0.013, 40, 126, 0.020, 38, 112, 0.027, 35, -102, 0.000, 12, 7, 0.030, 29, -96, 0.004, 59, 49, 0.001, 35, 43, 0.013, 16, 27, 0.001, -8, 33, 0.003, 14, 98, 0.001, -31, -70, 0.002, -32, 31, 0.001, 40, -92, 0.003, 39, 119, 0.141, 16, -86, 0.001, 50, 42, 0.005, 27, 113, 0.179, -22, -48, 0.028, 41, 86, 0.006, 3, 43, 0.003, 2, 126, 0.002, -54, -68, 0.000, -21, 29, 0.063, 50, -103, 0.001, -35, -72, 0.000, 45, 42, 0.019, 7, -73, 0.037, -6, 36, 0.012, 45, -1, 0.003, 41, -124, 0.001, -29, -64, 0.004, -35, 141, 0.001, 17, 10, 0.000, 32, 92, 0.000, -26, -54, 0.021, 8, 2, 0.010, 41, -111, 0.010, 55, 54, 0.004, 52, 128, 0.001, 51, 59, 0.016, 32, 11, 0.001, 31, 48, 0.013, 28, 6, 0.000, 27, 45, 0.002, 4, 28, 0.001, -16, -49, 0.008, 21, 107, 0.099, 18, -69, 0.072, -20, 18, 0.001, 31, 97, 0.002, 46, 21, 0.025, 43, 129, 0.012, 55, 88, 0.001, -2, 17, 0.002, -8, -79, 0.010, 5, 0, 0.111, 46, -88, 0.001, 43, 146, 0.002, 37, 40, 0.018, -39, 142, 0.001, -2, 132, 0.003, 28, 83, 0.030, -10, 15, 0.005, -14, -50, 0.001, -18, -67, 0.008, 56, 65, 0.002, 37, -107, 0.001, 34, 105, 0.036, 52, 76, 0.001, 13, 3, 0.020, 9, 0, 0.017, 46, 82, 0.001, 43, -76, 0.020, -14, -67, 0.000, -34, -60, 0.042, 0, 16, 0.001, 37, -122, 0.121, -23, 47, 0.004, 43, 61, 0.001, 23, 58, 0.011, -23, -64, 0.002, 44, -123, 0.016, 58, 68, 0.000, 38, 63, 0.002, 35, 139, 0.090, 37, 108, 0.010, 15, 0, 0.001, 11, -3, 0.013, 10, 40, 0.043, 1, -72, 0.000, 38, -86, 0.007, 49, 25, 0.041, -2, 102, 0.015, 2, 30, 0.005, 1, 37, 0.002, 48, 47, 0.003, 26, 115, 0.065, 40, 98, 0.004, 36, 29, 0.007, 38, 140, 0.016, 50, 108, 0.002, 12, 35, 0.009, -12, 25, 0.003, 59, 13, 0.003, 39, 74, 0.002, 36, -4, 0.034, 35, 71, 0.003, -7, 144, 0.004, 29, 113, 0.156, 40, -120, 0.001, 54, 47, 0.007, 50, 46, 0.007, 30, 49, 0.024, 26, 56, 0.002, 7, 10, 0.028, 2, 98, 0.005, -21, 25, 0.000, -3, -79, 0.035, 50, -99, 0.001, 12, 80, 0.172, 45, 14, 0.031, 6, 102, 0.045, 18, 110, 0.044, 36, 105, 0.032, -3, 34, 0.030, -27, 32, 0.017, 45, -93, 0.033, 42, 131, 0.015, 60, 34, 0.002, 21, -87, 0.003, 32, 48, 0.008, -17, -42, 0.004, 31, -93, 0.004, 28, 51, 0.001, 8, 38, 0.040, -16, 36, 0.072, 55, 26, 0.007, 31, 20, 0.001, 27, 73, 0.013, 42, -75, 0.012, 4, -8, 0.002, 18, -65, 0.022, -1, 35, 0.103, -36, 144, 0.001, 66, 62, 0.000, 43, 93, 0.001, 45, 82, 0.002, 42, 72, 0.016, 22, 75, 0.081, 18, 50, 0.001, 6, 3, 0.074, 9, -66, 0.004, -10, 124, 0.002, -11, -65, 0.001, -15, -60, 0.000, 57, 63, 0.002, 37, 76, 0.000, 52, -7, 0.009, 33, 69, 0.038, 28, 111, 0.054, 9, 27, 0.003, -11, -48, 0.006, -33, 148, 0.000, -15, 17, 0.002, 56, 37, 0.015, 34, 77, 0.002, -4, -64, 0.001, 44, 67, 0.001, 43, -112, 0.003, 24, 54, 0.000, -23, 27, 0.001, 1, 118, 0.001, 34, -81, 0.018, 11, 16, 0.006, 10, -71, 0.063, 25, 93, 0.037, -13, 18, 0.006, -32, 116, 0.021, 58, 24, 0.001, 37, 128, 0.306, 34, 66, 0.003, 49, 104, 0.000, 11, -7, 0.006, 10, 76, 0.021, -19, -59, 0.000, 53, 60, 0.011, 49, 53, 0.001, 48, 4, 0.013, 29, 66, 0.001, 44, 127, 0.077, 25, 75, 0.059, -19, 22, 0.001, 48, 83, 0.001, -12, -58, 0.000, -32, -63, 0.005, 40, 70, 0.047, 39, -99, 0.001, 36, 73, 0.007, 50, 112, 0.001, -7, 139, 0.001, 11, 108, 0.040, 59, 41, 0.003, 39, 46, 0.014, 36, -104, 0.000, 35, 51, 0.038, 30, -98, 0.003, 29, 85, 0.000, 7, 29, 0.004, -17, 39, 0.005, 54, 43, 0.004, 30, 13, 0.001, -9, 147, 0.001, 6, 23, 0.001, 8, 79, 0.019, 17, -92, 0.025, 64, 20, 0.001, -13, -48, 0.001, 41, 59, 0.004, 21, 48, 0.004, 18, 82, 0.024, 17, 49, 0.000, -6, -36, 0.007, -44, 173, 0.012, 42, 119, 0.033, 4, -74, 0.186, -20, -52, 0.000, 52, 89, 0.001, 54, 88, 0.001, 31, -9, 0.017, -16, 24, 0.005, 55, 30, 0.007, 31, 40, 0.000, 19, 50, 0.002, 18, -93, 0.017, -3, -49, 0.006, 33, 131, 0.195, -29, 30, 0.010, 43, 89, 0.004, 45, 118, 0.001, 42, 44, 0.013, 4, 115, 0.012, 13, -91, 0.001, 46, -80, 0.003, -28, -65, 0.010, -14, 35, 0.016, 57, 43, 0.007, 0, 114, 0.001, 52, 21, 0.053, 24, 107, 0.026, 34, 113, 0.206, 33, -110, 0.001, -24, -65, 0.003, 47, -121, 0.003, 43, 12, 0.055, 23, -15, 0.000, 19, 110, 0.057, -24, -50, 0.014, -30, -58, 0.002, 43, 21, 0.033, -28, -60, 0.004, 23, 98, 0.012, 20, -76, 0.044, -37, -57, 0.002, 11, 76, 0.153, 47, 105, 0.000, -13, 46, 0.003, 61, 38, 0.001, -4, 105, 0.061, 49, 132, 0.000, -42, 174, 0.003, 20, 82, 0.056, -18, 26, 0.004, 53, 16, 0.012, 29, 38, 0.000, 44, 123, 0.014, 5, 36, 0.001, 38, 81, 0.005, 48, 135, 0.001, 29, -101, 0.001, 63, 23, 0.002, 40, 42, 0.012, 39, 1, 0.000, -20, -47, 0.007, 35, -2, 0.007, 39, 18, 0.004, 17, 98, 0.021, 54, -8, 0.003, 50, 3, 0.055, 27, 92, 0.015, 41, 121, 0.066, 53, 84, 0.027, 30, -7, 0.010, 41, 10, 0.003, 54, -110, 0.001, -35, -58, 0.401, 64, 40, 0.010, -30, 23, 0.001, 41, 23, 0.015, 36, 113, 0.045, 32, 129, 0.002, -6, -80, 0.017, -7, 19, 0.003, 42, 91, 0.001, 41, -88, 0.045, 52, 117, 0.001, 51, 14, 0.048, 32, 40, 0.002, 8, 46, 0.005, 51, -1, 0.049, 32, -105, 0.001, 8, -67, 0.002, -2, -44, 0.002, 33, 95, 0.000, -5, 24, 0.004, 65, 61, 0.000, 46, -119, 0.006, 42, 0, 0.004, -1, -52, 0.000, -2, 117, 0.017, -5, -63, 0.000, 22, 78, 0.047, 52, 33, 0.010, 13, 26, 0.007, -10, -61, 0.001, 24, 111, 0.059, -14, -70, 0.001, 56, 77, 0.001, -20, 170, 0.000, 47, 43, 0.009, 44, 27, 0.105, 20, 33, 0.001, 34, -88, 0.008, -4, 39, 0.006, 47, -4, 0.004, 44, -86, 0.001, 62, 42, 0.001, 38, 36, 0.019, 15, 43, 0.005, 49, 143, 0.002, 47, 125, 0.035, 61, 74, 0.009, -34, 150, 0.003, 38, -109, 0.000, 34, 10, 0.016, 49, 32, 0.019, -19, -51, 0.002, -22, 49, 0.004, 48, 28, 0.022, 26, 80, 0.145, 44, 87, 0.019, 40, 127, 0.020, 38, 109, 0.003, 35, -103, 0.000, 16, 5, 0.000, 12, 8, 0.062, -42, -65, 0.000, 29, -97, 0.005, -36, -68, 0.001, 59, 56, 0.001, 40, 14, 0.002, 35, 42, 0.016, 16, 28, 0.001, -8, 34, 0.004, 26, -78, 0.001, -31, -71, 0.006, 40, -99, 0.002, 39, 118, 0.284, 50, 39, 0.008, -12, -50, 0.000, 27, 120, 0.063, 26, 33, 0.057, 41, 85, 0.002, 3, 42, 0.005, 51, 95, 0.004, -21, -65, 0.002, 50, -102, 0.001, 45, 41, 0.017, 7, -74, 0.007, -6, 33, 0.004, 17, 9, 0.000, 28, 24, 0.000, 8, 3, 0.009, 55, 53, 0.026, 51, 58, 0.004, 32, 12, 0.008, 31, 47, 0.016, 28, 7, 0.000, 27, 52, 0.000, 4, 13, 0.004, -16, -48, 0.018, 21, 102, 0.007, 18, -68, 0.008, -20, 19, 0.001, 31, 96, 0.002, 46, 22, 0.024, 55, 87, 0.023, -10, -66, 0.000, -2, 18, 0.004, 46, -91, 0.001, 43, 145, 0.012, -11, 37, 0.004, 57, 54, 0.004, 37, 39, 0.020, -17, -50, 0.004, 28, 84, 0.035, -10, 16, 0.005, -34, 18, 0.000, 56, 66, 0.002, 37, -104, 0.001, 34, 106, 0.063, 52, 61, 0.001, 13, -2, 0.018, 9, -1, 0.006, 46, 135, 0.001, 43, -77, 0.028, -14, -66, 0.000, -34, -63, 0.003, 0, 25, 0.006, -38, -56, 0.001, 47, 63, 0.000, 43, 68, 0.001, 23, 57, 0.004, -22, 150, 0.002, 15, 110, 0.001, -23, -65, 0.001, 44, -122, 0.006, 58, 65, 0.000, 38, 64, 0.003, 35, 138, 0.079, 37, 107, 0.019, 15, -1, 0.001, 11, 4, 0.011, 10, 37, 0.020, -9, 116, 0.085, -40, 176, 0.002, 5, -74, 0.020, 1, -73, 0.000, 38, -81, 0.013, 49, 28, 0.019, 25, 34, 0.000, 2, 27, 0.002, 1, 40, 0.001, 48, 48, 0.000, 26, 116, 0.071, 40, 99, 0.004, 36, 30, 0.012, 35, -75, 0.000, 50, 105, 0.001, 12, 36, 0.003, -12, 26, 0.005, 62, 114, 0.002, -32, -51, 0.001, 39, 73, 0.003, 35, 70, 0.016, -7, 143, 0.002, 30, -105, 0.000, 29, 116, 0.098, 36, -116, 0.000, 54, 48, 0.006, 50, 75, 0.001, 30, 50, 0.012, 7, 9, 0.036, 50, -98, 0.000, 12, 81, 0.065, -27, -70, 0.001, 45, 13, 0.060, 8, 125, 0.058, 36, 106, 0.027, -3, 33, 0.027, -7, -34, 0.001, -37, -71, 0.008, -27, 31, 0.009, 45, -98, 0.001, 42, 132, 0.005, 60, 35, 0.001, 21, -84, 0.001, 32, 57, 0.001, 31, -94, 0.006, 28, 52, 0.006, 8, 39, 0.070, -16, 29, 0.033, 55, 25, 0.012, -3, 135, 0.000, 42, -74, 0.007, 4, -7, 0.004, 18, -64, 0.002, -1, 34, 0.000, 45, 81, 0.002, 42, 69, 0.003, 22, 76, 0.096, 56, -120, 0.001, 18, 47, 0.001, -35, 118, 0.000, 13, -60, 0.003, 14, -11, 0.007, 9, -67, 0.013, 46, -111, 0.001, -11, -54, 0.001, -15, -61, 0.000, 57, 66, 0.020, 37, 75, 0.000, 52, -6, 0.006, 33, 72, 0.080, 28, 112, 0.109, 9, 14, 0.014, -11, -49, 0.001, -9, 22, 0.001, -4, 122, 0.005, 56, 38, 0.015, 34, 78, 0.000, -4, -63, 0.000, 44, 68, 0.001, 43, -113, 0.000, 24, 55, 0.002, 20, 58, 0.000, 1, 117, 0.000, 34, -80, 0.013, 15, 82, 0.001, 11, 15, 0.018, 10, -70, 0.007, 25, 96, 0.003, -13, 17, 0.011, 37, 127, 0.358, 34, 63, 0.016, 49, 103, 0.000, 10, 73, 0.000, 53, 59, 0.009, 49, 56, 0.001, 48, -3, 0.013, 29, 65, 0.001, 44, 128, 0.035, 25, 62, 0.002, -1, 167, 0.000, 35, -120, 0.008, -19, 21, 0.000, 48, 84, 0.001, -12, -57, 0.000, -32, -62, 0.005, 40, 71, 0.040, 39, -100, 0.001, 36, 74, 0.014, 50, 109, 0.001, 11, 107, 0.064, -12, 154, 0.000, 39, 45, 0.015, 35, 50, 0.018, 30, -93, 0.011, 29, 88, 0.001, 7, 28, 0.002, -17, 38, 0.012, 54, 44, 0.005, 53, 111, 0.001, 30, 14, 0.001, -25, -52, 0.011, 17, -93, 0.017, 12, 109, 0.039, 64, 13, 0.000, 45, 49, 0.001, 41, 46, 0.024, 21, 47, 0.004, 18, 79, 0.109, 36, 134, 0.001, 51, -104, 0.000, -6, -39, 0.009, 45, -62, 0.002, 42, 120, 0.027, 4, -73, 0.018, 52, 90, 0.001, 54, 85, 0.002, 32, 13, 0.013, 55, 29, 0.008, 31, 39, 0.001, 9, 139, 0.000, 42, -102, 0.001, 19, 49, 0.002, 18, -92, 0.012, 33, 134, 0.035, 66, 31, 0.001, -29, 29, 0.021, 45, 117, 0.000, 42, 41, 0.001, 4, 116, 0.004, 22, 29, 0.000, 13, -88, 0.052, 46, -83, 0.000, -14, 36, 0.007, 57, 30, 0.002, 0, 115, 0.000, 52, 22, 0.058, 33, 36, 0.079, 24, 108, 0.046, -15, 48, 0.001, -38, 148, 0.001, 34, 114, 0.281, 33, -111, 0.035, -24, -64, 0.004, 47, -122, 0.095, 46, 143, 0.006, 43, 11, 0.045, 19, 109, 0.009, -1, 9, 0.000, -24, -49, 0.012, 44, -81, 0.003, 43, 28, 0.027, 23, 97, 0.008, -37, -58, 0.001, 47, 104, 0.000, -46, -68, 0.001, -13, 45, 0.008, 61, 37, 0.000, -4, 106, 0.007, 49, 131, 0.001, 29, -8, 0.005, 20, 83, 0.044, -18, 15, 0.002, 53, 15, 0.029, 48, 33, 0.019, 29, 37, 0.000, 44, 124, 0.025, 5, 35, 0.002, 38, 82, 0.002, 48, 136, 0.023, 29, -106, 0.011, 63, 22, 0.002, 40, 43, 0.011, 39, 0, 0.073, 35, -3, 0.009, 16, 33, 0.017, -17, 169, 0.001, -7, 106, 0.025, 26, -101, 0.007, -19, -42, 0.010, 59, 12, 0.007, 39, 17, 0.027, 36, -75, 0.002, 17, 97, 0.056, 50, 4, 0.117, 27, 91, 0.010, 41, 124, 0.259, -33, -53, 0.002, 53, 83, 0.002, -17, 180, 0.003, 30, -6, 0.005, 41, 9, 0.003, -21, -40, 0.043, -21, -55, 0.001, -30, 24, 0.001, 41, 26, 0.020, 36, 114, 0.106, 32, 130, 0.023, -17, -49, 0.051, -7, 38, 0.013, 42, 92, 0.001, 41, -89, 0.008, 52, 118, 0.001, 51, 13, 0.061, 8, 47, 0.003, -15, 14, 0.002, -1, 105, 0.001, 51, -2, 0.070, 32, -104, 0.002, 24, -13, 0.000, 8, -66, 0.002, 6, -10, 0.017, 33, 98, 0.001, -5, 23, 0.005, -33, 116, 0.013, 46, -118, 0.002, 42, -3, 0.009, 37, 14, 0.028, -5, -56, 0.001, -29, 154, 0.011, 22, 83, 0.062, 52, 34, 0.007, 13, 25, 0.007, 24, 112, 0.062, -14, -73, 0.008, 20, -13, 0.001, 56, 78, 0.000, 47, 42, 0.006, 44, 28, 0.019, 0, 10, 0.014, 61, -149, 0.009, 20, 34, 0.001, 34, -91, 0.003, -4, 40, 0.022, -23, -42, 0.043, 44, -85, 0.005, 62, 31, 0.001, 38, 33, 0.015, 37, 82, 0.002, 14, -5, 0.006, 10, -14, 0.006, -9, 20, 0.001, 61, 73, 0.003, 38, -108, 0.001, 34, 7, 0.006, 49, 31, 0.023, 11, -72, 0.007, 48, -58, 0.001, -19, -48, 0.014, 48, 21, 0.029, 26, 77, 0.077, 44, 88, 0.010, 40, 128, 0.026, 2, -57, 0.002, 38, 110, 0.016, 35, -112, 0.000, 16, 6, 0.001, -22, -63, 0.002, 12, 9, 0.081, 63, 58, 0.001, 59, 55, 0.002, 40, 15, 0.142, 35, 41, 0.013, -8, 35, 0.008, 26, -81, 0.017, -31, -68, 0.001, 40, -98, 0.004, 39, 117, 0.256, 50, 40, 0.010, 27, 119, 0.043, 26, 34, 0.001, 41, 88, 0.001, 3, 41, 0.002, -21, 35, 0.004, 51, 94, 0.001, 50, -105, 0.002, 45, 44, 0.004, 7, -75, 0.007, 6, 80, 0.054, 21, 34, 0.001, -6, 34, 0.004, -33, -58, 0.005, -4, -39, 0.013, -35, 143, 0.002, 28, 25, 0.000, 8, 4, 0.022, 45, -118, 0.002, 41, -109, 0.001, 55, 52, 0.011, 51, 57, 0.002, 32, 5, 0.001, 31, 46, 0.012, -9, -46, 0.001, 4, 14, 0.002, -8, 147, 0.004, -16, -39, 0.009, 21, 101, 0.011, 18, -71, 0.028, -3, -40, 0.003, 31, 95, 0.001, 46, 27, 0.036, 43, 135, 0.001, 55, 86, 0.004, -2, 39, 0.011, 46, -90, 0.001, 57, 53, 0.003, 37, 50, 0.052, -39, 144, 0.001, 28, 85, 0.021, -4, -46, 0.002, 22, 111, 0.149, 56, 67, 0.004, 37, -105, 0.001, 34, 103, 0.003, 52, 62, 0.003, 13, -3, 0.010, 9, 2, 0.018, 46, 136, 0.000, 43, -78, 0.019, -4, 136, 0.002, -34, -62, 0.004, 0, 26, 0.014, 37, -120, 0.017, -23, 49, 0.001, 47, 62, 0.001, 43, 67, 0.001, 23, 56, 0.004, -26, -48, 0.008, 15, 109, 0.065, -23, -62, 0.000, 10, -61, 0.041, 47, 143, 0.009, 44, -121, 0.003, 62, 75, 0.002, 58, 66, 0.002, 38, 61, 0.002, 35, 137, 0.212, 37, 102, 0.017, -20, -48, 0.009, 15, -2, 0.002, 11, 3, 0.006, 10, 38, 0.045, 14, 29, 0.001, 5, -75, 0.046, 1, -70, 0.000, 38, -80, 0.004, 53, 66, 0.002, 49, 27, 0.021, 25, 33, 0.046, 2, 28, 0.009, 1, 39, 0.001, -18, -41, 0.010, -3, 100, 0.000, 26, 113, 0.157, 40, 100, 0.002, 36, 31, 0.008, 16, -22, 0.000, 50, 106, 0.001, 12, 37, 0.008, -12, 27, 0.008, 59, 19, 0.030, 39, 72, 0.004, 35, 69, 0.007, -7, 146, 0.011, 29, 115, 0.068, 7, 119, 0.000, -1, 100, 0.003, 54, 45, 0.006, 50, 76, 0.001, 30, 71, 0.039, 26, 54, 0.000, 7, 8, 0.037, 2, 96, 0.001, 51, 138, 0.000, -3, -77, 0.001, -7, -80, 0.002, 45, 16, 0.017, -25, -66, 0.000, 36, 107, 0.025, -3, 36, 0.004, -7, -35, 0.029, 30, 81, 0.004, 45, -99, 0.000, 42, 129, 0.011, 60, 36, 0.001, -29, -61, 0.001, 32, 58, 0.000, 31, -95, 0.004, 28, 53, 0.007, 8, 40, 0.040, -16, 30, 0.005, 55, 24, 0.013, -3, 130, 0.001, 42, -93, 0.005, 4, -6, 0.003, 18, -67, 0.014, -1, 33, 0.001, -2, -60, 0.000, -22, 33, 0.002, 66, 60, 0.000, 46, 55, 0.001, 45, 84, 0.001, 42, 70, 0.025, 22, 73, 0.169, 18, 48, 0.001, 13, -61, 0.004, 9, -64, 0.010, -11, -55, 0.002, 57, 65, 0.002, 37, 70, 0.027, 33, 71, 0.037, 28, 113, 0.209, 9, 13, 0.022, -11, -38, 0.010, -18, -62, 0.007, -15, 19, 0.000, 56, 39, 0.017, 34, 139, 0.028, -4, -62, 0.000, 43, -114, 0.001, 24, 56, 0.019, 20, 59, 0.001, 23, 92, 0.229, 34, -83, 0.012, 15, 81, 0.044, 11, 14, 0.035, 10, -73, 0.018, 25, 95, 0.019, -13, 40, 0.003, 37, 138, 0.003, 34, 64, 0.004, 49, 106, 0.001, 10, 74, 0.000, -19, -57, 0.002, 53, 54, 0.003, 49, 55, 0.001, 48, -2, 0.015, 29, 68, 0.008, 44, 129, 0.017, 25, 61, 0.002, 5, 74, 0.001, 39, -118, 0.001, 35, -121, 0.000, -19, 24, 0.001, 49, -56, 0.000, 48, 77, 0.000, -12, -56, 0.000, -32, -61, 0.006, 40, 72, 0.078, 39, -101, 0.001, 36, 75, 0.012, 50, 110, 0.000, 11, 106, 0.076, 5, 96, 0.026, 39, 44, 0.013, 36, -102, 0.000, 35, 49, 0.018, 30, -92, 0.013, 29, 87, 0.001, 7, 27, 0.001, -17, 37, 0.009, 54, 41, 0.005, 53, 122, 0.001, 30, 19, 0.001, 6, 21, 0.001, 17, -90, 0.001, 12, 110, 0.030, -27, -51, 0.007, 41, 45, 0.068, 21, 58, 0.000, 18, 80, 0.103, 51, -105, 0.000, -21, -69, 0.001, -6, -38, 0.008, 45, -63, 0.003, 42, 117, 0.007, 4, -72, 0.002, 52, 91, 0.001, 54, 86, 0.003, -41, -64, 0.001, 32, 14, 0.049, 55, -4, 0.068, 31, 38, 0.005, -11, 32, 0.004, 9, 126, 0.018, 42, -105, 0.000, 18, -95, 0.020, 33, 133, 0.039, 66, 32, 0.001, 45, 120, 0.004, 42, 42, 0.016, 4, 101, 0.021, 6, 8, 0.108, 13, -89, 0.101, 46, -82, 0.001, -14, 33, 0.013, 57, 29, 0.010, 0, 116, 0.001, 52, 23, 0.016, 47, -92, 0.003, 24, 101, 0.036, 34, 111, 0.080, 47, -123, 0.002, -4, 13, 0.003, -24, -48, 0.010, 44, -80, 0.004, 43, 27, 0.024, 58, 7, 0.002, -37, -59, 0.002, -38, -57, 0.013, 47, 103, 0.000, -46, -71, 0.001, 61, 40, 0.001, 58, -134, 0.001, -4, 107, 0.001, 49, 134, 0.001, 48, -109, 0.001, 29, -9, 0.013, 20, 84, 0.064, -18, 16, 0.011, 53, 26, 0.014, 48, 34, 0.021, 29, 40, 0.001, 44, 93, 0.001, 5, 30, 0.002, 29, -107, 0.002, 63, 21, 0.002, 40, 44, 0.020, 39, -1, 0.006, 35, 4, 0.014, 16, 34, 0.006, 26, -100, 0.002, 59, 11, 0.031, 39, 16, 0.003, 17, 100, 0.024, 50, 1, 0.013, 27, 90, 0.013, 41, 123, 0.112, 53, 78, 0.002, -9, 142, 0.000, -21, -41, 0.019, 60, 45, 0.001, 41, 25, 0.014, 36, 115, 0.264, 32, 131, 0.075, -7, 37, 0.014, 42, 89, 0.002, 41, -86, 0.021, 52, 119, 0.001, 51, 20, 0.061, 8, 48, 0.002, -1, 104, 0.010, 51, -3, 0.063, 32, -95, 0.010, 8, -65, 0.002, 18, 5, 0.000, 33, 97, 0.001, -5, 22, 0.005, 42, -2, 0.020, 37, 13, 0.013, -1, -54, 0.001, -2, 123, 0.004, -29, 153, 0.001, -4, 113, 0.001, 57, 9, 0.001, 37, -2, 0.006, 52, 35, 0.005, 13, 28, 0.004, 47, -104, 0.001, 46, 105, 0.000, -11, 18, 0.004, -14, -72, 0.010, -33, 138, 0.001, -34, -69, 0.003, 47, 41, 0.025, 20, 35, 0.000, 19, 80, 0.048, 34, -90, 0.006, -4, 41, 0.005, -23, -43, 0.328, 44, -84, 0.003, 62, 32, 0.000, 38, 34, 0.014, 35, 100, 0.001, 37, 81, 0.004, 15, 41, 0.000, 14, -4, 0.011, -9, 19, 0.001, -46, -67, 0.002, 61, 76, 0.001, 38, -111, 0.000, 34, 8, 0.010, 49, 34, 0.024, 11, -73, 0.007, 48, -57, 0.001, 5, 8, 0.167, 14, 15, 0.001, -13, -55, 0.001, 1, 14, 0.000, 16, 120, 0.007, -22, 47, 0.009, 48, 22, 0.035, 26, 78, 0.089, 44, 89, 0.005, 40, 121, 0.055, 38, 115, 0.197, 35, -113, 0.001, 16, 7, 0.000, -22, -62, 0.001, 12, 10, 0.053, 60, 77, 0.009, 59, 54, 0.001, 40, 16, 0.025, -20, -42, 0.024, -8, 36, 0.008, 26, -80, 0.072, 7, 82, 0.035, 6, -77, 0.001, 40, -97, 0.002, 39, 116, 0.134, 16, -91, 0.008, 50, 37, 0.047, 27, 118, 0.036, 41, 87, 0.003, 3, 32, 0.016, -1, 102, 0.011, -21, 34, 0.004, 51, 93, 0.001, 50, -104, 0.007, 45, 43, 0.008, 7, -76, 0.009, 3, -71, 0.000, 21, 33, 0.001, -6, 31, 0.007, -35, -63, 0.001, 60, 73, 0.001, 17, 11, 0.000, -39, -66, 0.001, 8, -3, 0.005, 45, -119, 0.001, 55, 51, 0.006, 51, 48, 0.005, 32, 6, 0.001, 31, 45, 0.012, 27, 50, 0.000, 4, 15, 0.003, -16, -38, 0.001, 21, 104, 0.022, 18, -70, 0.056, 31, 94, 0.001, 65, -18, 0.001, 46, 28, 0.024, 43, 134, 0.004, 55, 85, 0.006, -2, 40, 0.001, 69, 34, 0.011, 46, -85, 0.000, 57, 56, 0.005, 19, -87, 0.001, 37, 49, 0.015, -39, 143, 0.001, 33, 46, 0.014, 10, 79, 0.161, 28, 86, 0.009, -10, 14, 0.023, -2, 10, 0.001, 22, 112, 0.106, 56, 68, 0.001, 37, -94, 0.007, 34, 104, 0.014, 52, 63, 0.003, -12, -65, 0.002, 13, 0, 0.013, 47, -68, 0.002, 9, 1, 0.011, 46, 133, 0.011, 43, -79, 0.160, 0, 27, 0.001, 37, -121, 0.071, -30, -51, 0.077, 67, 64, 0.001, 43, 66, 0.001, 23, 55, 0.005, -36, -59, 0.003, -23, -63, 0.002, -24, 24, 0.001, 44, -120, 0.000, 25, 86, 0.374, 58, 63, 0.001, 38, 62, 0.004, 35, 128, 0.061, 37, 101, 0.003, 15, -3, 0.006, 11, 2, 0.005, 10, 19, 0.002, 5, -72, 0.011, 1, -71, 0.000, 38, -83, 0.006, 53, 65, 0.002, 14, 103, 0.043, 2, 25, 0.002, 1, 42, 0.003, -18, -40, 0.006, 48, 58, 0.001, 26, 114, 0.079, 25, -111, 0.001, 39, -74, 0.032, 36, 32, 0.005, 50, 103, 0.000, 12, 38, 0.037, -42, -71, 0.003, -12, 28, 0.029, 59, 18, 0.031, 39, 71, 0.005, 35, 76, 0.017, -7, 145, 0.008, 30, -107, 0.002, 29, 110, 0.050, 7, 118, 0.001, 54, 46, 0.018, -10, -75, 0.002, 50, 73, 0.005, -12, -45, 0.001, 30, 72, 0.121, 26, 67, 0.005, 7, 7, 0.046, 51, 137, 0.000, -27, -68, 0.000, 45, 15, 0.012, 22, 82, 0.041, 36, 108, 0.018, -3, 35, 0.014, 30, 82, 0.001, 64, -22, 0.000, 45, -96, 0.001, 42, 130, 0.032, 60, 37, 0.001, 17, -25, 0.001, 54, 95, 0.001, 32, 59, 0.002, 31, -96, 0.003, 28, 54, 0.011, 8, 33, 0.005, -16, 31, 0.002, 55, 23, 0.008, -3, 129, 0.001, 42, -92, 0.008, 18, -66, 0.083, -1, 32, 0.044, 46, 56, 0.000, 45, 83, 0.003, 22, 74, 0.168, 18, 45, 0.002, 9, -65, 0.005, -11, -52, 0.000, -15, -59, 0.001, 57, 68, 0.001, 37, 69, 0.028, 52, -4, 0.004, 33, 74, 0.111, 28, 114, 0.130, 9, 16, 0.014, 43, -124, 0.002, -11, -39, 0.007, -15, 22, 0.001, 56, 40, 0.006, 34, 140, 0.006, -4, -61, 0.001, 43, -115, 0.001, 24, 49, 0.002, -23, 16, 0.000, -5, 153, 0.002, -28, -67, 0.000, 23, 91, 0.638, 1, 119, 0.001, 34, -82, 0.027, 15, 80, 0.055, 11, 13, 0.007, 10, -72, 0.009, 25, 98, 0.008, -13, 39, 0.001, 58, 35, 0.003, 37, 137, 0.004, 34, 61, 0.005, 14, 37, 0.005, 49, 105, 0.002, -9, 111, 0.015, -19, -62, 0.000, 53, 53, 0.006, 49, 58, 0.001, 48, -1, 0.028, 29, 67, 0.009, 44, 130, 0.039, 25, 64, 0.004, 5, 73, 0.000, 39, -119, 0.011, -19, 23, 0.000, 49, -57, 0.001, -12, -55, 0.002, -32, -60, 0.022, 40, 65, 0.010, 39, -102, 0.000, 36, 76, 0.007, 50, 139, 0.000, 11, 105, 0.079, -24, -47, 0.054, 39, 43, 0.014, 36, -101, 0.001, 54, -1, 0.074, 30, -95, 0.019, 29, 82, 0.018, -17, 20, 0.000, 54, 42, 0.006, 53, 121, 0.000, 6, 22, 0.001, 17, -91, 0.008, -27, -48, 0.018, 41, 48, 0.010, 21, 57, 0.000, 18, 77, 0.086, 17, 54, 0.002, -6, -41, 0.002, 27, -112, 0.000, 45, -60, 0.002, 42, 118, 0.014, 4, -71, 0.000, 55, -118, 0.001, 52, 92, 0.001, 54, 91, 0.001, 32, 15, 0.013, 31, 4, 0.001, 55, -5, 0.001, 51, -8, 0.010, 31, 37, 0.016, 9, 125, 0.016, 42, -104, 0.001, 18, -94, 0.016, 33, 136, 0.011, 45, 119, 0.001, 4, 102, 0.032, 19, -72, 0.070, -14, 34, 0.050, 57, 32, 0.003, 0, 109, 0.006, 52, 24, 0.015, 33, 38, 0.014, 47, -93, 0.002, 24, 102, 0.024, -9, 17, 0.004, -4, 127, 0.003, 34, 112, 0.075, -3, 151, 0.001, 33, -109, 0.000, -5, 140, 0.003, -24, -70, 0.001, 44, 34, 0.018, 43, 9, 0.002, -25, -63, 0.001, -4, 14, 0.002, 44, -79, 0.015, 43, 26, 0.025, 58, 8, 0.003, 15, 52, 0.000, 11, 73, 0.000, 47, 102, 0.000, 61, 39, 0.001, -4, 108, 0.001, 49, 133, 0.001, -8, 140, 0.001, 20, 101, 0.010, -18, 13, 0.000, 53, 25, 0.014, -3, 105, 0.040, -23, 167, 0.003, 48, 35, 0.037, 29, 39, 0.001, 44, 94, 0.001, 5, 29, 0.002, 29, -104, 0.001, 63, 36, 0.000, -2, 100, 0.000, 40, 37, 0.025, 39, -2, 0.007, 35, 3, 0.018, 16, 35, 0.004, 50, 143, 0.002, -7, 108, 0.378, -8, 25, 0.003, 26, -103, 0.003, 59, 10, 0.006, 17, 99, 0.008, 54, -5, 0.024, -1, -90, 0.000, 50, 2, 0.018, 12, -83, 0.001, 27, 89, 0.027, -22, -44, 0.009, 41, 110, 0.007, 54, -122, 0.000, 53, 77, 0.002, -35, -68, 0.002, -25, -57, 0.001, -21, -42, 0.019, 60, 46, 0.001, 41, 28, 0.018, -29, -52, 0.014, 36, 116, 0.222, 32, 132, 0.023, 14, 125, 0.000, -7, 40, 0.059, 42, 90, 0.003, 41, -87, 0.181, 51, 19, 0.025, 55, -1, 0.019, 51, 4, 0.041, 32, -94, 0.010, 8, -64, 0.005, 18, 6, 0.000, 33, 100, 0.001, -5, 21, 0.005, 48, 93, 0.000, 42, 11, 0.004, 37, 16, 0.032, -1, -55, 0.001, -2, 124, 0.003, -5, -58, 0.000, 22, 81, 0.034, 56, 57, 0.004, 37, -3, 0.030, 52, 36, 0.009, 13, 27, 0.003, -10, -62, 0.001, -11, 17, 0.005, -14, -75, 0.004, -34, -68, 0.006, -5, 104, 0.016, 47, 40, 0.052, -11, 162, 0.001, 20, 36, 0.000, 19, 79, 0.050, 34, -93, 0.004, -24, 45, 0.005, -9, 161, 0.001, 62, 29, 0.002, 38, 39, 0.019, -38, 145, 0.037, 15, 40, 0.014, 14, -7, 0.003, 47, 138, 0.000, -33, 28, 0.027, 34, 5, 0.010, 49, 33, 0.020, 11, -74, 0.014, -9, -61, 0.000, 1, 13, 0.001, 46, -108, 0.000, 16, 97, 0.134, -22, 48, 0.022, 48, 23, 0.031, 26, 91, 0.112, 44, 90, 0.004, 40, 122, 0.009, 38, 116, 0.222, 35, -114, 0.002, 16, 8, 0.000, -22, -65, 0.003, 12, 11, 0.033, 59, 53, 0.001, 40, 9, 0.013, -8, 29, 0.003, 7, 81, 0.153, -31, -66, 0.001, 6, -76, 0.006, 40, -96, 0.010, 39, 115, 0.043, 16, -90, 0.004, 50, 38, 0.007, 27, 117, 0.063, 26, 32, 0.107, 41, 90, 0.002, 3, 31, 0.024, -21, 33, 0.015, 50, -107, 0.001, 45, 38, 0.008, 7, -77, 0.001, 21, 36, 0.000, -14, -43, 0.004, -3, 26, 0.003, -6, 32, 0.005, 8, -2, 0.007, 45, -116, 0.000, 55, 50, 0.036, 51, 47, 0.022, 32, 7, 0.001, 31, 60, 0.001, 27, 49, 0.002, 4, 16, 0.004, 21, 103, 0.005, 18, -73, 0.033, -20, 22, 0.000, -36, 140, 0.001, 31, 93, 0.001, 46, 25, 0.028, 43, 133, 0.020, -34, 139, 0.001, 55, 84, 0.011, -2, 37, 0.085, 69, 33, 0.002, 46, -84, 0.004, 57, 55, 0.007, 19, -96, 0.056, -39, 146, 0.016, 33, 45, 0.173, 10, 80, 0.134, 28, 87, 0.001, -10, 19, 0.001, 14, 100, 0.029, 22, 109, 0.093, 56, 61, 0.056, 37, -95, 0.004, 34, 101, 0.001, 52, 64, 0.004, -36, -67, 0.001, 13, -1, 0.015, 47, -69, 0.002, 9, 4, 0.006, 46, 134, 0.007, 43, -72, 0.007, 0, 28, 0.001, 67, 63, 0.000, 0, 7, 0.004, 23, 54, 0.005, -23, -60, 0.001, 10, -63, 0.019, 25, 85, 0.286, 58, 64, 0.001, 38, 67, 0.013, 35, 127, 0.086, 37, 104, 0.018, -4, 117, 0.005, 11, 1, 0.009, 10, 20, 0.002, 5, -73, 0.033, 38, -82, 0.016, 53, 68, 0.002, 14, 104, 0.043, 29, 58, 0.004, -28, -48, 0.026, 25, 35, 0.001, 2, 26, 0.002, 1, 41, 0.002, -18, -43, 0.003, 49, -114, 0.001, 48, 59, 0.000, 26, 111, 0.063, 63, -21, 0.001, 25, -108, 0.017, 40, 94, 0.001, 39, -75, 0.101, 36, 33, 0.014, 50, 104, 0.001, 12, 39, 0.020, -21, -50, 0.013, 59, 17, 0.011, 39, 70, 0.011, 35, 75, 0.018, -7, 148, 0.003, 30, -106, 0.000, 29, 109, 0.057, 40, -124, 0.003, 54, 51, 0.005, 51, 143, 0.001, 50, 74, 0.006, 30, 69, 0.008, 26, 68, 0.028, 7, 6, 0.081, 51, 128, 0.001, -7, -78, 0.018, -27, -69, 0.001, 36, 93, 0.000, -3, 30, 0.121, 30, 103, 0.011, 64, -21, 0.005, 45, -97, 0.001, 42, 127, 0.039, 60, 38, 0.001, 54, 96, 0.001, 32, 60, 0.003, 31, -97, 0.016, 28, 55, 0.007, 8, 34, 0.004, -16, 32, 0.001, 55, 22, 0.016, 9, 100, 0.014, 42, -95, 0.003, 18, -101, 0.005, -1, 31, 0.054, -17, -44, 0.006, 66, 58, 0.002, 45, 78, 0.001, 22, 47, 0.004, 18, 46, 0.001, 9, -62, 0.005, -11, -53, 0.001, -14, 27, 0.001, -15, -56, 0.002, 57, 67, 0.001, -16, -61, 0.000, 37, 72, 0.003, 33, 73, 0.083, 28, 115, 0.069, 9, 15, 0.014, -11, -36, 0.012, -15, 21, 0.001, 56, 33, 0.002, 37, -75, 0.002, 34, 137, 0.073, -4, -60, 0.005, -33, -52, 0.006, 44, 71, 0.000, 43, -108, 0.001, 24, 50, 0.002, -9, 35, 0.013, 20, 45, 0.004, -23, 15, 0.001, -30, -54, 0.004, 43, 29, 0.007, 23, 90, 0.313, 1, 122, 0.003, 15, 79, 0.059, 11, 20, 0.001, 10, -75, 0.036, 25, 97, 0.007, -4, -49, 0.003, 58, 36, 0.002, 37, 140, 0.044, 34, 62, 0.003, 49, 108, 0.001, 14, 34, 0.033, -19, -63, 0.006, 53, 56, 0.009, 49, 57, 0.001, 48, 0, 0.016, 29, 62, 0.002, 44, 131, 0.012, 25, 63, 0.004, 39, -120, 0.002, -19, 18, 0.000, 49, -54, 0.001, 14, 123, 0.016, -12, -54, 0.000, 25, -80, 0.074, -32, -67, 0.001, 40, 66, 0.015, -36, -64, 0.001, 36, 61, 0.024, 50, 140, 0.001, 11, 80, 0.180, 39, 42, 0.012, 36, -100, 0.001, 54, 0, 0.011, 50, -5, 0.007, 30, -94, 0.009, 29, 81, 0.035, 14, 80, 0.064, -17, 19, 0.000, 53, 124, 0.001, 30, 17, 0.001, -22, -42, 0.021, 6, 27, 0.001, 17, -88, 0.003, -35, -54, 0.004, -27, -49, 0.023, 45, 46, 0.001, 41, 47, 0.013, 21, 60, 0.001, 18, 78, 0.083, 36, 137, 0.059, 51, -107, 0.000, -6, -40, 0.006, 27, -113, 0.001, 45, -61, 0.001, 55, -119, 0.000, 52, 77, 0.008, 54, 92, 0.001, 32, 16, 0.003, 31, 3, 0.001, 55, -6, 0.004, 51, -9, 0.002, 31, 116, 0.089, -2, -48, 0.057, 18, -97, 0.038, 33, 135, 0.010, -24, 134, 0.001, 66, 30, 0.001, 4, 103, 0.003, 19, -73, 0.006, -1, -76, 0.002, 33, -8, 0.010, -14, 31, 0.002, 57, 31, 0.002, 0, 110, 0.019, 52, 25, 0.009, 33, 37, 0.021, 47, -94, 0.001, 24, 103, 0.069, 23, -100, 0.005, -15, 49, 0.005, -48, -68, 0.000, 34, 109, 0.199, 33, -106, 0.000, -5, 139, 0.002, -24, -69, 0.001, 44, 35, 0.022, 46, 142, 0.001, -10, 160, 0.002, -4, 15, 0.002, 47, 4, 0.011, 44, -78, 0.009, 43, 25, 0.025, 23, 94, 0.008, 15, 51, 0.002, 47, 101, 0.000, -13, 50, 0.004, 61, 34, 0.001, 49, 136, 0.000, 48, -115, 0.001, 20, 102, 0.005, -18, 14, 0.000, 53, 28, 0.062, 48, 36, 0.043, 29, 34, 0.000, 44, 95, 0.000, 5, 32, 0.003, 29, -105, 0.001, 63, 35, 0.002, 40, 38, 0.029, 39, -3, 0.012, 35, 2, 0.021, 16, 36, 0.008, 50, 144, 0.001, -7, 107, 0.706, -8, 26, 0.004, 26, -102, 0.003, -12, -43, 0.001, 59, 9, 0.001, 40, -75, 0.105, 5, 120, 0.002, 17, 102, 0.018, 54, -4, 0.003, 50, -1, 0.050, 27, 96, 0.069, 41, 109, 0.008, 51, 87, 0.003, 53, 80, 0.002, 41, -2, 0.003, -21, -43, 0.020, 60, 47, 0.002, 41, 27, 0.016, -7, 39, 0.010, 42, 87, 0.004, 41, -84, 0.011, 3, 109, 0.001, 52, 121, 0.001, 51, 18, 0.035, -3, 11, 0.001, 28, -17, 0.003, 4, 37, 0.001, 55, -2, 0.008, 51, 3, 0.012, 32, -93, 0.014, 8, -71, 0.020, 33, 99, 0.001, -5, 28, 0.003, -6, 125, 0.000, 42, 12, 0.012, -11, 41, 0.006, 37, 15, 0.034, 6, 9, 0.051, -2, 121, 0.006, -5, -59, 0.000, -25, -46, 0.006, 61, 130, 0.003, 57, 11, 0.006, 56, 58, 0.004, 37, 0, 0.009, 52, 53, 0.005, 13, 22, 0.002, -11, 20, 0.001, -14, -74, 0.008, -34, -71, 0.031, 56, 105, 0.001, -5, 103, 0.005, 47, 39, 0.027, 44, -1, 0.003, 19, 78, 0.088, 34, -92, 0.020, -23, -41, 0.006, -24, 46, 0.003, -9, 160, 0.000, 62, 30, 0.003, -33, -54, 0.002, 38, 40, 0.019, 37, 83, 0.001, 15, 39, 0.039, 14, -6, 0.004, 47, 137, 0.001, -9, 120, 0.002, 61, 70, 0.001, -33, 27, 0.009, 38, -105, 0.002, 34, 6, 0.007, 26, -11, 0.000, 49, 36, 0.012, 48, -79, 0.002, -9, -62, 0.000, 1, 16, 0.000, 16, 98, 0.053, -22, 45, 0.002, -9, 125, 0.005, 48, 24, 0.022, 26, 92, 0.151, 44, 91, 0.003, 40, 123, 0.107, 38, 113, 0.064, 35, -115, 0.000, 16, -15, 0.006, -22, -64, 0.006, 12, 12, 0.008, 63, 55, 0.001, 60, 79, 0.002, 59, 60, 0.002, 40, 10, 0.008, 36, 5, 0.066, 30, -81, 0.030, -8, 30, 0.005, 26, -82, 0.004, 7, 80, 0.047, -31, -67, 0.000, 40, -103, 0.001, 39, 114, 0.042, 16, -89, 0.004, 50, 35, 0.022, -22, -41, 0.023, 41, 89, 0.001, 3, 30, 0.004, 45, 37, 0.009, 21, 35, 0.000, -17, -68, 0.024, -3, 25, 0.003, -6, 29, 0.004, -7, -42, 0.005, 32, 97, 0.002, 8, -1, 0.006, 45, -117, 0.001, -35, 25, 0.001, 55, 49, 0.016, 51, 46, 0.026, 32, 8, 0.003, 31, 59, 0.002, 28, 11, 0.000, 27, 56, 0.007, 4, 17, 0.003, 21, 82, 0.119, 18, -72, 0.096, -20, 23, 0.000, 31, 108, 0.134, 46, 26, 0.015, -4, 145, 0.000, 55, 83, 0.025, -2, 38, 0.054, 69, 36, 0.001, -21, -46, 0.008, 46, -87, 0.003, 57, 58, 0.003, 19, -97, 0.048, 37, 51, 0.011, -39, 145, 0.007, 33, 48, 0.015, 10, 77, 0.301, 28, 88, 0.001, 9, 38, 0.028, -10, 20, 0.001, -9, 26, 0.003, 22, 110, 0.125, 56, 62, 0.012, 37, -92, 0.005, 34, 102, 0.001, 52, 65, 0.001, 13, -6, 0.014, 47, -70, 0.002, 9, 3, 0.008, 43, -73, 0.009, 0, 21, 0.002, 43, 72, 0.003, -11, 149, 0.000, 23, 53, 0.004, 15, 122, 0.021, -24, 18, 0.001, 10, -62, 0.005, 14, 47, 0.005, 25, 88, 0.236, 58, 61, 0.005, 38, 68, 0.021, 37, 103, 0.025, 11, 8, 0.070, 10, 17, 0.007, 38, -77, 0.077, 53, 67, 0.002, 14, 101, 0.095, 29, 57, 0.004, 14, 20, 0.002, 2, 23, 0.010, 1, 44, 0.005, -18, -42, 0.007, -22, 17, 0.000, 49, -115, 0.001, 26, 112, 0.110, 63, -22, 0.001, 25, -109, 0.004, 40, 95, 0.001, 39, -76, 0.098, 36, 34, 0.022, 38, 141, 0.078, 12, 40, 0.027, -8, 148, 0.002, -12, 14, 0.001, 59, 24, 0.001, 39, 69, 0.011, 35, 74, 0.023, -7, 147, 0.005, 29, 112, 0.114, 54, 52, 0.004, 50, 71, 0.001, 30, 70, 0.008, 26, 65, 0.004, 7, 5, 0.104, -20, 32, 0.012, 51, 127, 0.001, -3, -80, 0.053, -19, -46, 0.007, -7, -79, 0.034, 41, 70, 0.115, 36, 94, 0.000, -3, 29, 0.047, -35, -64, 0.001, 30, 104, 0.173, 42, 128, 0.018, 60, 39, 0.001, 21, -88, 0.002, 54, 93, 0.001, 32, 53, 0.034, 31, -98, 0.002, 28, 56, 0.004, 8, 35, 0.011, -26, -51, 0.009, -16, 41, 0.007, 31, 15, 0.001, 9, 99, 0.007, 42, -94, 0.004, 18, -100, 0.015, -1, 30, 0.030, 33, 110, 0.043, 5, -7, 0.004, 46, 54, 0.001, 45, 77, 0.001, 42, 49, 0.004, 22, 48, 0.004, 18, 75, 0.082, 9, -63, 0.008, -11, -58, 0.000, -14, 28, 0.003, -15, -57, 0.002, 57, 22, 0.002, 37, 71, 0.008, 33, 76, 0.039, 28, 116, 0.158, 9, 18, 0.007, -11, -37, 0.030, -15, 24, 0.002, 56, 34, 0.001, 34, 138, 0.086, -4, -59, 0.004, 44, 72, 0.000, 24, 51, 0.002, 20, 46, 0.004, -20, 148, 0.000, -23, 18, 0.005, 23, 89, 0.325, 1, 121, 0.002, 15, 78, 0.084, 14, -89, 0.042, 11, 19, 0.002, 10, -74, 0.060, 25, 100, 0.030, -13, 37, 0.001, 58, 33, 0.002, 37, 139, 0.044, 34, 59, 0.004, 49, 107, 0.003, -18, 39, 0.001, -19, -60, 0.000, 53, 55, 0.003, 49, 60, 0.000, 48, 9, 0.074, 29, 61, 0.004, 44, 132, 0.006, 25, 66, 0.002, 39, -121, 0.013, -19, 17, 0.002, 49, -55, 0.001, 48, 80, 0.000, 29, -82, 0.014, 25, -81, 0.000, -32, -66, 0.001, 40, 67, 0.011, 39, -104, 0.033, 36, 62, 0.004, 50, 137, 0.005, 11, 79, 0.158, 39, 41, 0.010, 36, -115, 0.024, 54, -3, 0.011, 50, -4, 0.021, 29, 84, 0.001, -17, 18, 0.001, 54, 16, 0.004, 53, 123, 0.001, 30, 18, 0.001, 6, 28, 0.002, 17, -89, 0.002, 50, -66, 0.001, 64, 25, 0.002, 45, 45, 0.002, 41, 50, 0.001, 21, 59, 0.001, 18, 107, 0.007, 36, 138, 0.047, 51, -100, 0.001, -6, -43, 0.006, 45, -66, 0.005, 55, -120, 0.001, 52, 78, 0.010, 54, 89, 0.000, 31, 2, 0.001, 4, 74, 0.002, 55, -7, 0.003, -4, 140, 0.002, 32, -64, 0.002, 31, 115, 0.147, 9, 127, 0.004, 46, 7, 0.050, 42, -106, 0.002, 18, -96, 0.042, 66, 27, 0.000, -29, 33, 0.007, 4, 104, 0.009, -15, -170, 0.002, -1, -77, 0.002, -5, -80, 0.016, 46, -79, 0.003, -14, 32, 0.006, 57, 34, 0.004, 0, 111, 0.010, 52, 26, 0.010, 33, 40, 0.003, 47, -95, 0.001, 9, 46, 0.005, 14, 41, 0.006, 24, 104, 0.053, 23, -101, 0.002, 34, 110, 0.223, 33, -107, 0.000, -5, 138, 0.000, 44, 36, 0.001, -4, 16, 0.019, 47, 3, 0.015, 44, -77, 0.006, 62, 23, 0.004, 23, 93, 0.021, 38, 9, 0.000, 0, -60, 0.000, 15, 50, 0.003, 47, 84, 0.002, -46, -72, 0.001, -13, 49, 0.000, 61, 33, 0.001, 15, -61, 0.004, 49, 135, 0.001, 48, -114, 0.002, 20, 103, 0.006, -18, 19, 0.000, 53, 27, 0.010, 48, 29, 0.018, 29, 33, 0.011, 5, 31, 0.002, 35, -88, 0.008, 29, -110, 0.003, 63, 34, 0.000, -13, 132, 0.000, 40, 39, 0.020, 39, -4, 0.008, 35, 1, 0.039, 16, 29, 0.001, -8, 27, 0.006, 26, -105, 0.002, -12, -42, 0.004, 40, -74, 0.233, 17, 101, 0.023, 54, -7, 0.009, 50, 0, 0.029, 12, -81, 0.002, 27, 95, 0.052, 41, 112, 0.015, 51, 86, 0.001, 53, 79, 0.004, 41, -3, 0.003, 54, -101, 0.000, 58, 9, 0.004, 60, 48, 0.001, 41, 14, 0.033, 42, 88, 0.002, 41, -85, 0.025, 3, 116, 0.001, 52, 122, 0.001, 51, 17, 0.040, 28, -16, 0.022, 4, 38, 0.002, 55, -3, 0.038, 51, 2, 0.019, 32, -92, 0.008, 8, -70, 0.011, 55, 110, 0.001, 33, 102, 0.001, -5, 27, 0.007, 42, 9, 0.001, 37, 26, 0.002, -2, 122, 0.002, -13, -40, 0.006, -25, -47, 0.007, -2, 99, 0.000, 61, 129, 0.001, 57, -2, 0.013, 56, 59, 0.003, 37, -1, 0.020, 52, 54, 0.003, 13, 21, 0.002, -10, -56, 0.001, -11, 19, 0.002, 23, -97, 0.000, -34, -70, 0.167, 56, 106, 0.002, -3, 142, 0.000, 47, 38, 0.058, 44, 0, 0.035, 19, 77, 0.073, 34, -95, 0.002, -24, 47, 0.003, 10, -85, 0.007, 62, 35, 0.002, 38, 37, 0.021, 37, 78, 0.003, 15, 38, 0.005, 14, -17, 0.070, 47, 136, 0.001, 62, -114, 0.001, -33, 26, 0.002, 38, -104, 0.018, 34, 3, 0.006, 49, 35, 0.021, 11, -68, 0.001, 48, -78, 0.002, -9, -63, 0.004, -13, -66, 0.000, 1, 15, 0.000, -18, 47, 0.002, 16, 99, 0.012, -22, 46, 0.001, -3, 104, 0.011, 26, 89, 0.186, 44, 92, 0.001, 40, 124, 0.046, -12, 41, 0.003, 38, 114, 0.057, 35, -108, 0.002, 16, -14, 0.006, 63, 54, 0.003, 59, 59, 0.003, 5, 116, 0.006, 36, 6, 0.045, -8, 31, 0.003, -31, -64, 0.003, 40, -102, 0.001, 39, 113, 0.038, 16, -88, 0.001, 50, 36, 0.010, -22, -51, 0.011, 41, 92, 0.001, 3, 29, 0.002, 45, 40, 0.031, -25, -62, 0.000, -17, -69, 0.008, -3, 28, 0.003, -6, 30, 0.003, -39, -68, 0.006, -7, -43, 0.004, -45, 172, 0.002, -29, -65, 0.006, 17, -16, 0.001, 32, 98, 0.002, 8, 0, 0.008, 45, -122, 0.052, 55, 48, 0.012, 51, 45, 0.003, -3, 122, 0.004, 31, 58, 0.003, 28, 12, 0.000, 27, 55, 0.004, 4, 18, 0.003, 5, 6, 0.044, 21, 81, 0.067, -20, 24, 0.000, -39, -58, 0.002, 31, 107, 0.180, 46, 15, 0.033, 55, 82, 0.001, -8, -78, 0.018, 69, 35, 0.001, -25, 36, 0.005, 5, -1, 0.040, 46, -86, 0.000, 57, 57, 0.023, 19, -98, 0.206, 37, 46, 0.038, -39, 148, 0.001, 33, 47, 0.011, 10, 78, 0.124, 28, 89, 0.001, 9, 37, 0.017, -10, 17, 0.004, -18, -66, 0.027, 22, 115, 0.233, 56, 63, 0.007, 37, -93, 0.011, 52, 66, 0.001, 13, -7, 0.009, 47, -71, 0.001, 9, -10, 0.005, 43, -74, 0.003, -22, -55, 0.001, 0, 22, 0.002, 43, 71, 0.003, 23, 52, 0.002, 15, 121, 0.130, 10, -65, 0.002, 44, -117, 0.001, 25, 87, 0.277, 58, 62, 0.001, 38, 65, 0.003, 37, 114, 0.051, 15, 10, 0.000, 11, 7, 0.021, 10, 18, 0.004, 38, -76, 0.044, 53, 62, 0.002, 14, 102, 0.036, 29, 60, 0.004, -2, 107, 0.003, 2, 24, 0.004, 1, 43, 0.003, 49, -112, 0.003, 48, 53, 0.001, 26, 109, 0.042, 40, 96, 0.001, 39, -77, 0.044, 36, 35, 0.010, 38, 142, 0.030, 35, -80, 0.040, 50, 102, 0.000, 12, 41, 0.013, -12, 15, 0.005, 39, 68, 0.032, 35, 73, 0.044, 29, 111, 0.054, 54, 49, 0.032, 50, 72, 0.001, 30, 75, 0.116, -33, -63, 0.007, 26, 66, 0.002, 7, 4, 0.089, 51, 126, 0.002, -7, -76, 0.009, 45, 76, 0.000, 41, 69, 0.010, 36, 95, 0.000, -21, 148, 0.000, -3, 32, 0.016, 30, 101, 0.002, 42, 125, 0.045, 60, 40, 0.001, 21, -89, 0.014, 54, 94, 0.001, 32, 54, 0.005, -17, -43, 0.009, 31, -99, 0.001, 28, 57, 0.003, 8, 36, 0.025, -22, -46, 0.021, -3, 126, 0.001, 31, 14, 0.001, 42, -97, 0.003, 18, -103, 0.005, -1, 29, 0.008, 33, 109, 0.041, -6, 147, 0.001, 45, 80, 0.002, -11, 34, 0.005, 22, 45, 0.004, 18, 76, 0.057, 6, 4, 0.225, -11, -59, 0.000, -14, 25, 0.001, -15, -54, 0.001, -10, -74, 0.001, 33, 75, 0.066, 28, 117, 0.127, 9, 17, 0.010, -11, -42, 0.002, -15, 23, 0.002, 56, 35, 0.005, 34, 135, 0.110, -4, -58, 0.002, 43, -110, 0.000, 24, 52, 0.002, 20, 47, 0.004, -23, 17, 0.001, 13, 110, 0.038, 23, 88, 0.204, 15, 77, 0.092, 14, -88, 0.022, 11, 18, 0.003, 25, 99, 0.030, -13, 44, 0.001, 58, 34, 0.002, -46, 171, 0.005, 34, 60, 0.005, -37, 143, 0.001, -19, -61, 0.000, 53, 34, 0.006, 49, 59, 0.001, 48, 10, 0.104, 29, 64, 0.001, 44, 133, 0.007, 25, 65, 0.002, 39, -122, 0.002, 35, -117, 0.002, -19, 20, 0.001, 68, 14, 0.000, 48, 89, 0.002, 29, -83, 0.001, -32, -65, 0.001, 40, 68, 0.014, 39, -105, 0.030, 36, 63, 0.002, 16, 74, 0.036, 50, 138, 0.010, 11, 78, 0.150, -20, 17, 0.001, -13, -49, 0.001, 39, 40, 0.007, 36, -114, 0.001, 54, -2, 0.014, -41, -70, 0.000, 29, 83, 0.004, 7, 23, 0.000, -17, 17, 0.001, 54, 13, 0.014, 53, 118, 0.001, 30, 39, 0.001, 8, 80, 0.004, 64, 26, 0.003, 45, 48, 0.003, -31, 150, 0.000, 41, 49, 0.016, 21, 54, 0.002, 36, 139, 0.068, 17, 55, 0.002, 51, -101, 0.000, -6, -42, 0.023, 45, -67, 0.001, 52, 79, 0.002, 54, 90, 0.001, 31, 1, 0.001, 55, -8, 0.000, 31, 114, 0.120, 46, 8, 0.033, 19, 76, 0.089, 18, -99, 0.053, 33, 137, 0.001, 66, 28, 0.000, -29, 24, 0.002, 45, 116, 0.000, -15, -171, 0.000, 19, -75, 0.006, -1, -78, 0.061, 33, -6, 0.055, -5, -81, 0.003, -24, 151, 0.003, -14, 29, 0.010, -4, 109, 0.000, 57, 33, 0.001, 19, -154, 0.000, 0, 112, 0.007, 52, 27, 0.010, 33, 39, 0.004, 47, -96, 0.001, 9, 45, 0.009, 24, 97, 0.012, 23, -102, 0.005, -15, 51, 0.004, 33, -104, 0.002, -5, 137, 0.002, -9, 30, 0.004, -4, 17, 0.002, 47, 2, 0.021, 44, -76, 0.008, 62, 24, 0.002, 15, 49, 0.003, 47, 83, 0.001, 62, 7, 0.003, 14, 35, 0.006, -30, 154, 0.001, 29, -13, 0.001, -9, -68, 0.000, 20, 104, 0.005, -18, 20, 0.001, 53, 22, 0.012, 48, 30, 0.016, 29, 36, 0.002, 5, 42, 0.002, 35, -89, 0.027, 48, 109, 0.000, 29, -111, 0.006, 63, 33, 0.000, -37, 144, 0.001, -13, 131, 0.003, 40, 40, 0.022, 39, -5, 0.005, -20, -46, 0.005, 16, 30, 0.001, -8, 28, 0.004, 26, -104, 0.001, -12, -41, 0.009, 40, -73, 0.343, 39, 140, 0.003, 17, 104, 0.042, 54, -6, 0.023, 50, -3, 0.023, 27, 94, 0.012, 14, 81, 0.017, 41, 111, 0.007, 51, 85, 0.001, 53, 90, 0.001, 41, 0, 0.019, -35, -59, 0.013, 60, 49, 0.001, 41, 13, 0.112, -1, 133, 0.000, -6, -70, 0.000, 42, 85, 0.002, 41, -98, 0.001, 3, 115, 0.001, 52, 123, 0.002, 51, 40, 0.043, 28, -15, 0.015, 4, 39, 0.002, -1, 116, 0.002, 51, 1, 0.148, 32, -99, 0.005, 8, -69, 0.006, 33, 101, 0.001, -5, 26, 0.002, -6, 139, 0.001, 42, 10, 0.004, 37, 25, 0.002, -1, -58, 0.000, -2, 111, 0.006, -5, -53, 0.000, -8, -56, 0.001, -25, -48, 0.007, 61, 132, 0.000, 22, 88, 0.268, 56, 60, 0.007, 37, 10, 0.011, 52, 55, 0.002, 13, 24, 0.007, 46, 93, 0.000, -11, 14, 0.001, -14, -76, 0.011, 23, -98, 0.002, 47, 37, 0.008, 44, 1, 0.016, -11, 163, 0.000, 19, 84, 0.040, 34, -94, 0.002, -36, -63, 0.003, -24, 48, 0.007, 10, -84, 0.025, -9, 158, 0.001, 62, 36, 0.001, 20, -90, 0.003, 38, 38, 0.018, 37, 77, 0.006, 15, 37, 0.008, 14, -16, 0.052, 10, -5, 0.010, 47, 135, 0.003, -33, 25, 0.002, 38, -107, 0.001, 34, 4, 0.007, 49, 38, 0.012, 11, -69, 0.010, 48, -77, 0.001, -9, -64, 0.001, 1, 18, 0.000, -18, 48, 0.003, 16, 100, 0.030, 53, -6, 0.048, 26, 90, 0.166, 40, 117, 0.199, 2, -60, 0.002, 38, 119, 0.012, 35, -109, 0.001, 16, -13, 0.005, -22, -66, 0.001, 49, -124, 0.004, 63, 53, 0.001, 59, 58, 0.002, 36, 7, 0.062, 35, 36, 0.014, 30, -83, 0.006, -8, 32, 0.005, -31, -65, 0.001, 6, -73, 0.016, 40, -101, 0.000, 39, 112, 0.021, 50, 33, 0.013, 27, 122, 0.004, 26, 43, 0.003, 41, 91, 0.001, 3, 36, 0.003, -17, -151, 0.001, -21, -66, 0.001, 45, 39, 0.023, 7, -80, 0.006, 6, 81, 0.180, -17, -70, 0.002, -3, 27, 0.004, -7, -40, 0.004, 60, 13, 0.002, 32, 99, 0.002, 8, -7, 0.005, 45, -123, 0.005, 55, 47, 0.008, 51, 52, 0.010, -3, 121, 0.016, 31, 57, 0.004, 27, 54, 0.005, 4, 19, 0.022, -8, 107, 0.024, -16, -42, 0.005, 21, 84, 0.081, 18, -74, 0.014, -1, 136, 0.001, -39, -59, 0.002, 31, 106, 0.150, 46, 16, 0.063, -34, 138, 0.001, 55, 81, 0.001, 69, 30, 0.000, -25, 35, 0.008, 46, -97, 0.001, -11, 40, 0.023, 57, 60, 0.012, 19, -99, 0.476, 37, 45, 0.023, -39, 147, 0.003, 33, 50, 0.016, 28, 90, 0.003, 9, 40, 0.032, -10, 18, 0.003, -47, 170, 0.001, -15, 30, 0.002, 22, 116, 0.036, 56, 64, 0.005, 37, -98, 0.001, 34, 100, 0.001, 52, 67, 0.002, 13, -4, 0.013, 47, -72, 0.001, 9, -11, 0.008, 46, 137, 0.000, 43, -75, 0.014, 24, 41, 0.003, 0, 23, 0.003, 43, 70, 0.003, -11, 151, 0.001, 23, 51, 0.002, 15, 120, 0.003, -24, 20, 0.000, 10, -64, 0.023, 44, -116, 0.001, 25, 90, 0.308, 38, 66, 0.019, 37, 113, 0.125, 15, 9, 0.001, 11, 6, 0.017, 10, 15, 0.035, -9, 115, 0.062, 38, -79, 0.004, 53, 61, 0.003, 49, 66, 0.000, 29, 59, 0.004, 25, 56, 0.020, 5, 49, 0.000, 2, 21, 0.008, 1, 46, 0.001, 6, 125, 0.044, 49, -113, 0.001, 48, 54, 0.000, 26, 110, 0.043, 39, -78, 0.009, 36, 36, 0.014, -18, -149, 0.005, 35, -81, 0.027, 16, -25, 0.001, 50, 99, 0.000, 12, 42, 0.002, -12, 16, 0.009, 39, 67, 0.052, 35, 64, 0.003, 30, -103, 0.000, 39, 84, 0.001, 54, 50, 0.009, 50, 69, 0.001, 30, 76, 0.140, 26, 63, 0.004, 7, 3, 0.025, 51, 125, 0.002, -3, -54, 0.005, -26, -50, 0.014, -7, -77, 0.005, -33, -61, 0.006, 45, 75, 0.000, 41, 72, 0.029, -36, -66, 0.001, 8, 126, 0.032, 36, 96, 0.000, -21, 147, 0.000, -3, 31, 0.067, 30, 102, 0.003, -37, -64, 0.003, 45, -100, 0.000, 42, 126, 0.052, 60, 41, 0.001, -35, 138, 0.000, 54, 99, 0.001, 32, 55, 0.003, 31, -84, 0.007, 28, 58, 0.004, 8, 29, 0.013, 31, 13, 0.002, 42, -96, 0.006, 18, -102, 0.010, 33, 112, 0.064, -6, 148, 0.001, 65, 14, 0.000, 46, 60, 0.000, 45, 79, 0.005, 42, 47, 0.008, 22, 46, 0.004, 18, 73, 0.062, -35, 117, 0.000, 14, -10, 0.005, 9, -61, 0.001, -11, -56, 0.002, -14, 26, 0.001, -15, -55, 0.001, 57, 24, 0.001, -38, 175, 0.004, 28, 118, 0.096, 9, 20, 0.005, -11, -43, 0.002, -9, 21, 0.001, -4, 123, 0.008, 56, 36, 0.017, 34, 136, 0.535, -4, -57, 0.001, 44, 74, 0.000, -17, 32, 0.010, 43, -111, 0.003, 24, 45, 0.004, 20, 48, 0.003, 67, 32, 0.002, 13, 109, 0.025, 23, 87, 0.209, 14, -91, 0.065, 11, 17, 0.005, 25, 118, 0.064, 58, 31, 0.002, 34, 57, 0.001, 49, 77, 0.000, 10, 51, 0.001, -33, -62, 0.004, -18, 37, 0.015, -19, -66, 0.007, 53, 33, 0.007, 48, 11, 0.052, 29, 63, 0.001, 44, 134, 0.005, 25, 68, 0.059, 39, -123, 0.003, 1, 74, 0.000, 35, -118, 0.007, -19, 19, 0.001, 68, 15, 0.001, 48, 90, 0.001, 29, -80, 0.002, 63, 12, 0.002, -32, -64, 0.050, 40, 61, 0.001, 39, -106, 0.002, 36, 64, 0.003, 16, 75, 0.176, 50, 135, 0.000, 11, 77, 0.152, 39, 39, 0.009, -20, 64, 0.001, -41, -71, 0.001, 29, 78, 0.258, 7, 22, 0.001, -17, 16, 0.001, 54, 14, 0.010, 30, 40, 0.001, -25, -53, 0.017, -26, 47, 0.003, 64, 27, 0.001, 45, 47, 0.001, -29, -56, 0.002, 21, 53, 0.002, 18, 105, 0.004, 36, 140, 0.182, 51, -102, 0.001, 27, -108, 0.001, 45, -64, 0.003, 52, 80, 0.002, 31, 0, 0.001, 51, -4, 0.011, 31, 113, 0.084, 46, 5, 0.025, 42, -124, 0.001, 19, 75, 0.091, 18, -98, 0.045, 66, 25, 0.001, 5, -8, 0.009, 42, 19, 0.010, 57, 115, 0.001, -1, -79, 0.021, 33, -7, 0.119, -24, 152, 0.001, -14, 30, 0.002, -18, -59, 0.000, 57, 36, 0.004, 19, -155, 0.004, 0, 121, 0.008, 52, 28, 0.010, 33, 42, 0.003, 47, -97, 0.003, 9, 48, 0.001, 24, 98, 0.015, 23, -103, 0.008, 33, -105, 0.001, 44, 38, 0.014, -4, 18, 0.007, 13, 81, 0.186, 47, 1, 0.027, 44, -75, 0.007, -13, -42, 0.004, 38, 15, 0.004, 15, 48, 0.001, 47, 82, 0.001, 62, 8, 0.002, 61, 35, 0.012, 14, 36, 0.007, 48, -112, 0.000, -9, -69, 0.000, -13, -72, 0.003, 20, 105, 0.012, -10, 120, 0.012, 53, 21, 0.017, 48, 31, 0.018, 29, 35, 0.001, 5, 41, 0.002, 35, -90, 0.016, 29, -108, 0.001, 40, 33, 0.029, 39, -6, 0.009, 16, 31, 0.001, -17, 168, 0.001, -8, 21, 0.002, 26, -107, 0.002, -12, -40, 0.011, -32, 19, 0.001, 40, -72, 0.009, 17, 103, 0.056, -55, -65, 0.000, 50, -2, 0.013, 27, 93, 0.004, 41, 114, 0.030, 51, 92, 0.001, 53, 89, 0.004, -17, 179, 0.001, 26, -9, 0.000, 41, -1, 0.011, -30, 18, 0.002, 60, 50, 0.001, 41, 16, 0.028, -6, -73, 0.001, 27, -80, 0.014, 42, 86, 0.003, 41, -99, 0.001, 3, 114, 0.004, 52, 124, 0.002, 51, 39, 0.007, 32, -17, 0.002, 28, -14, 0.001, 4, 40, 0.001, 22, -84, 0.003, -1, 115, 0.003, 32, -98, 0.003, 8, -68, 0.002, 6, -5, 0.031, 33, 104, 0.003, -5, 25, 0.003, -6, 140, 0.001, 46, -124, 0.000, 19, -104, 0.011, 37, 28, 0.021, -2, 112, 0.001, -5, -54, 0.000, -25, -49, 0.007, 61, 131, 0.001, -11, 22, 0.001, 22, 85, 0.063, 56, 53, 0.006, 52, 56, 0.007, 13, 23, 0.011, 47, -61, 0.000, -10, -58, 0.000, 23, -99, 0.010, -38, -69, 0.000, 47, 20, 0.093, 44, 2, 0.011, 5, 119, 0.005, 0, 11, 0.001, 19, 83, 0.063, 34, -97, 0.005, -36, -57, 0.006, 62, 33, 0.000, 20, -89, 0.023, 38, 43, 0.012, 37, 80, 0.008, 15, 20, 0.001, 10, -4, 0.008, 47, 134, 0.008, 38, -106, 0.001, 34, 1, 0.007, -38, 146, 0.058, 49, 37, 0.051, 11, -70, 0.006, -8, 108, 0.125, -13, -60, 0.001, 1, 17, 0.000, -18, 45, 0.001, 53, -7, 0.008, 26, 87, 0.195, 40, 118, 0.081, -18, -64, 0.002, 35, -110, 0.001, 16, -12, 0.003, -22, -53, 0.001, 49, -125, 0.001, 59, 57, 0.012, 36, 8, 0.049, 35, 35, 0.001, 30, -82, 0.004, -31, -62, 0.002, 6, -72, 0.010, 40, -100, 0.001, 39, 111, 0.014, 50, 34, 0.012, 27, 121, 0.125, 26, 44, 0.005, 41, 78, 0.001, 3, 35, 0.004, 2, 118, 0.003, 51, 120, 0.000, 50, -111, 0.001, 45, 34, 0.015, 7, -81, 0.002, 6, 82, 0.023, 3, -76, 0.099, -17, -71, 0.026, -3, 22, 0.001, -7, -41, 0.004, 58, 6, 0.007, 60, 14, 0.001, -4, -38, 0.078, 17, -14, 0.001, 32, 100, 0.002, 28, 31, 0.092, 8, -6, 0.005, -30, -59, 0.004, -35, 22, 0.001, 55, 46, 0.005, 51, 51, 0.002, -33, -55, 0.002, 31, 56, 0.002, 28, -114, 0.000, 27, 53, 0.004, 4, 20, 0.005, -16, -41, 0.005, 21, 83, 0.073, 18, -77, 0.030, -1, 135, 0.001, -3, -41, 0.004, -5, 12, 0.009, 31, 105, 0.169, 46, 13, 0.013, 45, 102, 0.000, 55, 80, 0.000, -2, 41, 0.002, -25, 34, 0.016, 46, -96, 0.007, 57, 59, 0.002, 37, 48, 0.013, 33, 49, 0.025, 28, 91, 0.002, 9, 39, 0.084, -10, 23, 0.002, -47, 169, 0.003, -15, 29, 0.009, 22, 113, 0.119, 56, 25, 0.027, 37, -99, 0.001, 34, 97, 0.000, 52, 68, 0.002, 13, -5, 0.015, 9, -8, 0.006, 46, 138, 0.000, 24, 42, 0.003, -14, -171, 0.004, -4, 137, 0.002, 0, 24, 0.004, 43, 69, 0.008, 24, -103, 0.009, 23, 50, 0.002, 1, 98, 0.012, -22, -40, 0.001, 10, -67, 0.074, 25, 89, 0.247, 38, 71, 0.003, 37, 116, 0.170, 15, 8, 0.000, 11, 5, 0.022, 10, 16, 0.018, 14, 30, 0.001, 38, -78, 0.013, 53, 64, 0.014, 14, 108, 0.010, 29, 54, 0.022, 2, 22, 0.008, 1, 45, 0.017, -18, -39, 0.007, 48, 55, 0.000, 39, -79, 0.010, 35, -82, 0.016, 16, -24, 0.002, 50, 100, 0.000, 12, 43, 0.002, -12, 17, 0.009, 39, 66, 0.015, 35, 63, 0.003, 30, -102, 0.000, 39, 83, 0.001, -1, 99, 0.001, 54, 55, 0.006, 50, 70, 0.000, 30, 73, 0.153, 26, 64, 0.005, 7, 2, 0.019, -3, -55, 0.001, 41, 71, 0.010, 36, 97, 0.000, 30, 107, 0.243, 60, 42, 0.001, -29, -62, 0.001, 54, 100, 0.001, 32, 56, 0.001, 31, -85, 0.009, 28, 59, 0.004, 8, 30, 0.006, 31, 28, 0.001, -1, 43, 0.010, 33, 111, 0.045, -6, 145, 0.011, 65, 13, 0.001, 42, 48, 0.016, 4, 127, 0.002, 22, 51, 0.002, 18, 74, 0.175, 9, -74, 0.015, -11, -57, 0.000, -14, 23, 0.002, -15, -52, 0.001, 57, 23, 0.002, -39, 178, 0.001, 28, 119, 0.091, 9, 19, 0.005, 43, -121, 0.001, -11, -40, 0.009, -15, 25, 0.002, 56, 29, 0.003, 34, 133, 0.085, -4, -56, 0.001, -5, 115, 0.000, 39, -103, 0.000, 44, 75, 0.001, 24, 46, 0.004, 20, 49, 0.002, -36, -72, 0.004, -23, 19, 0.000, 67, 31, 0.001, -28, 29, 0.003, 24, -99, 0.004, 23, 86, 0.133, 1, 126, 0.007, 14, -90, 0.106, 11, 24, 0.005, 25, 117, 0.054, 61, 26, 0.003, 58, 32, 0.011, -10, 125, 0.026, 34, 58, 0.001, 49, 80, 0.000, -8, 157, 0.000, -18, 38, 0.015, -19, -67, 0.002, 53, 36, 0.004, 48, 12, 0.089, 44, 135, 0.001, 25, 67, 0.006, 35, -119, 0.011, 68, 16, 0.001, 49, -82, 0.000, 48, 91, 0.001, 29, -81, 0.015, 63, 11, 0.007, -32, -55, 0.003, 40, 62, 0.001, 39, -107, 0.001, 36, 65, 0.005, 16, 76, 0.086, 50, 136, 0.001, 5, 102, 0.009, 39, 38, 0.009, -41, -72, 0.005, 29, 77, 0.138, -17, 15, 0.001, 54, 19, 0.042, 53, 120, 0.000, 30, 37, 0.001, 6, 31, 0.006, 64, 28, 0.001, -19, 179, 0.004, 21, 56, 0.001, 18, 106, 0.075, 51, -103, 0.000, -21, -70, 0.003, 27, -109, 0.012, 45, -65, 0.003, 42, 95, 0.001, -16, -71, 0.002, 52, 81, 0.002, -41, -65, 0.000, 31, -1, 0.000, 51, -5, 0.001, 31, 112, 0.051, 46, 6, 0.016, 19, 74, 0.168, 66, 26, 0.002, -29, 22, 0.003, 42, 20, 0.018, -11, 29, 0.003, 19, -69, 0.010, 6, 5, 0.031, 33, -4, 0.015, 57, 35, 0.005, 0, 122, 0.004, 52, 13, 0.019, 33, 41, 0.003, 13, 46, 0.013, 47, -98, 0.000, 9, 47, 0.002, -10, -49, 0.001, 24, 99, 0.032, 23, -104, 0.007, 33, -102, 0.002, -28, -70, 0.002, 44, 39, 0.010, -4, 19, 0.007, 47, 0, 0.026, 44, -74, 0.003, 62, 22, 0.002, 23, 122, 0.014, 38, 16, 0.027, 34, -117, 0.076, 15, 47, 0.002, 11, 52, 0.000, 47, 81, 0.001, -9, 124, 0.006, 61, 30, 0.002, 49, 140, 0.001, 48, -103, 0.001, -9, -70, 0.000, -13, -73, 0.003, 20, 106, 0.151, -18, 18, 0.001, 53, 24, 0.023, 48, 32, 0.011, 5, 44, 0.002, 35, -91, 0.005, -19, 50, 0.006, 29, -109, 0.001, 63, 31, 0.001, 40, 34, 0.019, 39, -7, 0.007, 16, 32, 0.011, -8, 22, 0.004, 26, -106, 0.001, -12, -39, 0.014, -32, 20, 0.000, 40, -79, 0.056, 17, 106, 0.005, 50, 27, 0.025, 27, 100, 0.009, 41, 113, 0.018, -21, 48, 0.018, 51, 91, 0.001, 53, 92, 0.015, -33, -68, 0.025, -9, 141, 0.002, 41, 2, 0.042, 3, -57, 0.001, -17, -60, 0.000, -13, -46, 0.002, 60, 51, 0.000, 41, 15, 0.042, -26, -69, 0.001, 27, -81, 0.009, 41, -96, 0.013, 3, 113, 0.000, 52, 109, 0.001, 51, 38, 0.014, 32, -16, 0.007, 28, -13, 0.003, 27, 32, 0.047, 4, 41, 0.002, -53, -72, 0.000, -1, 114, 0.002, 32, -97, 0.052, 8, -75, 0.022, -4, 141, 0.001, 19, 38, 0.008, 33, 103, 0.002, -5, 32, 0.006, 19, -105, 0.001, 37, 27, 0.002, -5, -55, 0.001, -25, -50, 0.007, -4, 114, 0.001, 22, 86, 0.063, 56, 54, 0.030, 37, 12, 0.000, 52, 57, 0.002, 13, 18, 0.002, -10, -53, 0.001, 43, -65, 0.001, -11, 16, 0.005, 56, 101, 0.001, -38, -68, 0.001, 47, 19, 0.044, 44, 3, 0.012, 19, 82, 0.025, 34, -96, 0.003, -42, 147, 0.003, 62, 34, 0.000, 20, -88, 0.005, 38, 44, 0.010, 37, 79, 0.002, 15, 19, 0.001, 10, -7, 0.003, 47, 133, 0.013, 61, 66, 0.000, -33, 23, 0.001, 38, -101, 0.000, 34, 2, 0.009, 15, -92, 0.024, 49, 40, 0.006, 11, -71, 0.002, 14, 16, 0.001, -13, -61, 0.001, 2, 47, 0.001, 1, 20, 0.002, -18, 46, 0.001, 53, -4, 0.003, 26, 88, 0.158, 40, 119, 0.076, 38, 117, 0.164, 35, -111, 0.002, -22, -52, 0.002, 12, -16, 0.014, 49, -122, 0.033, 63, 67, 0.001, 36, 9, 0.031, 35, 34, 0.011, -31, -63, 0.001, 6, -75, 0.114, 40, -107, 0.001, 39, 110, 0.009, 14, 43, 0.005, 53, 159, 0.013, 50, 31, 0.118, 26, 41, 0.001, 41, 77, 0.002, 3, 34, 0.005, 2, 115, 0.001, -1, 101, 0.091, 51, 119, 0.000, 50, -110, 0.002, 12, 93, 0.002, 45, 33, 0.001, 3, -77, 0.004, -17, -72, 0.002, -3, 21, 0.001, -7, -38, 0.018, -27, 19, 0.001, 60, 15, 0.002, 17, -15, 0.003, 32, 93, 0.001, 28, 32, 0.001, 8, -5, 0.007, 45, -121, 0.002, -35, 21, 0.002, 55, 45, 0.005, 51, 50, 0.002, 31, 55, 0.004, 28, -113, 0.002, 27, 60, 0.002, -16, -40, 0.007, 21, 78, 0.056, 18, -76, 0.027, -1, 134, 0.001, -39, -57, 0.008, 31, 104, 0.050, 46, 14, 0.019, 43, 112, 0.001, 55, 79, 0.004, -2, 42, 0.002, 69, 32, 0.000, -25, 33, 0.004, 46, -99, 0.000, 57, 46, 0.003, 37, 47, 0.043, 33, 52, 0.010, 28, 92, 0.002, 9, 42, 0.041, -10, 24, 0.002, -15, 32, 0.006, 22, 114, 0.200, 56, 26, 0.005, 37, -96, 0.002, 34, 98, 0.000, -12, -64, 0.001, 13, -10, 0.003, 9, -9, 0.007, 46, 127, 0.067, 43, -69, 0.002, 24, 43, 0.004, 0, 33, 0.095, 67, 66, 0.001, 43, 76, 0.003, 24, -102, 0.001, 23, 49, 0.002, 10, -66, 0.137, 25, 92, 0.064, 38, 72, 0.002, 35, 130, 0.161, 37, 115, 0.166, 15, 7, 0.001, 11, 12, 0.016, 10, 13, 0.018, 53, 63, 0.002, 14, 105, 0.032, 29, 53, 0.038, 25, 58, 0.000, 2, 19, 0.006, -41, 177, 0.001, 68, 37, 0.001, 39, -80, 0.011, 36, 22, 0.001, 35, -83, 0.013, 12, 44, 0.001, 5, 5, 0.000, -12, 18, 0.005, 59, 28, 0.004, 5, 81, 0.010, 39, 65, 0.020, 36, -91, 0.003, 35, 62, 0.004, 39, 82, 0.005, 54, 56, 0.013, 50, 67, 0.003, 30, 74, 0.155, 26, 61, 0.004, 7, 1, 0.020, -3, -52, 0.001, -27, -62, 0.000, 41, 74, 0.008, 22, 87, 0.126, 36, 98, 0.000, 30, 108, 0.167, 42, 140, 0.001, 60, 43, 0.001, -35, 140, 0.001, 32, 65, 0.004, 31, -86, 0.004, 28, 60, 0.003, 8, 31, 0.004, -16, 37, 0.009, 31, 27, 0.001, 42, -98, 0.001, 22, -159, 0.001, 21, 114, 0.001, 18, -104, 0.000, -1, 42, 0.012, 33, 114, 0.209, -6, 146, 0.004, 42, 45, 0.016, 22, 52, 0.002, 9, -75, 0.030, -14, 24, 0.002, -15, -53, 0.001, 57, 26, 0.005, -39, 177, 0.003, -26, 154, 0.001, 10, 109, 0.008, 28, 120, 0.066, 43, -122, 0.001, -11, -41, 0.001, -15, 28, 0.004, 56, 30, 0.002, 34, 134, 0.099, -4, -55, 0.000, 44, 76, 0.001, 24, 47, 0.004, -11, 122, 0.002, 20, 50, 0.002, 67, 30, 0.000, -28, 30, 0.004, -28, -66, 0.001, 43, 40, 0.008, 24, -98, 0.002, 23, 85, 0.059, 1, 125, 0.032, 14, -85, 0.004, 11, 23, 0.003, 25, 120, 0.099, -13, 41, 0.004, -32, 117, 0.004, 61, 25, 0.005, 58, 29, 0.001, 34, 55, 0.001, -8, 158, 0.000, 10, 49, 0.003, -37, 148, 0.001, -19, -64, 0.002, 53, 35, 0.025, 48, 5, 0.015, 29, 25, 0.000, 44, 136, 0.004, 68, 17, 0.001, 48, 92, 0.000, 63, 10, 0.001, 25, -77, 0.005, -32, -54, 0.005, 40, 63, 0.006, 39, -108, 0.003, 36, 66, 0.008, -35, -60, 0.007, -24, -46, 0.600, 5, 101, 0.067, 39, 37, 0.011, 36, -111, 0.001, -21, -62, 0.000, -41, -73, 0.009, 29, 80, 0.067, 7, 20, 0.002, -17, 14, 0.001, 54, 20, 0.012, 53, 119, 0.001, -6, 28, 0.004, 30, 38, 0.000, 60, -151, 0.001, 6, 32, 0.006, -26, 45, 0.001, 64, 21, 0.002, -31, 151, 0.001, 41, 38, 0.004, 21, 55, 0.001, 18, 103, 0.016, 51, -112, 0.001, 27, -110, 0.004, 64, 12, 0.001, 45, -70, 0.001, 42, 96, 0.001, -16, -70, 0.012, 52, 82, 0.002, 32, 21, 0.003, 31, -2, 0.001, 31, 111, 0.035, 46, 11, 0.008, 19, 73, 0.391, 18, -4, 0.000, 33, 78, 0.000, 66, 23, 0.001, -29, 21, 0.001, 42, 17, 0.000, 19, -70, 0.056, 18, 43, 0.007, 33, -5, 0.026, -5, -76, 0.000, 22, 95, 0.022, 0, 123, 0.013, 37, -25, 0.004, 52, 14, 0.141, 33, 44, 0.010, 13, 45, 0.050, -44, 172, 0.001, 47, -99, 0.001, 9, 50, 0.002, -10, -48, 0.002, 24, 100, 0.040, -9, 16, 0.006, 23, -105, 0.006, -4, 128, 0.003, 8, 10, 0.021, -28, -69, 0.001, 44, 40, 0.015, -4, 20, 0.002, 47, -1, 0.034, 44, -73, 0.010, 62, 27, 0.001, 23, 121, 0.156, 38, 13, 0.002, 34, -116, 0.003, 15, 46, 0.003, 14, 7, 0.013, 11, 51, 0.001, 47, 80, 0.001, -36, 146, 0.001, 62, 6, 0.001, 59, 152, 0.000, 61, 29, 0.004, 49, 139, 0.000, 11, -60, 0.002, -8, 130, 0.000, -9, -71, 0.001, -13, -74, 0.012, 20, 107, 0.248, -37, 176, 0.001, 53, 23, 0.014, -3, 108, 0.004, 48, 41, 0.013, 5, 43, 0.002, 35, -84, 0.015, -19, 49, 0.008, 29, -114, 0.002, 63, 30, 0.001, 40, 35, 0.015, 39, -8, 0.026, -8, 23, 0.006, -45, -67, 0.001, 14, 99, 0.009, -12, -38, 0.012, 40, -78, 0.016, 36, -83, 0.013, 17, 105, 0.032, 50, 28, 0.014, 27, 99, 0.004, -22, -47, 0.032, 41, 116, 0.019, -17, 50, 0.006, -21, 47, 0.006, 51, 90, 0.001, 53, 91, 0.002, -35, -69, 0.001, -28, -51, 0.011, 41, 1, 0.013, 3, -58, 0.000, -25, -58, 0.001, -17, -61, 0.000, 41, 18, 0.002, -29, -53, 0.010, -6, -75, 0.001, -7, 30, 0.003, -26, -68, 0.001, 27, -82, 0.059, 41, -97, 0.003, 3, 104, 0.010, 52, 110, 0.000, 51, 37, 0.024, 32, -7, 0.027, 27, 31, 0.071, 4, 42, 0.002, -1, 113, 0.003, 32, -96, 0.074, 46, 39, 0.009, 8, -74, 0.009, 19, 37, 0.001, 33, 106, 0.036, -5, 31, 0.015, -34, 148, 0.000, 37, 22, 0.010, -2, 110, 0.003, -25, -51, 0.009, -18, -54, 0.001, 22, 91, 0.267, -26, -49, 0.073, 56, 55, 0.011, 37, 11, 0.004, 52, 58, 0.001, 13, 17, 0.001, 43, -66, 0.000, -11, 15, 0.004, 56, 102, 0.011, -38, -71, 0.003, -5, 106, 0.045, 47, 18, 0.025, 44, 4, 0.005, 23, 44, 0.004, 19, 81, 0.015, 34, -99, 0.002, -23, -50, 0.012, 44, -109, 0.000, 62, 55, 0.001, 20, -87, 0.003, 38, 41, 0.020, 15, 18, 0.001, 14, -13, 0.003, 10, -6, 0.007, 61, 65, 0.000, 38, -100, 0.001, 34, -1, 0.025, 15, -93, 0.003, 49, 39, 0.010, -9, -67, 0.000, -13, -62, 0.001, -2, 103, 0.014, 1, 19, 0.002, -10, 121, 0.004, 16, 95, 0.030, -9, 149, 0.001, 26, 85, 0.303, 40, 120, 0.069, 38, 118, 0.075, 53, -116, 0.000, 12, -15, 0.017, 49, -123, 0.030, 36, 10, 0.034, 35, 33, 0.001, -4, -47, 0.001, -31, -60, 0.002, 6, -74, 0.007, 40, -106, 0.001, 39, 109, 0.002, 50, 32, 0.012, 26, 42, 0.001, 41, 80, 0.005, 3, 33, 0.008, 51, 118, 0.001, 50, -113, 0.005, 45, 36, 0.007, 21, 42, 0.012, -3, 24, 0.003, -7, -39, 0.012, 64, -51, 0.000, 60, 16, 0.005, 17, -12, 0.001, 32, 94, 0.001, -17, -39, 0.008, 28, 33, 0.000, 8, -4, 0.004, -30, -61, 0.001, -35, 24, 0.001, 55, 76, 0.002, 51, 49, 0.003, 31, 54, 0.008, 28, -112, 0.000, 27, 59, 0.002, -15, 20, 0.000, 4, 6, 0.010, 21, 77, 0.057, -20, 28, 0.005, -2, -80, 0.022, 31, 103, 0.004, 46, 19, 0.028, 45, 104, 0.000, 55, 78, 0.001, -2, 31, 0.062, 69, 31, 0.001, -25, 32, 0.019, 46, -98, 0.001, 57, 45, 0.002, 37, 58, 0.011, -10, -78, 0.006, 33, 51, 0.016, 28, 93, 0.002, 9, 41, 0.014, -10, 21, 0.001, -15, 31, 0.005, 56, 27, 0.004, 37, -97, 0.017, 13, -11, 0.002, 9, -6, 0.006, 46, 128, 0.045, 43, -70, 0.018, 24, 44, 0.004, 0, 34, 0.070, 67, 65, 0.002, 43, 75, 0.005, 24, -101, 0.006, 23, 48, 0.004, 1, 100, 0.026, -4, 12, 0.001, -23, -70, 0.000, 25, 91, 0.070, 38, 69, 0.050, 35, 129, 0.187, 37, 110, 0.027, 15, 6, 0.002, 11, 11, 0.038, 10, 14, 0.040, 5, -67, 0.002, 53, 74, 0.001, 14, 106, 0.018, 29, 56, 0.004, -9, 128, 0.002, 25, 57, 0.005, 5, 46, 0.004, 2, 20, 0.010, -18, -49, 0.004, -41, 176, 0.007, 68, 38, 0.001, -8, -71, 0.000, 26, 121, 0.004, 39, -81, 0.009, 36, 23, 0.003, 35, -76, 0.002, 12, 13, 0.007, -7, 121, 0.002, -21, -51, 0.006, -12, 19, 0.005, 59, 27, 0.003, 39, 64, 0.011, 36, -90, 0.005, 35, 61, 0.020, 30, -112, 0.001, 39, 81, 0.005, 54, 53, 0.013, 53, 126, 0.001, 50, 68, 0.001, 30, 63, 0.001, 26, 62, 0.002, 7, 0, 0.008, 51, 130, 0.000, -3, -53, 0.001, -37, -62, 0.002, -7, -56, 0.001, -27, -63, 0.001, -13, -37, 0.001, 41, 73, 0.015, 36, 99, 0.001, 30, 105, 0.310, 60, 44, 0.001, 49, 98, 0.000, -35, 139, 0.029, 55, -97, 0.001, 32, 66, 0.005, 31, -87, 0.003, 28, 61, 0.003, 8, 32, 0.004, -16, 38, 0.014, 55, 16, 0.000, 32, -79, 0.006, 42, -85, 0.034, -20, 25, 0.000, 21, 113, 0.018, -1, 41, 0.002, -3, -50, 0.001, 33, 113, 0.140, -6, 143, 0.004, 46, 47, 0.001, 42, 46, 0.007, 22, 49, 0.002, -20, 45, 0.001, 9, -72, 0.003, -14, 21, 0.001, 57, 25, 0.013, 13, 76, 0.071, 28, 121, 0.142, 43, -123, 0.004, 24, 89, 0.309, -15, 27, 0.002, 56, 31, 0.006, 34, 131, 0.006, -4, -54, 0.003, 44, 45, 0.007, 24, 48, 0.003, -9, 34, 0.009, 20, 51, 0.002, 13, 106, 0.004, -28, 31, 0.015, 24, -97, 0.001, 23, 84, 0.036, 1, 128, 0.004, 14, -84, 0.001, 11, 22, 0.001, 25, 119, 0.167, -13, 32, 0.001, 61, 28, 0.001, 58, 30, 0.003, 34, 56, 0.001, 49, 82, 0.001, 10, 50, 0.003, -42, 175, 0.010, -37, 147, 0.004, -19, -65, 0.008, 53, 30, 0.012, 48, 6, 0.010, 5, 18, 0.003, -19, 16, 0.001, 68, 18, 0.001, 48, 85, 0.001, 14, 124, 0.001, 63, 9, 0.001, -32, -53, 0.002, 40, 64, 0.004, -36, -58, 0.011, 36, 67, 0.015, 5, 104, 0.012, 39, 36, 0.014, 36, -110, 0.001, -21, -63, 0.001, 29, 79, 0.158, 14, 77, 0.077, 7, 19, 0.002, -17, 13, 0.001, 54, 17, 0.010, 30, 43, 0.001, 60, -150, 0.000, 6, 29, 0.004, -16, -43, 0.005, -21, -29, 0.001, -35, -55, 0.011, -26, 46, 0.004, 64, 22, 0.000, -31, 154, 0.001, 41, 37, 0.015, 21, -158, 0.007, 18, 104, 0.017, 36, 127, 0.042, 51, -113, 0.005, 45, -71, 0.007, 42, 93, 0.001, 41, -74, 0.034, -16, -69, 0.008, 52, 83, 0.003, -40, -63, 0.000, 32, 22, 0.004, 31, -3, 0.003, 51, -7, 0.000, 31, 110, 0.057, 9, 118, 0.000, 46, 12, 0.024, -2, -51, 0.001, 33, 77, 0.003, -6, 115, 0.001, 66, 24, 0.001, -29, 28, 0.006, 42, 18, 0.004, 19, -71, 0.034, 18, 44, 0.006, 33, -2, 0.004, -5, -77, 0.001, 22, 96, 0.061, 0, 124, 0.015, 52, 15, 0.019, 33, 43, 0.003, 13, 48, 0.001, 9, 49, 0.002, -10, -51, 0.000, 24, 93, 0.136, 23, -106, 0.012, -28, -68, 0.000, 44, 41, 0.017, -52, -72, 0.000, -4, 21, 0.001, 13, 78, 0.140, 47, -2, 0.019, 44, -72, 0.006, 62, 28, 0.005, 23, 120, 0.004, 38, 14, 0.032, 0, -55, 0.001, 34, -119, 0.021, 15, 45, 0.048, 14, 8, 0.011, 11, 50, 0.002, 10, 3, 0.006, -28, 154, 0.034, 62, 11, 0.001, 59, 151, 0.006, 61, 32, 0.001, -28, -63, 0.002, 14, 23, 0.005, 48, -101, 0.002, -9, -72, 0.001, 25, -12, 0.000, -13, -75, 0.012, 20, 108, 0.005, -37, 175, 0.028, 48, 42, 0.004, 29, 32, 0.202, 40, 141, 0.038, 35, -85, 0.015, 48, 121, 0.002, 29, -115, 0.001, 63, 29, 0.001, 40, 36, 0.019, 39, -9, 0.009, 35, -4, 0.007, 16, 42, 0.001, 11, 110, 0.008, -8, 24, 0.011, -12, -37, 0.018, 40, -77, 0.014, 36, -82, 0.018, 17, 108, 0.002, 50, 25, 0.021, 27, 98, 0.002, 41, 115, 0.026, -17, 49, 0.003, -21, 46, 0.002, 51, 89, 0.000, 53, 86, 0.002, 30, 7, 0.001, 26, -10, 0.000, 41, 4, 0.002, -17, -62, 0.000, -6, 19, 0.013, 60, 53, 0.000, 41, 17, 0.038, -6, -74, 0.001, 31, -80, 0.000, -7, 29, 0.004, -44, 147, 0.000, 41, -94, 0.003, 3, 103, 0.016, 52, 111, 0.000, 51, 44, 0.006, 32, -6, 0.035, -36, 118, 0.000, 28, -11, 0.001, 4, 43, 0.002, -1, 112, 0.007, 32, -87, 0.004, 46, 40, 0.010, 8, -73, 0.014, 19, 44, 0.006, 33, 105, 0.018, -5, 30, 0.015, -6, 135, 0.001, 57, 84, 0.001, 37, 21, 0.001, 6, 10, 0.027, -2, 115, 0.003, 10, 99, 0.006, 22, 92, 0.230, 56, 56, 0.004, 52, 59, 0.004, 13, 20, 0.002, 47, -64, 0.001, -10, -55, 0.000, -11, 26, 0.006, 56, 103, 0.001, -38, -70, 0.000, -5, 105, 0.051, 47, 17, 0.026, 44, 5, 0.026, 23, 43, 0.005, 19, 104, 0.004, 34, -98, 0.006, -23, -51, 0.015, -24, 44, 0.005, 44, -108, 0.001, 58, 51, 0.008, 20, -86, 0.003, 38, 42, 0.021, 15, 17, 0.001, 14, -12, 0.004, 10, -9, 0.005, -9, 119, 0.020, 38, -103, 0.001, 34, 0, 0.016, 49, 42, 0.003, 48, -81, 0.001, -13, -63, 0.000, 2, 45, 0.007, 1, 22, 0.003, 16, 96, 0.090, 6, 121, 0.002, 26, 86, 0.311, 40, 113, 0.034, -18, -61, 0.000, 53, -117, 0.000, 50, 91, 0.001, 12, -14, 0.011, 49, -120, 0.000, 48, 141, 0.001, 59, 62, 0.001, 36, 11, 0.070, 35, 24, 0.002, -31, -61, 0.003, 6, -69, 0.001, 40, -105, 0.012, 39, 108, 0.002, 50, 29, 0.023, 26, 39, 0.003, 41, 79, 0.002, 3, 24, 0.002, 2, 113, 0.004, 51, 117, 0.003, 50, -112, 0.000, 45, 35, 0.015, 21, 41, 0.012, -3, 23, 0.002, -6, 39, 0.013, -7, -36, 0.012, 60, 17, 0.005, 17, -13, 0.001, 32, 95, 0.001, 31, -108, 0.001, 28, 34, 0.001, 8, -11, 0.023, -30, -60, 0.001, -34, 151, 0.037, -35, 23, 0.002, 55, 75, 0.003, 51, 72, 0.012, -3, 117, 0.003, 31, 53, 0.018, 28, -111, 0.007, 27, 58, 0.005, 4, 7, 0.055, 21, 80, 0.102, 18, -78, 0.005, -1, 20, 0.002, 31, 102, 0.004, 46, 20, 0.019, 45, 103, 0.000, -38, 143, 0.001, 55, 77, 0.002, -2, 32, 0.024, -6, 107, 0.005, -25, 31, 0.014, 46, -93, 0.001, 57, 48, 0.002, 37, 57, 0.008, 33, 54, 0.001, 28, 94, 0.001, 9, 44, 0.008, -10, 22, 0.001, -9, 25, 0.002, -4, 119, 0.005, 56, 28, 0.005, 37, -86, 0.006, 5, -10, 0.001, 13, -8, 0.007, 9, -7, 0.004, 46, 125, 0.037, 43, -71, 0.011, -14, -172, 0.001, 0, 35, 0.138, -23, 44, 0.004, 43, 74, 0.004, 24, -100, 0.004, 23, 47, 0.004, 1, 99, 0.010, 15, 100, 0.023, 14, 48, 0.003, 25, 78, 0.039, 38, 70, 0.017, 35, 120, 0.098, 37, 109, 0.012, 15, 5, 0.001, 11, 10, 0.046, 48, -124, 0.000, 10, 27, 0.004, 38, -75, 0.011, 53, 73, 0.001, 49, 70, 0.000, 29, 55, 0.004, 14, 17, 0.001, 44, 142, 0.001, 25, 60, 0.001, 5, 45, 0.002, 2, 17, 0.001, -18, -48, 0.004, -22, 27, 0.001, -41, 175, 0.000, -8, -70, 0.001, -12, -75, 0.019, 40, 85, 0.000, 39, -82, 0.024, 35, -77, 0.018, 50, 95, 0.000, 12, 14, 0.009, -12, 20, 0.001, -37, 150, 0.001, 59, 26, 0.002, 39, 63, 0.002, 36, -89, 0.007, 35, 68, 0.004, 30, -115, 0.002, 39, 80, 0.005, 54, 54, 0.012, 53, 125, 0.001, 30, 64, 0.001, 26, 75, 0.066, 7, -1, 0.021, -20, 33, 0.017, 51, 129, 0.004, -3, -58, 0.001, -19, -47, 0.005, -27, -60, 0.006, 41, 76, 0.002, 36, 100, 0.002, -35, -65, 0.002, 30, 106, 0.222, 6, 119, 0.000, 54, 103, 0.001, 32, 67, 0.003, 31, -88, 0.003, 28, 62, 0.002, 8, 25, 0.001, -16, 39, 0.009, 55, 15, 0.003, 31, 25, 0.000, 42, -84, 0.025, -1, 40, 0.003, 33, 116, 0.278, -6, 144, 0.007, 46, 48, 0.013, 42, 59, 0.005, 22, 50, 0.002, 52, -107, 0.000, 9, -73, 0.010, 46, -65, 0.001, -11, -76, 0.011, -14, 22, 0.001, 57, 28, 0.004, 56, 9, 0.009, -39, 179, 0.001, 13, 75, 0.044, 10, 123, 0.074, 28, 122, 0.121, 43, -116, 0.011, 24, 90, 0.359, -33, 153, 0.001, 56, 32, 0.002, 34, 132, 0.035, -4, -53, 0.001, -5, 120, 0.029, 44, 46, 0.003, 24, 73, 0.068, 20, 52, 0.002, 13, 105, 0.010, -28, 32, 0.014, 44, -67, 0.001, 23, 83, 0.042, 38, -9, 0.082, 14, -87, 0.040, 11, 21, 0.001, 25, 122, 0.184, -13, 31, 0.002, 61, 27, 0.002, 58, 43, 0.002, 34, 53, 0.004, 15, -23, 0.004, 49, 81, 0.001, 10, 47, 0.001, -37, 146, 0.003, -19, -70, 0.006, 53, 29, 0.008, 48, 7, 0.029, 5, 17, 0.002, 1, -50, 0.000, -19, 15, 0.001, 48, 86, 0.001, 63, 8, 0.001, -32, -52, 0.015, 40, 57, 0.001, 39, -110, 0.001, 36, 68, 0.015, 50, 131, 0.001, -31, -50, 0.003, 5, 103, 0.023, 39, 35, 0.014, 36, -109, 0.001, -21, -56, 0.001, 29, 106, 0.252, 7, 18, 0.002, -20, -41, 0.008, -17, 28, 0.009, 54, 18, 0.011, 30, 44, 0.005, 6, 30, 0.005, -21, -52, 0.001, -31, 153, 0.002, 41, 40, 0.002, 21, -159, 0.001, 18, 101, 0.021, 36, 128, 0.104, 17, 30, 0.001, 51, -114, 0.013, -17, -46, 0.002, 27, -104, 0.001, 45, -68, 0.001, 42, 94, 0.001, 41, -75, 0.022, -16, -68, 0.005, 21, -78, 0.017, 52, 84, 0.002, -40, -62, 0.001, 32, 23, 0.002, 31, 12, 0.001, 31, 109, 0.096, 46, 9, 0.014, -4, -43, 0.006, 6, -9, 0.008, -29, 27, 0.008, 42, 15, 0.022, 33, -3, 0.007, -5, -78, 0.003, 22, 93, 0.059, 0, 117, 0.002, 52, 16, 0.016, 13, 47, 0.003, -10, -50, 0.001, 24, 94, 0.048, 33, -101, 0.009, 44, 42, 0.019, 58, 93, 0.003, 1, 174, 0.001, -4, 22, 0.001, 13, 77, 0.083, 47, -3, 0.012, 44, -71, 0.003, 62, 25, 0.002, 34, -118, 0.181, 14, 5, 0.010, 11, 49, 0.001, 10, 4, 0.005, 62, 12, 0.000, 61, 31, 0.002, 14, 24, 0.004, 48, -100, 0.001, -9, -73, 0.002, 25, -13, 0.000, 2, 74, 0.001, 20, 93, 0.029, 53, 1, 0.003, 49, -2, 0.005, 48, 43, 0.003, 29, 31, 0.071, 44, 102, 0.000, 40, 142, 0.024, 35, -86, 0.013, 53, -110, 0.001, 48, 122, 0.005, 29, -112, 0.001, 63, 44, 0.000, 40, 29, 0.022, 35, -5, 0.051, 16, 43, 0.005, 11, 109, 0.038, -8, 17, 0.005, 7, 101, 0.032, 40, -76, 0.043, 36, -81, 0.009, 17, 107, 0.024, 50, 26, 0.023, 27, 97, 0.004, 5, -3, 0.053, -17, 48, 0.004, -21, 45, 0.003, 51, 80, 0.001, 53, 85, 0.005, 50, -119, 0.003, 30, 8, 0.001, 41, 3, 0.142, -17, -63, 0.003, 36, 141, 0.079, -6, 20, 0.011, -33, -60, 0.012, 30, 119, 0.077, 58, 10, 0.001, 60, 54, 0.000, 41, 20, 0.028, 17, 26, 0.001, 31, -81, 0.008, -7, 32, 0.003, -44, 148, 0.001, 41, -95, 0.014, 3, 102, 0.119, 51, 43, 0.008, 32, -5, 0.019, 28, -10, 0.003, 4, 44, 0.003, -1, 111, 0.007, 32, -86, 0.013, 46, 37, 0.007, 8, -72, 0.022, 19, 43, 0.006, 33, 108, 0.054, -5, 29, 0.006, 57, 83, 0.000, 19, -100, 0.029, 37, 24, 0.066, -2, 116, 0.004, 10, 100, 0.008, -10, 31, 0.003, 22, 89, 0.789, 56, 49, 0.005, 52, 60, 0.002, 33, -118, 0.121, 13, 19, 0.002, 47, -65, 0.003, -10, -54, 0.001, -11, 25, 0.006, 56, 104, 0.001, -38, -73, 0.007, -3, 141, 0.007, 47, 16, 0.027, 44, 6, 0.007, 23, 42, 0.007, 19, 103, 0.008, 34, -101, 0.002, -23, -48, 0.019, 44, -107, 0.001, 58, 52, 0.002, 38, 47, 0.021, 15, 16, 0.001, 14, -15, 0.018, 10, -8, 0.006, 14, 42, 0.001, 14, 31, 0.003, 38, -102, 0.001, 34, -3, 0.022, 15, -95, 0.000, 49, 41, 0.004, 48, -80, 0.001, 2, 46, 0.037, 1, 21, 0.003, -18, 49, 0.013, 16, 105, 0.038, -22, 56, 0.017, -3, 103, 0.013, 26, 99, 0.005, 40, 114, 0.066, 5, 11, 0.064, -18, -60, 0.000, 16, -16, 0.005, 53, -122, 0.002, 50, 92, 0.001, 12, -13, 0.006, 49, -121, 0.002, 59, 61, 0.007, 40, 1, 0.008, 36, 12, 0.001, -31, -58, 0.003, 6, -68, 0.001, 40, -104, 0.005, 39, 107, 0.029, 54, 63, 0.002, 50, 30, 0.013, 26, 40, 0.002, -22, -50, 0.018, 41, 82, 0.005, 3, 23, 0.005, 2, 114, 0.001, 51, 124, 0.002, 45, 30, 0.007, 21, 44, 0.008, -3, 18, 0.004, -6, 40, 0.019, -7, -37, 0.013, 30, 131, 0.001, 60, 18, 0.005, 17, -10, 0.001, 32, 96, 0.001, 31, -109, 0.002, 28, 35, 0.001, -29, -48, 0.005, 8, -10, 0.021, -30, -63, 0.001, 55, 74, 0.023, 51, 71, 0.002, -3, 120, 0.011, 31, 68, 0.006, 28, -110, 0.005, 27, 57, 0.009, 4, 8, 0.083, 21, 79, 0.083, -1, 19, 0.008, -5, -48, 0.002, 31, 101, 0.002, 46, 17, 0.038, 22, 27, 0.000, -2, 29, 0.026, -8, -77, 0.004, -6, 108, 0.001, -25, 30, 0.024, 5, 10, 0.024, 46, -92, 0.006, -34, 116, 0.002, 57, 47, 0.003, 37, 60, 0.008, 33, 53, 0.002, 28, 95, 0.003, 9, 43, 0.028, -10, 27, 0.003, -15, 33, 0.004, 22, 117, 0.009, 37, -87, 0.015, -4, -80, 0.008, 13, -9, 0.004, 9, -4, 0.003, 46, 126, 0.046, 43, -96, 0.007, 24, 38, 0.001, -22, -54, 0.001, 0, 36, 0.046, 67, 55, 0.001, 47, 52, 0.006, 43, 73, 0.003, 24, -107, 0.024, 23, 46, 0.004, 1, 102, 0.011, 15, 99, 0.005, -23, -68, 0.003, 11, 32, 0.003, 25, 77, 0.048, 38, 75, 0.001, 35, 119, 0.198, 37, 112, 0.063, 15, -12, 0.005, 11, 9, 0.118, 10, 28, 0.003, 38, -74, 0.001, 53, 76, 0.001, 49, 69, 0.000, 44, 143, 0.004, 25, 59, 0.001, 5, 48, 0.001, 2, 18, 0.000, -18, -51, 0.003, -22, 28, 0.003, 48, 99, 0.000, 26, 119, 0.060, -12, -74, 0.004, 40, 86, 0.000, 39, -83, 0.022, 35, -78, 0.034, 12, 15, 0.008, -12, 37, 0.003, 59, 25, 0.020, 39, 62, 0.002, 36, -88, 0.008, 35, 67, 0.006, 30, -114, 0.001, -8, -39, 0.020, 39, 79, 0.005, 54, 59, 0.006, 53, 128, 0.001, 50, 66, 0.000, 30, 61, 0.003, -39, 176, 0.002, 26, 76, 0.112, 7, -2, 0.025, 57, -4, 0.004, 17, -76, 0.010, -3, -59, 0.004, -26, 24, 0.000, -27, -61, 0.001, 45, 66, 0.001, 60, -1, 0.001, 41, 75, 0.002, 30, 95, 0.001, 4, -58, 0.001, -16, -63, 0.000, 32, 68, 0.005, 31, -89, 0.009, 28, 63, 0.001, 8, 26, 0.000, -16, 40, 0.024, -39, -60, 0.002, 55, 14, 0.017, 31, 24, 0.001, 28, -82, 0.039, 42, -87, 0.055, 21, 115, 0.000, -1, 39, 0.007, 33, 115, 0.276, -6, 141, 0.001, 46, 45, 0.005, 45, 134, 0.007, 42, 60, 0.021, -11, 33, 0.002, 22, 55, 0.003, 6, 1, 0.034, 52, -106, 0.008, 9, -70, 0.023, 46, -64, 0.005, -11, -77, 0.007, -14, 19, 0.001, 57, 27, 0.004, 56, 10, 0.016, 52, 5, 0.122, 10, 124, 0.109, 43, -117, 0.000, 24, 91, 0.370, -33, 152, 0.011, 34, 129, 0.013, -4, -52, 0.001, 44, 47, 0.002, 43, -100, 0.000, 24, 74, 0.063, 67, 35, 0.001, 13, 108, 0.008, -28, 33, 0.007, 44, -66, 0.000, 23, 82, 0.043, 20, -156, 0.003, 38, -8, 0.012, 14, -86, 0.012, 11, 28, 0.004, -13, 30, 0.003, 61, 22, 0.005, 58, 44, 0.001, 34, 54, 0.002, 49, 84, 0.002, 48, -95, 0.001, 10, 48, 0.001, -37, 145, 0.004, 53, 32, 0.006, 48, 8, 0.054, 5, 20, 0.002, 1, -51, 0.000, 48, 87, 0.002, -12, -62, 0.003, -32, -59, 0.008, 40, 58, 0.002, 39, -111, 0.001, 36, 53, 0.043, 12, 75, 0.026, -31, -51, 0.052, 39, 34, 0.030, 36, -108, 0.003, -8, -35, 0.062, 29, 105, 0.208, 7, 17, 0.006, -17, 27, 0.004, 54, 23, 0.009, 30, 41, 0.001, 6, 35, 0.001, 12, 120, 0.001, 18, 102, 0.006, 36, 129, 0.046, 17, 29, 0.001, 51, -115, 0.001, 32, 113, 0.181, 27, -105, 0.004, 45, -69, 0.001, 41, -72, 0.068, -16, -75, 0.000, 21, -79, 0.009, 32, 24, 0.000, 31, 11, 0.001, -25, -60, 0.001, 46, 10, 0.014, 33, 79, 0.000, 66, 22, 0.001, -29, 26, 0.001, -48, -66, 0.000, 19, -81, 0.001, 18, 42, 0.007, 33, 0, 0.001, -5, -79, 0.010, 22, 94, 0.006, 0, 118, 0.005, 52, 17, 0.037, 13, 42, 0.005, 9, 51, 0.001, -10, -45, 0.001, 24, 95, 0.014, -35, -61, 0.005, 33, -98, 0.005, 44, 43, 0.015, 43, -8, 0.024, 1, 173, 0.000, -4, 23, 0.002, 13, 80, 0.114, 47, 12, 0.029, 44, -70, 0.007, 62, 26, 0.006, 23, 118, 0.027, 14, 6, 0.019, 10, 1, 0.017, 62, 9, 0.001, 14, 21, 0.002, 11, -63, 0.004, 29, 9, 0.000, -9, -74, 0.004, -13, -69, 0.001, 20, 94, 0.020, 48, 44, 0.003, 44, 103, 0.000, 5, 40, 0.005, 35, -87, 0.006, -19, 46, 0.003, 53, -111, 0.001, 48, 123, 0.007, 29, -113, 0.000, 14, 109, 0.024, 63, 43, 0.000, 40, 30, 0.061, -20, -45, 0.006, 35, -6, 0.006, 16, 44, 0.029, -8, 18, 0.005, 7, 100, 0.031, 40, -83, 0.019, 36, -80, 0.018, 17, 78, 0.092, 50, 23, 0.029, 27, 104, 0.065, -17, 47, 0.006, 51, 79, 0.001, 53, 88, 0.028, 50, -118, 0.001, 30, 5, 0.001, 7, -58, 0.001, 6, 127, 0.005, -17, -64, 0.002, -6, 17, 0.007, -35, -56, 0.056, 30, 120, 0.097, 45, 10, 0.205, 17, 25, 0.001, 32, 133, 0.003, 31, -82, 0.005, -7, 31, 0.004, -26, -65, 0.005, 41, -92, 0.005, 3, 101, 0.003, 52, 113, 0.000, 51, 42, 0.006, 32, -4, 0.007, 28, -9, 0.001, 27, 36, 0.001, 4, 29, 0.002, -1, 110, 0.026, -36, 147, 0.001, 32, -85, 0.009, 31, 80, 0.001, 46, 38, 0.001, 8, -79, 0.007, 19, 42, 0.010, 33, 107, 0.037, -5, 36, 0.015, -6, 133, 0.003, 65, 73, 0.002, 19, -101, 0.042, 37, 23, 0.015, 52, -66, 0.000, -2, 113, 0.002, -10, 32, 0.004, -2, 11, 0.001, 22, 90, 0.216, 56, 50, 0.006, 37, 8, 0.001, 52, 45, 0.005, 13, 14, 0.004, 47, -66, 0.001, 46, 87, 0.000, -11, 28, 0.003, 56, 97, 0.001, -38, -72, 0.013, 47, 15, 0.013, 44, 7, 0.005, 24, -14, 0.000, 23, 41, 0.003, 19, 102, 0.007, 34, -100, 0.001, -36, -62, 0.002, -23, -49, 0.023, 44, -106, 0.001, 62, 54, 0.001, 58, 49, 0.003, 38, 48, 0.016, 34, 43, 0.003, 15, 15, 0.001, 14, -14, 0.004, 10, -11, 0.007, 61, 62, 0.000, 38, -97, 0.006, 34, -2, 0.025, 15, -96, 0.004, 49, 44, 0.003, 48, -71, 0.007, 2, 43, 0.005, -28, -62, 0.001, 1, 24, 0.002, -18, 50, 0.011, 16, 106, 0.014, 53, -8, 0.006, 26, 100, 0.021, 40, 115, 0.056, 38, 121, 0.001, 16, -7, 0.002, -22, -56, 0.002, 12, -12, 0.004, 49, -118, 0.000, 48, 143, 0.001, 5, 121, 0.006, 36, -3, 0.006, -31, -59, 0.002, 6, -71, 0.003, 40, -111, 0.036, 39, 106, 0.001, 54, 64, 0.002, 50, 59, 0.002, 26, 37, 0.001, 41, 81, 0.005, 3, 22, 0.004, -21, 16, 0.000, 51, 123, 0.002, 50, -114, 0.006, 45, 29, 0.034, 21, 43, 0.012, 57, 10, 0.005, -3, 17, 0.005, -6, 37, 0.007, -7, -50, 0.001, 30, 132, 0.001, 60, 19, 0.001, 17, -11, 0.001, 32, 105, 0.018, 31, -110, 0.006, 28, 36, 0.002, 8, -9, 0.007, -30, -62, 0.000, -15, 34, 0.024, 55, 73, 0.003, 51, 70, 0.002, -3, 119, 0.002, 31, 67, 0.004, 28, -109, 0.003, 27, 64, 0.002, 4, 9, 0.025, 21, 90, 0.010, -1, 18, 0.001, -2, -77, 0.002, -5, -49, 0.002, -8, 141, 0.001, 46, 18, 0.018, 43, 116, 0.001, 22, 28, 0.000, -17, -45, 0.001, -2, 30, 0.108, -6, 105, 0.037, -25, 29, 0.008, 46, -95, 0.003, -11, 39, 0.011, 57, 50, 0.003, 37, 59, 0.008, 33, 56, 0.000, 28, 96, 0.003, 9, 30, 0.005, -10, 28, 0.002, -33, -71, 0.022, -15, 36, 0.029, 56, 22, 0.009, 37, -84, 0.013, -4, -79, 0.021, 13, -14, 0.012, 9, -5, 0.016, 46, 131, 0.046, 43, -97, 0.002, 24, 39, 0.003, 0, 29, 0.013, -23, 30, 0.002, 47, 51, 0.001, 43, 48, 0.013, 24, -106, 0.002, 23, 45, 0.004, 1, 101, 0.012, 15, 98, 0.009, -23, -69, 0.001, 14, -61, 0.007, 11, 31, 0.006, -9, -36, 0.028, 25, 80, 0.079, 62, 66, 0.002, 58, 69, 0.004, 38, 76, 0.002, 35, 118, 0.203, 37, 111, 0.045, 15, -13, 0.004, 11, -16, 0.001, 10, 25, 0.004, -9, 114, 0.105, 5, -54, 0.001, 53, 75, 0.002, 49, 72, 0.001, 29, 49, 0.035, 44, 144, 0.002, 25, 46, 0.004, 5, 47, 0.002, 2, 15, 0.001, -18, -50, 0.004, -19, 37, 0.007, 48, 100, 0.000, 26, 120, 0.127, -12, -73, 0.001, 40, 87, 0.000, 39, -84, 0.087, 36, 26, 0.001, 35, -79, 0.017, 12, 16, 0.005, -7, 110, 0.108, -12, 38, 0.003, 59, 32, 0.004, 39, 61, 0.002, 36, -87, 0.010, 35, 66, 0.004, 30, -109, 0.001, -8, -38, 0.014, 7, 44, 0.003, 39, 78, 0.010, 54, 60, 0.007, 30, 62, 0.007, 18, 111, 0.019, 26, 73, 0.033, 7, -3, 0.013, 17, -77, 0.010, -3, -56, 0.002, 12, 125, 0.021, -7, -55, 0.000, -27, -66, 0.001, 45, 65, 0.000, 41, 62, 0.006, -21, 149, 0.001, 30, 96, 0.001, -37, -65, 0.000, 45, -110, 0.001, -16, -62, 0.000, -35, 136, 0.001, -20, -67, 0.000, 54, 101, 0.002, 32, 61, 0.002, 31, -90, 0.005, 28, 64, 0.001, 8, 27, 0.002, -16, 17, 0.002, 55, 13, 0.061, 31, 23, 0.002, 28, -81, 0.055, 42, -86, 0.008, 21, 110, 0.109, -1, 38, 0.073, 33, 118, 0.167, -6, 142, 0.001, 65, 20, 0.001, 46, 46, 0.001, 43, 80, 0.002, 45, 133, 0.010, 22, 56, 0.002, 52, -105, 0.001, 9, -71, 0.003, 46, -67, 0.003, -14, 20, 0.001, 57, 14, 0.006, 56, 11, 0.016, 52, 6, 0.081, -38, 176, 0.008, 24, 92, 0.238, -33, 151, 0.001, 34, 130, 0.002, 44, 48, 0.000, 24, 75, 0.065, 67, 34, 0.003, 13, 107, 0.003, 44, -65, 0.002, 43, 44, 0.020, 58, -6, 0.001, 20, -75, 0.039, 1, 129, 0.001, 11, 27, 0.004, 14, 49, 0.004, -13, 29, 0.031, 49, 109, 0.000, 58, 41, 0.002, -37, -63, 0.002, 34, 51, 0.020, 49, 83, 0.010, 11, -84, 0.005, -8, 122, 0.000, 10, 45, 0.002, -18, 31, 0.019, -19, -68, 0.000, 53, 31, 0.016, 5, 19, 0.001, 48, 88, 0.002, -12, -61, 0.007, -32, -58, 0.005, 40, 59, 0.003, 39, -112, 0.000, 36, 54, 0.021, 16, 49, 0.001, 50, 129, 0.005, 12, 76, 0.119, -20, 26, 0.001, 39, 33, 0.040, -8, -34, 0.056, 29, 108, 0.090, 7, 16, 0.004, 3, -51, 0.000, -17, 26, 0.002, -20, 46, 0.002, 54, 24, 0.022, 30, 42, 0.001, 6, 36, 0.007, -25, -54, 0.007, 12, 121, 0.002, 41, 42, 0.017, -29, -57, 0.001, 21, -157, 0.023, 18, 99, 0.028, 36, 130, 0.020, 17, 32, 0.001, 32, 114, 0.094, -6, -35, 0.035, -7, 22, 0.010, 27, -106, 0.002, 45, -74, 0.012, 42, 108, 0.001, 4, -77, 0.001, 41, -73, 0.078, -16, -74, 0.001, 21, -76, 0.009, 52, 102, 0.000, 31, 10, 0.001, -25, -61, 0.000, 9, 119, 0.005, 46, -1, 0.018, -1, 74, 0.001, 5, -9, 0.006, -29, 25, 0.009, 42, 13, 0.046, 4, 96, 0.003, 18, 39, 0.001, 33, -1, 0.002, -5, -72, 0.000, -30, 152, 0.001, -1, -80, 0.014, -18, -58, 0.000, 22, 99, 0.008, 52, 18, 0.026, 13, 41, 0.009, -10, -44, 0.001, 24, 96, 0.009, 23, -109, 0.002, 33, -99, 0.001, 44, 44, 0.021, 43, -9, 0.001, -4, 24, 0.010, 13, 79, 0.089, 47, 11, 0.024, 44, -69, 0.009, 62, 15, 0.000, 23, 117, 0.296, 38, 17, 0.024, 0, -52, 0.000, 34, -120, 0.006, 14, 11, 0.002, 10, 2, 0.009, 47, 92, 0.000, 62, 10, 0.001, 14, 22, 0.002, 29, 12, 0.000, -9, -75, 0.001, -13, -70, 0.000, 20, 95, 0.034, 49, 0, 0.015, 48, 37, 0.012, 5, 39, 0.019, 35, -96, 0.006, -19, 45, 0.001, -22, -175, 0.002, 48, 124, 0.011, 63, 42, 0.000, 40, 31, 0.035, 16, 37, 0.009, -8, 19, 0.003, 26, -97, 0.008, 7, 99, 0.005, -32, 25, 0.001, 40, -82, 0.025, 36, -79, 0.024, 17, 77, 0.076, -33, -64, 0.004, 50, 24, 0.020, 27, 103, 0.037, -17, 46, 0.002, 51, 78, 0.001, 53, 87, 0.011, 50, -121, 0.000, 30, 6, 0.001, 7, -59, 0.001, 21, -14, 0.000, -17, -65, 0.003, -6, 18, 0.009, 30, 117, 0.117, 64, 53, 0.001, 45, 9, 0.080, 60, 56, 0.000, 41, -122, 0.001, 17, 28, 0.001, -17, -51, 0.002, 31, -83, 0.007, -7, 34, 0.004, -26, -64, 0.002, 41, -93, 0.016, 52, 114, 0.014, 51, 41, 0.007, 28, -8, 0.000, 4, 30, 0.002, -20, 36, 0.004, 32, -84, 0.012, 31, 79, 0.004, 46, 43, 0.003, 8, -78, 0.001, -34, 117, 0.001, 19, 41, 0.002, 6, -4, 0.018, -2, 23, 0.003, -5, 35, 0.016, -6, 134, 0.001, 57, 101, 0.000, 19, -102, 0.027, 37, 34, 0.014, -2, 114, 0.005, -10, 29, 0.004, -11, 21, 0.001, 0, 101, 0.014, -34, 23, 0.005, 56, 51, 0.005, 37, 7, 0.001, 52, 46, 0.004, 33, -116, 0.014, 13, 13, 0.004, 47, -67, 0.001, 46, 88, 0.000, -11, 27, 0.004, 56, 98, 0.001, 47, 14, 0.021, 44, 8, 0.029, 0, 12, 0.000, 23, 40, 0.004, 19, 101, 0.022, 34, -103, 0.002, -23, -46, 0.034, 44, -105, 0.001, 58, 50, 0.021, 20, -99, 0.028, 38, 45, 0.017, 34, 44, 0.009, 10, -10, 0.004, -9, 40, 0.002, 38, -96, 0.002, 34, -5, 0.064, 15, -97, 0.000, 49, 43, 0.002, 48, -70, 0.001, -9, 132, 0.000, 2, 44, 0.006, 1, 23, 0.002, 16, 107, 0.007, 53, -9, 0.005, 26, 97, 0.001, 40, 116, 0.056, 38, 122, 0.026, 16, -6, 0.001, 12, -11, 0.005, 49, -119, 0.005, -31, 23, 0.000, 23, 102, 0.024, 36, -2, 0.011, 7, 135, 0.001, -31, -56, 0.002, 6, -70, 0.001, 3, 12, 0.028, 40, -110, 0.000, 39, 105, 0.001, 54, 61, 0.006, 50, 60, 0.002, 30, 55, 0.002, 26, 38, 0.002, 41, 84, 0.006, 3, 21, 0.008, 2, 112, 0.008, 51, 122, 0.002, 12, 98, 0.000, -13, -41, 0.006, -3, 20, 0.002, -6, 38, 0.007, -7, -51, 0.002, -27, 26, 0.010, 42, 145, 0.002, 60, 20, 0.001, 32, 106, 0.056, 31, -111, 0.003, 28, 37, 0.001, 8, -8, 0.009, -30, -65, 0.001, -35, 20, 0.002, 55, 72, 0.002, 51, 69, 0.002, -3, 114, 0.004, 31, 66, 0.014, 28, -108, 0.001, 27, 63, 0.002, 42, -77, 0.010, 4, 10, 0.028, 21, 89, 0.047, -1, 17, 0.001, -3, -46, 0.002, -5, -50, 0.001, 43, 115, 0.000, -2, 35, 0.030, -6, 106, 0.100, -25, 28, 0.003, 46, -94, 0.003, -4, -51, 0.001, 57, 49, 0.003, 37, 54, 0.000, 33, 55, 0.001, -9, 148, 0.002, 28, 97, 0.001, 9, 29, 0.008, -10, 25, 0.002, -15, 35, 0.040, 56, 23, 0.007, 37, -85, 0.009, 34, 91, 0.000, -4, -78, 0.003, 13, -15, 0.019, 46, 132, 0.035, 43, -98, 0.001, 24, 40, 0.003, -4, 138, 0.002, 0, 30, 0.035, -23, 29, 0.002, -30, -53, 0.013, 47, 50, 0.001, 43, 47, 0.017, 24, -105, 0.005, 23, 76, 0.083, 1, 104, 0.145, -4, -48, 0.002, 14, -60, 0.006, 11, 30, 0.006, -9, -37, 0.008, 25, 79, 0.084, -13, 24, 0.001, 38, 73, 0.001, 35, 117, 0.243, 37, 122, 0.088, 15, -14, 0.003, 10, 26, 0.003, 5, -55, 0.010, 1, -58, 0.000, 53, 70, 0.007, 29, 52, 0.016, 44, 145, 0.001, 25, 45, 0.004, 2, 16, 0.001, -18, -45, 0.001, -8, -75, 0.000, 26, 117, 0.051, -12, -72, 0.000, 25, -98, 0.011, 40, 88, 0.000, 39, -85, 0.014, 36, 27, 0.000, 50, 94, 0.000, 12, 17, 0.005, -7, 109, 0.181, -12, 39, 0.005, 62, 131, 0.000, 59, 31, 0.122, 39, 60, 0.002, 36, -86, 0.031, 35, 65, 0.009, 30, -108, 0.001, -8, -37, 0.015, 7, 43, 0.004, 39, 77, 0.021, -20, 47, 0.016, 54, 57, 0.033, 30, 67, 0.025, 26, 74, 0.051, 7, -4, 0.018, -3, -57, 0.001, 12, 126, 0.009, 45, 68, 0.000, 41, 61, 0.035, 21, 74, 0.087, 30, 93, 0.001, 45, -111, 0.001, 42, 133, 0.008, -29, -63, 0.001, -20, -66, 0.003, 54, 102, 0.001, -40, -71, 0.002, 32, 62, 0.002, 31, -91, 0.004, 28, 65, 0.001, 8, 28, 0.006, -16, 18, 0.000, 55, 44, 0.012, 32, -83, 0.013, 31, 22, 0.006, 28, -80, 0.014, 9, 78, 0.134, 42, -89, 0.018, 21, 109, 0.025, -1, 37, 0.063, 33, 117, 0.190, -6, 155, 0.001, 43, 79, 0.003, 45, 136, 0.000, 42, 58, 0.001, 4, 117, 0.002, 22, 53, 0.002, 52, -104, 0.001, 9, -68, 0.014, 46, -66, 0.001, -14, 17, 0.008, 57, 13, 0.019, 0, 100, 0.020, 52, 7, 0.056, 10, 122, 0.004, -33, -57, 0.002, 24, 85, 0.144, -33, 150, 0.001, 34, 127, 0.025, -5, 117, 0.001, -24, -55, 0.003, 43, -102, 0.000, 24, 76, 0.056, -10, -71, 0.000, 20, 71, 0.021, -36, -71, 0.016, 67, 33, 0.004, 13, 102, 0.044, 44, -64, 0.003, 43, 43, 0.010, 23, 80, 0.069, 20, -74, 0.008, 0, -79, 0.011, 11, 26, 0.007, -13, 36, 0.001, 61, 24, 0.010, 58, 42, 0.003, -10, 126, 0.006, 34, 52, 0.017, 49, 86, 0.001, 11, -85, 0.007, 48, -93, 0.001, 10, 46, 0.002, -18, 32, 0.031, -19, -69, 0.004, 53, 42, 0.006, 29, 24, 0.000, 5, 118, 0.006, 5, 14, 0.002, 14, 39, 0.027, 48, 129, 0.006, -12, -60, 0.001, -32, -57, 0.003, 40, 60, 0.002, 36, 55, 0.022, 16, 50, 0.002, 50, 130, 0.002, 12, 45, 0.008, -45, -68, 0.000, 39, 32, 0.018, 29, 107, 0.263, 7, 15, 0.003, -17, 25, 0.001, 54, 21, 0.025, 53, 94, 0.001, 30, 31, 0.162, 6, 33, 0.003, 12, 122, 0.015, 64, 34, 0.000, 41, 41, 0.002, 18, 100, 0.038, 17, 31, 0.001, 51, -109, 0.000, 32, 115, 0.141, -7, 21, 0.011, 27, -107, 0.002, 45, -75, 0.034, 4, -76, 0.016, 41, -70, 0.017, 3, 127, 0.001, -16, -73, 0.001, 21, -77, 0.016, 52, 103, 0.001, -40, -67, 0.001, 31, 9, 0.001, 32, -111, 0.007, 31, 122, 0.505, 46, 0, 0.018, 18, -11, 0.001, -36, 151, 0.002, 42, 14, 0.027, 4, 97, 0.015, 6, 6, 0.047, 33, 2, 0.001, -5, -73, 0.006, -15, -50, 0.001, 22, 100, 0.013, 0, 120, 0.001, 52, 19, 0.028, 13, 44, 0.040, 47, -88, 0.001, -10, -47, 0.001, 24, 121, 0.095, 23, -110, 0.002, 33, -96, 0.018, -13, 38, 0.000, 44, 13, 0.025, -4, 25, 0.003, 47, 10, 0.053, 44, -68, 0.005, 62, 16, 0.001, 23, 116, 0.116, 38, 18, 0.000, -38, -59, 0.004, 14, 12, 0.001, -36, 145, 0.001, 10, -1, 0.012, 47, 91, 0.001, -9, 123, 0.010, -40, 177, 0.004, 14, 27, 0.001, 48, -105, 0.000, 29, 11, 0.000, -9, -76, 0.003, -13, -71, 0.000, 20, 96, 0.054, 53, -2, 0.204, 49, -1, 0.011, 48, 38, 0.066, 38, 99, 0.001, 35, -97, 0.033, -19, 48, 0.054, 53, -109, 0.001, 48, 117, 0.000, 63, 41, 0.001, 40, 32, 0.024, 16, 38, 0.003, -4, -42, 0.008, -8, 20, 0.002, -12, -49, 0.001, -4, 31, 0.036, -32, 26, 0.001, 40, -81, 0.027, 36, -78, 0.011, 17, 80, 0.098, 50, 21, 0.044, 27, 102, 0.016, 26, 15, 0.001, 3, 48, 0.001, -17, 45, 0.001, 51, 77, 0.001, 50, -120, 0.003, 30, 11, 0.000, -33, -69, 0.005, 7, -60, 0.000, 41, -8, 0.090, 21, -15, 0.000, -17, -66, 0.003, -6, 15, 0.015, 30, 118, 0.100, -37, -72, 0.019, 64, 54, 0.001, 45, 12, 0.081, 60, 57, 0.000, 41, -123, 0.001, 17, 27, 0.000, -7, 33, 0.003, 3, 107, 0.000, 52, 115, 0.001, 51, 32, 0.021, 27, 34, 0.002, 4, 31, 0.006, -53, -70, 0.000, -1, 124, 0.002, 32, -91, 0.004, 31, 78, 0.049, 46, 44, 0.002, 8, -77, 0.002, -4, 142, 0.002, -34, 118, 0.000, 19, 32, 0.001, -2, 24, 0.003, -5, 34, 0.014, 69, 18, 0.000, 57, 104, 0.001, 19, -103, 0.020, 37, 33, 0.014, -2, 135, 0.001, -10, 30, 0.003, -14, -39, 0.020, -4, 115, 0.045, -34, 24, 0.001, 56, 52, 0.005, 52, 47, 0.004, 33, -117, 0.132, 13, 16, 0.003, -27, 152, 0.001, 47, -52, 0.006, 46, 85, 0.004, 24, 125, 0.001, -14, -52, 0.000, -34, -57, 0.003, 56, 99, 0.001, 47, 13, 0.022, 44, 9, 0.052, 24, -12, 0.000, 23, 39, 0.002, 34, -102, 0.002, -23, -47, 0.087, -42, 148, 0.003, 44, -104, 0.000, 58, 47, 0.001, 20, -98, 0.036, 38, 46, 0.019, 35, 80, 0.001, 34, 41, 0.006, 14, -24, 0.001, 10, 35, 0.006, -9, 39, 0.003, 61, 64, 0.000, 38, -99, 0.001, 34, -4, 0.040, 49, 14, 0.023, 48, -69, 0.001, 2, 41, 0.002, 1, 26, 0.002, 16, 108, 0.043, -22, 35, 0.002, 48, 74, 0.000, 26, 98, 0.001, 40, 109, 0.004, 38, 127, 0.058, 16, -5, 0.000, 50, 87, 0.000, 12, -10, 0.003, 49, -116, 0.001, -31, 26, 0.001, 40, 4, 0.000, -20, -40, 0.014, -31, -57, 0.003, 6, -65, 0.000, 3, 11, 0.008, 40, -109, 0.001, 39, 104, 0.002, 54, 62, 0.011, 50, 57, 0.002, 30, 56, 0.006, 26, 51, 0.016, 41, 83, 0.005, 3, 28, 0.003, -20, 29, 0.004, 51, 121, 0.001, 12, 99, 0.008, 45, 31, 0.001, 21, 37, 0.000, 18, 121, 0.013, -3, 19, 0.005, -7, -48, 0.002, -27, 25, 0.003, 17, -9, 0.001, 54, 111, 0.000, 32, 107, 0.065, 31, -112, 0.001, 28, 38, 0.001, -30, -64, 0.001, -35, 19, 0.036, 55, 71, 0.001, 52, 143, 0.000, 51, 76, 0.005, -3, 113, 0.007, 31, 65, 0.008, 28, -107, 0.004, 27, 62, 0.002, 42, -76, 0.019, 4, 11, 0.008, 22, -81, 0.014, 21, 92, 0.019, -1, 16, 0.001, -39, -67, 0.005, -2, -79, 0.028, -5, -51, 0.001, 43, 114, 0.001, 42, 67, 0.001, 22, 26, 0.000, -2, 36, 0.005, -25, 27, 0.003, 46, -105, 0.000, 57, 52, 0.002, 33, 58, 0.001, 28, 98, 0.000, 9, 32, 0.003, -10, 26, 0.003, -15, 38, 0.005, 56, 24, 0.013, 37, -90, 0.004, 34, 92, 0.000, -12, -63, 0.001, 13, -12, 0.002, 46, 129, 0.017, 43, -99, 0.001, 24, 33, 0.024, -14, -176, 0.000, 0, 31, 0.040, -23, 32, 0.001, 47, 49, 0.001, 43, 46, 0.028, 24, -104, 0.008, 23, 75, 0.084, 1, 103, 0.011, 15, 96, 0.008, 11, 29, 0.003, -43, -70, 0.000, -9, -38, 0.005, 25, 82, 0.210, -13, 23, 0.001, 38, 74, 0.000, 37, 121, 0.122, 15, -15, 0.006, 10, 23, 0.000, -32, 142, 0.001, 5, -52, 0.001, 53, 69, 0.002, 49, 74, 0.016, 29, 51, 0.008, 44, 146, 0.000, 25, 48, 0.003, 2, 13, 0.002, -18, -44, 0.006, -29, -49, 0.018, -8, -74, 0.002, 26, 118, 0.046, -12, -71, 0.000, 25, -99, 0.006, 40, 81, 0.004, 39, -86, 0.044, 36, 28, 0.002, 50, 123, 0.003, 12, 18, 0.003, -7, 112, 0.072, -12, 40, 0.007, 59, 30, 0.055, 39, 59, 0.002, 36, -85, 0.006, 35, 56, 0.001, -7, 157, 0.000, 30, -111, 0.001, -8, -36, 0.009, 7, 42, 0.002, -17, 36, 0.036, 54, 58, 0.003, 50, 61, 0.000, 30, 68, 0.015, 26, 71, 0.006, 7, -5, 0.020, -26, 27, 0.006, -27, -64, 0.003, 45, 67, 0.001, 41, 64, 0.000, 21, 73, 0.136, 57, -3, 0.003, 30, 94, 0.001, 45, -108, 0.004, 42, 134, 0.000, -16, -60, 0.000, 21, -102, 0.030, -20, -65, 0.009, -40, -70, 0.000, 32, 63, 0.004, 28, 66, 0.001, 8, 21, 0.000, -16, 19, 0.000, 55, 43, 0.013, 32, -82, 0.005, 31, 21, 0.015, 9, 77, 0.241, 42, -88, 0.044, 19, 55, 0.000, 21, 112, 0.074, 33, 120, 0.227, -6, 156, 0.001, 65, 22, 0.002, 43, 78, 0.015, 45, 135, 0.001, 4, 118, 0.009, 22, 54, 0.003, 52, -103, 0.000, 9, -69, 0.025, -14, 18, 0.006, 57, 16, 0.003, 52, 8, 0.041, 10, 119, 0.001, 24, 86, 0.153, -33, 149, 0.002, 34, 128, 0.028, -5, 124, 0.001, -24, -54, 0.003, 47, -124, 0.000, 43, -103, 0.001, 24, 69, 0.036, -11, 121, 0.001, 20, 72, 0.007, 13, 101, 0.278, 44, -63, 0.011, 43, 42, 0.009, 23, 79, 0.058, 38, -5, 0.005, 0, -78, 0.014, 11, 25, 0.006, -9, -34, 0.050, 25, 110, 0.043, -13, 35, 0.006, 61, 23, 0.003, 58, 39, 0.001, 34, 49, 0.038, 49, 85, 0.003, 11, -86, 0.021, 20, 85, 0.045, -18, 29, 0.006, 53, 41, 0.006, 5, 13, 0.003, 48, 130, 0.013, 63, 20, 0.001, -32, -56, 0.003, 40, 53, 0.001, 36, 56, 0.004, 16, 51, 0.001, 50, 127, 0.004, 12, 46, 0.005, 39, 31, 0.015, 54, 11, 0.022, 16, -62, 0.000, 29, 102, 0.003, 7, 14, 0.004, 41, 126, 0.027, -17, 24, 0.002, 54, 22, 0.009, 53, 93, 0.001, 30, 32, 0.591, 6, 34, 0.001, 12, 123, 0.006, 64, 35, 0.001, 41, 44, 0.015, 18, 97, 0.031, 17, 34, 0.003, -21, 119, 0.000, 32, 116, 0.196, -7, 24, 0.046, 27, -100, 0.001, 45, -72, 0.013, 41, -71, 0.051, 3, 126, 0.004, -16, -72, 0.002, 21, -82, 0.002, 52, 104, 0.015, -40, -66, 0.001, 32, 35, 0.055, 31, 8, 0.001, 32, -110, 0.018, 31, 121, 0.315, -29, -66, 0.001, -38, 144, 0.004, 42, 27, 0.016, 4, 98, 0.018, 19, -76, 0.001, 18, 37, 0.004, 33, 1, 0.001, -5, -74, 0.001, 22, 97, 0.040, 0, 129, 0.001, 52, 20, 0.027, 13, 43, 0.001, -10, -46, 0.000, 24, 122, 0.135, -9, 15, 0.004, -4, 129, 0.016, 33, -97, 0.009, 44, 14, 0.001, -8, 145, 0.001, -4, 26, 0.002, 47, 9, 0.097, -13, -50, 0.000, 23, 115, 0.082, 38, 23, 0.009, 14, 9, 0.008, 10, 0, 0.028, 47, 90, 0.001, 14, 28, 0.001, 5, -53, 0.000, -8, 128, 0.000, 29, 6, 0.001, -9, -77, 0.008, 20, 97, 0.032, 53, -3, 0.033, -3, 107, 0.010, 49, 2, 0.038, 48, 39, 0.085, 38, 100, 0.001, 35, -98, 0.003, -19, 47, 0.007, 53, -114, 0.002, 48, 118, 0.000, 40, 25, 0.004, 16, 39, 0.010, 26, -99, 0.003, -12, -48, 0.002, -32, 27, 0.006, 40, -80, 0.047, 36, -77, 0.006, 17, 79, 0.258, 50, 22, 0.037, 12, -71, 0.001, 27, 101, 0.011, 7, 50, 0.002, 41, 106, 0.001, 3, 47, 0.004, -16, 167, 0.001, -21, 49, 0.008, 51, 84, 0.001, 30, 12, 0.000, 7, -61, 0.001, 6, 126, 0.042, -25, -59, 0.001, -17, -67, 0.015, -6, 16, 0.013, 30, 123, 0.024, 8, 127, 0.013, 45, 11, 0.061, 60, 58, 0.000, -29, -54, 0.008, -6, -65, 0.000, -7, 36, 0.013, -26, -66, 0.000, 41, -107, 0.000, 52, 116, 0.001, 51, 31, 0.006, 32, -9, 0.007, 4, 32, 0.004, -53, -71, 0.000, -1, 123, 0.003, 32, -90, 0.016, 31, 77, 0.096, 46, 41, 0.007, 8, -76, 0.011, 19, 31, 0.001, -2, 21, 0.001, -5, 33, 0.010, 48, 95, 0.000, 5, -2, 0.018, -10, 148, 0.008, 37, 36, 0.033, -2, 136, 0.001, -10, 35, 0.011, -14, -38, 0.002, -18, -65, 0.006, -34, 21, 0.002, 56, 45, 0.016, 52, 48, 0.010, 13, 15, 0.003, 47, -53, 0.003, 46, 86, 0.002, 24, 126, 0.002, -14, -55, 0.000, -34, -56, 0.002, 56, 100, 0.000, -38, -61, 0.001, 47, 28, 0.040, 44, 10, 0.027, -11, 166, 0.000, 19, 107, 0.001, -23, -44, 0.027, -24, 33, 0.001, 44, -103, 0.004, 58, 48, 0.001, 20, -97, 0.048, 35, 79, 0.001, 34, 42, 0.003, 15, 28, 0.001, 10, 36, 0.003, -9, 38, 0.003, 61, 63, 0.000, 38, -98, 0.002, 49, 13, 0.024, 48, -68, 0.003, -2, 104, 0.028, 2, 42, 0.002, 1, 25, 0.003, 16, 101, 0.044, -22, 36, 0.001, 49, -98, 0.002, 48, 75, 0.000, 26, 95, 0.068, 40, 110, 0.036, 2, -71, 0.000, 1, 10, 0.002, 38, 128, 0.034, 16, -4, 0.001, 12, -9, 0.004, 49, -117, 0.002, 63, 76, 0.004, -31, 25, 0.001, 40, -3, 0.174, 35, 27, 0.001, -17, 146, 0.003, -31, -54, 0.003, 3, 10, 0.017, 39, 103, 0.002, 54, 67, 0.002, 50, 58, 0.011, 30, 53, 0.009, 27, 129, 0.002, 6, 47, 0.004, 3, 27, 0.002, 51, 112, 0.001, 12, 100, 0.014, 45, 26, 0.041, 21, 40, 0.010, 18, 122, 0.012, -14, -45, 0.001, -3, 14, 0.001, -7, -49, 0.003, 30, 87, 0.000, -27, 28, 0.106, 42, 143, 0.006, 60, 22, 0.002, 32, 108, 0.051, -17, -40, 0.005, 31, -113, 0.001, 28, 39, 0.001, -30, -67, 0.001, 55, 70, 0.002, 51, 75, 0.000, -3, 116, 0.029, 31, 64, 0.002, 28, -106, 0.011, 27, 61, 0.002, 42, -79, 0.011, 4, 12, 0.015, 22, -80, 0.028, 21, 91, 0.008, -1, 15, 0.001, -2, -78, 0.028, -5, -44, 0.014, 43, 113, 0.001, 42, 68, 0.001, 6, -3, 0.020, -2, 33, 0.000, -6, 104, 0.001, -25, 26, 0.005, -28, -61, 0.002, 57, 51, 0.002, 37, 56, 0.014, 33, 57, 0.000, 28, 99, 0.002, 9, 31, 0.004, -15, 37, 0.005, 22, 121, 0.095, 56, 17, 0.003, 37, -91, 0.003, 13, -13, 0.005, 46, 130, 0.023, 43, -92, 0.005, 24, 34, 0.002, -22, 166, 0.001, 0, 32, 0.026, -23, 31, 0.019, -5, 144, 0.003, 47, 48, 0.001, 43, 45, 0.018, 24, -111, 0.002, 23, 74, 0.092, 15, 95, 0.004, 11, 36, 0.001, -43, -71, 0.001, -9, -39, 0.005, 25, 81, 0.102, -13, 22, 0.001, 15, -16, 0.021, 48, -119, 0.001, 10, 24, 0.004, 5, 38, 0.020, 20, 122, 0.000, 53, 72, 0.001, 49, 73, 0.017, -1, -48, 0.003, 29, 46, 0.002, -9, 127, 0.006, 25, 47, 0.004, 2, 14, 0.002, -18, -47, 0.002, -19, 34, 0.005, 49, -102, 0.001, -8, -73, 0.001, -12, -70, 0.000, 40, 82, 0.006, 39, -87, 0.009, 50, 124, 0.002, 12, 19, 0.002, -7, 111, 0.127, 7, 152, 0.002, 62, 129, 0.002, 59, 29, 0.008, 39, 58, 0.001, 36, -84, 0.009, 35, 55, 0.002, 30, -110, 0.002, -8, -43, 0.002, 7, 41, 0.013, -17, 35, 0.013, 54, 31, 0.013, 50, 62, 0.000, 30, 65, 0.001, 26, 72, 0.008, 7, -6, 0.016, -27, -50, 0.008, -26, 28, 0.023, -27, -65, 0.026, 45, 62, 0.001, 41, 63, 0.001, 21, 76, 0.084]], ["1995", [6, 159, 0.001, 30, 99, 0.002, 45, -109, 0.001, 42, 115, 0.007, 4, -54, 0.000, -16, -67, 0.016, 21, -103, 0.006, -20, -64, 0.004, -40, -69, 0.001, 32, 64, 0.001, 28, 67, 0.007, 8, 22, 0.000, -15, 133, 0.000, -16, 20, 0.000, 55, 42, 0.006, 32, -81, 0.011, 31, 36, 0.084, 9, 80, 0.014, 42, -91, 0.007, 19, 54, 0.001, 21, 111, 0.174, -3, -51, 0.001, 33, 119, 0.158, 65, 21, 0.002, 46, 49, 0.012, 43, 77, 0.042, 45, 130, 0.018, 4, 119, 0.007, 22, 59, 0.003, 9, -82, 0.003, 46, -60, 0.002, -14, 15, 0.007, -15, -76, 0.001, 57, 15, 0.007, 52, 9, 0.058, 10, 120, 0.004, 24, 87, 0.150, 0, -51, 0.006, -5, 123, 0.016, -24, -53, 0.010, -28, -58, 0.016, 43, 0, 0.019, 24, 70, 0.026, -9, 33, 0.014, 20, 73, 0.041, 13, 104, 0.040, 43, 41, 0.011, 23, 78, 0.105, 20, -72, 0.001, 38, -4, 0.006, 0, -77, 0.018, -9, -35, 0.059, 25, 109, 0.035, -13, 34, 0.015, 61, 18, 0.001, 58, 40, 0.002, 34, 50, 0.028, 49, 88, 0.000, 48, -99, 0.001, -42, 176, 0.002, 20, 86, 0.167, -18, 30, 0.008, 53, 44, 0.006, 29, 18, 0.001, 5, 16, 0.003, 49, -74, 0.000, 48, 131, 0.006, 14, 121, 0.243, 63, 19, 0.001, 40, 54, 0.001, 36, 57, 0.005, 16, 52, 0.000, 50, 128, 0.010, 39, 30, 0.024, 54, 12, 0.007, 16, -61, 0.012, 27, 80, 0.216, 29, 101, 0.002, 14, 78, 0.071, 7, 13, 0.003, 41, 125, 0.026, -17, 23, 0.002, 54, 27, 0.010, 30, 29, 0.001, 41, 142, 0.003, 12, 124, 0.027, 41, 43, 0.014, 18, 98, 0.004, 36, 117, 0.200, 17, 33, 0.003, 32, 109, 0.049, -7, 23, 0.013, 27, -101, 0.005, 45, -73, 0.124, 21, -83, 0.000, 55, -131, 0.001, 52, 105, 0.025, -40, -65, 0.000, 32, 36, 0.115, 31, 7, 0.001, 32, -109, 0.001, 31, 120, 0.201, 9, 124, 0.042, 46, -2, 0.001, -2, -50, 0.003, 18, -13, 0.001, 42, 28, 0.015, 4, 99, 0.009, 19, -77, 0.002, 18, 38, 0.007, 33, 4, 0.005, -5, -75, 0.000, -14, 51, 0.001, -15, -48, 0.002, 57, -5, 0.000, 52, 37, 0.017, 13, 38, 0.015, -10, -41, 0.002, -11, 36, 0.007, -18, -71, 0.003, -20, 27, 0.002, 56, 89, 0.001, 33, -94, 0.007, 44, 15, 0.001, 43, -4, 0.006, 20, 37, 0.000, -4, 27, 0.008, 47, 8, 0.077, 44, -98, 0.001, 23, 114, 0.385, 38, 24, 0.056, 14, 10, 0.007, 10, -3, 0.010, 47, 89, 0.002, -34, 152, 0.083, 38, -121, 0.067, 14, 25, 0.002, 29, 5, 0.001, -9, -78, 0.018, 20, 98, 0.020, -19, -39, 0.003, 53, 0, 0.047, -23, 150, 0.000, 49, 1, 0.029, 48, 40, 0.045, 38, 97, 0.000, 35, -99, 0.001, 16, 1, 0.004, 53, -115, 0.000, 48, 119, 0.001, 29, -85, 0.000, 63, 39, 0.001, 40, 26, 0.002, 16, 40, 0.002, 11, 120, 0.002, -8, 14, 0.003, 26, -98, 0.020, -12, -47, 0.001, -32, 28, 0.012, 40, -87, 0.006, 36, -76, 0.039, 17, 82, 0.053, 50, 19, 0.093, 12, -70, 0.001, 27, 108, 0.077, 7, 49, 0.003, 41, 105, 0.000, 3, 46, 0.006, -16, 168, 0.001, -21, 56, 0.005, 51, 83, 0.002, 50, -122, 0.000, 30, 9, 0.001, 7, -62, 0.001, 41, -6, 0.005, -17, -52, 0.001, -38, -58, 0.003, -6, 13, 0.017, 45, 6, 0.047, 60, 59, 0.000, 41, -121, 0.000, 17, -3, 0.000, -6, -64, 0.000, -7, 35, 0.003, -26, -61, 0.001, 41, -104, 0.003, 51, 30, 0.005, 32, -8, 0.043, 27, 40, 0.002, 4, 33, 0.003, 21, 98, 0.010, -1, 122, 0.002, 32, -89, 0.005, 31, 92, 0.001, 46, 42, 0.007, 8, -83, 0.003, 22, 36, 0.000, 19, 30, 0.001, -10, -64, 0.003, -2, 22, 0.002, -5, 40, 0.036, 69, 20, 0.001, 37, 35, 0.023, -2, 133, 0.001, 10, 93, 0.001, -10, 36, 0.009, -14, -41, 0.005, -34, 22, 0.001, 56, 46, 0.003, 37, -108, 0.001, 52, 49, 0.003, 13, 10, 0.019, 46, 91, 0.001, -11, 24, 0.003, -34, -59, 0.006, 56, 93, 0.025, -38, -60, 0.002, -30, -57, 0.004, 47, 27, 0.037, 44, 11, 0.057, -33, -65, 0.002, 19, 106, 0.120, -23, -45, 0.032, -24, 34, 0.001, 58, 45, 0.001, 20, -96, 0.004, 35, 78, 0.002, -38, 150, 0.000, 34, 39, 0.004, 15, 27, 0.001, 10, 33, 0.002, 47, 109, 0.000, -9, 118, 0.012, 38, -93, 0.005, 34, -6, 0.045, 15, -84, 0.001, 49, 16, 0.023, 25, 38, 0.002, 2, 39, 0.001, 1, 28, 0.004, 16, 102, 0.027, 6, 122, 0.009, 68, 65, 0.000, 49, -99, 0.002, 48, 76, 0.000, 26, 96, 0.008, 40, 111, 0.042, 2, -70, 0.000, 38, 125, 0.004, 16, -11, 0.003, 50, 85, 0.001, 12, -8, 0.034, 63, 75, 0.001, -31, 28, 0.011, -20, -49, 0.004, 40, -2, 0.002, 36, 1, 0.015, 35, 26, 0.010, -31, -55, 0.005, 6, -67, 0.001, 3, 9, 0.003, 40, -115, 0.001, 39, 102, 0.000, 54, 68, 0.002, 50, 55, 0.001, 30, 54, 0.005, 26, 49, 0.002, 60, -135, 0.001, 6, 48, 0.004, 3, 26, 0.003, 51, 111, 0.001, 12, 101, 0.007, 45, 25, 0.024, -3, 13, 0.002, -7, -46, 0.002, 30, 88, 0.001, -27, 27, 0.015, 42, 144, 0.007, 60, 23, 0.011, 32, 101, 0.002, 31, -114, 0.004, 28, 40, 0.001, 8, -13, 0.027, -30, -66, 0.003, 55, 69, 0.002, 51, 74, 0.001, -3, 115, 0.013, 31, 63, 0.001, 28, -105, 0.008, 27, 68, 0.052, 42, -78, 0.036, 22, -83, 0.020, 21, 86, 0.060, -1, 14, 0.001, -2, -57, 0.000, -5, -45, 0.007, 32, -117, 0.059, 43, 120, 0.009, 45, 93, 0.000, 55, 103, 0.001, -2, 34, 0.013, -25, 25, 0.001, 57, 70, 0.000, 37, 55, 0.012, 33, 60, 0.004, 28, 100, 0.004, 9, 34, 0.004, -9, 24, 0.002, -4, 120, 0.044, 22, 122, 0.002, 37, -88, 0.008, 8, 101, 0.011, 46, 119, 0.000, 43, -93, 0.005, -11, 124, 0.016, 0, 41, 0.004, -23, 34, 0.001, -5, 143, 0.003, 47, 47, 0.001, 43, 52, 0.006, 24, -110, 0.003, 23, 73, 0.213, 1, 105, 0.022, -4, -45, 0.011, 11, 35, 0.005, 14, 45, 0.059, 25, 84, 0.293, -13, 21, 0.001, 58, 17, 0.007, 37, 123, 0.047, 34, 75, 0.082, -4, 130, 0.003, 11, -12, 0.022, 48, -118, 0.000, 10, 21, 0.001, 5, -58, 0.001, 1, -57, 0.000, 53, 71, 0.002, 49, 76, 0.001, 29, 45, 0.002, 14, 18, 0.001, 25, 50, 0.002, 2, 11, 0.006, -18, -46, 0.003, -19, 33, 0.018, 49, -103, 0.001, -8, -72, 0.001, -12, -69, 0.000, 25, -97, 0.021, 40, 83, 0.002, 39, -88, 0.009, 50, 121, 0.001, 12, 20, 0.002, -7, 114, 0.026, 14, 107, 0.004, -37, 149, 0.001, 62, 130, 0.003, 59, 36, 0.001, 39, 57, 0.001, 36, -99, 0.001, 35, 54, 0.005, 30, -89, 0.014, -8, -42, 0.003, 7, 40, 0.042, -17, 34, 0.008, 54, 32, 0.015, -4, -50, 0.001, 30, 66, 0.001, 26, 69, 0.068, 7, -7, 0.021, -20, 34, 0.016, -3, -60, 0.031, -19, -44, 0.004, -26, 25, 0.002, -27, -54, 0.007, 21, 75, 0.080, 30, 100, 0.002, 42, 116, 0.006, 4, -53, 0.000, -16, -66, 0.001, 21, -100, 0.015, -20, -63, 0.001, -40, -68, 0.002, 32, 73, 0.082, 28, 68, 0.016, -16, 13, 0.001, -5, -41, 0.006, 55, 41, 0.007, 32, -80, 0.013, 31, 35, 0.086, 9, 79, 0.129, 42, -90, 0.007, 19, 53, 0.002, -2, -45, 0.004, 65, 24, 0.000, 46, 50, 0.001, 43, 84, 0.008, 45, 129, 0.024, 4, 120, 0.003, 22, 60, 0.004, 9, -83, 0.025, 46, -63, 0.003, -14, 16, 0.014, 52, 10, 0.063, 24, 88, 0.186, 0, -50, 0.004, 34, 126, 0.001, -5, 122, 0.007, -24, -52, 0.015, -28, -57, 0.002, 43, -1, 0.023, 24, 71, 0.012, 58, 83, 0.001, 20, 74, 0.113, -1, 11, 0.001, 13, 103, 0.028, 43, 16, 0.004, 23, 77, 0.073, 38, -7, 0.014, 0, -76, 0.007, 47, 100, 0.000, 25, 112, 0.073, -13, 33, 0.005, 61, 17, 0.003, 58, 37, 0.002, 34, 47, 0.026, 49, 87, 0.001, 48, -98, 0.001, 20, 87, 0.177, -33, -56, 0.002, -18, 35, 0.005, 53, 43, 0.005, 29, 17, 0.001, 5, 15, 0.003, 48, 132, 0.001, -19, 178, 0.001, 63, 18, 0.001, 36, 58, 0.009, 16, 45, 0.014, 50, 125, 0.002, 39, 29, 0.030, 54, 9, 0.005, -55, -66, 0.001, 27, 79, 0.284, 29, 104, 0.080, 41, 128, 0.013, -17, 22, 0.000, 54, 28, 0.009, 53, 95, 0.000, 30, 30, 0.020, 41, 141, 0.017, -21, -53, 0.000, 64, 29, 0.001, 41, 30, 0.096, 18, 95, 0.014, 36, 118, 0.263, 17, 36, 0.003, 32, 110, 0.042, -7, 26, 0.006, 27, -102, 0.000, 45, -78, 0.000, 41, -69, 0.001, 21, -80, 0.001, 52, 106, 0.001, 31, 6, 0.001, -16, 49, 0.008, 32, -108, 0.001, 31, 119, 0.226, 9, 123, 0.024, 46, 3, 0.009, 18, -12, 0.001, 6, -8, 0.018, 66, 15, 0.001, 6, 117, 0.011, 42, 25, 0.033, 18, 35, 0.001, 33, 3, 0.004, 14, 40, 0.031, -15, -49, 0.004, 22, 103, 0.011, 52, 38, 0.007, 13, 37, 0.006, 47, -91, 0.001, -10, -40, 0.012, -11, 35, 0.010, 56, 90, 0.002, 33, -95, 0.005, 44, 16, 0.011, 43, -5, 0.032, 58, 103, 0.004, -4, 28, 0.006, -10, 161, 0.002, 47, 7, 0.029, 44, -97, 0.002, -13, -44, 0.003, 23, 113, 0.139, 38, 21, 0.003, 14, -1, 0.005, 10, -2, 0.015, 47, 88, 0.002, 38, -120, 0.006, 6, 39, 0.099, 14, 26, 0.001, 29, 8, 0.001, -9, -79, 0.018, 20, 99, 0.004, 53, -1, 0.156, 49, 4, 0.023, 48, 17, 0.082, 40, 140, 0.001, 38, 98, 0.001, 35, -92, 0.005, 16, 2, 0.001, 53, -112, 0.002, 12, -3, 0.014, 48, 120, 0.002, 29, -90, 0.032, 40, 27, 0.012, 16, 17, 0.000, -8, 15, 0.006, -12, -46, 0.001, 40, -86, 0.017, 39, 129, 0.001, 17, 81, 0.075, 50, 20, 0.093, 12, -69, 0.003, 27, 107, 0.109, 7, 48, 0.004, 41, 108, 0.016, 3, 45, 0.005, 51, 82, 0.009, 50, -125, 0.001, -15, 50, 0.011, 30, 10, 0.001, 7, -63, 0.006, 41, -7, 0.015, -17, -53, 0.001, -6, 14, 0.028, 30, 121, 0.306, 23, 96, 0.022, 45, 5, 0.084, 60, 60, 0.002, -4, -41, 0.009, 17, 0, 0.001, -6, -67, 0.000, 28, 13, 0.000, -26, -60, 0.001, 41, -105, 0.001, -8, 132, 0.002, 51, 29, 0.006, 32, 1, 0.001, 27, 39, 0.002, 4, 34, 0.002, 21, 97, 0.046, -1, 121, 0.003, -3, -42, 0.003, 32, -88, 0.005, 46, 31, 0.056, 8, -82, 0.015, 19, 29, 0.001, -2, 27, 0.002, -5, 39, 0.028, 69, 19, 0.001, 57, 105, 0.000, 37, 30, 0.020, -2, 134, 0.002, -10, 33, 0.008, -14, -40, 0.008, -34, 27, 0.005, 56, 47, 0.004, 52, 50, 0.006, 13, 9, 0.036, 47, -55, 0.001, 9, 6, 0.015, 46, 92, 0.000, -11, 23, 0.002, -14, -57, 0.000, -4, 134, 0.001, -34, -58, 0.004, 56, 94, 0.004, -38, -63, 0.001, 47, 26, 0.016, 44, 12, 0.057, 19, 105, 0.009, -8, 142, 0.001, -24, 35, 0.002, 58, 46, 0.002, 38, 49, 0.033, 35, 77, 0.010, 37, 98, 0.001, 34, 40, 0.005, 15, 26, 0.001, 10, 34, 0.004, 47, 124, 0.050, -33, 30, 0.001, 38, -92, 0.010, -8, 139, 0.000, 15, -85, 0.005, 49, 15, 0.024, 2, 40, 0.002, 1, 27, 0.001, 16, 103, 0.061, -22, 34, 0.002, 49, -96, 0.002, 26, 93, 0.144, 25, -106, 0.001, 40, 112, 0.044, 2, -73, 0.001, 1, 12, 0.004, 38, 126, 0.127, 16, -10, 0.002, 50, 86, 0.000, 12, -7, 0.013, -31, 27, 0.002, 40, -1, 0.003, 36, 2, 0.031, 35, 25, 0.007, -7, 150, 0.001, -31, -52, 0.005, 6, -66, 0.000, 45, -120, 0.000, 39, 101, 0.016, 54, 65, 0.002, 50, 56, 0.001, 30, 59, 0.004, 26, 50, 0.002, 6, 45, 0.002, 3, 25, 0.002, 17, -66, 0.004, -21, 19, 0.000, 51, 110, 0.001, 12, 102, 0.021, 45, 28, 0.033, -25, -64, 0.005, -3, 16, 0.001, -7, -47, 0.003, 45, -87, 0.004, 42, 141, 0.009, 60, 24, 0.005, -29, -67, 0.000, 17, -4, 0.000, 32, 102, 0.002, 31, -115, 0.012, 28, 41, 0.001, 8, -12, 0.026, 55, 68, 0.002, 51, 73, 0.001, 31, 62, 0.006, 28, -104, 0.001, 27, 67, 0.005, 42, -81, 0.013, 4, -2, 0.003, 22, -82, 0.024, 21, 85, 0.052, -1, 13, 0.001, -39, -62, 0.009, -2, -56, 0.000, -5, -46, 0.004, 32, -116, 0.045, 46, 75, 0.003, 43, 119, 0.009, 55, 102, 0.001, -8, -76, 0.003, -25, 24, 0.002, 5, 9, 0.032, 57, 69, 0.000, 37, 66, 0.005, 33, 59, 0.002, 28, 101, 0.003, 9, 33, 0.005, -15, 39, 0.007, 37, -89, 0.009, 46, 120, 0.001, 43, -94, 0.003, -11, 123, 0.001, 0, 42, 0.001, -23, 33, 0.001, -5, 142, 0.002, 47, 46, 0.001, 23, 72, 0.033, -4, -44, 0.011, 11, 34, 0.005, -9, -41, 0.002, 25, 83, 0.344, -13, 28, 0.013, 58, 18, 0.002, 35, 121, 0.005, 37, 118, 0.164, 34, 76, 0.017, -4, 131, 0.002, 49, 94, 0.000, 11, -13, 0.007, 48, -117, 0.001, 10, 22, 0.001, -32, 153, 0.004, 53, 50, 0.031, 49, 75, 0.001, 29, 48, 0.023, 5, 122, 0.006, 25, 49, 0.002, -2, 105, 0.004, 2, 12, 0.006, -19, 36, 0.003, 68, 30, 0.001, 49, -100, 0.001, 48, 105, 0.001, 26, 129, 0.002, -12, -68, 0.000, 40, 84, 0.002, 39, -89, 0.011, 36, 15, 0.011, 50, 122, 0.004, 12, 21, 0.003, -7, 113, 0.029, 18, 123, 0.002, 59, 35, 0.001, 39, 56, 0.001, 36, -98, 0.001, 35, 53, 0.009, 30, -88, 0.020, -8, -41, 0.006, 7, 39, 0.077, -17, 33, 0.007, 54, 29, 0.018, -55, -68, 0.001, 30, 23, 0.000, 26, 70, 0.032, 7, -8, 0.018, 6, 73, 0.000, 22, 98, 0.013, -3, -61, 0.001, -26, 26, 0.015, -27, -55, 0.008, 45, 64, 0.000, 60, 5, 0.000, 41, 65, 0.003, 21, 70, 0.023, 30, 97, 0.001, 42, 113, 0.002, 4, -52, 0.002, -16, -65, 0.001, 21, -101, 0.047, -20, -62, 0.000, -41, -62, 0.000, 32, 74, 0.157, 28, 69, 0.050, 8, 24, 0.001, -16, 14, 0.003, 55, 40, 0.013, 31, 34, 0.003, -15, 26, 0.002, 21, 121, 0.001, 33, 121, 0.110, -6, 151, 0.002, 65, 23, 0.001, 43, 83, 0.009, 45, 132, 0.032, 22, 57, 0.001, 6, 2, 0.078, 9, -80, 0.001, 46, -62, 0.001, -14, 13, 0.002, -15, -74, 0.002, 57, 17, 0.003, 52, 11, 0.052, -43, 172, 0.001, 24, 81, 0.066, -5, 121, 0.027, -24, -59, 0.000, -28, -56, 0.004, 43, -2, 0.043, 24, 72, 0.042, 58, 84, 0.000, 20, 75, 0.101, -28, 23, 0.001, 23, 108, 0.065, 38, -6, 0.013, 14, -92, 0.017, 47, 99, 0.000, 25, 111, 0.077, 58, 38, 0.002, -46, 169, 0.001, 34, 48, 0.036, 49, 90, 0.001, 48, -97, 0.001, -18, 36, 0.012, 53, 38, 0.009, 44, 113, 0.000, 5, 26, 0.001, 48, 125, 0.020, 63, 17, 0.001, 40, 56, 0.000, 36, 59, 0.015, 35, 8, 0.019, 16, 46, 0.002, 50, 126, 0.005, 39, 28, 0.035, 54, 10, 0.028, 27, 78, 0.211, 29, 103, 0.030, 41, 127, 0.035, -17, 21, 0.000, 54, 25, 0.013, 53, 106, 0.001, 30, 35, 0.006, 6, 37, 0.017, 64, 30, 0.000, 41, 29, 0.177, 18, 96, 0.063, 36, 119, 0.189, 17, 35, 0.003, 32, 111, 0.057, -7, 25, 0.016, 45, -79, 0.002, 41, -82, 0.016, 52, 107, 0.001, 51, 24, 0.016, 31, 5, 0.001, -13, -43, 0.003, -16, 50, 0.007, 55, 12, 0.015, 32, -115, 0.013, 31, 118, 0.194, 46, 4, 0.013, 42, -121, 0.002, 18, -15, 0.013, -6, 123, 0.012, 66, 16, 0.000, -44, -74, 0.000, 42, 26, 0.025, 18, 36, 0.001, -1, -74, 0.000, 33, 6, 0.003, -5, -69, 0.001, -14, 49, 0.006, -15, -46, 0.002, 22, 104, 0.022, 37, -6, 0.027, 52, 39, 0.010, 13, 40, 0.032, -10, -43, 0.002, 24, 117, 0.092, -33, 118, 0.000, 56, 91, 0.008, 33, -92, 0.004, 44, 17, 0.019, 43, -6, 0.005, -4, 29, 0.022, 47, 6, 0.019, 44, -96, 0.002, -13, -45, 0.002, 23, 112, 0.075, 38, 22, 0.016, 35, 104, 0.067, 14, 0, 0.007, 10, 11, 0.023, 47, 87, 0.002, 38, -123, 0.001, 49, 118, 0.006, 29, 7, 0.001, 20, 100, 0.015, 53, 10, 0.061, 49, 3, 0.055, 48, 18, 0.052, 44, 77, 0.003, 38, 103, 0.023, 35, -93, 0.004, 53, -113, 0.029, 12, -2, 0.028, 29, -91, 0.004, 14, 110, 0.016, 40, 28, 0.012, -20, -44, 0.063, -8, 16, 0.006, 7, 94, 0.001, 40, -85, 0.018, 39, 128, 0.054, 17, 84, 0.069, 16, -95, 0.011, 50, 17, 0.037, 12, -68, 0.005, 27, 106, 0.101, 7, 47, 0.003, 41, 107, 0.002, 51, 81, 0.002, 30, -1, 0.001, 7, -64, 0.001, 41, -4, 0.021, -17, -54, 0.006, -6, 27, 0.007, -35, -57, 0.011, 30, 122, 0.138, 45, 8, 0.070, 60, 61, 0.001, 41, -119, 0.000, -35, 150, 0.001, 17, -1, 0.001, -6, -66, 0.000, -26, -63, 0.001, 8, 9, 0.028, 41, -102, 0.000, 51, 36, 0.010, 32, 2, 0.001, 28, -3, 0.000, 27, 38, 0.002, 4, 35, 0.002, 22, -105, 0.007, 21, 100, 0.008, -1, 120, 0.016, 46, 32, 0.010, 8, -81, 0.006, 19, 36, 0.000, -2, 28, 0.003, -5, 38, 0.006, -10, 151, 0.001, 22, -15, 0.000, 37, 29, 0.026, -2, 139, 0.000, -8, -62, 0.000, 10, 107, 0.337, -10, 34, 0.029, -2, 12, 0.001, -34, 28, 0.008, 56, 48, 0.034, 52, 51, 0.003, -12, -67, 0.000, 13, 12, 0.006, 9, 5, 0.006, 46, 89, 0.001, -14, -56, 0.001, -34, -53, 0.002, 56, 95, 0.001, -38, -62, 0.001, 47, 25, 0.016, 19, 96, 0.037, 34, -106, 0.003, -36, -61, 0.003, -23, -59, 0.001, -24, 36, 0.015, 44, -100, 0.001, 58, 59, 0.002, 37, 97, 0.001, 34, 37, 0.036, 15, 25, 0.001, 10, 31, 0.008, 47, 123, 0.014, 5, -76, 0.010, -33, 29, 0.016, 38, -95, 0.006, 15, -86, 0.013, 49, 18, 0.041, 25, 40, 0.003, 2, 37, 0.001, 1, 30, 0.010, 16, 104, 0.062, -22, 31, 0.003, 49, -97, 0.023, 26, 94, 0.062, 25, -107, 0.007, 40, 105, 0.000, 2, -72, 0.001, 1, 11, 0.004, -18, -69, 0.001, 16, -9, 0.002, 50, 83, 0.006, 12, -6, 0.010, -31, 30, 0.022, 40, 0, 0.005, 36, 3, 0.043, 29, 122, 0.138, -31, -53, 0.003, 6, -61, 0.001, 39, 100, 0.009, 54, 66, 0.002, 50, 53, 0.001, 30, 60, 0.004, 26, 47, 0.003, 6, 46, 0.003, 3, 16, 0.002, 17, -67, 0.001, -21, 18, 0.000, 51, 109, 0.003, 12, 103, 0.018, 45, 27, 0.023, 22, 84, 0.049, -3, 15, 0.001, -7, -44, 0.002, 45, -84, 0.003, 42, 142, 0.029, 60, 25, 0.029, 32, 103, 0.002, 31, -100, 0.004, 28, 42, 0.001, -30, -68, 0.000, 55, 67, 0.002, 51, 64, 0.001, -3, 109, 0.002, 31, 61, 0.001, 9, 101, 0.001, 27, 66, 0.002, 42, -80, 0.011, 4, -1, 0.007, 21, 88, 0.106, -1, 28, 0.002, -39, -63, 0.000, -5, -47, 0.004, 46, 76, 0.001, 43, 118, 0.005, -48, -67, 0.000, 55, 101, 0.001, -10, -63, 0.005, 46, -101, 0.000, 57, 72, 0.001, 37, 65, 0.004, 33, 62, 0.002, 28, 102, 0.009, 9, 36, 0.024, 37, -78, 0.005, -4, -73, 0.007, 13, -16, 0.031, 43, -95, 0.003, 24, 29, 0.000, 0, 43, 0.004, -23, 36, 0.003, -5, 141, 0.002, 13, 125, 0.009, 47, 45, 0.001, 23, 71, 0.013, 15, 108, 0.006, 11, 33, 0.004, -43, -74, 0.001, -9, -42, 0.002, 25, 102, 0.040, -13, 27, 0.002, 58, 15, 0.004, 35, 112, 0.104, 37, 117, 0.167, 34, 73, 0.135, -4, 132, 0.000, 49, 93, 0.000, 11, -14, 0.009, 48, -116, 0.001, -9, 113, 0.100, 5, -56, 0.001, 1, -55, 0.000, 53, 49, 0.010, 49, 46, 0.003, 29, 47, 0.009, 25, 52, 0.017, -19, 35, 0.003, 68, 31, 0.000, 49, -101, 0.000, 48, 106, 0.000, 40, 77, 0.003, 39, -90, 0.005, 36, 16, 0.003, 50, 119, 0.003, 12, 22, 0.003, -7, 116, 0.003, 11, 93, 0.001, -12, 44, 0.011, 59, 34, 0.004, 39, 55, 0.004, 36, -97, 0.006, 35, 60, 0.016, 30, -91, 0.022, -8, -40, 0.009, 7, 38, 0.091, 8, 99, 0.016, 54, 30, 0.006, 30, 24, 0.001, 7, -9, 0.007, 6, 74, 0.001, 17, -71, 0.001, -3, -66, 0.001, -26, 31, 0.005, -27, -52, 0.013, 45, 63, 0.001, 60, 6, 0.011, 41, 68, 0.002, 17, 74, 0.065, -6, -45, 0.004, 30, 98, 0.002, 45, -112, 0.001, 42, 114, 0.005, -16, -64, 0.001, 21, -106, 0.001, 54, 79, 0.001, 32, 75, 0.230, 28, 70, 0.051, 8, 17, 0.011, -16, 15, 0.005, 55, 39, 0.054, 6, 118, 0.002, 31, 33, 0.023, 9, 81, 0.026, 42, -108, 0.000, -2, -47, 0.015, -6, 152, 0.004, 5, 37, 0.008, 65, 26, 0.003, 43, 82, 0.012, 45, 131, 0.046, -4, 152, 0.000, 22, 58, 0.004, -35, 119, 0.000, 46, -73, 0.005, -11, -68, 0.004, -14, 14, 0.006, -15, -75, 0.009, 0, 105, 0.004, 52, 12, 0.024, 28, 130, 0.003, 24, 82, 0.091, -24, -58, 0.000, -28, -55, 0.021, 43, -3, 0.025, 20, 76, 0.088, -24, -43, 0.022, -28, 24, 0.004, 43, 14, 0.032, 23, 107, 0.047, 38, -1, 0.017, -25, -68, 0.002, 14, 50, 0.003, 25, 114, 0.059, -18, 146, 0.002, 34, 45, 0.013, 49, 89, 0.000, 48, -96, 0.001, -18, 33, 0.012, 53, 37, 0.007, 29, 19, 0.001, 44, 114, 0.000, 5, 25, 0.000, 48, 126, 0.030, 63, 16, 0.001, 40, 49, 0.015, 39, 10, 0.018, 36, 60, 0.041, 35, 7, 0.025, 16, 47, 0.001, 39, 27, 0.014, 27, 77, 0.125, 29, 98, 0.001, 41, 130, 0.026, 54, 26, 0.028, 53, 105, 0.001, -35, -70, 0.015, 30, 36, 0.008, 6, 38, 0.053, -25, -55, 0.005, -19, -49, 0.008, 64, 31, 0.001, 41, 32, 0.015, -29, -58, 0.003, 36, 120, 0.181, 17, 38, 0.005, 32, 112, 0.094, -7, 28, 0.004, 45, -76, 0.004, 41, -83, 0.033, 52, 108, 0.001, 51, 23, 0.035, 5, 27, 0.000, -16, 51, 0.004, 55, 11, 0.015, 51, 8, 0.207, 32, -114, 0.008, 31, 117, 0.124, 46, 1, 0.015, 18, -14, 0.001, -8, -69, 0.000, -6, 124, 0.003, 42, 23, 0.020, 18, 33, 0.002, -1, -75, 0.001, 33, 5, 0.008, -14, 50, 0.007, -18, -53, 0.001, -15, -47, 0.001, 22, 101, 0.020, 0, 125, 0.012, 37, -7, 0.010, 52, 40, 0.026, 13, 39, 0.025, 47, -109, 0.000, -10, -42, 0.003, 24, 118, 0.130, -33, 117, 0.004, 56, 92, 0.001, 33, -93, 0.004, 47, 36, 0.040, 44, 18, 0.019, 43, -7, 0.009, 20, 40, 0.004, -4, 30, 0.100, 47, 5, 0.008, 44, -95, 0.003, 62, 17, 0.003, 23, 111, 0.107, 20, -105, 0.008, 38, 27, 0.024, 35, 103, 0.019, 15, 36, 0.013, 14, -3, 0.013, 10, 12, 0.037, 47, 86, 0.001, 38, -122, 0.034, 49, 117, 0.001, 29, 2, 0.000, -13, -76, 0.078, -29, -51, 0.009, 16, 109, 0.020, 53, 9, 0.053, -23, 151, 0.000, 49, 6, 0.019, 48, 19, 0.031, 44, 78, 0.002, 38, 104, 0.008, 35, -94, 0.010, 12, -1, 0.054, 59, -151, 0.000, 40, 21, 0.022, -12, -44, 0.002, 40, -84, 0.016, -28, 153, 0.020, 39, 127, 0.058, 17, 83, 0.093, 16, -94, 0.007, 50, 18, 0.029, 27, 105, 0.080, 7, 46, 0.003, 41, 94, 0.001, 51, 104, 0.001, 50, -127, 0.000, 30, 0, 0.001, 7, -65, 0.001, 41, -5, 0.007, 3, -60, 0.004, 21, -16, 0.001, -17, -55, 0.001, 69, 89, 0.010, 30, 111, 0.049, 8, 123, 0.004, 45, 7, 0.016, -35, 149, 0.001, 17, 2, 0.000, -26, -62, 0.001, 64, 178, 0.001, 41, -103, 0.002, 51, 35, 0.008, 32, 3, 0.002, 28, -2, 0.000, 27, 37, 0.002, 4, 36, 0.002, 22, -104, 0.002, 21, 99, 0.007, -39, -72, 0.015, -52, -71, 0.001, 46, 29, 0.035, 8, -80, 0.011, 22, 39, 0.000, 19, 35, 0.000, -2, 25, 0.002, -5, 37, 0.007, 42, -5, 0.012, 37, 32, 0.018, -10, -77, 0.014, 10, 108, 0.055, -10, 39, 0.003, -14, -42, 0.006, -34, 25, 0.001, 56, 73, 0.001, 52, 52, 0.002, -44, -65, 0.002, 13, 11, 0.008, 9, 8, 0.025, 46, 90, 0.001, 24, 26, 0.000, -14, -59, 0.000, 56, 96, 0.005, 47, 24, 0.026, 19, 95, 0.014, 34, -109, 0.001, -23, -56, 0.003, -24, 29, 0.010, -43, -63, 0.000, 58, 60, 0.007, 38, 55, 0.001, 35, 83, 0.000, 37, 100, 0.001, 34, 38, 0.008, 15, 24, 0.001, 14, -23, 0.002, 10, 32, 0.003, 47, 122, 0.008, 5, -77, 0.001, 38, -94, 0.024, 15, -87, 0.034, 49, 17, 0.040, 48, -72, 0.002, -28, -50, 0.007, 25, 39, 0.003, 2, 38, 0.001, 1, 29, 0.002, 16, 81, 0.203, -22, 32, 0.004, 49, -94, 0.001, 48, 71, 0.001, 26, 107, 0.144, 25, -104, 0.002, 40, 106, 0.001, 2, -75, 0.015, 36, 37, 0.049, -18, -68, 0.002, 16, -8, 0.002, 50, 84, 0.005, 12, -5, 0.021, -21, -48, 0.016, -31, 29, 0.016, 40, -7, 0.017, 36, 4, 0.140, 35, 15, 0.012, 29, 121, 0.159, 40, -112, 0.005, 39, 99, 0.011, 54, 71, 0.002, 50, 54, 0.001, 30, 57, 0.007, 26, 48, 0.002, 3, 15, 0.002, 8, 81, 0.038, 17, -64, 0.002, -21, 17, 0.001, 51, 116, 0.002, 12, 104, 0.016, -7, -74, 0.000, 45, 22, 0.028, 6, 94, 0.000, -3, 42, 0.000, -7, -45, 0.001, 30, 91, 0.001, -27, 24, 0.003, 45, -85, 0.001, 60, 26, 0.021, -30, -56, 0.005, 32, 104, 0.005, -33, -66, 0.000, 31, -101, 0.001, 28, 43, 0.001, -30, -71, 0.003, 55, 66, 0.016, 51, 63, 0.001, -3, 112, 0.007, 31, 76, 0.205, 28, -102, 0.002, 27, 65, 0.002, 42, -83, 0.141, 21, 87, 0.117, -1, 27, 0.002, -3, -47, 0.004, -2, -58, 0.000, -5, -40, 0.013, 43, 117, 0.003, 45, 90, 0.001, 42, 64, 0.001, -1, 12, 0.000, 46, -100, 0.003, 57, 71, 0.001, 37, 68, 0.027, 33, 61, 0.003, 28, 103, 0.031, 9, 35, 0.013, -15, 41, 0.023, 56, 13, 0.011, 37, -79, 0.016, -4, -72, 0.001, 33, -82, 0.012, 9, -12, 0.017, 46, 118, 0.000, 43, -88, 0.028, -9, 37, 0.005, -4, 139, 0.005, 0, 44, 0.004, -23, 35, 0.003, -30, -52, 0.015, 23, 70, 0.011, 1, 110, 0.017, 38, -28, 0.001, 15, 107, 0.008, 11, 40, 0.058, -9, -43, 0.001, 25, 101, 0.065, -13, 26, 0.002, 61, 10, 0.001, 58, 16, 0.009, 35, 111, 0.103, 37, 120, 0.041, 34, 74, 0.069, 15, -4, 0.004, 49, 96, 0.000, 11, -15, 0.015, 48, -123, 0.015, 5, -57, 0.002, 20, 110, 0.021, 53, 52, 0.006, 49, 45, 0.002, 29, 74, 0.063, 25, 51, 0.002, 2, 10, 0.001, -19, 30, 0.011, 68, 32, 0.000, 49, -66, 0.000, 48, 107, 0.007, 26, 127, 0.000, -32, -71, 0.002, 40, 78, 0.003, 39, -91, 0.006, 50, 120, 0.001, 12, 23, 0.009, -7, 115, 0.002, 11, 100, 0.009, -12, 29, 0.005, 59, 33, 0.005, 39, 54, 0.003, 36, -96, 0.006, 35, 59, 0.009, 30, -90, 0.022, -8, -47, 0.002, 7, 37, 0.045, -18, 17, 0.005, -17, 31, 0.008, -20, 48, 0.045, 54, 35, 0.003, 7, -10, 0.005, 6, 15, 0.004, -3, -67, 0.000, -7, -62, 0.000, -26, 32, 0.027, -27, -53, 0.013, 60, 7, 0.001, 41, 67, 0.001, 21, 72, 0.078, 36, 77, 0.001, -6, -44, 0.008, 42, 111, 0.002, -16, -55, 0.008, 54, 80, 0.001, -40, -73, 0.004, 32, 76, 0.107, 28, 71, 0.082, 27, -12, 0.002, 8, 18, 0.007, -16, 16, 0.004, 55, 38, 0.421, 31, 32, 0.172, 42, -111, 0.001, -2, -46, 0.006, -6, 149, 0.001, 65, 25, 0.002, 43, 81, 0.005, 45, 126, 0.048, 52, -114, 0.001, 13, -83, 0.001, 9, -78, 0.001, 46, -72, 0.011, -11, -69, 0.001, -15, -72, 0.004, 57, 19, 0.002, 52, -3, 0.015, -10, -69, 0.000, 24, 83, 0.071, 34, 121, 0.024, -24, -57, 0.002, -28, -54, 0.013, 43, 4, 0.029, -36, -70, 0.004, 13, 100, 0.051, -28, 25, 0.008, 43, 13, 0.034, 23, 106, 0.031, 38, 0, 0.050, 25, 113, 0.095, 34, 46, 0.019, 49, 92, 0.000, -8, 113, 0.474, -18, 34, 0.003, 53, 40, 0.008, 29, 14, 0.001, 44, 115, 0.001, 5, 28, 0.001, -20, -51, 0.002, 48, 127, 0.018, 63, 15, 0.002, 40, 50, 0.054, 39, 9, 0.015, 36, 45, 0.023, 35, 6, 0.034, 16, 48, 0.000, 39, 26, 0.001, 17, 122, 0.038, 50, 11, 0.038, 27, 84, 0.163, 29, 97, 0.001, 0, 98, 0.009, 41, 129, 0.019, -36, 174, 0.002, 30, 33, 0.033, 6, 43, 0.003, -30, 31, 0.108, 41, 31, 0.010, 18, 94, 0.004, 36, 121, 0.184, 17, 37, 0.003, 32, 121, 0.282, -7, 27, 0.004, 27, -97, 0.014, 45, -77, 0.002, 42, 83, 0.004, 41, -80, 0.029, 21, -71, 0.000, 52, 93, 0.000, -26, 153, 0.002, 51, 22, 0.032, 27, 16, 0.001, 55, 10, 0.019, 51, 7, 0.191, 32, -113, 0.001, 31, 132, 0.023, 46, 2, 0.010, 42, -123, 0.004, -29, 115, 0.001, -5, 16, 0.172, -6, 121, 0.023, 66, 14, 0.001, 42, 24, 0.059, 18, 34, 0.001, 6, 11, 0.033, 33, 8, 0.004, 5, 117, 0.019, -15, -44, 0.002, 22, 102, 0.013, 37, -4, 0.029, 52, 41, 0.010, 13, 34, 0.029, -10, -37, 0.016, 24, 119, 0.129, 56, 85, 0.020, 33, -90, 0.006, 47, 35, 0.021, 44, 19, 0.022, 20, 41, 0.012, 15, 146, 0.002, 44, -94, 0.005, 62, 18, 0.003, 23, 110, 0.110, 20, -104, 0.008, 38, 28, 0.060, 35, 102, 0.005, 15, 35, 0.005, 14, -2, 0.006, 10, 9, 0.032, 47, 85, 0.001, -9, 122, 0.014, -33, -59, 0.003, 61, 50, 0.001, -18, 179, 0.007, 49, 120, 0.005, 48, -67, 0.002, -13, -77, 0.080, -19, -43, 0.005, 53, 12, 0.018, 49, 5, 0.020, 48, 20, 0.022, 44, 79, 0.004, 38, 101, 0.014, 35, -95, 0.007, 16, -3, 0.009, 12, 0, 0.025, 29, -89, 0.004, -3, 12, 0.001, 62, 78, 0.002, 59, 48, 0.001, 40, 22, 0.012, 11, 124, 0.018, -32, 24, 0.001, 40, -91, 0.005, 39, 126, 0.139, 16, -93, 0.027, 50, 15, 0.077, 27, 112, 0.198, 7, 45, 0.004, 41, 93, 0.001, -50, -74, 0.000, 39, 143, 0.000, 51, 103, 0.001, 30, -3, 0.001, -33, -70, 0.008, 7, -66, 0.003, -17, -56, 0.001, -6, 25, 0.005, 30, 112, 0.122, -37, -73, 0.016, 8, 124, 0.043, 45, 2, 0.018, -35, 152, 0.005, 17, 1, 0.001, 32, 77, 0.031, -26, -57, 0.068, 8, 11, 0.011, 41, -100, 0.001, 51, 34, 0.016, 32, 4, 0.002, 27, 44, 0.002, 4, 21, 0.005, 21, 94, 0.004, -1, 118, 0.023, -39, -73, 0.002, 46, 30, 0.030, 43, 128, 0.019, -4, 143, 0.002, 22, 40, 0.012, 19, 34, 0.001, -2, 26, 0.002, -10, 149, 0.002, 42, -4, 0.004, 57, 94, 0.001, 37, 31, 0.017, -2, 137, 0.004, 10, 105, 0.042, -10, 40, 0.007, -9, 28, 0.004, -4, 116, 0.011, -34, 26, 0.035, 56, 74, 0.001, 37, -112, 0.000, 52, 69, 0.002, 13, 6, 0.049, 9, 7, 0.021, -10, -73, 0.000, 24, 27, 0.000, -14, -58, 0.000, 23, -80, 0.001, -34, -55, 0.002, 0, 17, 0.000, -38, -64, 0.000, 47, 23, 0.024, 19, 94, 0.011, -23, -57, 0.002, -24, 30, 0.026, 58, 57, 0.024, 38, 56, 0.002, 35, 82, 0.001, 37, 99, 0.001, -8, 121, 0.000, 15, 23, 0.001, 10, 29, 0.003, 47, 121, 0.003, 38, -89, 0.012, 15, -88, 0.030, 49, 20, 0.043, 14, 14, 0.002, 25, 42, 0.003, 2, 35, 0.006, 1, 32, 0.017, 16, 82, 0.181, -22, 29, 0.004, 26, 108, 0.068, 25, -105, 0.001, 40, 107, 0.007, 2, -74, 0.001, 36, 38, 0.031, 38, 129, 0.013, 50, 81, 0.013, 12, -4, 0.014, 40, -6, 0.005, -20, -39, 0.002, -7, 151, 0.001, 40, -119, 0.000, 39, 98, 0.002, 54, 72, 0.003, 50, 51, 0.001, 30, 58, 0.004, 26, 45, 0.005, 3, 14, 0.002, 2, 103, 0.049, -20, 30, 0.011, -21, 24, 0.000, 51, 115, 0.001, -3, -68, 0.000, 12, 105, 0.025, -7, -75, 0.001, 45, 21, 0.026, -3, 41, 0.005, -35, -66, 0.002, 30, 92, 0.003, 45, -90, 0.002, 60, 27, 0.006, 32, 49, 0.024, 31, -102, 0.006, 28, 44, 0.001, -30, -70, 0.003, 55, 65, 0.003, 51, 62, 0.001, -3, 111, 0.003, 31, 75, 0.357, 28, -101, 0.003, 27, 72, 0.012, 42, -82, 0.044, 22, -79, 0.023, -1, 26, 0.002, -39, -61, 0.005, -2, -53, 0.001, 70, 24, 0.000, 66, 67, 0.002, 43, 124, 0.035, 45, 89, 0.001, 42, 61, 0.005, 55, 99, 0.002, -11, -62, 0.005, 57, 74, 0.001, 37, 67, 0.012, 33, 64, 0.003, 10, 125, 0.040, 28, 104, 0.037, 9, 22, 0.000, 56, 14, 0.008, 37, -76, 0.018, -4, -71, 0.001, 33, -83, 0.015, 9, -13, 0.051, 46, 123, 0.016, 43, -89, 0.017, 57, -152, 0.000, 0, 37, 0.013, 23, 69, 0.004, 1, 109, 0.002, 15, 106, 0.030, 11, 39, 0.047, -43, -72, 0.000, -9, -44, 0.001, 25, 104, 0.074, -13, 25, 0.002, 61, 9, 0.000, 58, 13, 0.007, 35, 110, 0.072, 37, 119, 0.111, 34, 71, 0.042, 15, -5, 0.001, 49, 95, 0.000, 11, -8, 0.009, 48, -122, 0.015, 20, 111, 0.064, 1, -53, 0.000, 53, 51, 0.046, 49, 48, 0.001, 29, 73, 0.081, 25, 70, 0.059, -19, 29, 0.009, 68, 33, 0.003, 48, 108, 0.003, 26, 128, 0.039, -32, -70, 0.002, 40, 79, 0.002, 39, -92, 0.004, 50, 117, 0.003, 12, 24, 0.007, 11, 99, 0.005, -12, 30, 0.005, 59, 40, 0.012, 39, 53, 0.001, 36, -95, 0.023, 35, 58, 0.009, 30, -85, 0.008, -8, -46, 0.002, 7, 36, 0.019, -17, 30, 0.006, 54, 36, 0.005, 7, -11, 0.021, 6, 16, 0.006, -3, -64, 0.000, -26, 29, 0.083, -27, -58, 0.005, 60, 8, 0.000, 21, 71, 0.083, 36, 78, 0.003, 17, 76, 0.095, -6, -47, 0.014, 42, 112, 0.003, -16, -54, 0.002, 21, -104, 0.014, 54, 77, 0.001, -40, -72, 0.006, 32, 69, 0.004, 28, 72, 0.037, 27, -13, 0.001, 8, 19, 0.006, -15, 40, 0.012, -16, 25, 0.002, 55, 37, 0.023, 31, 31, 0.173, 42, -110, 0.000, -6, 150, 0.002, 43, 88, 0.058, 45, 125, 0.043, 18, 27, 0.001, 52, -113, 0.004, 9, -79, 0.038, 46, -75, 0.001, -11, -74, 0.001, -15, -73, 0.002, 57, 38, 0.003, 52, -2, 0.075, 24, 84, 0.094, -24, -56, 0.005, -28, -53, 0.014, 43, 3, 0.017, 24, 67, 0.040, 13, 99, 0.013, -28, 26, 0.005, -28, -64, 0.013, 43, 20, 0.024, 23, 105, 0.044, 38, -3, 0.012, 0, -80, 0.000, 25, 116, 0.065, 61, 13, 0.000, 49, 91, 0.001, -8, 114, 0.129, -18, 23, 0.000, 53, 39, 0.020, 29, 13, 0.001, 44, 116, 0.002, 6, -1, 0.086, 48, 128, 0.011, 40, 51, 0.018, 36, 46, 0.021, 35, 5, 0.018, -19, 146, 0.000, -30, -50, 0.022, 26, -109, 0.008, 17, 121, 0.027, 50, 12, 0.042, 12, -61, 0.004, 27, 83, 0.167, 29, 100, 0.002, 6, -7, 0.014, -36, 175, 0.003, 54, -128, 0.001, 30, 34, 0.002, 6, 44, 0.003, 54, -113, 0.001, 64, 41, 0.015, -30, 32, 0.030, 41, 34, 0.009, 36, 122, 0.023, 32, 122, 0.074, -25, 153, 0.002, -7, 14, 0.002, 27, -98, 0.002, 42, 84, 0.005, 41, -81, 0.088, 52, 94, 0.000, 51, 21, 0.024, 32, 41, 0.003, 27, 15, 0.001, -9, -40, 0.004, 55, 9, 0.008, 51, 6, 0.111, 32, -112, 0.000, 31, 131, 0.052, 42, -122, 0.005, 18, -16, 0.003, -1, -46, 0.002, -38, 141, 0.002, -5, 15, 0.011, -6, 122, 0.001, 42, 21, 0.046, 18, 31, 0.001, 33, 7, 0.003, -5, -64, 0.000, -15, -45, 0.001, 22, 107, 0.034, 37, -5, 0.040, 52, 42, 0.020, 13, 33, 0.023, 47, -111, 0.003, -10, -36, 0.036, -11, 31, 0.004, -9, 14, 0.036, 56, 86, 0.003, -3, 148, 0.001, 33, -91, 0.005, 47, 34, 0.029, 44, 20, 0.027, 23, 28, 0.000, 20, 42, 0.013, -8, 146, 0.001, -4, 32, 0.015, 44, -93, 0.056, 62, 39, 0.000, 23, 109, 0.093, 20, -103, 0.135, 38, 25, 0.001, 35, 101, 0.003, -27, 154, 0.006, 15, 34, 0.014, 14, 3, 0.006, 10, 10, 0.021, 47, 132, 0.014, 61, 49, 0.000, -8, 111, 0.438, 49, 119, 0.001, 48, -66, 0.001, 29, 4, 0.001, -19, -40, 0.010, 53, 11, 0.072, -3, 102, 0.012, 49, 8, 0.054, 48, 13, 0.036, 44, 80, 0.003, 38, 102, 0.010, 16, -2, 0.002, 12, 1, 0.008, 29, -94, 0.009, 59, 47, 0.001, 40, 23, 0.046, 11, 123, 0.055, 40, -90, 0.006, 39, 125, 0.020, -44, -73, 0.000, 16, -92, 0.026, 50, 16, 0.040, 27, 111, 0.104, -22, -49, 0.012, 41, 96, 0.001, -21, -47, 0.022, 39, 142, 0.034, 51, 102, 0.000, 30, -2, 0.001, 7, -67, 0.004, -17, -57, 0.001, -6, 26, 0.004, 30, 109, 0.109, 45, 1, 0.016, 60, 64, 0.000, -29, -55, 0.005, -35, 151, 0.019, 32, 78, 0.004, -6, -55, 0.000, -26, -56, 0.017, 8, 12, 0.017, 41, -101, 0.000, 3, 100, 0.047, 55, 60, 0.010, 51, 33, 0.008, 32, -3, 0.002, 66, 77, 0.003, 27, 43, 0.001, 4, 22, 0.005, -16, -47, 0.046, 21, 93, 0.063, -1, 117, 0.007, -39, -70, 0.001, 46, 35, 0.007, 43, 127, 0.058, 19, 33, 0.001, -2, 15, 0.001, 48, 96, 0.000, -25, 48, 0.003, 9, -84, 0.042, -10, 150, 0.002, 43, 144, 0.009, 42, -7, 0.014, 57, 93, 0.001, 37, 42, 0.024, 10, 106, 0.194, 28, 77, 0.193, -10, 37, 0.004, -14, -44, 0.003, 56, 75, 0.002, 37, -113, 0.003, 52, 70, 0.002, 13, 5, 0.014, 9, 10, 0.042, 46, 80, 0.000, 24, 28, 0.000, -14, -61, 0.001, 23, -81, 0.007, -34, -54, 0.002, 0, 18, 0.001, -38, -67, 0.001, 47, 22, 0.035, 34, -111, 0.002, -23, -54, 0.009, -24, 31, 0.037, 62, 51, 0.001, 58, 58, 0.008, 35, 81, 0.001, 37, 94, 0.000, 34, 36, 0.023, 15, 22, 0.002, 10, 30, 0.010, 47, 120, 0.001, 1, -78, 0.007, 38, -88, 0.005, 15, -89, 0.017, 49, 19, 0.073, 25, 41, 0.002, -2, 101, 0.016, 2, 36, 0.003, 1, 31, 0.024, 16, 83, 0.048, -22, 30, 0.004, 48, 49, 0.000, 26, 105, 0.086, 25, -102, 0.002, 40, 108, 0.013, 2, -77, 0.006, 36, 39, 0.022, -18, -70, 0.005, 50, 82, 0.003, 12, 29, 0.005, -31, 31, 0.029, 40, -5, 0.012, 29, 123, 0.020, 7, 127, 0.019, 6, -62, 0.001, 39, 97, 0.001, 54, 69, 0.002, 50, 52, 0.001, 30, 47, 0.016, 26, 46, 0.004, 6, 49, 0.001, 3, 13, 0.004, 2, 104, 0.011, 17, -62, 0.002, -21, 23, 0.000, 51, 114, 0.001, -3, -69, 0.000, 12, 106, 0.035, 45, 24, 0.020, 6, 100, 0.008, 30, 89, 0.000, 45, -91, 0.003, 60, 28, 0.002, 32, 50, 0.014, -17, -41, 0.005, 31, -103, 0.001, 28, 45, 0.000, 55, 64, 0.003, 51, 61, 0.001, 31, 74, 0.227, 28, -100, 0.008, 9, 106, 0.124, 27, 71, 0.015, 22, -78, 0.005, -1, 25, 0.002, -2, -52, 0.000, -5, -42, 0.016, 46, 63, 0.001, 43, 123, 0.026, 45, 92, 0.001, 42, 62, 0.004, 6, -2, 0.029, 46, -102, 0.001, -11, -63, 0.002, -15, -66, 0.000, 57, 73, 0.000, 37, 62, 0.009, 33, 63, 0.003, 10, 126, 0.011, 28, 105, 0.123, 9, 21, 0.001, 56, 15, 0.007, 37, -77, 0.034, -4, -70, 0.001, 33, -80, 0.014, 46, 124, 0.019, 43, -90, 0.004, 0, 38, 0.032, -5, 146, 0.002, 13, 122, 0.059, 1, 112, 0.007, 15, 105, 0.065, 11, 38, 0.061, -43, -73, 0.003, -9, -45, 0.001, 25, 103, 0.077, -13, 16, 0.021, 61, 12, 0.001, 58, 14, 0.006, 0, 102, 0.035, -18, 169, 0.001, 35, 109, 0.051, 37, 130, 0.007, 34, 72, 0.124, 15, -6, 0.002, 14, 75, 0.043, 11, -9, 0.006, 48, -121, 0.001, -32, 149, 0.000, 53, 46, 0.018, 49, 47, 0.001, 29, 76, 0.103, -9, 126, 0.014, 25, 69, 0.105, -19, 32, 0.015, 68, 34, 0.005, 48, 101, 0.000, 40, 80, 0.004, 39, -93, 0.003, 50, 118, 0.001, 12, 25, 0.011, -12, 31, 0.003, 59, 39, 0.002, 36, -94, 0.013, 35, 57, 0.002, 30, -84, 0.012, -8, -45, 0.001, 7, 35, 0.001, -17, 29, 0.004, 54, 33, 0.006, 7, -12, 0.007, 6, 13, 0.002, 17, -98, 0.017, -3, -65, 0.000, -26, 30, 0.022, -27, -59, 0.003, -13, -39, 0.021, 60, 9, 0.001, 21, 50, 0.002, 36, 79, 0.002, 17, 75, 0.103, -6, -46, 0.003, 31, -116, 0.001, 42, 109, 0.001, -16, -53, 0.000, 21, -105, 0.009, -20, -58, 0.000, 54, 78, 0.001, 32, 70, 0.029, 28, 73, 0.020, 8, 20, 0.001, -16, 26, 0.003, 55, 36, 0.005, 31, 30, 0.069, 42, -113, 0.002, 19, 48, 0.003, 18, -87, 0.001, -3, -48, 0.004, 65, 27, 0.000, 43, 87, 0.007, 45, 128, 0.041, 18, 28, 0.001, 52, -112, 0.001, 9, -76, 0.002, 46, -74, 0.002, -11, -75, 0.005, -14, 41, 0.009, -15, -70, 0.006, 57, 37, 0.003, 52, -1, 0.159, -10, -35, 0.038, 24, 77, 0.056, 34, 119, 0.222, -24, -63, 0.002, -28, -52, 0.018, 43, 2, 0.040, 24, 68, 0.247, -9, 32, 0.011, 0, 74, 0.001, 13, 94, 0.001, -28, 27, 0.016, 43, 19, 0.018, 24, -77, 0.001, 23, 104, 0.055, 38, -2, 0.004, 25, 115, 0.079, -38, 177, 0.004, 61, 16, 0.001, 49, 126, 0.008, -8, 115, 0.019, -42, 173, 0.001, -18, 24, 0.001, 53, 18, 0.018, 44, 117, 0.002, 5, 22, 0.004, 38, 79, 0.004, 49, -68, 0.001, 48, 137, 0.000, 14, 122, 0.374, 63, 13, 0.001, 36, 47, 0.021, 35, 12, 0.002, 11, 126, 0.016, 26, -108, 0.006, -11, 30, 0.005, 39, 24, 0.002, 50, 9, 0.113, 27, 82, 0.184, 29, 99, 0.002, 6, -6, 0.031, 53, 102, 0.002, 30, -9, 0.035, 6, 41, 0.006, 17, -102, 0.001, 54, -112, 0.000, 64, 42, 0.000, -30, 29, 0.019, 41, 33, 0.024, 36, 123, 0.008, 17, 39, 0.006, -3, -44, 0.040, -25, 152, 0.001, -7, 13, 0.001, 27, -99, 0.015, 45, -83, 0.001, 42, 81, 0.004, 41, -78, 0.006, -17, -48, 0.018, 51, 28, 0.006, 32, 42, 0.003, -25, -69, 0.002, 22, -97, 0.020, -16, 46, 0.001, -20, 49, 0.012, 51, 5, 0.154, 32, -103, 0.002, -25, -70, 0.001, 19, 28, 0.001, -1, -47, 0.005, -5, 14, 0.013, 46, -121, 0.000, 42, 22, 0.053, 18, 32, 0.001, 33, 10, 0.008, -5, -65, 0.001, -15, -42, 0.009, 22, 108, 0.046, 0, 128, 0.010, 52, 43, 0.005, 13, 36, 0.004, -10, -39, 0.002, 24, 113, 0.058, 56, 87, 0.005, 33, -88, 0.007, 47, 33, 0.009, 44, 21, 0.031, 23, 27, 0.000, 20, 43, 0.010, -4, 33, 0.030, 44, -92, 0.013, 62, 40, 0.001, 20, -102, 0.037, 35, 108, 0.059, 15, 33, 0.097, 14, 4, 0.006, 10, 7, 0.013, 47, 131, 0.025, 61, 52, 0.004, 38, -119, 0.002, 49, 122, 0.004, 48, -65, 0.001, 29, 3, 0.001, -19, -41, 0.013, 53, 6, 0.012, 49, 7, 0.069, 48, 14, 0.029, 44, 81, 0.011, 40, 129, 0.032, 38, 107, 0.041, 35, -105, 0.004, 16, -1, 0.002, 53, -101, 0.000, 12, 2, 0.005, 29, -95, 0.119, 59, 46, 0.001, 40, 24, 0.009, 61, 77, 0.000, 35, 40, 0.013, 11, 122, 0.002, 40, -89, 0.015, 39, 124, 0.016, 16, -99, 0.017, 50, 13, 0.067, -12, -51, 0.000, 27, 110, 0.075, 41, 95, 0.002, 3, 40, 0.004, 2, 129, 0.002, 39, 141, 0.035, -21, 58, 0.037, -21, -64, 0.003, 30, 3, 0.001, 7, -68, 0.001, -17, -58, 0.001, -6, 23, 0.023, 30, 110, 0.067, 8, 118, 0.004, 45, 4, 0.024, 60, 65, 0.002, -35, 146, 0.001, 32, 79, 0.000, -26, -59, 0.002, 8, 5, 0.055, 3, 99, 0.164, 55, 59, 0.003, 51, 56, 0.023, 32, -2, 0.001, 27, 42, 0.001, 4, 23, 0.003, 22, -101, 0.020, -16, -46, 0.002, 21, 96, 0.085, -1, 132, 0.002, -39, -71, 0.003, 46, 36, 0.010, 43, 126, 0.127, 55, 125, 0.002, -2, 16, 0.002, -25, 47, 0.006, 9, -85, 0.002, 43, 143, 0.020, 42, -6, 0.007, -11, 38, 0.004, 57, 96, 0.000, 37, 41, 0.023, 28, 78, 0.677, -10, 38, 0.001, -14, -47, 0.001, 56, 76, 0.001, 52, 71, 0.003, 13, 8, 0.039, 9, 9, 0.048, 46, 77, 0.000, -14, -60, 0.001, 23, -82, 0.072, -34, -65, 0.002, 0, 19, 0.003, 47, 21, 0.022, 19, 100, 0.033, 34, -110, 0.001, -23, -55, 0.005, -24, 32, 0.003, 58, 55, 0.003, 35, 136, 0.060, 34, 33, 0.004, 15, 21, 0.001, 10, 43, 0.005, -9, 31, 0.003, -9, 117, 0.095, -40, 175, 0.004, 1, -79, 0.001, 38, -91, 0.005, 15, -90, 0.026, 49, 22, 0.030, 25, 44, 0.005, 2, 33, 0.034, 1, 34, 0.044, 26, 106, 0.106, 25, -103, 0.029, 40, 101, 0.000, 2, -76, 0.025, 36, 40, 0.024, 50, 79, 0.001, 12, 30, 0.006, 40, -4, 0.014, -52, -70, 0.001, 29, 118, 0.065, 7, 126, 0.080, 6, -57, 0.004, 40, -117, 0.000, 36, -122, 0.002, 54, 70, 0.011, 53, 141, 0.001, 50, 49, 0.002, 30, 48, 0.034, 26, 59, 0.003, 6, 50, 0.000, 3, 20, 0.017, 2, 101, 0.010, -21, 22, 0.000, 51, 113, 0.001, 12, 107, 0.006, 45, 23, 0.015, 30, 90, 0.001, -37, -70, 0.001, -27, 33, 0.022, 45, -88, 0.002, 60, 29, 0.005, 21, -98, 0.030, 32, 51, 0.022, 28, 46, 0.001, 8, 41, 0.028, 55, 63, 0.003, 51, 68, 0.001, -3, 137, 0.001, 31, 73, 0.142, 28, -99, 0.001, 9, 105, 0.012, 27, 70, 0.046, -1, 24, 0.003, -2, -55, 0.001, -5, -43, 0.010, 66, 65, 0.000, 46, 64, 0.000, 43, 122, 0.022, 45, 91, 0.002, 42, 75, 0.037, 55, 97, 0.001, 46, -113, 0.001, -15, -67, 0.000, 57, 76, 0.000, 37, 61, 0.004, 33, 66, 0.006, 28, 106, 0.128, 9, 24, 0.002, -11, -47, 0.001, -9, 23, 0.002, -4, 121, 0.015, 56, 16, 0.006, 37, -82, 0.010, -4, -69, 0.001, 33, -81, 0.014, 44, 62, 0.000, 46, 121, 0.005, 43, -91, 0.007, 24, 57, 0.008, 0, 39, 0.004, -5, 145, 0.003, 13, 121, 0.018, 1, 111, 0.022, 15, 104, 0.066, 11, 37, 0.023, 14, 46, 0.014, 25, 106, 0.068, -13, 15, 0.008, 61, 11, 0.002, 58, 27, 0.007, 35, 116, 0.250, 37, 129, 0.027, 34, 69, 0.021, 15, -7, 0.002, 14, 76, 0.112, 11, -10, 0.004, -8, 144, 0.001, -32, 150, 0.000, -19, -54, 0.001, 53, 45, 0.012, 49, 50, 0.001, 29, 75, 0.061, 25, 72, 0.029, -33, -67, 0.001, -19, 31, 0.012, 48, 102, 0.001, -32, -68, 0.017, 40, 73, 0.087, 39, -94, 0.038, 50, 115, 0.001, 12, 26, 0.012, -12, 32, 0.002, 59, 38, 0.012, 36, -93, 0.006, 35, 48, 0.018, 12, -87, 0.009, 30, -87, 0.016, -8, -44, 0.001, 29, 90, 0.005, 7, 34, 0.002, -36, 149, 0.001, 54, 34, 0.003, 30, 28, 0.002, 6, 14, 0.004, -20, 35, 0.022, 17, -99, 0.026, -7, -61, 0.000, -27, -56, 0.007, 60, 10, 0.001, 21, 49, 0.002, 18, 85, 0.037, 36, 80, 0.005, 17, 46, 0.001, -6, -49, 0.003, 42, 110, 0.001, -16, -52, 0.002, -20, -57, 0.001, 54, 83, 0.007, 32, 71, 0.060, 31, -4, 0.006, 28, 74, 0.025, 27, -15, 0.007, 8, 13, 0.012, -16, 27, 0.003, 55, 35, 0.004, 42, -112, 0.003, 19, 47, 0.003, 65, 30, 0.000, 43, 86, 0.003, 45, 127, 0.167, 18, 25, 0.001, 52, -111, 0.000, 13, -86, 0.024, -30, 153, 0.001, -18, -57, 0.001, -15, -71, 0.008, 57, 40, 0.029, 56, -3, 0.024, 52, 0, 0.059, 24, 78, 0.052, 34, 120, 0.156, -5, 132, 0.001, -24, -62, 0.001, 47, -116, 0.004, 43, 1, 0.013, -1, 10, 0.002, 67, 16, 0.001, 13, 93, 0.002, -28, 28, 0.007, 43, 18, 0.026, 23, 103, 0.043, -37, -60, 0.003, 0, -70, 0.000, 15, 76, 0.086, 61, 15, 0.001, 49, 125, 0.006, -8, 116, 0.001, 29, -6, 0.001, 20, 77, 0.085, -18, 21, 0.000, 53, 17, 0.013, 29, 15, 0.000, 44, 118, 0.003, 5, 21, 0.004, 38, 80, 0.003, 48, 138, 0.000, 63, 28, 0.003, 40, 45, 0.082, 36, 48, 0.012, 35, 11, 0.044, 12, 54, 0.001, 11, 125, 0.048, 26, -111, 0.000, 39, 23, 0.018, 17, 123, 0.004, -55, -67, 0.001, 50, 10, 0.043, 27, 81, 0.208, 29, 94, 0.001, 41, 118, 0.026, 54, -130, 0.001, 53, 101, 0.001, 30, -8, 0.016, 26, -13, 0.001, 6, 42, 0.002, -10, -68, 0.002, 54, -115, 0.000, -21, -54, 0.021, 64, 43, 0.000, -30, 30, 0.010, 41, 36, 0.022, 17, 42, 0.001, -3, -45, 0.008, -6, -77, 0.004, -25, 151, 0.000, -7, 16, 0.006, 45, -80, 0.000, 42, 82, 0.004, 41, -79, 0.008, 3, 118, 0.005, 51, 27, 0.010, 32, 43, 0.003, 8, 49, 0.002, -16, 47, 0.006, 51, 12, 0.047, 32, -102, 0.003, 45, 142, 0.002, 19, 27, 0.001, 6, -11, 0.005, 33, 92, 0.000, -5, 13, 0.016, -6, 120, 0.084, 65, 58, 0.002, 46, -120, 0.007, 42, 3, 0.020, 18, 29, 0.001, 33, 9, 0.002, -5, -66, 0.000, -29, 152, 0.001, -15, -43, 0.003, 22, 105, 0.034, -20, -50, 0.003, 52, 44, 0.006, 13, 35, 0.005, 47, -113, 0.000, -10, -38, 0.007, 24, 114, 0.067, 56, 88, 0.002, 33, -89, 0.004, 47, 32, 0.012, 44, 22, 0.028, 23, 26, 0.000, 20, 44, 0.007, 19, 87, 0.005, 34, -85, 0.015, -4, 34, 0.033, 44, -91, 0.008, 62, 37, 0.000, 20, -101, 0.070, 38, 31, 0.018, 35, 107, 0.058, 15, 32, 0.003, 14, 1, 0.006, 10, 8, 0.058, 47, 130, 0.017, 61, 51, 0.006, -33, 20, 0.001, -18, 178, 0.008, 6, 40, 0.015, 49, 121, 0.006, 48, -64, 0.001, 29, -2, 0.001, -13, -56, 0.000, 16, 121, 0.078, 53, 5, 0.000, 49, 10, 0.057, 48, 15, 0.034, 26, 83, 0.264, 44, 82, 0.023, 40, 130, 0.010, 38, 108, 0.002, 35, -106, 0.022, 16, 0, 0.003, 12, 3, 0.007, 29, -92, 0.001, 48, -113, 0.000, 59, 45, 0.001, 40, 17, 0.022, 35, 39, 0.025, 11, 121, 0.001, -8, 37, 0.011, 40, -88, 0.012, 39, 123, 0.063, 16, -98, 0.010, 50, 14, 0.038, 27, 109, 0.058, 3, 39, 0.002, 51, 108, 0.015, 30, 4, 0.001, 7, -69, 0.002, 3, -72, 0.001, -17, -59, 0.000, -6, 24, 0.012, 30, 115, 0.274, 23, 95, 0.012, 45, 3, 0.006, -4, -40, 0.018, 17, 6, 0.000, -6, -57, 0.000, 28, 19, 0.000, -26, -58, 0.006, 8, 6, 0.020, 3, 98, 0.012, 55, 58, 0.003, 51, 55, 0.003, 32, -1, 0.001, 31, 52, 0.010, 27, 41, 0.001, 4, 24, 0.002, 22, -100, 0.022, -16, -45, 0.001, 21, 95, 0.036, -1, 131, 0.000, -3, -43, 0.003, 46, 33, 0.033, 43, 125, 0.077, 22, 43, 0.012, 55, 92, 0.001, -2, 13, 0.001, -25, 46, 0.007, 43, 142, 0.072, 42, -9, 0.002, 57, 95, 0.000, 19, -88, 0.003, 37, 44, 0.013, -2, 128, 0.001, 10, 104, 0.007, 28, 79, 0.266, -14, -46, 0.002, 56, 69, 0.001, 37, -103, 0.000, 52, 72, 0.001, 13, 7, 0.029, 8, 94, 0.000, 47, -77, 0.000, 9, 12, 0.030, 46, 78, 0.000, 43, -80, 0.032, -11, 125, 0.003, -34, -64, 0.004, 0, 20, 0.003, 37, -118, 0.001, 47, 68, 0.007, 19, 99, 0.008, -8, 143, 0.001, -23, -52, 0.007, -24, 25, 0.000, 14, 38, 0.008, 58, 56, 0.006, 38, 59, 0.004, 35, 135, 0.026, 34, 34, 0.008, 15, 4, 0.002, 10, 44, 0.007, 14, 32, 0.005, 1, -76, 0.011, 38, -90, 0.079, 15, -91, 0.051, 49, 21, 0.037, 25, 43, 0.005, 2, 34, 0.018, 1, 33, 0.016, 16, 77, 0.068, -22, 44, 0.002, 48, 51, 0.000, 26, 103, 0.049, 25, -100, 0.109, 36, 41, 0.045, -22, -69, 0.001, 50, 80, 0.001, 12, 31, 0.008, 7, 172, 0.001, 5, 126, 0.006, -7, 156, 0.004, 29, 117, 0.094, 7, 125, 0.061, 39, 95, 0.001, 36, -121, 0.019, 54, 75, 0.003, 50, 50, 0.001, 30, 45, 0.004, 26, 60, 0.003, 3, 19, 0.004, 2, 102, 0.035, 12, 108, 0.014, -7, -70, 0.000, 45, 18, 0.012, -25, -65, 0.022, 36, 101, 0.002, -3, 38, 0.012, 30, 79, 0.067, 45, -89, 0.004, 60, 30, 0.017, -29, -60, 0.001, 21, -99, 0.012, 32, 52, 0.049, 31, -105, 0.000, 28, 47, 0.002, 8, 42, 0.017, 55, 62, 0.050, 51, 67, 0.001, -3, 140, 0.000, 31, 72, 0.052, 28, -98, 0.001, 27, 69, 0.071, 42, -71, 0.146, -1, 23, 0.004, -2, -54, 0.001, 43, 121, 0.012, 45, 86, 0.003, 42, 76, 0.008, 22, 71, 0.080, 56, -117, 0.000, 55, 96, 0.001, 52, -122, 0.001, 13, -59, 0.009, -25, 18, 0.000, 5, 12, 0.007, 46, -112, 0.002, -11, -61, 0.003, -15, -64, 0.002, 57, 75, 0.000, 37, 64, 0.003, 33, 65, 0.005, 28, 107, 0.094, 9, 23, 0.000, -11, -44, 0.002, -18, -63, 0.024, -15, 13, 0.001, 56, 41, 0.027, 37, -83, 0.006, -4, -68, 0.000, 33, -78, 0.005, 44, 63, 0.001, 46, 122, 0.009, 43, -84, 0.013, 20, 53, 0.002, 0, 40, 0.002, -5, 152, 0.002, 13, 124, 0.081, 43, 53, 0.002, 1, 114, 0.001, 34, -77, 0.012, 15, 103, 0.062, 11, 44, 0.009, 10, -83, 0.010, -9, -47, 0.001, 25, 105, 0.081, -13, 14, 0.005, 61, 6, 0.002, 58, 28, 0.001, 35, 115, 0.202, 34, 70, 0.103, 15, -8, 0.003, 49, 100, 0.000, 11, -11, 0.009, -32, 151, 0.002, -19, -55, 0.001, 53, 48, 0.005, 49, 49, 0.001, 29, 70, 0.016, 25, 71, 0.022, -2, 106, 0.005, -19, 26, 0.001, 48, 103, 0.000, 40, 74, 0.014, 39, -95, 0.008, 36, 69, 0.032, 50, 116, 0.001, 12, 27, 0.004, -7, 135, 0.001, 11, 104, 0.003, -12, 33, 0.002, 59, 37, 0.001, 5, 98, 0.014, 39, 50, 0.013, 36, -92, 0.003, 35, 47, 0.022, 12, -86, 0.047, 30, -86, 0.008, -8, -51, 0.000, 29, 89, 0.003, 7, 33, 0.004, -36, 150, 0.012, 54, 39, 0.016, 30, 25, 0.001, 6, 19, 0.002, 17, -96, 0.026, -27, -57, 0.003, 60, 11, 0.013, 21, 52, 0.002, 36, 81, 0.003, 17, 45, 0.002, -6, -48, 0.004, 42, 123, 0.041, -16, -59, 0.001, -20, -56, 0.001, 52, 85, 0.003, 54, 84, 0.026, -41, -63, 0.001, 32, 72, 0.053, 31, -5, 0.008, 28, 75, 0.034, 8, 14, 0.004, -16, 28, 0.006, 55, 34, 0.004, 31, 44, 0.007, 19, 46, 0.003, 18, -89, 0.003, 33, 127, 0.018, -5, 56, 0.003, -36, 148, 0.002, 65, 29, 0.000, 43, 85, 0.004, 45, 122, 0.013, 18, 26, 0.001, 6, 7, 0.101, 52, -110, 0.001, 13, -87, 0.029, 46, -68, 0.001, -11, -73, 0.000, -14, 39, 0.009, -15, -68, 0.001, 57, 39, 0.013, 56, -2, 0.010, 52, 1, 0.032, 24, 79, 0.068, 34, 117, 0.250, 33, -114, 0.001, -24, -61, 0.000, 47, -117, 0.014, 43, 8, 0.036, 19, 122, 0.001, 67, 15, 0.001, 43, 17, 0.017, 58, -3, 0.001, -37, -61, 0.002, 15, 75, 0.086, 47, 93, 0.000, 62, -7, 0.000, 61, 42, 0.001, -46, 170, 0.001, 49, 128, 0.004, -8, 109, 0.187, 29, -7, 0.001, 20, 78, 0.090, -18, 22, 0.000, 53, 20, 0.017, 48, -4, 0.018, 29, 42, 0.001, 44, 119, 0.006, 5, 24, 0.001, 38, 77, 0.014, 48, 139, 0.000, 63, 27, 0.001, 40, 46, 0.019, 39, 5, 0.001, 36, 49, 0.016, 35, 10, 0.023, -19, 147, 0.000, 12, 55, 0.000, 39, 22, 0.011, 50, 7, 0.081, 27, 88, 0.025, 29, 93, 0.002, 41, 117, 0.015, 53, 104, 0.005, 26, -12, 0.001, -9, 143, 0.001, 17, -100, 0.008, 54, -114, 0.000, -30, 27, 0.021, 41, 35, 0.012, 36, 109, 0.013, 32, 117, 0.193, -6, -76, 0.002, -7, 15, 0.004, 42, 79, 0.006, 41, -76, 0.010, 3, 117, 0.001, 21, -75, 0.002, 51, 26, 0.009, 32, 44, 0.003, 8, 50, 0.002, 4, 45, 0.003, 22, -99, 0.008, -16, 48, 0.005, 51, 11, 0.038, 32, -101, 0.002, 8, -63, 0.007, 19, 26, 0.001, -1, -49, 0.001, 33, 91, 0.000, -5, 20, 0.017, 46, -123, 0.004, 42, 4, 0.004, 57, 86, 0.002, 18, 30, 0.001, 33, 12, 0.003, 6, 0, 0.041, -29, 151, 0.000, -15, -40, 0.015, 22, 106, 0.023, 37, -8, 0.010, 52, 29, 0.006, 13, 30, 0.007, 47, -114, 0.001, 46, 103, 0.001, 24, 115, 0.050, 33, -86, 0.033, 47, 31, 0.008, 44, 23, 0.024, 19, 86, 0.035, 34, -84, 0.027, -4, 35, 0.016, 44, -90, 0.004, 62, 38, 0.000, 20, -100, 0.071, 38, 32, 0.017, 35, 106, 0.062, 15, 31, 0.001, 14, 2, 0.010, 10, 5, 0.010, 47, 129, 0.016, 61, 46, 0.001, -33, 19, 0.002, 49, 124, 0.003, 11, -83, 0.001, 48, -55, 0.001, 29, -3, 0.001, 16, 122, 0.043, 53, 8, 0.024, 49, 9, 0.132, 48, 16, 0.018, 26, 84, 0.349, 44, 83, 0.005, 5, -4, 0.077, 38, 105, 0.001, 35, -107, 0.001, 16, 9, 0.000, 12, 4, 0.019, 29, -93, 0.004, -37, 141, 0.000, 59, 52, 0.001, 40, 18, 0.041, -20, -43, 0.087, 35, 38, 0.060, 16, 16, 0.001, -8, 38, 0.014, 40, -95, 0.003, 39, 122, 0.079, 16, -97, 0.011, 50, 43, 0.003, 27, 116, 0.078, 3, 38, 0.001, -1, 103, 0.013, -21, 32, 0.014, 51, 107, 0.002, 30, 1, 0.000, 7, -70, 0.003, 3, -73, 0.007, -13, -38, 0.128, -6, 21, 0.008, -35, -62, 0.003, 30, 116, 0.164, -35, 148, 0.001, 17, 5, 0.000, -6, -56, 0.001, -26, -53, 0.014, 8, 7, 0.017, 41, -112, 0.005, 3, 97, 0.004, 55, 57, 0.003, 52, 125, 0.002, 51, 54, 0.002, 32, 0, 0.001, 31, 51, 0.014, 27, 48, 0.002, 4, 25, 0.001, 22, -103, 0.005, -16, -44, 0.005, 21, 106, 0.234, -39, -69, 0.003, 31, 100, 0.002, 46, 34, 0.012, 43, 132, 0.020, 22, 44, 0.006, 55, 91, 0.002, -2, 14, 0.002, -25, 45, 0.005, -10, 153, 0.000, 43, 141, 0.004, 42, -8, 0.044, 19, -89, 0.003, 37, 43, 0.017, -2, 125, 0.001, 28, 80, 0.243, -14, -49, 0.002, 56, 70, 0.004, 37, -100, 0.003, 52, 73, 0.001, -12, -66, 0.001, 13, 2, 0.013, 9, 11, 0.014, 46, 83, 0.002, 43, -81, 0.008, -14, -62, 0.000, -34, -67, 0.001, 0, 13, 0.001, 37, -119, 0.002, -23, 46, 0.002, -30, -49, 0.004, 23, 29, 0.000, 19, 98, 0.009, 34, -112, 0.003, -36, -60, 0.003, -23, -53, 0.003, -24, 26, 0.004, -43, -64, 0.001, 62, 50, 0.001, 58, 53, 0.006, 38, 60, 0.002, 35, 134, 0.025, 37, 95, 0.000, 15, 3, 0.001, 11, 0, 0.027, 10, 41, 0.013, -9, 29, 0.003, 5, -70, 0.001, -10, 162, 0.002, 1, -77, 0.031, 38, -85, 0.039, 49, 24, 0.044, 2, 31, 0.046, 1, 36, 0.017, 16, 78, 0.089, 48, 52, 0.001, 26, 104, 0.081, 25, -101, 0.009, 2, -78, 0.002, 36, 42, 0.035, -22, -68, 0.001, 50, 77, 0.000, 12, 32, 0.009, -42, -73, 0.005, -12, 22, 0.001, 59, 16, 0.008, 5, 125, 0.001, 36, -7, 0.000, 29, 120, 0.105, 7, 124, 0.032, 40, -123, 0.001, 39, 94, 0.001, 36, -120, 0.004, 54, 76, 0.002, 53, 143, 0.001, 50, 47, 0.002, 30, 46, 0.004, 26, 57, 0.001, 3, 18, 0.002, 2, 99, 0.033, 17, -61, 0.002, -21, 28, 0.005, 12, 77, 0.165, 64, -147, 0.002, 45, 17, 0.018, 6, 103, 0.024, 57, 12, 0.012, 36, 102, 0.056, -21, 165, 0.001, -3, 37, 0.005, 30, 80, 0.017, 45, -94, 0.008, 60, 31, 0.020, 32, 45, 0.043, 31, -106, 0.058, 28, 48, 0.006, 8, 43, 0.007, -16, 33, 0.003, 55, 61, 0.010, 51, 66, 0.001, -3, 139, 0.000, 31, 71, 0.038, 28, -97, 0.004, 9, 107, 0.049, 27, 76, 0.109, 42, -70, 0.029, -1, 22, 0.004, -5, -37, 0.007, 66, 63, 0.001, 46, 62, 0.001, 43, 96, 0.001, 45, 85, 0.002, 42, 73, 0.004, 22, 72, 0.066, 18, 51, 0.001, 55, 95, 0.003, -29, -50, 0.006, -15, -65, 0.000, 57, 62, 0.010, 56, -5, 0.001, 37, 63, 0.006, 33, 68, 0.011, 28, 108, 0.066, 9, 26, 0.000, -11, -45, 0.001, -15, 16, 0.005, 56, 42, 0.017, 37, -80, 0.011, 33, -79, 0.007, 44, 64, 0.000, 43, -85, 0.012, 20, 54, 0.002, -23, 26, 0.001, 13, 123, 0.028, 47, 55, 0.001, 43, 60, 0.003, 20, -155, 0.000, 1, 113, 0.002, 38, -27, 0.002, 37, 142, 0.001, 34, -76, 0.003, 15, 102, 0.034, 11, 43, 0.010, -9, -48, 0.002, 25, 108, 0.034, 58, 25, 0.004, 35, 114, 0.210, 37, 131, 0.000, 34, 67, 0.007, 15, -9, 0.006, 49, 99, 0.000, 11, -4, 0.025, -9, 112, 0.069, -32, 152, 0.001, -19, -52, 0.001, 53, 47, 0.008, 49, 52, 0.001, 48, 1, 0.016, 29, 69, 0.007, 25, 74, 0.053, -19, 25, 0.000, 48, 104, 0.000, -12, -77, 0.058, 40, 75, 0.003, 39, -96, 0.005, 36, 70, 0.022, -19, 170, 0.001, 50, 113, 0.001, 12, 28, 0.005, 11, 103, 0.002, -12, 34, 0.015, 59, 44, 0.001, 5, 97, 0.021, 39, 49, 0.025, 36, -107, 0.001, 35, 46, 0.026, 12, -85, 0.017, 30, -97, 0.033, -8, -50, 0.002, 29, 92, 0.012, 7, 32, 0.006, 8, 100, 0.046, 54, 40, 0.025, 6, 20, 0.003, -31, 152, 0.001, 17, -97, 0.011, -26, 33, 0.043, 8, 105, 0.007, 60, 12, 0.005, 41, 58, 0.003, 21, 51, 0.002, 18, 83, 0.045, 36, 82, 0.002, 17, 48, 0.001, -6, -51, 0.000, 42, 124, 0.143, -16, -58, 0.003, -20, -55, 0.001, 52, 86, 0.011, 54, 81, 0.001, 31, -6, 0.013, 28, 76, 0.080, 27, -9, 0.000, 8, 15, 0.003, -16, 21, 0.000, 55, 33, 0.003, 31, 43, 0.003, 42, -114, 0.003, 19, 45, 0.004, 18, -88, 0.005, 33, 130, 0.024, 43, 92, 0.001, 45, 121, 0.006, -4, 153, 0.001, 52, -109, 0.000, 13, -84, 0.002, 46, -71, 0.029, -14, 40, 0.014, -15, -69, 0.003, 57, 42, 0.012, 0, 103, 0.005, 52, 2, 0.032, 24, 80, 0.053, -9, 18, 0.004, 34, 118, 0.266, 33, -115, 0.001, -5, 130, 0.001, 47, -118, 0.000, 43, 7, 0.023, -13, -47, 0.001, -24, -45, 0.036, 43, 24, 0.019, 23, 101, 0.020, 38, 1, 0.003, 15, 74, 0.037, 47, 108, 0.009, 62, -6, 0.001, 61, 41, 0.001, -4, 102, 0.003, 49, 127, 0.007, -8, 110, 0.273, 29, -4, 0.000, 20, 79, 0.071, -18, 27, 0.004, 53, 19, 0.038, -3, 106, 0.009, 29, 41, 0.001, 44, 120, 0.011, 5, 23, 0.001, 38, 78, 0.017, -22, -159, 0.000, 48, 140, 0.000, 29, -102, 0.002, 63, 26, 0.001, 40, 47, 0.029, 39, 4, 0.005, 36, 50, 0.018, 35, 9, 0.017, 16, 53, 0.000, 39, 21, 0.014, 50, 8, 0.090, 27, 87, 0.033, 29, 96, 0.000, -22, -45, 0.021, 41, 120, 0.047, 3, 73, 0.000, 53, 103, 0.003, -35, -71, 0.012, -25, -56, 0.008, 17, -101, 0.004, -21, -44, 0.026, 8, 77, 0.110, -30, 28, 0.026, 41, 22, 0.024, -29, -59, 0.005, 36, 110, 0.022, 17, 44, 0.012, 32, 118, 0.151, -6, -79, 0.011, -7, 18, 0.006, 42, 80, 0.002, 41, -77, 0.006, 51, 25, 0.011, 32, 37, 0.040, 4, 46, 0.004, 22, -98, 0.013, 51, 10, 0.047, 32, -100, 0.002, -38, 178, 0.000, 8, -62, 0.023, 19, 25, 0.001, -1, -50, 0.001, 33, 94, 0.000, -5, 19, 0.026, 5, 1, 0.010, 46, -122, 0.007, 42, 1, 0.003, 57, 85, 0.001, 33, 11, 0.009, -5, -60, 0.001, -30, 150, 0.000, -18, -52, 0.002, -15, -41, 0.007, 22, 79, 0.058, 52, 30, 0.012, 13, 29, 0.004, 47, -115, 0.000, 46, 104, 0.001, 24, 116, 0.090, -14, -69, 0.001, 33, -87, 0.011, 47, 30, 0.017, 44, 24, 0.030, 19, 85, 0.094, 34, -87, 0.010, -4, 36, 0.013, 14, 44, 0.052, 44, -89, 0.009, 62, 43, 0.000, 38, 29, 0.038, 35, 105, 0.052, 15, 30, 0.001, 14, -9, 0.004, 10, 6, 0.014, 47, 128, 0.030, 61, 45, 0.001, -33, 18, 0.001, 38, -112, 0.001, 34, 11, 0.017, 49, 123, 0.003, 48, -54, 0.001, 29, 0, 0.000, 22, -12, 0.001, 16, 123, 0.003, 53, 7, 0.026, 49, 12, 0.054, 48, 25, 0.029, 26, 81, 0.330, 44, 84, 0.003, 5, -5, 0.020, 38, 106, 0.012, 35, -100, 0.001, 16, 10, 0.000, 53, -104, 0.000, 12, 5, 0.039, 29, -98, 0.052, 59, 51, 0.001, 40, 19, 0.021, 35, 37, 0.087, 16, 25, 0.001, -8, 39, 0.011, 26, -77, 0.001, -32, 29, 0.029, 40, -94, 0.002, -17, -47, 0.012, 16, -96, 0.016, 50, 44, 0.005, 27, 115, 0.089, 3, 37, 0.001, 2, 128, 0.000, -21, 31, 0.015, 51, 106, 0.001, 50, -101, 0.001, 30, 2, 0.000, 7, -71, 0.006, 3, -74, 0.049, -6, 22, 0.008, 30, 113, 0.153, -35, 147, 0.001, 17, 8, 0.000, -26, -52, 0.008, 8, 8, 0.017, 55, 56, 0.005, 52, 126, 0.001, 51, 53, 0.002, 32, 9, 0.003, 31, 50, 0.020, 27, 47, 0.002, 4, 26, 0.001, 22, -102, 0.023, -16, -51, 0.001, 21, 105, 0.031, -1, 129, 0.000, -36, 139, 0.011, 31, 99, 0.002, 46, 23, 0.010, 43, 131, 0.009, 22, 41, 0.009, 55, 90, 0.004, -2, 19, 0.004, -25, 44, 0.001, 57, 97, 0.001, 19, -90, 0.008, 37, 38, 0.034, -10, -76, 0.015, -2, 126, 0.001, 28, 81, 0.097, -14, -48, 0.002, -34, 19, 0.062, 56, 71, 0.001, 37, -101, 0.001, 34, 107, 0.049, 52, 74, 0.001, -44, -64, 0.001, 13, 1, 0.008, 47, -79, 0.001, 9, -2, 0.007, 46, 84, 0.006, 43, -82, 0.004, -34, -66, 0.003, -22, 167, 0.000, 0, 14, 0.001, -23, 45, 0.003, 43, 63, 0.000, 19, 97, 0.027, 34, -115, 0.000, -24, 27, 0.003, -43, -65, 0.002, 58, 54, 0.002, 38, 57, 0.004, 35, 133, 0.012, 37, 106, 0.021, 15, 2, 0.001, 11, -1, 0.013, 10, 42, 0.005, 5, -71, 0.001, 1, -74, 0.001, 38, -84, 0.018, 49, 23, 0.020, -28, -49, 0.012, 2, 32, 0.017, 1, 35, 0.042, 16, 79, 0.061, 48, 45, 0.051, 26, 101, 0.033, 36, 43, 0.017, 12, 33, 0.015, -42, -72, 0.005, -21, -49, 0.022, -12, 23, 0.001, 59, 15, 0.005, 39, 76, 0.016, 36, -6, 0.022, -7, 142, 0.001, 29, 119, 0.059, 7, 123, 0.029, 6, -58, 0.012, 40, -122, 0.006, 36, -119, 0.038, 54, 73, 0.003, 50, 48, 0.002, 30, 51, 0.013, 26, 58, 0.006, 7, 12, 0.005, 3, 17, 0.002, 2, 100, 0.059, 8, 82, 0.013, -21, 27, 0.001, 50, -97, 0.001, 12, 78, 0.133, 45, 20, 0.027, 36, 103, 0.046, -3, 40, 0.001, 30, 77, 0.211, -27, 30, 0.014, 45, -95, 0.003, 60, 32, 0.000, 21, -97, 0.009, 32, 46, 0.016, 31, -107, 0.001, 28, 49, 0.004, 8, 44, 0.005, -16, 34, 0.004, 55, 28, 0.005, 51, 65, 0.001, -3, 134, 0.001, 31, 70, 0.008, 28, -96, 0.003, 27, 75, 0.057, 42, -73, 0.033, 18, -63, 0.003, -1, 21, 0.004, -5, -38, 0.018, 66, 64, 0.001, 43, 95, 0.001, 45, 88, 0.003, 42, 74, 0.007, 22, 69, 0.001, 18, 52, 0.000, 55, 94, 0.001, 46, -114, 0.003, -11, -67, 0.002, -28, 152, 0.004, -15, -62, 0.001, 57, 61, 0.013, 56, -4, 0.003, 52, -9, 0.006, 33, 67, 0.006, 28, 109, 0.067, 9, 25, 0.002, -11, -50, 0.000, -15, 15, 0.005, 56, 43, 0.007, 37, -81, 0.011, 34, 79, 0.000, 44, 65, 0.001, -52, -69, 0.001, 43, -86, 0.009, -9, 36, 0.011, 20, 55, 0.002, -30, -55, 0.003, 47, 54, 0.001, 43, 59, 0.002, -12, 21, 0.001, 37, 141, 0.067, 34, -79, 0.015, 15, 101, 0.050, 11, 42, 0.003, 10, -69, 0.037, -9, -49, 0.002, 25, 107, 0.038, -13, 20, 0.001, 61, 8, 0.001, 58, 26, 0.004, 35, 113, 0.108, 37, 126, 0.010, 34, 68, 0.009, 15, -10, 0.004, 49, 102, 0.000, 11, -5, 0.016, 14, 33, 0.031, -19, -53, 0.001, 53, 58, 0.001, 49, 51, 0.000, 48, 2, 0.033, 29, 72, 0.128, 44, 125, 0.045, 25, 73, 0.039, -19, 28, 0.003, 48, 81, 0.001, -12, -76, 0.029, 40, 76, 0.001, 39, -97, 0.001, 36, 71, 0.007, 50, 114, 0.001, -38, 147, 0.001, -12, 35, 0.009, 59, 43, 0.001, 39, 48, 0.020, 36, -106, 0.001, 35, 45, 0.029, 12, -84, 0.005, 30, -96, 0.008, -8, -49, 0.003, 29, 91, 0.004, 14, 79, 0.074, 7, 31, 0.006, -17, 41, 0.001, 54, 37, 0.018, 53, 110, 0.001, 30, 15, 0.001, -22, -43, 0.029, 6, 17, 0.004, 17, -94, 0.016, -26, 34, 0.008, 8, 106, 0.007, 41, 57, 0.001, 21, 46, 0.004, 18, 84, 0.120, 36, 83, 0.001, 17, 47, 0.001, -6, -50, 0.003, 42, 121, 0.024, -16, -57, 0.002, -20, -54, 0.001, 52, 87, 0.001, 54, 82, 0.002, 31, -7, 0.025, 27, -10, 0.001, 8, 16, 0.014, -16, 22, 0.001, 55, 32, 0.002, 31, 42, 0.002, -2, -49, 0.004, 19, 52, 0.002, 18, -91, 0.002, -29, 32, 0.027, 43, 91, 0.002, 45, 124, 0.024, 52, -108, 0.001, 13, -85, 0.012, 5, 7, 0.113, 46, -70, 0.005, -14, 37, 0.001, 57, 41, 0.020, 0, 104, 0.008, -43, 148, 0.007, 24, 105, 0.042, 34, 115, 0.242, 33, -112, 0.049, 47, -119, 0.002, 44, 29, 0.023, 43, 6, 0.076, 23, -13, 0.000, -36, -69, 0.000, -24, -44, 0.003, 43, 23, 0.025, 24, -81, 0.002, 23, 100, 0.025, 20, -78, 0.001, 38, 2, 0.002, 0, -75, 0.002, 47, 107, 0.007, 61, 44, 0.001, 35, 141, 0.144, -4, 103, 0.044, 49, 130, 0.003, 48, -89, 0.004, 29, -5, 0.001, 20, 80, 0.062, -18, 28, 0.005, 53, 14, 0.016, 29, 44, 0.001, 44, 121, 0.006, 5, 34, 0.002, 38, 83, 0.001, 48, 133, 0.004, 63, 25, 0.001, 40, 48, 0.027, 39, 3, 0.016, 36, 51, 0.031, 35, 0, 0.057, 16, 54, 0.001, 26, -112, 0.000, 59, 7, 0.001, 39, 20, 0.004, 17, 96, 0.090, 50, 5, 0.121, 27, 86, 0.120, 29, 95, 0.001, 41, 119, 0.039, 54, -127, 0.000, 53, 82, 0.003, 30, -5, 0.006, -21, -45, 0.011, 8, 78, 0.187, -30, 25, 0.002, 41, 21, 0.030, 36, 111, 0.020, 17, 43, 0.016, 32, 119, 0.169, -6, -78, 0.013, -7, 17, 0.006, 42, 77, 0.006, 41, -90, 0.015, 51, 16, 0.027, 32, 38, 0.005, 4, 47, 0.002, 51, 9, 0.057, 32, -107, 0.001, 8, -61, 0.001, 45, 143, 0.000, -1, -51, 0.002, 33, 93, 0.000, -5, 18, 0.010, 46, -117, 0.003, 42, 2, 0.008, -34, 149, 0.001, 6, 12, 0.010, -44, -71, 0.001, -5, -61, 0.000, 22, 80, 0.058, 52, 31, 0.020, 13, 32, 0.011, 47, -100, 0.000, -10, -67, 0.002, 24, 109, 0.055, 20, -16, 0.001, 56, 83, 0.000, 33, -84, 0.094, 47, 29, 0.045, 44, 25, 0.030, 34, -86, 0.021, -4, 37, 0.025, 44, -88, 0.019, 62, 44, 0.000, 38, 30, 0.022, 35, 96, 0.000, 15, 29, 0.001, 14, -8, 0.003, 10, -13, 0.014, 47, 127, 0.045, -9, 121, 0.022, 61, 48, 0.002, 34, 12, 0.001, 49, 30, 0.012, 48, -53, 0.001, 29, -1, 0.001, -13, -59, 0.000, -19, -45, 0.002, 6, 123, 0.009, 49, 11, 0.043, 48, 26, 0.034, 26, 82, 0.234, 44, 85, 0.008, 40, 125, 0.068, 38, 111, 0.028, 35, -101, 0.008, 53, -105, 0.002, 12, 6, 0.030, 29, -99, 0.002, 59, 50, 0.001, 40, 20, 0.025, -11, 150, 0.001, 35, 44, 0.023, 16, 26, 0.001, -8, 40, 0.017, -32, 30, 0.024, 40, -93, 0.002, 39, 120, 0.031, 50, 41, 0.007, 27, 114, 0.154, 26, 35, 0.001, 3, 44, 0.008, -21, 30, 0.008, 51, 105, 0.001, 50, -100, 0.000, 23, 81, 0.079, 7, -72, 0.041, 3, -75, 0.018, -6, 35, 0.009, 30, 114, 0.208, 18, 81, 0.017, 45, 0, 0.017, 17, 7, 0.000, -26, -55, 0.009, 8, 1, 0.014, 41, -110, 0.001, 55, 55, 0.006, 52, 127, 0.000, 51, 60, 0.002, 32, 10, 0.002, 31, 49, 0.033, 28, 5, 0.000, 27, 46, 0.002, 4, 27, 0.001, -16, -50, 0.003, 21, 108, 0.029, -1, 128, 0.003, 31, 98, 0.003, 46, 24, 0.031, 43, 130, 0.025, -4, 144, 0.001, 22, 42, 0.013, 55, 89, 0.001, -2, 20, 0.003, 46, -89, 0.001, 57, 100, 0.000, 37, 37, 0.034, -2, 131, 0.000, 28, 82, 0.062, -9, 27, 0.007, -34, 20, 0.010, 56, 72, 0.001, 37, -106, 0.001, 34, 108, 0.095, 52, 75, 0.001, 13, 4, 0.016, 9, -3, 0.004, 46, 81, 0.001, 43, -83, 0.023, -34, -61, 0.008, 0, 15, 0.000, -23, 48, 0.015, 13, 145, 0.005, 43, 62, 0.001, 23, 59, 0.022, 34, -114, 0.002, -24, 28, 0.002, -42, 146, 0.001, 44, -124, 0.001, 38, 58, 0.002, 35, 140, 0.951, 37, 105, 0.013, 15, 1, 0.002, 11, -2, 0.013, 10, 39, 0.048, 1, -75, 0.010, 38, -87, 0.009, 49, 26, 0.027, 14, 19, 0.002, 2, 29, 0.006, 1, 38, 0.001, 16, 80, 0.076, 48, 46, 0.002, 26, 102, 0.043, 40, 97, 0.002, 36, 44, 0.017, 38, 139, 0.002, -22, -70, 0.001, 50, 107, 0.001, 12, 34, 0.005, -12, 24, 0.001, 59, 14, 0.005, 40, -8, 0.038, 39, 75, 0.001, 36, -5, 0.023, 35, 72, 0.019, -7, 141, 0.001, 29, 114, 0.120, 7, 122, 0.003, 40, -121, 0.001, 36, -118, 0.001, 54, 74, 0.025, 50, 45, 0.003, 30, 52, 0.011, 26, 55, 0.001, 7, 11, 0.013, 2, 97, 0.001, -20, 31, 0.010, -21, 26, 0.001, -3, -78, 0.019, 50, -96, 0.002, 12, 79, 0.147, -7, -69, 0.000, 45, 19, 0.018, 6, 101, 0.051, 18, 109, 0.012, 36, 104, 0.075, -3, 39, 0.005, -35, -67, 0.001, 30, 78, 0.113, -27, 29, 0.099, 45, -92, 0.008, 60, 33, 0.001, 21, -86, 0.003, 32, 47, 0.010, 31, -92, 0.007, 8, 37, 0.029, -16, 35, 0.023, 55, 27, 0.010, -3, 133, 0.002, 31, 69, 0.005, 28, -95, 0.001, 9, 93, 0.002, 27, 74, 0.038, 42, -72, 0.032, -1, 36, 0.068, -5, -39, 0.007, 66, 61, 0.000, 5, -6, 0.025, 43, 94, 0.001, 45, 87, 0.002, 42, 71, 0.007, 22, 70, 0.031, 18, 49, 0.002, 55, 93, 0.009, -11, -64, 0.001, -15, -63, 0.001, 57, 64, 0.004, 37, 73, 0.002, 52, -8, 0.011, 33, 70, 0.025, 28, 110, 0.067, 9, 28, 0.004, -11, -51, 0.001, -15, 18, 0.001, 56, 44, 0.066, 34, 80, 0.000, -4, -65, 0.000, 44, 66, 0.006, 46, 109, 0.001, 43, -87, 0.024, 24, 53, 0.000, 20, 56, 0.000, -20, 147, 0.005, -23, 28, 0.002, 47, 53, 0.002, -47, -68, 0.000, 1, 115, 0.001, 34, -78, 0.008, 14, -83, 0.002, 11, 41, 0.011, 10, -68, 0.039, -9, -50, 0.001, 25, 94, 0.035, -13, 19, 0.004, 61, 7, 0.001, 58, 23, 0.001, 37, 125, 0.001, 34, 65, 0.002, 15, -11, 0.003, 49, 101, 0.000, 11, -6, 0.012, -19, -58, 0.000, 53, 57, 0.014, 49, 54, 0.001, 48, 3, 0.336, 29, 71, 0.065, 44, 126, 0.085, 25, 76, 0.064, -19, 27, 0.002, 48, 82, 0.001, -12, -59, 0.001, 40, 69, 0.039, 39, -98, 0.001, 36, 72, 0.004, 50, 111, 0.000, -7, 140, 0.001, -12, 36, 0.005, 59, 42, 0.001, 39, 47, 0.015, 36, -105, 0.001, 35, 52, 0.326, 30, -99, 0.002, -8, -48, 0.004, 29, 86, 0.000, 7, 30, 0.006, -17, 40, 0.015, 54, 38, 0.038, 30, 16, 0.000, 6, 18, 0.004, 17, -95, 0.010, 64, 19, 0.000, 41, 60, 0.009, 21, 45, 0.004, 57, -1, 0.001, -6, -37, 0.014, 42, 122, 0.051, 4, -75, 0.077, -16, -56, 0.016, -20, -53, 0.001, 52, 88, 0.001, 54, 87, 0.021, 31, -8, 0.046, 27, -11, 0.001, -16, 23, 0.003, 55, 31, 0.014, 31, 41, 0.001, 19, 51, 0.002, 18, -90, 0.003, 33, 132, 0.046, 66, 33, 0.000, -29, 31, 0.020, 43, 90, 0.004, 45, 123, 0.030, 42, 43, 0.027, 4, 114, 0.002, 13, -90, 0.005, 46, -81, 0.003, -14, 38, 0.002, 57, 44, 0.002, 0, 113, 0.004, 24, 106, 0.028, 34, 116, 0.255, 33, -113, 0.000, -5, 136, 0.000, 47, -120, 0.003, 43, 5, 0.028, 23, -14, 0.000, 19, 111, 0.075, -24, -51, 0.044, 44, -83, 0.002, 43, 22, 0.033, 58, 12, 0.005, 20, -77, 0.016, -37, -56, 0.002, 0, -74, 0.001, 47, 106, 0.000, 61, 43, 0.001, -4, 104, 0.028, 49, 129, 0.002, -8, 112, 0.252, 29, -10, 0.002, 20, 81, 0.040, -18, 25, 0.003, 53, 13, 0.013, 29, 43, 0.000, 44, 122, 0.011, 5, 33, 0.003, -28, -59, 0.009, 48, 134, 0.002, 29, -100, 0.002, 63, 24, 0.003, 40, 41, 0.024, 39, 2, 0.001, 36, 52, 0.033, 35, -1, 0.012, 59, 6, 0.005, 39, 19, 0.005, 17, 95, 0.020, 54, -9, 0.001, 50, 6, 0.072, 27, 85, 0.097, 41, 122, 0.084, 53, 81, 0.002, 30, -4, 0.002, 54, -111, 0.000, 23, 99, 0.014, -30, 26, 0.001, 41, 24, 0.015, 36, 112, 0.084, 32, 120, 0.268, -6, -81, 0.001, -7, 20, 0.007, 42, 78, 0.002, 41, -91, 0.011, 51, 15, 0.035, 32, 39, 0.001, 8, 45, 0.006, 4, 48, 0.002, -3, -39, 0.000, 51, 0, 0.322, 32, -106, 0.005, -29, -70, 0.002, -38, 142, 0.000, -5, 17, 0.008, 46, -116, 0.002, 42, -1, 0.017, 57, 87, 0.000, -2, 120, 0.008, -5, -62, 0.000, -15, -39, 0.030, 22, 77, 0.081, 52, 32, 0.015, 13, 31, 0.011, 47, -101, 0.001, 46, 102, 0.000, 24, 110, 0.091, -14, -71, 0.016, 20, -15, 0.001, 56, 84, 0.001, -3, 147, 0.001, 33, -85, 0.011, 47, 44, 0.002, 44, 26, 0.040, 34, -89, 0.007, -4, 38, 0.041, 44, -87, 0.007, 62, 41, 0.001, 38, 35, 0.018, 35, 95, 0.000, -27, 153, 0.004, 15, 44, 0.060, 49, 144, 0.001, 10, -12, 0.016, 47, 126, 0.038, 61, 47, 0.003, 34, 9, 0.014, 15, -83, 0.001, 49, 29, 0.028, -19, -50, 0.004, -3, 101, 0.001, 48, 27, 0.027, 26, 79, 0.135, 44, 86, 0.014, 40, 126, 0.021, 38, 112, 0.029, 35, -102, 0.001, 12, 7, 0.034, 29, -96, 0.004, 59, 49, 0.001, 35, 43, 0.015, 16, 27, 0.001, -8, 33, 0.003, 14, 98, 0.001, -31, -70, 0.003, -32, 31, 0.001, 40, -92, 0.003, 39, 119, 0.149, 16, -86, 0.001, 50, 42, 0.006, 27, 113, 0.182, -22, -48, 0.030, 41, 86, 0.007, 3, 43, 0.003, 2, 126, 0.002, -54, -68, 0.001, -21, 29, 0.074, 50, -103, 0.001, -35, -72, 0.000, 45, 42, 0.021, 7, -73, 0.040, -6, 36, 0.014, 45, -1, 0.003, 41, -124, 0.001, -29, -64, 0.004, -35, 141, 0.001, 17, 10, 0.000, 32, 92, 0.000, -26, -54, 0.025, 8, 2, 0.011, 41, -111, 0.011, 55, 54, 0.004, 52, 128, 0.001, 51, 59, 0.016, 32, 11, 0.001, 31, 48, 0.015, 28, 6, 0.000, 27, 45, 0.002, 4, 28, 0.002, -16, -49, 0.008, 21, 107, 0.109, 18, -69, 0.082, -20, 18, 0.001, 31, 97, 0.002, 46, 21, 0.024, 43, 129, 0.012, 55, 88, 0.001, -2, 17, 0.002, -8, -79, 0.010, 5, 0, 0.126, 46, -88, 0.001, 43, 146, 0.002, 37, 40, 0.022, -39, 142, 0.001, -2, 132, 0.003, 28, 83, 0.033, -10, 15, 0.006, -14, -50, 0.001, -18, -67, 0.008, 56, 65, 0.002, 37, -107, 0.001, 34, 105, 0.038, 52, 76, 0.001, 13, 3, 0.019, 9, 0, 0.020, 46, 82, 0.001, 43, -76, 0.020, -14, -67, 0.000, -34, -60, 0.043, 0, 16, 0.001, 37, -122, 0.126, -23, 47, 0.004, 43, 61, 0.001, 23, 58, 0.013, -23, -64, 0.003, 44, -123, 0.018, 58, 68, 0.000, 38, 63, 0.003, 35, 139, 0.091, 37, 108, 0.011, 15, 0, 0.001, 11, -3, 0.014, 10, 40, 0.050, 1, -72, 0.000, 38, -86, 0.007, 49, 25, 0.041, -2, 102, 0.016, 2, 30, 0.006, 1, 37, 0.003, 48, 47, 0.003, 26, 115, 0.067, 40, 98, 0.004, 36, 29, 0.008, 38, 140, 0.016, 50, 108, 0.002, 12, 35, 0.010, -12, 25, 0.004, 59, 13, 0.003, 39, 74, 0.002, 36, -4, 0.035, 35, 71, 0.004, -7, 144, 0.005, 29, 113, 0.158, 40, -120, 0.001, 54, 47, 0.007, 50, 46, 0.008, 30, 49, 0.029, 26, 56, 0.003, 7, 10, 0.032, 2, 98, 0.006, -21, 25, 0.000, -3, -79, 0.040, 50, -99, 0.001, 12, 80, 0.181, 45, 14, 0.031, 6, 102, 0.049, 18, 110, 0.047, 36, 105, 0.033, -3, 34, 0.036, -27, 32, 0.018, 45, -93, 0.035, 42, 131, 0.016, 60, 34, 0.002, 21, -87, 0.003, 32, 48, 0.009, -17, -42, 0.005, 31, -93, 0.004, 28, 51, 0.002, 8, 38, 0.046, -16, 36, 0.075, 55, 26, 0.007, 31, 20, 0.001, 27, 73, 0.015, 42, -75, 0.012, 4, -8, 0.002, 18, -65, 0.023, -1, 35, 0.116, -36, 144, 0.001, 66, 62, 0.000, 43, 93, 0.001, 45, 82, 0.002, 42, 72, 0.016, 22, 75, 0.090, 18, 50, 0.001, 6, 3, 0.087, 9, -66, 0.005, -10, 124, 0.002, -11, -65, 0.001, -15, -60, 0.000, 57, 63, 0.002, 37, 76, 0.000, 52, -7, 0.009, 33, 69, 0.053, 28, 111, 0.055, 9, 27, 0.003, -11, -48, 0.007, -33, 148, 0.000, -15, 17, 0.003, 56, 37, 0.015, 34, 77, 0.003, -4, -64, 0.001, 44, 67, 0.001, 43, -112, 0.003, 24, 54, 0.001, -23, 27, 0.002, 1, 118, 0.001, 34, -81, 0.018, 11, 16, 0.007, 10, -71, 0.072, 25, 93, 0.041, -13, 18, 0.007, -32, 116, 0.023, 58, 24, 0.001, 37, 128, 0.330, 34, 66, 0.004, 49, 104, 0.000, 11, -7, 0.009, 10, 76, 0.022, -19, -59, 0.001, 53, 60, 0.012, 49, 53, 0.001, 48, 4, 0.014, 29, 66, 0.001, 44, 127, 0.081, 25, 75, 0.067, -19, 22, 0.001, 48, 83, 0.001, -12, -58, 0.000, -32, -63, 0.006, 40, 70, 0.051, 39, -99, 0.001, 36, 73, 0.008, 50, 112, 0.001, -7, 139, 0.001, 11, 108, 0.044, 59, 41, 0.003, 39, 46, 0.016, 36, -104, 0.000, 35, 51, 0.043, 30, -98, 0.004, 29, 85, 0.000, 7, 29, 0.005, -17, 39, 0.006, 54, 43, 0.004, 30, 13, 0.001, -9, 147, 0.001, 6, 23, 0.001, 8, 79, 0.020, 17, -92, 0.028, 64, 20, 0.001, -13, -48, 0.001, 41, 59, 0.004, 21, 48, 0.004, 18, 82, 0.026, 17, 49, 0.000, -6, -36, 0.007, -44, 173, 0.013, 42, 119, 0.035, 4, -74, 0.208, -20, -52, 0.001, 52, 89, 0.001, 54, 88, 0.001, 31, -9, 0.018, -16, 24, 0.005, 55, 30, 0.007, 31, 40, 0.000, 19, 50, 0.002, 18, -93, 0.019, -3, -49, 0.006, 33, 131, 0.198, -29, 30, 0.013, 43, 89, 0.006, 45, 118, 0.001, 42, 44, 0.013, 4, 115, 0.014, 13, -91, 0.001, 46, -80, 0.003, -28, -65, 0.011, -14, 35, 0.017, 57, 43, 0.007, 0, 114, 0.001, 52, 21, 0.054, 24, 107, 0.027, 34, 113, 0.219, 33, -110, 0.001, -24, -65, 0.003, 47, -121, 0.004, 43, 12, 0.055, 23, -15, 0.000, 19, 110, 0.061, -24, -50, 0.014, -30, -58, 0.002, 43, 21, 0.034, -28, -60, 0.004, 23, 98, 0.014, 20, -76, 0.046, -37, -57, 0.002, 11, 76, 0.160, 47, 105, 0.000, -13, 46, 0.004, 61, 38, 0.001, -4, 105, 0.069, 49, 132, 0.000, -42, 174, 0.003, 20, 82, 0.062, -18, 26, 0.005, 53, 16, 0.012, 29, 38, 0.000, 44, 123, 0.014, 5, 36, 0.002, 38, 81, 0.005, 48, 135, 0.002, 29, -101, 0.001, 63, 23, 0.002, 40, 42, 0.012, 39, 1, 0.000, -20, -47, 0.007, 35, -2, 0.007, 39, 18, 0.004, 17, 98, 0.023, 54, -8, 0.003, 50, 3, 0.055, 27, 92, 0.016, 41, 121, 0.068, 53, 84, 0.028, 30, -7, 0.011, 41, 10, 0.003, 54, -110, 0.001, -35, -58, 0.419, 64, 40, 0.008, -30, 23, 0.001, 41, 23, 0.015, 36, 113, 0.046, 32, 129, 0.002, -6, -80, 0.018, -7, 19, 0.004, 42, 91, 0.001, 41, -88, 0.049, 52, 117, 0.001, 51, 14, 0.047, 32, 40, 0.003, 8, 46, 0.004, 51, -1, 0.051, 32, -105, 0.001, 8, -67, 0.003, -2, -44, 0.002, 33, 95, 0.000, -5, 24, 0.004, 65, 61, 0.000, 46, -119, 0.007, 42, 0, 0.004, -1, -52, 0.000, -2, 117, 0.019, -5, -63, 0.000, 22, 78, 0.052, 52, 33, 0.010, 13, 26, 0.009, -10, -61, 0.001, 24, 111, 0.060, -14, -70, 0.001, 56, 77, 0.001, -20, 170, 0.000, 47, 43, 0.010, 44, 27, 0.102, 20, 33, 0.001, 34, -88, 0.008, -4, 39, 0.007, 47, -4, 0.004, 44, -86, 0.001, 62, 42, 0.001, 38, 36, 0.020, 15, 43, 0.007, 49, 143, 0.002, 47, 125, 0.036, 61, 74, 0.010, -34, 150, 0.003, 38, -109, 0.000, 34, 10, 0.018, 49, 32, 0.018, -19, -51, 0.002, -22, 49, 0.004, 48, 28, 0.021, 26, 80, 0.160, 44, 87, 0.020, 40, 127, 0.022, 38, 109, 0.003, 35, -103, 0.000, 16, 5, 0.000, 12, 8, 0.071, -42, -65, 0.000, 29, -97, 0.006, -36, -68, 0.001, 59, 56, 0.001, 40, 14, 0.002, 35, 42, 0.018, 16, 28, 0.001, -8, 34, 0.004, 26, -78, 0.002, -31, -71, 0.007, 40, -99, 0.002, 39, 118, 0.296, 50, 39, 0.009, -12, -50, 0.000, 27, 120, 0.063, 26, 33, 0.064, 41, 85, 0.002, 3, 42, 0.005, 51, 95, 0.004, -21, -65, 0.002, 50, -102, 0.001, 45, 41, 0.018, 7, -74, 0.007, -6, 33, 0.005, 17, 9, 0.000, 28, 24, 0.001, 8, 3, 0.010, 55, 53, 0.027, 51, 58, 0.004, 32, 12, 0.009, 31, 47, 0.019, 28, 7, 0.000, 27, 52, 0.001, 4, 13, 0.005, -16, -48, 0.021, 21, 102, 0.008, 18, -68, 0.010, -20, 19, 0.001, 31, 96, 0.002, 46, 22, 0.024, 55, 87, 0.023, -10, -66, 0.000, -2, 18, 0.004, 46, -91, 0.001, 43, 145, 0.012, -11, 37, 0.005, 57, 54, 0.004, 37, 39, 0.023, -17, -50, 0.004, 28, 84, 0.038, -10, 16, 0.006, -34, 18, 0.000, 56, 66, 0.003, 37, -104, 0.001, 34, 106, 0.067, 52, 61, 0.002, 13, -2, 0.022, 9, -1, 0.007, 46, 135, 0.001, 43, -77, 0.029, -14, -66, 0.000, -34, -63, 0.003, 0, 25, 0.007, -38, -56, 0.001, 47, 63, 0.000, 43, 68, 0.001, 23, 57, 0.005, -22, 150, 0.003, 15, 110, 0.001, -23, -65, 0.002, 44, -122, 0.007, 58, 65, 0.000, 38, 64, 0.003, 35, 138, 0.081, 37, 107, 0.022, 15, -1, 0.002, 11, 4, 0.013, 10, 37, 0.023, -9, 116, 0.092, -40, 176, 0.002, 5, -74, 0.021, 1, -73, 0.001, 38, -81, 0.013, 49, 28, 0.018, 25, 34, 0.000, 2, 27, 0.003, 1, 40, 0.002, 48, 48, 0.000, 26, 116, 0.072, 40, 99, 0.005, 36, 30, 0.015, 35, -75, 0.001, 50, 105, 0.001, 12, 36, 0.003, -12, 26, 0.006, 62, 114, 0.001, -32, -51, 0.001, 39, 73, 0.003, 35, 70, 0.022, -7, 143, 0.002, 30, -105, 0.000, 29, 116, 0.103, 36, -116, 0.000, 54, 48, 0.005, 50, 75, 0.001, 30, 50, 0.014, 7, 9, 0.042, 50, -98, 0.000, 12, 81, 0.068, -27, -70, 0.001, 45, 13, 0.061, 8, 125, 0.059, 36, 106, 0.028, -3, 33, 0.033, -7, -34, 0.001, -37, -71, 0.009, -27, 31, 0.010, 45, -98, 0.001, 42, 132, 0.005, 60, 35, 0.001, 21, -84, 0.001, 32, 57, 0.001, 31, -94, 0.006, 28, 52, 0.006, 8, 39, 0.082, -16, 29, 0.040, 55, 25, 0.012, -3, 135, 0.000, 42, -74, 0.007, 4, -7, 0.006, 18, -64, 0.003, -1, 34, 0.000, 45, 81, 0.002, 42, 69, 0.003, 22, 76, 0.106, 56, -120, 0.001, 18, 47, 0.001, -35, 118, 0.000, 13, -60, 0.003, 14, -11, 0.007, 9, -67, 0.015, 46, -111, 0.001, -11, -54, 0.001, -15, -61, 0.000, 57, 66, 0.021, 37, 75, 0.000, 52, -6, 0.007, 33, 72, 0.090, 28, 112, 0.111, 9, 14, 0.016, -11, -49, 0.001, -9, 22, 0.001, -4, 122, 0.006, 56, 38, 0.016, 34, 78, 0.000, -4, -63, 0.000, 44, 68, 0.001, 43, -113, 0.000, 24, 55, 0.002, 20, 58, 0.000, 1, 117, 0.000, 34, -80, 0.014, 15, 82, 0.001, 11, 15, 0.021, 10, -70, 0.008, 25, 96, 0.003, -13, 17, 0.013, 37, 127, 0.386, 34, 63, 0.022, 49, 103, 0.000, 10, 73, 0.001, 53, 59, 0.010, 49, 56, 0.001, 48, -3, 0.013, 29, 65, 0.001, 44, 128, 0.036, 25, 62, 0.003, -1, 167, 0.000, 35, -120, 0.008, -19, 21, 0.001, 48, 84, 0.001, -12, -57, 0.000, -32, -62, 0.005, 40, 71, 0.043, 39, -100, 0.000, 36, 74, 0.016, 50, 109, 0.001, 11, 107, 0.070, -12, 154, 0.000, 39, 45, 0.017, 35, 50, 0.019, 30, -93, 0.011, 29, 88, 0.001, 7, 28, 0.002, -17, 38, 0.013, 54, 44, 0.005, 53, 111, 0.001, 30, 14, 0.001, -25, -52, 0.010, 17, -93, 0.018, 12, 109, 0.043, 64, 13, 0.000, 45, 49, 0.001, 41, 46, 0.024, 21, 47, 0.004, 18, 79, 0.116, 36, 134, 0.001, 51, -104, 0.000, -6, -39, 0.009, 45, -62, 0.002, 42, 120, 0.029, 4, -73, 0.020, 52, 90, 0.001, 54, 85, 0.002, 32, 13, 0.015, 55, 29, 0.008, 31, 39, 0.001, 9, 139, 0.000, 42, -102, 0.001, 19, 49, 0.002, 18, -92, 0.014, 33, 134, 0.035, 66, 31, 0.000, -29, 29, 0.023, 45, 117, 0.001, 42, 41, 0.000, 4, 116, 0.004, 22, 29, 0.000, 13, -88, 0.056, 46, -83, 0.000, -14, 36, 0.008, 57, 30, 0.002, 0, 115, 0.000, 52, 22, 0.059, 33, 36, 0.092, 24, 108, 0.046, -15, 48, 0.001, -38, 148, 0.001, 34, 114, 0.303, 33, -111, 0.041, -24, -64, 0.004, 47, -122, 0.102, 46, 143, 0.005, 43, 11, 0.046, 19, 109, 0.010, -1, 9, 0.000, -24, -49, 0.013, 44, -81, 0.003, 43, 28, 0.026, 23, 97, 0.009, -37, -58, 0.001, 47, 104, 0.000, -46, -68, 0.001, -13, 45, 0.009, 61, 37, 0.000, -4, 106, 0.008, 49, 131, 0.001, 29, -8, 0.006, 20, 83, 0.048, -18, 15, 0.003, 53, 15, 0.029, 48, 33, 0.019, 29, 37, 0.001, 44, 124, 0.026, 5, 35, 0.002, 38, 82, 0.002, 48, 136, 0.021, 29, -106, 0.012, 63, 22, 0.002, 40, 43, 0.011, 39, 0, 0.074, 35, -3, 0.009, 16, 33, 0.021, -17, 169, 0.001, -7, 106, 0.030, 26, -101, 0.008, -19, -42, 0.010, 59, 12, 0.008, 39, 17, 0.027, 36, -75, 0.002, 17, 97, 0.061, 50, 4, 0.118, 27, 91, 0.011, 41, 124, 0.273, -33, -53, 0.002, 53, 83, 0.003, -17, 180, 0.003, 30, -6, 0.006, 41, 9, 0.003, -21, -40, 0.049, -21, -55, 0.002, -30, 24, 0.001, 41, 26, 0.019, 36, 114, 0.111, 32, 130, 0.023, -17, -49, 0.058, -7, 38, 0.015, 42, 92, 0.001, 41, -89, 0.008, 52, 118, 0.001, 51, 13, 0.059, 8, 47, 0.003, -15, 14, 0.003, -1, 105, 0.002, 51, -2, 0.072, 32, -104, 0.002, 24, -13, 0.000, 8, -66, 0.002, 6, -10, 0.017, 33, 98, 0.001, -5, 23, 0.006, -33, 116, 0.016, 46, -118, 0.002, 42, -3, 0.009, 37, 14, 0.027, -5, -56, 0.001, -29, 154, 0.013, 22, 83, 0.069, 52, 34, 0.007, 13, 25, 0.009, 24, 112, 0.065, -14, -73, 0.009, 20, -13, 0.001, 56, 78, 0.001, 47, 42, 0.006, 44, 28, 0.019, 0, 10, 0.016, 61, -149, 0.010, 20, 34, 0.001, 34, -91, 0.003, -4, 40, 0.026, -23, -42, 0.048, 44, -85, 0.006, 62, 31, 0.001, 38, 33, 0.017, 37, 82, 0.002, 14, -5, 0.006, 10, -14, 0.007, -9, 20, 0.001, 61, 73, 0.004, 38, -108, 0.001, 34, 7, 0.007, 49, 31, 0.022, 11, -72, 0.009, 48, -58, 0.001, -19, -48, 0.015, 48, 21, 0.028, 26, 77, 0.087, 44, 88, 0.012, 40, 128, 0.028, 2, -57, 0.002, 38, 110, 0.018, 35, -112, 0.000, 16, 6, 0.001, -22, -63, 0.002, 12, 9, 0.093, 63, 58, 0.001, 59, 55, 0.002, 40, 15, 0.144, 35, 41, 0.015, -8, 35, 0.009, 26, -81, 0.020, -31, -68, 0.001, 40, -98, 0.004, 39, 117, 0.284, 50, 40, 0.010, 27, 119, 0.042, 26, 34, 0.001, 41, 88, 0.001, 3, 41, 0.003, -21, 35, 0.004, 51, 94, 0.001, 50, -105, 0.002, 45, 44, 0.005, 7, -75, 0.008, 6, 80, 0.059, 21, 34, 0.001, -6, 34, 0.005, -33, -58, 0.005, -4, -39, 0.014, -35, 143, 0.002, 28, 25, 0.001, 8, 4, 0.026, 45, -118, 0.002, 41, -109, 0.001, 55, 52, 0.011, 51, 57, 0.002, 32, 5, 0.001, 31, 46, 0.014, -9, -46, 0.001, 4, 14, 0.003, -8, 147, 0.004, -16, -39, 0.009, 21, 101, 0.012, 18, -71, 0.029, -3, -40, 0.004, 31, 95, 0.002, 46, 27, 0.035, 43, 135, 0.001, 55, 86, 0.004, -2, 39, 0.012, 46, -90, 0.001, 57, 53, 0.003, 37, 50, 0.054, -39, 144, 0.001, 28, 85, 0.023, -4, -46, 0.003, 22, 111, 0.154, 56, 67, 0.004, 37, -105, 0.001, 34, 103, 0.003, 52, 62, 0.003, 13, -3, 0.011, 9, 2, 0.021, 46, 136, 0.000, 43, -78, 0.021, -4, 136, 0.003, -34, -62, 0.004, 0, 26, 0.016, 37, -120, 0.018, -23, 49, 0.001, 47, 62, 0.001, 43, 67, 0.001, 23, 56, 0.004, -26, -48, 0.010, 15, 109, 0.071, -23, -62, 0.000, 10, -61, 0.042, 47, 143, 0.007, 44, -121, 0.003, 62, 75, 0.002, 58, 66, 0.002, 38, 61, 0.003, 35, 137, 0.216, 37, 102, 0.018, -20, -48, 0.011, 15, -2, 0.003, 11, 3, 0.007, 10, 38, 0.053, 14, 29, 0.001, 5, -75, 0.049, 1, -70, 0.000, 38, -80, 0.004, 53, 66, 0.002, 49, 27, 0.021, 25, 33, 0.052, 2, 28, 0.011, 1, 39, 0.001, -18, -41, 0.010, -3, 100, 0.000, 26, 113, 0.164, 40, 100, 0.003, 36, 31, 0.010, 16, -22, 0.000, 50, 106, 0.001, 12, 37, 0.010, -12, 27, 0.009, 59, 19, 0.032, 39, 72, 0.004, 35, 69, 0.010, -7, 146, 0.012, 29, 115, 0.073, 7, 119, 0.000, -1, 100, 0.003, 54, 45, 0.006, 50, 76, 0.001, 30, 71, 0.044, 26, 54, 0.000, 7, 8, 0.043, 2, 96, 0.001, 51, 138, 0.000, -3, -77, 0.001, -7, -80, 0.002, 45, 16, 0.017, -25, -66, 0.000, 36, 107, 0.026, -3, 36, 0.005, -7, -35, 0.030, 30, 81, 0.004, 45, -99, 0.000, 42, 129, 0.011, 60, 36, 0.001, -29, -61, 0.001, 32, 58, 0.000, 31, -95, 0.004, 28, 53, 0.008, 8, 40, 0.047, -16, 30, 0.005, 55, 24, 0.013, -3, 130, 0.001, 42, -93, 0.005, 4, -6, 0.004, 18, -67, 0.014, -1, 33, 0.002, -2, -60, 0.001, -22, 33, 0.003, 66, 60, 0.000, 46, 55, 0.001, 45, 84, 0.002, 42, 70, 0.025, 22, 73, 0.186, 18, 48, 0.001, 13, -61, 0.004, 9, -64, 0.012, -11, -55, 0.002, 57, 65, 0.002, 37, 70, 0.031, 33, 71, 0.042, 28, 113, 0.219, 9, 13, 0.025, -11, -38, 0.010, -18, -62, 0.009, -15, 19, 0.000, 56, 39, 0.018, 34, 139, 0.028, -4, -62, 0.000, 43, -114, 0.001, 24, 56, 0.022, 20, 59, 0.001, 23, 92, 0.253, 34, -83, 0.015, 15, 81, 0.047, 11, 14, 0.040, 10, -73, 0.020, 25, 95, 0.024, -13, 40, 0.004, 37, 138, 0.003, 34, 64, 0.005, 49, 106, 0.001, 10, 74, 0.000, -19, -57, 0.002, 53, 54, 0.003, 49, 55, 0.001, 48, -2, 0.015, 29, 68, 0.009, 44, 129, 0.017, 25, 61, 0.003, 5, 74, 0.001, 39, -118, 0.001, 35, -121, 0.000, -19, 24, 0.001, 49, -56, 0.000, 48, 77, 0.000, -12, -56, 0.000, -32, -61, 0.007, 40, 72, 0.086, 39, -101, 0.001, 36, 75, 0.014, 50, 110, 0.000, 11, 106, 0.090, 5, 96, 0.028, 39, 44, 0.014, 36, -102, 0.000, 35, 49, 0.020, 30, -92, 0.014, 29, 87, 0.001, 7, 27, 0.001, -17, 37, 0.009, 54, 41, 0.004, 53, 122, 0.001, 30, 19, 0.001, 6, 21, 0.001, 17, -90, 0.002, 12, 110, 0.033, -27, -51, 0.007, 41, 45, 0.069, 21, 58, 0.000, 18, 80, 0.110, 51, -105, 0.000, -21, -69, 0.001, -6, -38, 0.008, 45, -63, 0.003, 42, 117, 0.007, 4, -72, 0.002, 52, 91, 0.001, 54, 86, 0.003, -41, -64, 0.001, 32, 14, 0.054, 55, -4, 0.067, 31, 38, 0.006, -11, 32, 0.004, 9, 126, 0.020, 42, -105, 0.000, 18, -95, 0.021, 33, 133, 0.038, 66, 32, 0.000, 45, 120, 0.004, 42, 42, 0.015, 4, 101, 0.021, 6, 8, 0.124, 13, -89, 0.115, 46, -82, 0.001, -14, 33, 0.015, 57, 29, 0.010, 0, 116, 0.001, 52, 23, 0.016, 47, -92, 0.002, 24, 101, 0.038, 34, 111, 0.084, 47, -123, 0.002, -4, 13, 0.004, -24, -48, 0.011, 44, -80, 0.004, 43, 27, 0.022, 58, 7, 0.002, -37, -59, 0.002, -38, -57, 0.013, 47, 103, 0.001, -46, -71, 0.001, 61, 40, 0.001, 58, -134, 0.001, -4, 107, 0.001, 49, 134, 0.001, 48, -109, 0.001, 29, -9, 0.014, 20, 84, 0.069, -18, 16, 0.012, 53, 26, 0.014, 48, 34, 0.021, 29, 40, 0.002, 44, 93, 0.001, 5, 30, 0.002, 29, -107, 0.002, 63, 21, 0.002, 40, 44, 0.021, 39, -1, 0.006, 35, 4, 0.016, 16, 34, 0.007, 26, -100, 0.003, 59, 11, 0.032, 39, 16, 0.003, 17, 100, 0.025, 50, 1, 0.014, 27, 90, 0.014, 41, 123, 0.117, 53, 78, 0.002, -9, 142, 0.001, -21, -41, 0.021, 60, 45, 0.001, 41, 25, 0.014, 36, 115, 0.267, 32, 131, 0.075, -7, 37, 0.016, 42, 89, 0.003, 41, -86, 0.022, 52, 119, 0.001, 51, 20, 0.061, 8, 48, 0.002, -1, 104, 0.012, 51, -3, 0.063, 32, -95, 0.011, 8, -65, 0.003, 18, 5, 0.000, 33, 97, 0.001, -5, 22, 0.006, 42, -2, 0.020, 37, 13, 0.013, -1, -54, 0.001, -2, 123, 0.005, -29, 153, 0.002, -4, 113, 0.001, 57, 9, 0.001, 37, -2, 0.006, 52, 35, 0.005, 13, 28, 0.004, 47, -104, 0.001, 46, 105, 0.000, -11, 18, 0.005, -14, -72, 0.011, -33, 138, 0.001, -34, -69, 0.004, 47, 41, 0.026, 20, 35, 0.000, 19, 80, 0.052, 34, -90, 0.006, -4, 41, 0.005, -23, -43, 0.346, 44, -84, 0.004, 62, 32, 0.000, 38, 34, 0.015, 35, 100, 0.001, 37, 81, 0.004, 15, 41, 0.000, 14, -4, 0.012, -9, 19, 0.001, -46, -67, 0.002, 61, 76, 0.002, 38, -111, 0.000, 34, 8, 0.012, 49, 34, 0.024, 11, -73, 0.008, 48, -57, 0.001, 5, 8, 0.193, 14, 15, 0.002, -13, -55, 0.001, 1, 14, 0.000, 16, 120, 0.008, -22, 47, 0.011, 48, 22, 0.035, 26, 78, 0.100, 44, 89, 0.005, 40, 121, 0.058, 38, 115, 0.216, 35, -113, 0.001, 16, 7, 0.000, -22, -62, 0.001, 12, 10, 0.061, 60, 77, 0.010, 59, 54, 0.001, 40, 16, 0.025, -20, -42, 0.025, -8, 36, 0.009, 26, -80, 0.078, 7, 82, 0.039, 6, -77, 0.001, 40, -97, 0.002, 39, 116, 0.140, 16, -91, 0.009, 50, 37, 0.049, 27, 118, 0.036, 41, 87, 0.003, 3, 32, 0.020, -1, 102, 0.013, -21, 34, 0.005, 51, 93, 0.001, 50, -104, 0.007, 45, 43, 0.008, 7, -76, 0.009, 3, -71, 0.000, 21, 33, 0.001, -6, 31, 0.008, -35, -63, 0.001, 60, 73, 0.002, 17, 11, 0.000, -39, -66, 0.001, 8, -3, 0.006, 45, -119, 0.001, 55, 51, 0.006, 51, 48, 0.006, 32, 6, 0.001, 31, 45, 0.013, 27, 50, 0.000, 4, 15, 0.004, -16, -38, 0.001, 21, 104, 0.024, 18, -70, 0.062, 31, 94, 0.001, 65, -18, 0.001, 46, 28, 0.024, 43, 134, 0.003, 55, 85, 0.006, -2, 40, 0.001, 69, 34, 0.009, 46, -85, 0.000, 57, 56, 0.004, 19, -87, 0.001, 37, 49, 0.015, -39, 143, 0.001, 33, 46, 0.016, 10, 79, 0.170, 28, 86, 0.009, -10, 14, 0.028, -2, 10, 0.001, 22, 112, 0.108, 56, 68, 0.001, 37, -94, 0.008, 34, 104, 0.013, 52, 63, 0.003, -12, -65, 0.002, 13, 0, 0.015, 47, -68, 0.002, 9, 1, 0.012, 46, 133, 0.012, 43, -79, 0.173, 0, 27, 0.001, 37, -121, 0.077, -30, -51, 0.085, 67, 64, 0.001, 43, 66, 0.001, 23, 55, 0.006, -36, -59, 0.004, -23, -63, 0.003, -24, 24, 0.000, 44, -120, 0.001, 25, 86, 0.421, 58, 63, 0.001, 38, 62, 0.004, 35, 128, 0.062, 37, 101, 0.003, 15, -3, 0.006, 11, 2, 0.006, 10, 19, 0.003, 5, -72, 0.012, 1, -71, 0.000, 38, -83, 0.007, 53, 65, 0.002, 14, 103, 0.044, 2, 25, 0.002, 1, 42, 0.003, -18, -40, 0.006, 48, 58, 0.001, 26, 114, 0.079, 25, -111, 0.001, 39, -74, 0.034, 36, 32, 0.006, 50, 103, 0.000, 12, 38, 0.043, -42, -71, 0.004, -12, 28, 0.035, 59, 18, 0.034, 39, 71, 0.005, 35, 76, 0.019, -7, 145, 0.008, 30, -107, 0.002, 29, 110, 0.053, 7, 118, 0.001, 54, 46, 0.018, -10, -75, 0.003, 50, 73, 0.005, -12, -45, 0.002, 30, 72, 0.137, 26, 67, 0.005, 7, 7, 0.053, 51, 137, 0.000, -27, -68, 0.001, 45, 15, 0.013, 22, 82, 0.045, 36, 108, 0.020, -3, 35, 0.017, 30, 82, 0.001, 64, -22, 0.001, 45, -96, 0.001, 42, 130, 0.034, 60, 37, 0.001, 17, -25, 0.001, 54, 95, 0.001, 32, 59, 0.003, 31, -96, 0.003, 28, 54, 0.012, 8, 33, 0.006, -16, 31, 0.002, 55, 23, 0.008, -3, 129, 0.001, 42, -92, 0.008, 18, -66, 0.087, -1, 32, 0.048, 46, 56, 0.000, 45, 83, 0.003, 22, 74, 0.185, 18, 45, 0.002, 9, -65, 0.006, -11, -52, 0.000, -15, -59, 0.001, 57, 68, 0.001, 37, 69, 0.031, 52, -4, 0.004, 33, 74, 0.127, 28, 114, 0.135, 9, 16, 0.016, 43, -124, 0.002, -11, -39, 0.007, -15, 22, 0.001, 56, 40, 0.006, 34, 140, 0.006, -4, -61, 0.001, 43, -115, 0.001, 24, 49, 0.002, -23, 16, 0.000, -5, 153, 0.003, -28, -67, 0.000, 23, 91, 0.737, 1, 119, 0.001, 34, -82, 0.029, 15, 80, 0.058, 11, 13, 0.008, 10, -72, 0.011, 25, 98, 0.009, -13, 39, 0.001, 58, 35, 0.003, 37, 137, 0.004, 34, 61, 0.006, 14, 37, 0.006, 49, 105, 0.002, -9, 111, 0.016, -19, -62, 0.000, 53, 53, 0.005, 49, 58, 0.001, 48, -1, 0.029, 29, 67, 0.010, 44, 130, 0.041, 25, 64, 0.004, 5, 73, 0.000, 39, -119, 0.013, -19, 23, 0.000, 49, -57, 0.001, -12, -55, 0.002, -32, -60, 0.024, 40, 65, 0.011, 39, -102, 0.000, 36, 76, 0.008, 50, 139, 0.000, 11, 105, 0.093, -24, -47, 0.062, 39, 43, 0.015, 36, -101, 0.001, 54, -1, 0.074, 30, -95, 0.022, 29, 82, 0.020, -17, 20, 0.000, 54, 42, 0.006, 53, 121, 0.000, 6, 22, 0.001, 17, -91, 0.009, -27, -48, 0.021, 41, 48, 0.011, 21, 57, 0.000, 18, 77, 0.095, 17, 54, 0.003, -6, -41, 0.002, 27, -112, 0.000, 45, -60, 0.002, 42, 118, 0.014, 4, -71, 0.000, 55, -118, 0.001, 52, 92, 0.001, 54, 91, 0.001, 32, 15, 0.014, 31, 4, 0.001, 55, -5, 0.001, 51, -8, 0.010, 31, 37, 0.021, 9, 125, 0.019, 42, -104, 0.001, 18, -94, 0.017, 33, 136, 0.011, 45, 119, 0.001, 4, 102, 0.034, 19, -72, 0.074, -14, 34, 0.056, 57, 32, 0.003, 0, 109, 0.006, 52, 24, 0.016, 33, 38, 0.016, 47, -93, 0.002, 24, 102, 0.025, -9, 17, 0.005, -4, 127, 0.003, 34, 112, 0.080, -3, 151, 0.001, 33, -109, 0.000, -5, 140, 0.003, -24, -70, 0.001, 44, 34, 0.018, 43, 9, 0.002, -25, -63, 0.001, -4, 14, 0.003, 44, -79, 0.017, 43, 26, 0.024, 58, 8, 0.003, 15, 52, 0.001, 11, 73, 0.001, 47, 102, 0.001, 61, 39, 0.001, -4, 108, 0.001, 49, 133, 0.000, -8, 140, 0.001, 20, 101, 0.011, -18, 13, 0.000, 53, 25, 0.014, -3, 105, 0.045, -23, 167, 0.003, 48, 35, 0.037, 29, 39, 0.001, 44, 94, 0.001, 5, 29, 0.002, 29, -104, 0.001, 63, 36, 0.000, -2, 100, 0.000, 40, 37, 0.026, 39, -2, 0.007, 35, 3, 0.020, 16, 35, 0.004, 50, 143, 0.001, -7, 108, 0.421, -8, 25, 0.004, 26, -103, 0.003, 59, 10, 0.006, 17, 99, 0.009, 54, -5, 0.024, -1, -90, 0.000, 50, 2, 0.018, 12, -83, 0.001, 27, 89, 0.030, -22, -44, 0.010, 41, 110, 0.007, 54, -122, 0.000, 53, 77, 0.002, -35, -68, 0.002, -25, -57, 0.001, -21, -42, 0.020, 60, 46, 0.001, 41, 28, 0.020, -29, -52, 0.014, 36, 116, 0.231, 32, 132, 0.022, 14, 125, 0.000, -7, 40, 0.075, 42, 90, 0.003, 41, -87, 0.185, 51, 19, 0.025, 55, -1, 0.019, 51, 4, 0.041, 32, -94, 0.010, 8, -64, 0.006, 18, 6, 0.000, 33, 100, 0.001, -5, 21, 0.006, 48, 93, 0.000, 42, 11, 0.004, 37, 16, 0.033, -1, -55, 0.001, -2, 124, 0.004, -5, -58, 0.000, 22, 81, 0.038, 56, 57, 0.003, 37, -3, 0.030, 52, 36, 0.008, 13, 27, 0.004, -10, -62, 0.002, -11, 17, 0.006, -14, -75, 0.004, -34, -68, 0.007, -5, 104, 0.018, 47, 40, 0.055, -11, 162, 0.001, 20, 36, 0.000, 19, 79, 0.054, 34, -93, 0.004, -24, 45, 0.006, -9, 161, 0.002, 62, 29, 0.002, 38, 39, 0.021, -38, 145, 0.038, 15, 40, 0.014, 14, -7, 0.003, 47, 138, 0.000, -33, 28, 0.028, 34, 5, 0.012, 49, 33, 0.020, 11, -74, 0.015, -9, -61, 0.000, 1, 13, 0.001, 46, -108, 0.000, 16, 97, 0.147, -22, 48, 0.025, 48, 23, 0.032, 26, 91, 0.122, 44, 90, 0.004, 40, 122, 0.009, 38, 116, 0.235, 35, -114, 0.003, 16, 8, 0.000, -22, -65, 0.003, 12, 11, 0.038, 59, 53, 0.001, 40, 9, 0.013, -8, 29, 0.004, 7, 81, 0.161, -31, -66, 0.001, 6, -76, 0.006, 40, -96, 0.010, 39, 115, 0.045, 16, -90, 0.004, 50, 38, 0.008, 27, 117, 0.066, 26, 32, 0.120, 41, 90, 0.002, 3, 31, 0.028, -21, 33, 0.016, 50, -107, 0.001, 45, 38, 0.008, 7, -77, 0.002, 21, 36, 0.000, -14, -43, 0.004, -3, 26, 0.003, -6, 32, 0.006, 8, -2, 0.009, 45, -116, 0.000, 55, 50, 0.038, 51, 47, 0.023, 32, 7, 0.001, 31, 60, 0.001, 27, 49, 0.002, 4, 16, 0.005, 21, 103, 0.006, 18, -73, 0.034, -20, 22, 0.000, -36, 140, 0.001, 31, 93, 0.001, 46, 25, 0.027, 43, 133, 0.016, -34, 139, 0.001, 55, 84, 0.011, -2, 37, 0.104, 69, 33, 0.002, 46, -84, 0.004, 57, 55, 0.006, 19, -96, 0.061, -39, 146, 0.017, 33, 45, 0.201, 10, 80, 0.141, 28, 87, 0.002, -10, 19, 0.001, 14, 100, 0.030, 22, 109, 0.100, 56, 61, 0.058, 37, -95, 0.004, 34, 101, 0.001, 52, 64, 0.004, -36, -67, 0.001, 13, -1, 0.020, 47, -69, 0.002, 9, 4, 0.007, 46, 134, 0.008, 43, -72, 0.007, 0, 28, 0.001, 67, 63, 0.000, 0, 7, 0.004, 23, 54, 0.006, -23, -60, 0.001, 10, -63, 0.021, 25, 85, 0.321, 58, 64, 0.001, 38, 67, 0.015, 35, 127, 0.088, 37, 104, 0.019, -4, 117, 0.006, 11, 1, 0.010, 10, 20, 0.002, 5, -73, 0.035, 38, -82, 0.016, 53, 68, 0.002, 14, 104, 0.044, 29, 58, 0.005, -28, -48, 0.031, 25, 35, 0.002, 2, 26, 0.003, 1, 41, 0.003, -18, -43, 0.003, 49, -114, 0.001, 48, 59, 0.000, 26, 111, 0.065, 63, -21, 0.001, 25, -108, 0.018, 40, 94, 0.001, 39, -75, 0.102, 36, 33, 0.016, 50, 104, 0.001, 12, 39, 0.024, -21, -50, 0.013, 59, 17, 0.011, 39, 70, 0.012, 35, 75, 0.020, -7, 148, 0.003, 30, -106, 0.000, 29, 109, 0.059, 40, -124, 0.003, 54, 51, 0.005, 51, 143, 0.000, 50, 74, 0.006, 30, 69, 0.009, 26, 68, 0.031, 7, 6, 0.094, 51, 128, 0.001, -7, -78, 0.020, -27, -69, 0.001, 36, 93, 0.000, -3, 30, 0.104, 30, 103, 0.012, 64, -21, 0.005, 45, -97, 0.001, 42, 127, 0.039, 60, 38, 0.001, 54, 96, 0.001, 32, 60, 0.003, 31, -97, 0.017, 28, 55, 0.007, 8, 34, 0.005, -16, 32, 0.001, 55, 22, 0.016, 9, 100, 0.016, 42, -95, 0.003, 18, -101, 0.005, -1, 31, 0.061, -17, -44, 0.006, 66, 58, 0.002, 45, 78, 0.001, 22, 47, 0.004, 18, 46, 0.001, 9, -62, 0.006, -11, -53, 0.001, -14, 27, 0.001, -15, -56, 0.002, 57, 67, 0.001, -16, -61, 0.000, 37, 72, 0.003, 33, 73, 0.094, 28, 115, 0.072, 9, 15, 0.016, -11, -36, 0.013, -15, 21, 0.001, 56, 33, 0.002, 37, -75, 0.002, 34, 137, 0.074, -4, -60, 0.005, -33, -52, 0.007, 44, 71, 0.000, 43, -108, 0.001, 24, 50, 0.002, -9, 35, 0.015, 20, 45, 0.004, -23, 15, 0.002, -30, -54, 0.004, 43, 29, 0.007, 23, 90, 0.350, 1, 122, 0.003, 15, 79, 0.063, 11, 20, 0.001, 10, -75, 0.038, 25, 97, 0.007, -4, -49, 0.003, 58, 36, 0.002, 37, 140, 0.044, 34, 62, 0.005, 49, 108, 0.001, 14, 34, 0.037, -19, -63, 0.007, 53, 56, 0.009, 49, 57, 0.001, 48, 0, 0.016, 29, 62, 0.002, 44, 131, 0.012, 25, 63, 0.004, 39, -120, 0.002, -19, 18, 0.001, 49, -54, 0.001, 14, 123, 0.018, -12, -54, 0.000, 25, -80, 0.078, -32, -67, 0.001, 40, 66, 0.017, -36, -64, 0.001, 36, 61, 0.026, 50, 140, 0.001, 11, 80, 0.190, 39, 42, 0.013, 36, -100, 0.001, 54, 0, 0.010, 50, -5, 0.008, 30, -94, 0.010, 29, 81, 0.038, 14, 80, 0.068, -17, 19, 0.000, 53, 124, 0.001, 30, 17, 0.001, -22, -42, 0.022, 6, 27, 0.001, 17, -88, 0.004, -35, -54, 0.004, -27, -49, 0.026, 45, 46, 0.001, 41, 47, 0.014, 21, 60, 0.001, 18, 78, 0.090, 36, 137, 0.060, 51, -107, 0.000, -6, -40, 0.006, 27, -113, 0.001, 45, -61, 0.001, 55, -119, 0.001, 52, 77, 0.008, 54, 92, 0.001, 32, 16, 0.003, 31, 3, 0.001, 55, -6, 0.004, 51, -9, 0.002, 31, 116, 0.090, -2, -48, 0.065, 18, -97, 0.042, 33, 135, 0.009, -24, 134, 0.001, 66, 30, 0.001, 4, 103, 0.004, 19, -73, 0.006, -1, -76, 0.002, 33, -8, 0.011, -14, 31, 0.002, 57, 31, 0.002, 0, 110, 0.021, 52, 25, 0.009, 33, 37, 0.025, 47, -94, 0.002, 24, 103, 0.077, 23, -100, 0.005, -15, 49, 0.005, -48, -68, 0.000, 34, 109, 0.210, 33, -106, 0.000, -5, 139, 0.002, -24, -69, 0.001, 44, 35, 0.023, 46, 142, 0.001, -10, 160, 0.003, -4, 15, 0.002, 47, 4, 0.011, 44, -78, 0.010, 43, 25, 0.024, 23, 94, 0.009, 15, 51, 0.002, 47, 101, 0.001, -13, 50, 0.005, 61, 34, 0.001, 49, 136, 0.000, 48, -115, 0.001, 20, 102, 0.006, -18, 14, 0.000, 53, 28, 0.064, 48, 36, 0.042, 29, 34, 0.000, 44, 95, 0.000, 5, 32, 0.003, 29, -105, 0.001, 63, 35, 0.002, 40, 38, 0.031, 39, -3, 0.012, 35, 2, 0.023, 16, 36, 0.009, 50, 144, 0.000, -7, 107, 0.769, -8, 26, 0.004, 26, -102, 0.002, -12, -43, 0.002, 59, 9, 0.001, 40, -75, 0.108, 5, 120, 0.003, 17, 102, 0.020, 54, -4, 0.003, 50, -1, 0.051, 27, 96, 0.075, 41, 109, 0.008, 51, 87, 0.003, 53, 80, 0.002, 41, -2, 0.003, -21, -43, 0.021, 60, 47, 0.002, 41, 27, 0.016, -7, 39, 0.012, 42, 87, 0.005, 41, -84, 0.011, 3, 109, 0.001, 52, 121, 0.001, 51, 18, 0.036, -3, 11, 0.001, 28, -17, 0.003, 4, 37, 0.002, 55, -2, 0.009, 51, 3, 0.013, 32, -93, 0.015, 8, -71, 0.022, 33, 99, 0.001, -5, 28, 0.004, -6, 125, 0.000, 42, 12, 0.012, -11, 41, 0.006, 37, 15, 0.034, 6, 9, 0.059, -2, 121, 0.007, -5, -59, 0.000, -25, -46, 0.008, 61, 130, 0.003, 57, 11, 0.006, 56, 58, 0.004, 37, 0, 0.009, 52, 53, 0.006, 13, 22, 0.003, -11, 20, 0.001, -14, -74, 0.009, -34, -71, 0.034, 56, 105, 0.001, -5, 103, 0.006, 47, 39, 0.028, 44, -1, 0.004, 19, 78, 0.097, 34, -92, 0.020, -23, -41, 0.007, -24, 46, 0.003, -9, 160, 0.000, 62, 30, 0.003, -33, -54, 0.002, 38, 40, 0.020, 37, 83, 0.001, 15, 39, 0.040, 14, -6, 0.004, 47, 137, 0.001, -9, 120, 0.003, 61, 70, 0.001, -33, 27, 0.008, 38, -105, 0.002, 34, 6, 0.008, 26, -11, 0.000, 49, 36, 0.011, 48, -79, 0.002, -9, -62, 0.000, 1, 16, 0.000, 16, 98, 0.059, -22, 45, 0.002, -9, 125, 0.006, 48, 24, 0.023, 26, 92, 0.164, 44, 91, 0.003, 40, 123, 0.112, 38, 113, 0.070, 35, -115, 0.001, 16, -15, 0.006, -22, -64, 0.007, 12, 12, 0.010, 63, 55, 0.001, 60, 79, 0.002, 59, 60, 0.002, 40, 10, 0.008, 36, 5, 0.072, 30, -81, 0.033, -8, 30, 0.005, 26, -82, 0.005, 7, 80, 0.053, -31, -67, 0.000, 40, -103, 0.002, 39, 114, 0.044, 16, -89, 0.005, 50, 35, 0.022, -22, -41, 0.024, 41, 89, 0.001, 3, 30, 0.004, 45, 37, 0.009, 21, 35, 0.000, -17, -68, 0.027, -3, 25, 0.004, -6, 29, 0.004, -7, -42, 0.005, 32, 97, 0.002, 8, -1, 0.007, 45, -117, 0.001, -35, 25, 0.001, 55, 49, 0.017, 51, 46, 0.027, 32, 8, 0.004, 31, 59, 0.002, 28, 11, 0.000, 27, 56, 0.008, 4, 17, 0.004, 21, 82, 0.132, 18, -72, 0.110, -20, 23, 0.000, 31, 108, 0.135, 46, 26, 0.014, -4, 145, 0.000, 55, 83, 0.026, -2, 38, 0.060, 69, 36, 0.001, -21, -46, 0.009, 46, -87, 0.002, 57, 58, 0.002, 19, -97, 0.053, 37, 51, 0.012, -39, 145, 0.008, 33, 48, 0.017, 10, 77, 0.314, 28, 88, 0.001, 9, 38, 0.033, -10, 20, 0.001, -9, 26, 0.004, 22, 110, 0.128, 56, 62, 0.012, 37, -92, 0.005, 34, 102, 0.002, 52, 65, 0.001, 13, -6, 0.015, 47, -70, 0.002, 9, 3, 0.009, 43, -73, 0.010, 0, 21, 0.003, 43, 72, 0.003, -11, 149, 0.000, 23, 53, 0.005, 15, 122, 0.024, -24, 18, 0.001, 10, -62, 0.005, 14, 47, 0.006, 25, 88, 0.264, 58, 61, 0.005, 38, 68, 0.024, 37, 103, 0.026, 11, 8, 0.081, 10, 17, 0.008, 38, -77, 0.082, 53, 67, 0.002, 14, 101, 0.103, 29, 57, 0.004, 14, 20, 0.002, 2, 23, 0.013, 1, 44, 0.006, -18, -42, 0.007, -22, 17, 0.000, 49, -115, 0.001, 26, 112, 0.112, 63, -22, 0.001, 25, -109, 0.005, 40, 95, 0.002, 39, -76, 0.101, 36, 34, 0.025, 38, 141, 0.080, 12, 40, 0.032, -8, 148, 0.002, -12, 14, 0.001, 59, 24, 0.001, 39, 69, 0.012, 35, 74, 0.026, -7, 147, 0.006, 29, 112, 0.116, 54, 52, 0.004, 50, 71, 0.001, 30, 70, 0.009, 26, 65, 0.005, 7, 5, 0.120, -20, 32, 0.013, 51, 127, 0.001, -3, -80, 0.060, -19, -46, 0.008, -7, -79, 0.037, 41, 70, 0.127, 36, 94, 0.000, -3, 29, 0.054, -35, -64, 0.001, 30, 104, 0.182, 42, 128, 0.018, 60, 39, 0.001, 21, -88, 0.003, 54, 93, 0.001, 32, 53, 0.037, 31, -98, 0.002, 28, 56, 0.004, 8, 35, 0.013, -26, -51, 0.009, -16, 41, 0.008, 31, 15, 0.001, 9, 99, 0.008, 42, -94, 0.004, 18, -100, 0.016, -1, 30, 0.036, 33, 110, 0.043, 5, -7, 0.005, 46, 54, 0.001, 45, 77, 0.001, 42, 49, 0.004, 22, 48, 0.004, 18, 75, 0.091, 9, -63, 0.009, -11, -58, 0.000, -14, 28, 0.004, -15, -57, 0.003, 57, 22, 0.002, 37, 71, 0.010, 33, 76, 0.044, 28, 116, 0.172, 9, 18, 0.008, -11, -37, 0.033, -15, 24, 0.003, 56, 34, 0.001, 34, 138, 0.089, -4, -59, 0.005, 44, 72, 0.000, 24, 51, 0.002, 20, 46, 0.004, -20, 148, 0.001, -23, 18, 0.006, 23, 89, 0.355, 1, 121, 0.002, 15, 78, 0.090, 14, -89, 0.046, 11, 19, 0.002, 10, -74, 0.066, 25, 100, 0.032, -13, 37, 0.001, 58, 33, 0.002, 37, 139, 0.044, 34, 59, 0.005, 49, 107, 0.003, -18, 39, 0.001, -19, -60, 0.001, 53, 55, 0.003, 49, 60, 0.000, 48, 9, 0.077, 29, 61, 0.005, 44, 132, 0.006, 25, 66, 0.002, 39, -121, 0.014, -19, 17, 0.002, 49, -55, 0.001, 48, 80, 0.000, 29, -82, 0.016, 25, -81, 0.001, -32, -66, 0.001, 40, 67, 0.012, 39, -104, 0.037, 36, 62, 0.005, 50, 137, 0.004, 11, 79, 0.166, 39, 41, 0.010, 36, -115, 0.031, 54, -3, 0.011, 50, -4, 0.021, 29, 84, 0.001, -17, 18, 0.001, 54, 16, 0.004, 53, 123, 0.001, 30, 18, 0.001, 6, 28, 0.002, 17, -89, 0.002, 50, -66, 0.001, 64, 25, 0.002, 45, 45, 0.002, 41, 50, 0.001, 21, 59, 0.001, 18, 107, 0.008, 36, 138, 0.048, 51, -100, 0.001, -6, -43, 0.006, 45, -66, 0.005, 55, -120, 0.001, 52, 78, 0.009, 54, 89, 0.000, 31, 2, 0.001, 4, 74, 0.003, 55, -7, 0.003, -4, 140, 0.002, 32, -64, 0.002, 31, 115, 0.156, 9, 127, 0.004, 46, 7, 0.054, 42, -106, 0.002, 18, -96, 0.045, 66, 27, 0.000, -29, 33, 0.009, 4, 104, 0.010, -15, -170, 0.002, -1, -77, 0.003, -5, -80, 0.017, 46, -79, 0.003, -14, 32, 0.007, 57, 34, 0.004, 0, 111, 0.011, 52, 26, 0.010, 33, 40, 0.003, 47, -95, 0.001, 9, 46, 0.004, 14, 41, 0.007, 24, 104, 0.057, 23, -101, 0.002, 34, 110, 0.239, 33, -107, 0.000, -5, 138, 0.000, 44, 36, 0.001, -4, 16, 0.022, 47, 3, 0.016, 44, -77, 0.006, 62, 23, 0.004, 23, 93, 0.024, 38, 9, 0.000, 0, -60, 0.000, 15, 50, 0.004, 47, 84, 0.002, -46, -72, 0.001, -13, 49, 0.000, 61, 33, 0.001, 15, -61, 0.004, 49, 135, 0.001, 48, -114, 0.002, 20, 103, 0.007, -18, 19, 0.001, 53, 27, 0.010, 48, 29, 0.016, 29, 33, 0.012, 5, 31, 0.002, 35, -88, 0.008, 29, -110, 0.003, 63, 34, 0.000, -13, 132, 0.000, 40, 39, 0.021, 39, -4, 0.008, 35, 1, 0.042, 16, 29, 0.001, -8, 27, 0.007, 26, -105, 0.002, -12, -42, 0.004, 40, -74, 0.243, 17, 101, 0.023, 54, -7, 0.010, 50, 0, 0.030, 12, -81, 0.002, 27, 95, 0.057, 41, 112, 0.017, 51, 86, 0.001, 53, 79, 0.004, 41, -3, 0.003, 54, -101, 0.000, 58, 9, 0.004, 60, 48, 0.001, 41, 14, 0.033, 42, 88, 0.002, 41, -85, 0.026, 3, 116, 0.001, 52, 122, 0.001, 51, 17, 0.041, 28, -16, 0.023, 4, 38, 0.002, 55, -3, 0.039, 51, 2, 0.019, 32, -92, 0.008, 8, -70, 0.013, 55, 110, 0.001, 33, 102, 0.001, -5, 27, 0.008, 42, 9, 0.001, 37, 26, 0.002, -2, 122, 0.002, -13, -40, 0.006, -25, -47, 0.007, -2, 99, 0.000, 61, 129, 0.001, 57, -2, 0.014, 56, 59, 0.003, 37, -1, 0.021, 52, 54, 0.003, 13, 21, 0.002, -10, -56, 0.001, -11, 19, 0.003, 23, -97, 0.000, -34, -70, 0.182, 56, 106, 0.002, -3, 142, 0.000, 47, 38, 0.057, 44, 0, 0.036, 19, 77, 0.080, 34, -95, 0.002, -24, 47, 0.003, 10, -85, 0.008, 62, 35, 0.002, 38, 37, 0.023, 37, 78, 0.003, 15, 38, 0.005, 14, -17, 0.087, 47, 136, 0.001, 62, -114, 0.001, -33, 26, 0.002, 38, -104, 0.019, 34, 3, 0.007, 49, 35, 0.022, 11, -68, 0.001, 48, -78, 0.002, -9, -63, 0.004, -13, -66, 0.001, 1, 15, 0.000, -18, 47, 0.002, 16, 99, 0.014, -22, 46, 0.001, -3, 104, 0.012, 26, 89, 0.204, 44, 92, 0.001, 40, 124, 0.046, -12, 41, 0.004, 38, 114, 0.059, 35, -108, 0.002, 16, -14, 0.006, 63, 54, 0.003, 59, 59, 0.003, 5, 116, 0.007, 36, 6, 0.050, -8, 31, 0.003, -31, -64, 0.003, 40, -102, 0.001, 39, 113, 0.041, 16, -88, 0.001, 50, 36, 0.010, -22, -51, 0.011, 41, 92, 0.001, 3, 29, 0.002, 45, 40, 0.031, -25, -62, 0.001, -17, -69, 0.009, -3, 28, 0.004, -6, 30, 0.004, -39, -68, 0.007, -7, -43, 0.004, -45, 172, 0.002, -29, -65, 0.006, 17, -16, 0.001, 32, 98, 0.002, 8, 0, 0.010, 45, -122, 0.058, 55, 48, 0.012, 51, 45, 0.003, -3, 122, 0.005, 31, 58, 0.003, 28, 12, 0.000, 27, 55, 0.004, 4, 18, 0.004, 5, 6, 0.051, 21, 81, 0.074, -20, 24, 0.000, -39, -58, 0.002, 31, 107, 0.182, 46, 15, 0.034, 55, 82, 0.001, -8, -78, 0.019, 69, 35, 0.001, -25, 36, 0.006, 5, -1, 0.046, 46, -86, 0.000, 57, 57, 0.019, 19, -98, 0.236, 37, 46, 0.041, -39, 148, 0.001, 33, 47, 0.013, 10, 78, 0.131, 28, 89, 0.002, 9, 37, 0.020, -10, 17, 0.005, -18, -66, 0.030, 22, 115, 0.380, 56, 63, 0.007, 37, -93, 0.012, 52, 66, 0.001, 13, -7, 0.010, 47, -71, 0.001, 9, -10, 0.007, 43, -74, 0.003, -22, -55, 0.002, 0, 22, 0.003, 43, 71, 0.003, 23, 52, 0.002, 15, 121, 0.150, 10, -65, 0.002, 44, -117, 0.001, 25, 87, 0.312, 58, 62, 0.001, 38, 65, 0.004, 37, 114, 0.052, 15, 10, 0.000, 11, 7, 0.024, 10, 18, 0.005, 38, -76, 0.045, 53, 62, 0.002, 14, 102, 0.038, 29, 60, 0.005, -2, 107, 0.003, 2, 24, 0.004, 1, 43, 0.004, 49, -112, 0.004, 48, 53, 0.001, 26, 109, 0.044, 40, 96, 0.001, 39, -77, 0.048, 36, 35, 0.011, 38, 142, 0.029, 35, -80, 0.045, 50, 102, 0.000, 12, 41, 0.016, -12, 15, 0.006, 39, 68, 0.035, 35, 73, 0.049, 29, 111, 0.055, 54, 49, 0.027, 50, 72, 0.001, 30, 75, 0.127, -33, -63, 0.007, 26, 66, 0.002, 7, 4, 0.103, 51, 126, 0.001, -7, -76, 0.010, 45, 76, 0.000, 41, 69, 0.011, 36, 95, 0.000, -21, 148, 0.000, -3, 32, 0.020, 30, 101, 0.002, 42, 125, 0.044, 60, 40, 0.001, 21, -89, 0.015, 54, 94, 0.001, 32, 54, 0.006, -17, -43, 0.009, 31, -99, 0.001, 28, 57, 0.004, 8, 36, 0.029, -22, -46, 0.023, -3, 126, 0.001, 31, 14, 0.001, 42, -97, 0.003, 18, -103, 0.005, -1, 29, 0.010, 33, 109, 0.041, -6, 147, 0.001, 45, 80, 0.002, -11, 34, 0.005, 22, 45, 0.004, 18, 76, 0.063, 6, 4, 0.260, -11, -59, 0.000, -14, 25, 0.001, -15, -54, 0.001, -10, -74, 0.001, 33, 75, 0.075, 28, 117, 0.132, 9, 17, 0.012, -11, -42, 0.002, -15, 23, 0.002, 56, 35, 0.005, 34, 135, 0.111, -4, -58, 0.002, 43, -110, 0.001, 24, 52, 0.002, 20, 47, 0.004, -23, 17, 0.001, 13, 110, 0.042, 23, 88, 0.222, 15, 77, 0.099, 14, -88, 0.025, 11, 18, 0.004, 25, 99, 0.032, -13, 44, 0.001, 58, 34, 0.002, -46, 171, 0.005, 34, 60, 0.006, -37, 143, 0.001, -19, -61, 0.000, 53, 34, 0.007, 49, 59, 0.001, 48, 10, 0.109, 29, 64, 0.001, 44, 133, 0.006, 25, 65, 0.003, 39, -122, 0.003, 35, -117, 0.002, -19, 20, 0.002, 68, 14, 0.000, 48, 89, 0.002, 29, -83, 0.001, -32, -65, 0.002, 40, 68, 0.015, 39, -105, 0.033, 36, 63, 0.003, 16, 74, 0.040, 50, 138, 0.009, 11, 78, 0.159, -20, 17, 0.001, -13, -49, 0.001, 39, 40, 0.007, 36, -114, 0.002, 54, -2, 0.014, -41, -70, 0.000, 29, 83, 0.005, 7, 23, 0.000, -17, 17, 0.001, 54, 13, 0.013, 53, 118, 0.001, 30, 39, 0.001, 8, 80, 0.005, 64, 26, 0.004, 45, 48, 0.003, -31, 150, 0.000, 41, 49, 0.018, 21, 54, 0.002, 36, 139, 0.068, 17, 55, 0.003, 51, -101, 0.000, -6, -42, 0.025, 45, -67, 0.001, 52, 79, 0.002, 54, 90, 0.001, 31, 1, 0.001, 55, -8, 0.000, 31, 114, 0.127, 46, 8, 0.034, 19, 76, 0.098, 18, -99, 0.060, 33, 137, 0.001, 66, 28, 0.000, -29, 24, 0.002, 45, 116, 0.000, -15, -171, 0.000, 19, -75, 0.006, -1, -78, 0.071, 33, -6, 0.061, -5, -81, 0.004, -24, 151, 0.003, -14, 29, 0.011, -4, 109, 0.000, 57, 33, 0.001, 19, -154, 0.000, 0, 112, 0.008, 52, 27, 0.010, 33, 39, 0.005, 47, -96, 0.001, 9, 45, 0.007, 24, 97, 0.014, 23, -102, 0.006, -15, 51, 0.004, 33, -104, 0.002, -5, 137, 0.002, -9, 30, 0.005, -4, 17, 0.003, 47, 2, 0.022, 44, -76, 0.008, 62, 24, 0.002, 15, 49, 0.004, 47, 83, 0.001, 62, 7, 0.003, 14, 35, 0.007, -30, 154, 0.001, 29, -13, 0.001, -9, -68, 0.001, 20, 104, 0.006, -18, 20, 0.001, 53, 22, 0.012, 48, 30, 0.014, 29, 36, 0.002, 5, 42, 0.002, 35, -89, 0.028, 48, 109, 0.000, 29, -111, 0.007, 63, 33, 0.000, -37, 144, 0.001, -13, 131, 0.003, 40, 40, 0.024, 39, -5, 0.005, -20, -46, 0.005, 16, 30, 0.001, -8, 28, 0.005, 26, -104, 0.001, -12, -41, 0.009, 40, -73, 0.354, 39, 140, 0.003, 17, 104, 0.045, 54, -6, 0.023, 50, -3, 0.024, 27, 94, 0.013, 14, 81, 0.018, 41, 111, 0.006, 51, 85, 0.001, 53, 90, 0.002, 41, 0, 0.019, -35, -59, 0.014, 60, 49, 0.001, 41, 13, 0.112, -1, 133, 0.000, -6, -70, 0.000, 42, 85, 0.002, 41, -98, 0.001, 3, 115, 0.001, 52, 123, 0.002, 51, 40, 0.044, 28, -15, 0.016, 4, 39, 0.002, -1, 116, 0.003, 51, 1, 0.151, 32, -99, 0.005, 8, -69, 0.008, 33, 101, 0.001, -5, 26, 0.002, -6, 139, 0.001, 42, 10, 0.004, 37, 25, 0.002, -1, -58, 0.000, -2, 111, 0.006, -5, -53, 0.000, -8, -56, 0.001, -25, -48, 0.008, 61, 132, 0.000, 22, 88, 0.290, 56, 60, 0.007, 37, 10, 0.012, 52, 55, 0.002, 13, 24, 0.008, 46, 93, 0.000, -11, 14, 0.001, -14, -76, 0.012, 23, -98, 0.002, 47, 37, 0.008, 44, 1, 0.016, -11, 163, 0.000, 19, 84, 0.043, 34, -94, 0.002, -36, -63, 0.003, -24, 48, 0.008, 10, -84, 0.030, -9, 158, 0.001, 62, 36, 0.000, 20, -90, 0.003, 38, 38, 0.019, 37, 77, 0.007, 15, 37, 0.009, 14, -16, 0.057, 10, -5, 0.012, 47, 135, 0.003, -33, 25, 0.002, 38, -107, 0.001, 34, 4, 0.008, 49, 38, 0.012, 11, -69, 0.011, 48, -77, 0.001, -9, -64, 0.001, 1, 18, 0.000, -18, 48, 0.003, 16, 100, 0.031, 53, -6, 0.049, 26, 90, 0.181, 40, 117, 0.228, 2, -60, 0.002, 38, 119, 0.008, 35, -109, 0.001, 16, -13, 0.005, -22, -66, 0.001, 49, -124, 0.005, 63, 53, 0.001, 59, 58, 0.002, 36, 7, 0.069, 35, 36, 0.016, 30, -83, 0.007, -8, 32, 0.006, -31, -65, 0.001, 6, -73, 0.017, 40, -101, 0.000, 39, 112, 0.023, 50, 33, 0.013, 27, 122, 0.004, 26, 43, 0.003, 41, 91, 0.001, 3, 36, 0.003, -17, -151, 0.001, -21, -66, 0.001, 45, 39, 0.023, 7, -80, 0.007, 6, 81, 0.190, -17, -70, 0.002, -3, 27, 0.005, -7, -40, 0.004, 60, 13, 0.002, 32, 99, 0.002, 8, -7, 0.006, 45, -123, 0.005, 55, 47, 0.008, 51, 52, 0.010, -3, 121, 0.018, 31, 57, 0.004, 27, 54, 0.005, 4, 19, 0.025, -8, 107, 0.027, -16, -42, 0.005, 21, 84, 0.088, 18, -74, 0.014, -1, 136, 0.001, -39, -59, 0.003, 31, 106, 0.151, 46, 16, 0.065, -34, 138, 0.001, 55, 81, 0.001, 69, 30, 0.000, -25, 35, 0.010, 46, -97, 0.001, -11, 40, 0.025, 57, 60, 0.012, 19, -99, 0.511, 37, 45, 0.026, -39, 147, 0.003, 33, 50, 0.017, 28, 90, 0.003, 9, 40, 0.038, -10, 18, 0.003, -47, 170, 0.001, -15, 30, 0.002, 22, 116, 0.039, 56, 64, 0.006, 37, -98, 0.001, 34, 100, 0.001, 52, 67, 0.002, 13, -4, 0.013, 47, -72, 0.001, 9, -11, 0.008, 46, 137, 0.000, 43, -75, 0.014, 24, 41, 0.003, 0, 23, 0.003, 43, 70, 0.003, -11, 151, 0.002, 23, 51, 0.002, 15, 120, 0.003, -24, 20, 0.000, 10, -64, 0.026, 44, -116, 0.001, 25, 90, 0.340, 38, 66, 0.022, 37, 113, 0.137, 15, 9, 0.001, 11, 6, 0.020, 10, 15, 0.040, -9, 115, 0.065, 38, -79, 0.004, 53, 61, 0.003, 49, 66, 0.000, 29, 59, 0.004, 25, 56, 0.024, 5, 49, 0.000, 2, 21, 0.010, 1, 46, 0.001, 6, 125, 0.051, 49, -113, 0.001, 48, 54, 0.000, 26, 110, 0.044, 39, -78, 0.010, 36, 36, 0.016, -18, -149, 0.006, 35, -81, 0.029, 16, -25, 0.001, 50, 99, 0.000, 12, 42, 0.003, -12, 16, 0.011, 39, 67, 0.058, 35, 64, 0.005, 30, -103, 0.000, 39, 84, 0.001, 54, 50, 0.007, 50, 69, 0.001, 30, 76, 0.153, 26, 63, 0.005, 7, 3, 0.030, 51, 125, 0.001, -3, -54, 0.006, -26, -50, 0.014, -7, -77, 0.005, -33, -61, 0.007, 45, 75, 0.000, 41, 72, 0.032, -36, -66, 0.001, 8, 126, 0.036, 36, 96, 0.000, -21, 147, 0.000, -3, 31, 0.064, 30, 102, 0.003, -37, -64, 0.003, 45, -100, 0.000, 42, 126, 0.054, 60, 41, 0.001, -35, 138, 0.000, 54, 99, 0.001, 32, 55, 0.003, 31, -84, 0.007, 28, 58, 0.005, 8, 29, 0.014, 31, 13, 0.002, 42, -96, 0.007, 18, -102, 0.011, 33, 112, 0.065, -6, 148, 0.001, 65, 14, 0.000, 46, 60, 0.000, 45, 79, 0.005, 42, 47, 0.008, 22, 46, 0.004, 18, 73, 0.069, -35, 117, 0.000, 14, -10, 0.005, 9, -61, 0.001, -11, -56, 0.002, -14, 26, 0.001, -15, -55, 0.001, 57, 24, 0.001, -38, 175, 0.005, 28, 118, 0.100, 9, 20, 0.005, -11, -43, 0.002, -9, 21, 0.001, -4, 123, 0.010, 56, 36, 0.016, 34, 136, 0.544, -4, -57, 0.001, 44, 74, 0.000, -17, 32, 0.012, 43, -111, 0.003, 24, 45, 0.004, 20, 48, 0.004, 67, 32, 0.001, 13, 109, 0.028, 23, 87, 0.231, 14, -91, 0.073, 11, 17, 0.006, 25, 118, 0.068, 58, 31, 0.002, 34, 57, 0.001, 49, 77, 0.000, 10, 51, 0.001, -33, -62, 0.004, -18, 37, 0.017, -19, -66, 0.007, 53, 33, 0.007, 48, 11, 0.054, 29, 63, 0.001, 44, 134, 0.004, 25, 68, 0.066, 39, -123, 0.003, 1, 74, 0.000, 35, -118, 0.007, -19, 19, 0.001, 68, 15, 0.001, 48, 90, 0.001, 29, -80, 0.002, 63, 12, 0.002, -32, -64, 0.054, 40, 61, 0.001, 39, -106, 0.002, 36, 64, 0.004, 16, 75, 0.193, 50, 135, 0.000, 11, 77, 0.159, 39, 39, 0.010, -20, 64, 0.001, -41, -71, 0.001, 29, 78, 0.286, 7, 22, 0.001, -17, 16, 0.001, 54, 14, 0.009, 30, 40, 0.001, -25, -53, 0.017, -26, 47, 0.004, 64, 27, 0.001, 45, 47, 0.001, -29, -56, 0.002, 21, 53, 0.002, 18, 105, 0.005, 36, 140, 0.185, 51, -102, 0.001, 27, -108, 0.001, 45, -64, 0.003, 52, 80, 0.002, 31, 0, 0.001, 51, -4, 0.011, 31, 113, 0.088, 46, 5, 0.025, 42, -124, 0.001, 19, 75, 0.100, 18, -98, 0.049, 66, 25, 0.001, 5, -8, 0.008, 42, 19, 0.009, 57, 115, 0.001, -1, -79, 0.023, 33, -7, 0.132, -24, 152, 0.001, -14, 30, 0.002, -18, -59, 0.000, 57, 36, 0.004, 19, -155, 0.004, 0, 121, 0.009, 52, 28, 0.010, 33, 42, 0.003, 47, -97, 0.003, 9, 48, 0.001, 24, 98, 0.017, 23, -103, 0.008, 33, -105, 0.001, 44, 38, 0.014, -4, 18, 0.009, 13, 81, 0.196, 47, 1, 0.028, 44, -75, 0.007, -13, -42, 0.004, 38, 15, 0.004, 15, 48, 0.001, 47, 82, 0.001, 62, 8, 0.002, 61, 35, 0.010, 14, 36, 0.008, 48, -112, 0.000, -9, -69, 0.000, -13, -72, 0.003, 20, 105, 0.013, -10, 120, 0.013, 53, 21, 0.018, 48, 31, 0.018, 29, 35, 0.001, 5, 41, 0.003, 35, -90, 0.016, 29, -108, 0.001, 40, 33, 0.031, 39, -6, 0.009, 16, 31, 0.001, -17, 168, 0.001, -8, 21, 0.003, 26, -107, 0.002, -12, -40, 0.010, -32, 19, 0.001, 40, -72, 0.010, 17, 103, 0.060, -55, -65, 0.000, 50, -2, 0.013, 27, 93, 0.004, 41, 114, 0.030, 51, 92, 0.001, 53, 89, 0.005, -17, 179, 0.001, 26, -9, 0.000, 41, -1, 0.011, -30, 18, 0.002, 60, 50, 0.000, 41, 16, 0.028, -6, -73, 0.001, 27, -80, 0.016, 42, 86, 0.004, 41, -99, 0.001, 3, 114, 0.004, 52, 124, 0.001, 51, 39, 0.007, 32, -17, 0.002, 28, -14, 0.001, 4, 40, 0.002, 22, -84, 0.003, -1, 115, 0.004, 32, -98, 0.003, 8, -68, 0.002, 6, -5, 0.034, 33, 104, 0.003, -5, 25, 0.004, -6, 140, 0.001, 46, -124, 0.000, 19, -104, 0.011, 37, 28, 0.022, -2, 112, 0.002, -5, -54, 0.000, -25, -49, 0.007, 61, 131, 0.001, -11, 22, 0.001, 22, 85, 0.068, 56, 53, 0.006, 52, 56, 0.007, 13, 23, 0.013, 47, -61, 0.000, -10, -58, 0.000, 23, -99, 0.011, -38, -69, 0.000, 47, 20, 0.091, 44, 2, 0.011, 5, 119, 0.007, 0, 11, 0.001, 19, 83, 0.068, 34, -97, 0.005, -36, -57, 0.006, 62, 33, 0.000, 20, -89, 0.026, 38, 43, 0.013, 37, 80, 0.009, 15, 20, 0.002, 10, -4, 0.009, 47, 134, 0.008, 38, -106, 0.001, 34, 1, 0.008, -38, 146, 0.061, 49, 37, 0.051, 11, -70, 0.007, -8, 108, 0.139, -13, -60, 0.001, 1, 17, 0.000, -18, 45, 0.001, 53, -7, 0.008, 26, 87, 0.220, 40, 118, 0.082, -18, -64, 0.003, 35, -110, 0.001, 16, -12, 0.004, -22, -53, 0.001, 49, -125, 0.002, 59, 57, 0.010, 36, 8, 0.053, 35, 35, 0.001, 30, -82, 0.004, -31, -62, 0.002, 6, -72, 0.011, 40, -100, 0.001, 39, 111, 0.015, 50, 34, 0.012, 27, 121, 0.134, 26, 44, 0.005, 41, 78, 0.001, 3, 35, 0.005, 2, 118, 0.004, 51, 120, 0.000, 50, -111, 0.001, 45, 34, 0.015, 7, -81, 0.002, 6, 82, 0.025, 3, -76, 0.108, -17, -71, 0.028, -3, 22, 0.001, -7, -41, 0.004, 58, 6, 0.007, 60, 14, 0.001, -4, -38, 0.088, 17, -14, 0.001, 32, 100, 0.002, 28, 31, 0.100, 8, -6, 0.006, -30, -59, 0.005, -35, 22, 0.001, 55, 46, 0.005, 51, 51, 0.002, -33, -55, 0.002, 31, 56, 0.002, 28, -114, 0.000, 27, 53, 0.004, 4, 20, 0.006, -16, -41, 0.005, 21, 83, 0.081, 18, -77, 0.032, -1, 135, 0.001, -3, -41, 0.004, -5, 12, 0.010, 31, 105, 0.179, 46, 13, 0.013, 45, 102, 0.000, 55, 80, 0.000, -2, 41, 0.003, -25, 34, 0.020, 46, -96, 0.007, 57, 59, 0.002, 37, 48, 0.014, 33, 49, 0.027, 28, 91, 0.002, 9, 39, 0.097, -10, 23, 0.002, -47, 169, 0.003, -15, 29, 0.011, 22, 113, 0.129, 56, 25, 0.026, 37, -99, 0.001, 34, 97, 0.000, 52, 68, 0.002, 13, -5, 0.015, 9, -8, 0.008, 46, 138, 0.000, 24, 42, 0.003, -14, -171, 0.004, -4, 137, 0.003, 0, 24, 0.004, 43, 69, 0.008, 24, -103, 0.009, 23, 50, 0.002, 1, 98, 0.013, -22, -40, 0.001, 10, -67, 0.084, 25, 89, 0.272, 38, 71, 0.004, 37, 116, 0.179, 15, 8, 0.001, 11, 5, 0.025, 10, 16, 0.021, 14, 30, 0.001, 38, -78, 0.014, 53, 64, 0.013, 14, 108, 0.011, 29, 54, 0.024, 2, 22, 0.009, 1, 45, 0.019, -18, -39, 0.008, 48, 55, 0.000, 39, -79, 0.010, 35, -82, 0.017, 16, -24, 0.002, 50, 100, 0.000, 12, 43, 0.002, -12, 17, 0.010, 39, 66, 0.016, 35, 63, 0.004, 30, -102, 0.000, 39, 83, 0.001, -1, 99, 0.001, 54, 55, 0.007, 50, 70, 0.000, 30, 73, 0.172, 26, 64, 0.005, 7, 2, 0.022, -3, -55, 0.001, 41, 71, 0.011, 36, 97, 0.000, 30, 107, 0.250, 60, 42, 0.001, -29, -62, 0.001, 54, 100, 0.001, 32, 56, 0.001, 31, -85, 0.009, 28, 59, 0.004, 8, 30, 0.006, 31, 28, 0.001, -1, 43, 0.013, 33, 111, 0.045, -6, 145, 0.013, 65, 13, 0.001, 42, 48, 0.017, 4, 127, 0.002, 22, 51, 0.002, 18, 74, 0.193, 9, -74, 0.016, -11, -57, 0.001, -14, 23, 0.002, -15, -52, 0.001, 57, 23, 0.002, -39, 178, 0.001, 28, 119, 0.090, 9, 19, 0.006, 43, -121, 0.001, -11, -40, 0.008, -15, 25, 0.002, 56, 29, 0.003, 34, 133, 0.085, -4, -56, 0.001, -5, 115, 0.000, 39, -103, 0.000, 44, 75, 0.001, 24, 46, 0.004, 20, 49, 0.002, -36, -72, 0.004, -23, 19, 0.000, 67, 31, 0.001, -28, 29, 0.004, 24, -99, 0.004, 23, 86, 0.149, 1, 126, 0.007, 14, -90, 0.121, 11, 24, 0.006, 25, 117, 0.054, 61, 26, 0.003, 58, 32, 0.011, -10, 125, 0.028, 34, 58, 0.002, 49, 80, 0.000, -8, 157, 0.000, -18, 38, 0.016, -19, -67, 0.002, 53, 36, 0.004, 48, 12, 0.094, 44, 135, 0.001, 25, 67, 0.007, 35, -119, 0.013, 68, 16, 0.001, 49, -82, 0.000, 48, 91, 0.001, 29, -81, 0.016, 63, 11, 0.007, -32, -55, 0.003, 40, 62, 0.001, 39, -107, 0.002, 36, 65, 0.007, 16, 76, 0.093, 50, 136, 0.001, 5, 102, 0.009, 39, 38, 0.009, -41, -72, 0.005, 29, 77, 0.156, -17, 15, 0.001, 54, 19, 0.043, 53, 120, 0.000, 30, 37, 0.001, 6, 31, 0.006, 64, 28, 0.001, -19, 179, 0.005, 21, 56, 0.001, 18, 106, 0.083, 51, -103, 0.000, -21, -70, 0.003, 27, -109, 0.012, 45, -65, 0.003, 42, 95, 0.001, -16, -71, 0.002, 52, 81, 0.002, -41, -65, 0.000, 31, -1, 0.001, 51, -5, 0.001, 31, 112, 0.052, 46, 6, 0.016, 19, 74, 0.185, 66, 26, 0.002, -29, 22, 0.003, 42, 20, 0.018, -11, 29, 0.004, 19, -69, 0.010, 6, 5, 0.036, 33, -4, 0.017, 57, 35, 0.005, 0, 122, 0.004, 52, 13, 0.020, 33, 41, 0.003, 13, 46, 0.017, 47, -98, 0.000, 9, 47, 0.002, -10, -49, 0.001, 24, 99, 0.035, 23, -104, 0.008, 33, -102, 0.002, -28, -70, 0.002, 44, 39, 0.011, -4, 19, 0.008, 47, 0, 0.027, 44, -74, 0.003, 62, 22, 0.002, 23, 122, 0.014, 38, 16, 0.028, 34, -117, 0.081, 15, 47, 0.002, 11, 52, 0.000, 47, 81, 0.001, -9, 124, 0.007, 61, 30, 0.002, 49, 140, 0.001, 48, -103, 0.001, -9, -70, 0.000, -13, -73, 0.003, 20, 106, 0.166, -18, 18, 0.001, 53, 24, 0.024, 48, 32, 0.011, 5, 44, 0.002, 35, -91, 0.005, -19, 50, 0.007, 29, -109, 0.001, 63, 31, 0.001, 40, 34, 0.021, 39, -7, 0.006, 16, 32, 0.015, -8, 22, 0.005, 26, -106, 0.001, -12, -39, 0.013, -32, 20, 0.000, 40, -79, 0.055, 17, 106, 0.006, 50, 27, 0.026, 27, 100, 0.010, 41, 113, 0.016, -21, 48, 0.021, 51, 91, 0.001, 53, 92, 0.016, -33, -68, 0.027, -9, 141, 0.002, 41, 2, 0.042, 3, -57, 0.001, -17, -60, 0.000, -13, -46, 0.002, 60, 51, 0.000, 41, 15, 0.043, -26, -69, 0.001, 27, -81, 0.010, 41, -96, 0.014, 3, 113, 0.000, 52, 109, 0.001, 51, 38, 0.015, 32, -16, 0.007, 28, -13, 0.003, 27, 32, 0.052, 4, 41, 0.002, -53, -72, 0.000, -1, 114, 0.002, 32, -97, 0.058, 8, -75, 0.025, -4, 141, 0.001, 19, 38, 0.010, 33, 103, 0.002, -5, 32, 0.008, 19, -105, 0.001, 37, 27, 0.002, -5, -55, 0.001, -25, -50, 0.007, -4, 114, 0.001, 22, 86, 0.070, 56, 54, 0.031, 37, 12, 0.000, 52, 57, 0.002, 13, 18, 0.002, -10, -53, 0.000, 43, -65, 0.001, -11, 16, 0.006, 56, 101, 0.001, -38, -68, 0.001, 47, 19, 0.045, 44, 3, 0.012, 19, 82, 0.028, 34, -96, 0.003, -42, 147, 0.003, 62, 34, 0.000, 20, -88, 0.006, 38, 44, 0.012, 37, 79, 0.002, 15, 19, 0.001, 10, -7, 0.004, 47, 133, 0.013, 61, 66, 0.000, -33, 23, 0.001, 38, -101, 0.000, 34, 2, 0.010, 15, -92, 0.026, 49, 40, 0.006, 11, -71, 0.002, 14, 16, 0.001, -13, -61, 0.001, 2, 47, 0.001, 1, 20, 0.003, -18, 46, 0.001, 53, -4, 0.003, 26, 88, 0.177, 40, 119, 0.077, 38, 117, 0.174, 35, -111, 0.002, -22, -52, 0.002, 12, -16, 0.015, 49, -122, 0.039, 63, 67, 0.001, 36, 9, 0.033, 35, 34, 0.012, -31, -63, 0.001, 6, -75, 0.122, 40, -107, 0.001, 39, 110, 0.010, 14, 43, 0.006, 53, 159, 0.011, 50, 31, 0.121, 26, 41, 0.001, 41, 77, 0.002, 3, 34, 0.006, 2, 115, 0.001, -1, 101, 0.095, 51, 119, 0.000, 50, -110, 0.002, 12, 93, 0.003, 45, 33, 0.001, 3, -77, 0.005, -17, -72, 0.003, -3, 21, 0.001, -7, -38, 0.018, -27, 19, 0.001, 60, 15, 0.002, 17, -15, 0.004, 32, 93, 0.001, 28, 32, 0.001, 8, -5, 0.007, 45, -121, 0.002, -35, 21, 0.002, 55, 45, 0.005, 51, 50, 0.002, 31, 55, 0.004, 28, -113, 0.002, 27, 60, 0.002, -16, -40, 0.007, 21, 78, 0.061, 18, -76, 0.028, -1, 134, 0.002, -39, -57, 0.008, 31, 104, 0.053, 46, 14, 0.020, 43, 112, 0.001, 55, 79, 0.004, -2, 42, 0.002, 69, 32, 0.000, -25, 33, 0.005, 46, -99, 0.000, 57, 46, 0.003, 37, 47, 0.045, 33, 52, 0.011, 28, 92, 0.002, 9, 42, 0.048, -10, 24, 0.002, -15, 32, 0.006, 22, 114, 0.355, 56, 26, 0.005, 37, -96, 0.002, 34, 98, 0.000, -12, -64, 0.001, 13, -10, 0.003, 9, -9, 0.008, 46, 127, 0.067, 43, -69, 0.002, 24, 43, 0.004, 0, 33, 0.111, 67, 66, 0.001, 43, 76, 0.003, 24, -102, 0.001, 23, 49, 0.002, 10, -66, 0.144, 25, 92, 0.072, 38, 72, 0.002, 35, 130, 0.157, 37, 115, 0.177, 15, 7, 0.001, 11, 12, 0.019, 10, 13, 0.021, 53, 63, 0.002, 14, 105, 0.034, 29, 53, 0.042, 25, 58, 0.000, 2, 19, 0.008, -41, 177, 0.001, 68, 37, 0.001, 39, -80, 0.011, 36, 22, 0.001, 35, -83, 0.013, 12, 44, 0.001, 5, 5, 0.000, -12, 18, 0.006, 59, 28, 0.004, 5, 81, 0.010, 39, 65, 0.023, 36, -91, 0.003, 35, 62, 0.004, 39, 82, 0.005, 54, 56, 0.014, 50, 67, 0.003, 30, 74, 0.174, 26, 61, 0.005, 7, 1, 0.022, -3, -52, 0.001, -27, -62, 0.000, 41, 74, 0.008, 22, 87, 0.139, 36, 98, 0.000, 30, 108, 0.171, 42, 140, 0.001, 60, 43, 0.001, -35, 140, 0.001, 32, 65, 0.005, 31, -86, 0.004, 28, 60, 0.003, 8, 31, 0.004, -16, 37, 0.010, 31, 27, 0.001, 42, -98, 0.001, 22, -159, 0.001, 21, 114, 0.002, 18, -104, 0.000, -1, 42, 0.016, 33, 114, 0.215, -6, 146, 0.005, 42, 45, 0.018, 22, 52, 0.002, 9, -75, 0.033, -14, 24, 0.002, -15, -53, 0.001, 57, 26, 0.005, -39, 177, 0.004, -26, 154, 0.001, 10, 109, 0.009, 28, 120, 0.062, 43, -122, 0.001, -11, -41, 0.002, -15, 28, 0.005, 56, 30, 0.002, 34, 134, 0.099, -4, -55, 0.001, 44, 76, 0.001, 24, 47, 0.004, -11, 122, 0.002, 20, 50, 0.002, 67, 30, 0.000, -28, 30, 0.005, -28, -66, 0.001, 43, 40, 0.008, 24, -98, 0.002, 23, 85, 0.066, 1, 125, 0.035, 14, -85, 0.005, 11, 23, 0.003, 25, 120, 0.105, -13, 41, 0.005, -32, 117, 0.004, 61, 25, 0.005, 58, 29, 0.001, 34, 55, 0.001, -8, 158, 0.000, 10, 49, 0.002, -37, 148, 0.001, -19, -64, 0.002, 53, 35, 0.025, 48, 5, 0.015, 29, 25, 0.001, 44, 136, 0.003, 68, 17, 0.001, 48, 92, 0.000, 63, 10, 0.001, 25, -77, 0.006, -32, -54, 0.006, 40, 63, 0.006, 39, -108, 0.004, 36, 66, 0.011, -35, -60, 0.007, -24, -46, 0.649, 5, 101, 0.073, 39, 37, 0.012, 36, -111, 0.001, -21, -62, 0.000, -41, -73, 0.009, 29, 80, 0.074, 7, 20, 0.002, -17, 14, 0.002, 54, 20, 0.012, 53, 119, 0.000, -6, 28, 0.005, 30, 38, 0.001, 60, -151, 0.001, 6, 32, 0.006, -26, 45, 0.001, 64, 21, 0.003, -31, 151, 0.001, 41, 38, 0.004, 21, 55, 0.001, 18, 103, 0.018, 51, -112, 0.001, 27, -110, 0.005, 64, 12, 0.001, 45, -70, 0.001, 42, 96, 0.001, -16, -70, 0.013, 52, 82, 0.002, 32, 21, 0.004, 31, -2, 0.001, 31, 111, 0.035, 46, 11, 0.008, 19, 73, 0.432, 18, -4, 0.000, 33, 78, 0.000, 66, 23, 0.001, -29, 21, 0.001, 42, 17, 0.000, 19, -70, 0.059, 18, 43, 0.007, 33, -5, 0.029, -5, -76, 0.000, 22, 95, 0.024, 0, 123, 0.014, 37, -25, 0.004, 52, 14, 0.143, 33, 44, 0.012, 13, 45, 0.064, -44, 172, 0.001, 47, -99, 0.001, 9, 50, 0.002, -10, -48, 0.002, 24, 100, 0.043, -9, 16, 0.007, 23, -105, 0.006, -4, 128, 0.004, 8, 10, 0.024, -28, -69, 0.001, 44, 40, 0.016, -4, 20, 0.003, 47, -1, 0.036, 44, -73, 0.010, 62, 27, 0.001, 23, 121, 0.160, 38, 13, 0.002, 34, -116, 0.004, 15, 46, 0.004, 14, 7, 0.016, 11, 51, 0.001, 47, 80, 0.001, -36, 146, 0.001, 62, 6, 0.001, 59, 152, 0.000, 61, 29, 0.004, 49, 139, 0.000, 11, -60, 0.002, -8, 130, 0.000, -9, -71, 0.001, -13, -74, 0.012, 20, 107, 0.273, -37, 176, 0.001, 53, 23, 0.014, -3, 108, 0.004, 48, 41, 0.014, 5, 43, 0.002, 35, -84, 0.017, -19, 49, 0.009, 29, -114, 0.002, 63, 30, 0.001, 40, 35, 0.015, 39, -8, 0.026, -8, 23, 0.008, -45, -67, 0.001, 14, 99, 0.010, -12, -38, 0.013, 40, -78, 0.016, 36, -83, 0.014, 17, 105, 0.034, 50, 28, 0.014, 27, 99, 0.004, -22, -47, 0.035, 41, 116, 0.018, -17, 50, 0.007, -21, 47, 0.008, 51, 90, 0.001, 53, 91, 0.002, -35, -69, 0.001, -28, -51, 0.011, 41, 1, 0.013, 3, -58, 0.000, -25, -58, 0.001, -17, -61, 0.000, 41, 18, 0.002, -29, -53, 0.010, -6, -75, 0.001, -7, 30, 0.004, -26, -68, 0.001, 27, -82, 0.062, 41, -97, 0.003, 3, 104, 0.012, 52, 110, 0.000, 51, 37, 0.022, 32, -7, 0.030, 27, 31, 0.078, 4, 42, 0.002, -1, 113, 0.003, 32, -96, 0.081, 46, 39, 0.009, 8, -74, 0.010, 19, 37, 0.001, 33, 106, 0.038, -5, 31, 0.020, -34, 148, 0.000, 37, 22, 0.010, -2, 110, 0.003, -25, -51, 0.009, -18, -54, 0.001, 22, 91, 0.292, -26, -49, 0.083, 56, 55, 0.010, 37, 11, 0.004, 52, 58, 0.001, 13, 17, 0.001, 43, -66, 0.000, -11, 15, 0.005, 56, 102, 0.010, -38, -71, 0.003, -5, 106, 0.048, 47, 18, 0.025, 44, 4, 0.005, 23, 44, 0.004, 19, 81, 0.016, 34, -99, 0.002, -23, -50, 0.013, 44, -109, 0.000, 62, 55, 0.001, 20, -87, 0.004, 38, 41, 0.021, 15, 18, 0.001, 14, -13, 0.004, 10, -6, 0.008, 61, 65, 0.001, 38, -100, 0.001, 34, -1, 0.027, 15, -93, 0.004, 49, 39, 0.009, -9, -67, 0.000, -13, -62, 0.001, -2, 103, 0.016, 1, 19, 0.002, -10, 121, 0.004, 16, 95, 0.032, -9, 149, 0.001, 26, 85, 0.341, 40, 120, 0.071, 38, 118, 0.079, 53, -116, 0.000, 12, -15, 0.018, 49, -123, 0.034, 36, 10, 0.037, 35, 33, 0.001, -4, -47, 0.001, -31, -60, 0.002, 6, -74, 0.008, 40, -106, 0.001, 39, 109, 0.002, 50, 32, 0.012, 26, 42, 0.001, 41, 80, 0.006, 3, 33, 0.009, 51, 118, 0.001, 50, -113, 0.005, 45, 36, 0.007, 21, 42, 0.013, -3, 24, 0.003, -7, -39, 0.012, 64, -51, 0.000, 60, 16, 0.005, 17, -12, 0.001, 32, 94, 0.001, -17, -39, 0.009, 28, 33, 0.001, 8, -4, 0.005, -30, -61, 0.001, -35, 24, 0.002, 55, 76, 0.002, 51, 49, 0.004, 31, 54, 0.009, 28, -112, 0.000, 27, 59, 0.002, -15, 20, 0.000, 4, 6, 0.011, 21, 77, 0.063, -20, 28, 0.005, -2, -80, 0.024, 31, 103, 0.004, 46, 19, 0.027, 45, 104, 0.000, 55, 78, 0.001, -2, 31, 0.052, 69, 31, 0.000, -25, 32, 0.018, 46, -98, 0.001, 57, 45, 0.002, 37, 58, 0.012, -10, -78, 0.007, 33, 51, 0.017, 28, 93, 0.002, 9, 41, 0.016, -10, 21, 0.001, -15, 31, 0.005, 56, 27, 0.004, 37, -97, 0.018, 13, -11, 0.002, 9, -6, 0.006, 46, 128, 0.045, 43, -70, 0.019, 24, 44, 0.004, 0, 34, 0.082, 67, 65, 0.002, 43, 75, 0.005, 24, -101, 0.007, 23, 48, 0.004, 1, 100, 0.028, -4, 12, 0.001, -23, -70, 0.000, 25, 91, 0.078, 38, 69, 0.055, 35, 129, 0.196, 37, 110, 0.028, 15, 6, 0.002, 11, 11, 0.044, 10, 14, 0.046, 5, -67, 0.002, 53, 74, 0.001, 14, 106, 0.019, 29, 56, 0.005, -9, 128, 0.002, 25, 57, 0.006, 5, 46, 0.004, 2, 20, 0.012, -18, -49, 0.004, -41, 176, 0.007, 68, 38, 0.001, -8, -71, 0.000, 26, 121, 0.004, 39, -81, 0.010, 36, 23, 0.002, 35, -76, 0.003, 12, 13, 0.008, -7, 121, 0.002, -21, -51, 0.006, -12, 19, 0.006, 59, 27, 0.003, 39, 64, 0.013, 36, -90, 0.006, 35, 61, 0.021, 30, -112, 0.001, 39, 81, 0.005, 54, 53, 0.014, 53, 126, 0.001, 50, 68, 0.001, 30, 63, 0.001, 26, 62, 0.002, 7, 0, 0.009, 51, 130, 0.000, -3, -53, 0.001, -37, -62, 0.002, -7, -56, 0.001, -27, -63, 0.001, -13, -37, 0.001, 41, 73, 0.016, 36, 99, 0.001, 30, 105, 0.337, 60, 44, 0.001, 49, 98, 0.000, -35, 139, 0.030, 55, -97, 0.001, 32, 66, 0.007, 31, -87, 0.004, 28, 61, 0.003, 8, 32, 0.005, -16, 38, 0.015, 55, 16, 0.000, 32, -79, 0.006, 42, -85, 0.036, -20, 25, 0.001, 21, 113, 0.018, -1, 41, 0.002, -3, -50, 0.001, 33, 113, 0.142, -6, 143, 0.005, 46, 47, 0.001, 42, 46, 0.008, 22, 49, 0.002, -20, 45, 0.001, 9, -72, 0.004, -14, 21, 0.001, 57, 25, 0.013, 13, 76, 0.077, 28, 121, 0.155, 43, -123, 0.004, 24, 89, 0.342, -15, 27, 0.002, 56, 31, 0.006, 34, 131, 0.006, -4, -54, 0.003, 44, 45, 0.007, 24, 48, 0.004, -9, 34, 0.011, 20, 51, 0.002, 13, 106, 0.005, -28, 31, 0.018, 24, -97, 0.001, 23, 84, 0.040, 1, 128, 0.004, 14, -84, 0.002, 11, 22, 0.002, 25, 119, 0.183, -13, 32, 0.002, 61, 28, 0.002, 58, 30, 0.003, 34, 56, 0.001, 49, 82, 0.001, 10, 50, 0.003, -42, 175, 0.010, -37, 147, 0.004, -19, -65, 0.009, 53, 30, 0.012, 48, 6, 0.010, 5, 18, 0.003, -19, 16, 0.001, 68, 18, 0.001, 48, 85, 0.001, 14, 124, 0.002, 63, 9, 0.001, -32, -53, 0.002, 40, 64, 0.004, -36, -58, 0.012, 36, 67, 0.022, 5, 104, 0.013, 39, 36, 0.016, 36, -110, 0.001, -21, -63, 0.001, 29, 79, 0.175, 14, 77, 0.083, 7, 19, 0.002, -17, 13, 0.001, 54, 17, 0.010, 30, 43, 0.001, 60, -150, 0.000, 6, 29, 0.004, -16, -43, 0.006, -21, -29, 0.001, -35, -55, 0.012, -26, 46, 0.005, 64, 22, 0.000, -31, 154, 0.001, 41, 37, 0.015, 21, -158, 0.007, 18, 104, 0.019, 36, 127, 0.042, 51, -113, 0.006, 45, -71, 0.007, 42, 93, 0.001, 41, -74, 0.035, -16, -69, 0.008, 52, 83, 0.003, -40, -63, 0.000, 32, 22, 0.004, 31, -3, 0.003, 51, -7, 0.000, 31, 110, 0.058, 9, 118, 0.001, 46, 12, 0.024, -2, -51, 0.001, 33, 77, 0.003, -6, 115, 0.001, 66, 24, 0.001, -29, 28, 0.007, 42, 18, 0.003, 19, -71, 0.037, 18, 44, 0.006, 33, -2, 0.004, -5, -77, 0.001, 22, 96, 0.067, 0, 124, 0.016, 52, 15, 0.019, 33, 43, 0.003, 13, 48, 0.001, 9, 49, 0.002, -10, -51, 0.000, 24, 93, 0.150, 23, -106, 0.013, -28, -68, 0.000, 44, 41, 0.018, -52, -72, 0.000, -4, 21, 0.001, 13, 78, 0.151, 47, -2, 0.019, 44, -72, 0.006, 62, 28, 0.005, 23, 120, 0.003, 38, 14, 0.033, 0, -55, 0.001, 34, -119, 0.022, 15, 45, 0.061, 14, 8, 0.014, 11, 50, 0.002, 10, 3, 0.007, -28, 154, 0.038, 62, 11, 0.001, 59, 151, 0.005, 61, 32, 0.001, -28, -63, 0.002, 14, 23, 0.006, 48, -101, 0.002, -9, -72, 0.001, 25, -12, 0.000, -13, -75, 0.013, 20, 108, 0.006, -37, 175, 0.032, 48, 42, 0.004, 29, 32, 0.220, 40, 141, 0.038, 35, -85, 0.015, 48, 121, 0.002, 29, -115, 0.001, 63, 29, 0.001, 40, 36, 0.020, 39, -9, 0.009, 35, -4, 0.008, 16, 42, 0.001, 11, 110, 0.009, -8, 24, 0.013, -12, -37, 0.019, 40, -77, 0.014, 36, -82, 0.019, 17, 108, 0.002, 50, 25, 0.021, 27, 98, 0.003, 41, 115, 0.025, -17, 49, 0.003, -21, 46, 0.002, 51, 89, 0.000, 53, 86, 0.002, 30, 7, 0.001, 26, -10, 0.000, 41, 4, 0.003, -17, -62, 0.001, -6, 19, 0.016, 60, 53, 0.000, 41, 17, 0.038, -6, -74, 0.001, 31, -80, 0.000, -7, 29, 0.004, -44, 147, 0.000, 41, -94, 0.003, 3, 103, 0.017, 52, 111, 0.000, 51, 44, 0.007, 32, -6, 0.037, -36, 118, 0.000, 28, -11, 0.001, 4, 43, 0.002, -1, 112, 0.008, 32, -87, 0.004, 46, 40, 0.010, 8, -73, 0.015, 19, 44, 0.007, 33, 105, 0.019, -5, 30, 0.018, -6, 135, 0.001, 57, 84, 0.001, 37, 21, 0.001, 6, 10, 0.031, -2, 115, 0.004, 10, 99, 0.007, 22, 92, 0.262, 56, 56, 0.004, 52, 59, 0.004, 13, 20, 0.002, 47, -64, 0.001, -10, -55, 0.001, -11, 26, 0.007, 56, 103, 0.001, -38, -70, 0.000, -5, 105, 0.056, 47, 17, 0.027, 44, 5, 0.027, 23, 43, 0.005, 19, 104, 0.005, 34, -98, 0.006, -23, -51, 0.016, -24, 44, 0.006, 44, -108, 0.001, 58, 51, 0.007, 20, -86, 0.004, 38, 42, 0.023, 15, 17, 0.001, 14, -12, 0.005, 10, -9, 0.005, -9, 119, 0.022, 38, -103, 0.001, 34, 0, 0.018, 49, 42, 0.003, 48, -81, 0.001, -13, -63, 0.000, 2, 45, 0.007, 1, 22, 0.003, 16, 96, 0.098, 6, 121, 0.003, 26, 86, 0.350, 40, 113, 0.036, -18, -61, 0.000, 53, -117, 0.000, 50, 91, 0.001, 12, -14, 0.013, 49, -120, 0.000, 48, 141, 0.001, 59, 62, 0.001, 36, 11, 0.077, 35, 24, 0.002, -31, -61, 0.003, 6, -69, 0.001, 40, -105, 0.014, 39, 108, 0.002, 50, 29, 0.023, 26, 39, 0.003, 41, 79, 0.002, 3, 24, 0.003, 2, 113, 0.004, 51, 117, 0.002, 50, -112, 0.000, 45, 35, 0.015, 21, 41, 0.013, -3, 23, 0.002, -6, 39, 0.014, -7, -36, 0.012, 60, 17, 0.005, 17, -13, 0.001, 32, 95, 0.001, 31, -108, 0.001, 28, 34, 0.001, 8, -11, 0.022, -30, -60, 0.001, -34, 151, 0.041, -35, 23, 0.003, 55, 75, 0.003, 51, 72, 0.012, -3, 117, 0.003, 31, 53, 0.020, 28, -111, 0.008, 27, 58, 0.006, 4, 7, 0.064, 21, 80, 0.113, 18, -78, 0.005, -1, 20, 0.003, 31, 102, 0.004, 46, 20, 0.019, 45, 103, 0.001, -38, 143, 0.001, 55, 77, 0.002, -2, 32, 0.027, -6, 107, 0.006, -25, 31, 0.015, 46, -93, 0.001, 57, 48, 0.002, 37, 57, 0.009, 33, 54, 0.001, 28, 94, 0.001, 9, 44, 0.008, -10, 22, 0.001, -9, 25, 0.003, -4, 119, 0.005, 56, 28, 0.005, 37, -86, 0.007, 5, -10, 0.001, 13, -8, 0.008, 9, -7, 0.005, 46, 125, 0.042, 43, -71, 0.012, -14, -172, 0.001, 0, 35, 0.156, -23, 44, 0.004, 43, 74, 0.004, 24, -100, 0.005, 23, 47, 0.004, 1, 99, 0.011, 15, 100, 0.024, 14, 48, 0.003, 25, 78, 0.043, 38, 70, 0.018, 35, 120, 0.104, 37, 109, 0.012, 15, 5, 0.001, 11, 10, 0.053, 48, -124, 0.000, 10, 27, 0.005, 38, -75, 0.012, 53, 73, 0.001, 49, 70, 0.000, 29, 55, 0.005, 14, 17, 0.001, 44, 142, 0.001, 25, 60, 0.002, 5, 45, 0.002, 2, 17, 0.001, -18, -48, 0.005, -22, 27, 0.001, -41, 175, 0.000, -8, -70, 0.001, -12, -75, 0.020, 40, 85, 0.001, 39, -82, 0.025, 35, -77, 0.019, 50, 95, 0.000, 12, 14, 0.011, -12, 20, 0.001, -37, 150, 0.001, 59, 26, 0.002, 39, 63, 0.003, 36, -89, 0.007, 35, 68, 0.006, 30, -115, 0.003, 39, 80, 0.005, 54, 54, 0.013, 53, 125, 0.001, 30, 64, 0.001, 26, 75, 0.074, 7, -1, 0.025, -20, 33, 0.019, 51, 129, 0.004, -3, -58, 0.001, -19, -47, 0.005, -27, -60, 0.006, 41, 76, 0.003, 36, 100, 0.002, -35, -65, 0.002, 30, 106, 0.226, 6, 119, 0.000, 54, 103, 0.001, 32, 67, 0.005, 31, -88, 0.003, 28, 62, 0.003, 8, 25, 0.001, -16, 39, 0.010, 55, 15, 0.003, 31, 25, 0.001, 42, -84, 0.026, -1, 40, 0.004, 33, 116, 0.288, -6, 144, 0.009, 46, 48, 0.011, 42, 59, 0.005, 22, 50, 0.002, 52, -107, 0.000, 9, -73, 0.011, 46, -65, 0.001, -11, -76, 0.012, -14, 22, 0.001, 57, 28, 0.004, 56, 9, 0.009, -39, 179, 0.001, 13, 75, 0.048, 10, 123, 0.073, 28, 122, 0.130, 43, -116, 0.014, 24, 90, 0.403, -33, 153, 0.001, 56, 32, 0.002, 34, 132, 0.034, -4, -53, 0.001, -5, 120, 0.031, 44, 46, 0.003, 24, 73, 0.075, 20, 52, 0.002, 13, 105, 0.011, -28, 32, 0.016, 44, -67, 0.001, 23, 83, 0.047, 38, -9, 0.081, 14, -87, 0.047, 11, 21, 0.001, 25, 122, 0.190, -13, 31, 0.002, 61, 27, 0.002, 58, 43, 0.002, 34, 53, 0.005, 15, -23, 0.005, 49, 81, 0.001, 10, 47, 0.001, -37, 146, 0.003, -19, -70, 0.006, 53, 29, 0.008, 48, 7, 0.029, 5, 17, 0.003, 1, -50, 0.000, -19, 15, 0.001, 48, 86, 0.001, 63, 8, 0.001, -32, -52, 0.016, 40, 57, 0.001, 39, -110, 0.001, 36, 68, 0.021, 50, 131, 0.001, -31, -50, 0.004, 5, 103, 0.024, 39, 35, 0.015, 36, -109, 0.001, -21, -56, 0.001, 29, 106, 0.246, 7, 18, 0.003, -20, -41, 0.008, -17, 28, 0.010, 54, 18, 0.012, 30, 44, 0.006, 6, 30, 0.005, -21, -52, 0.001, -31, 153, 0.003, 41, 40, 0.002, 21, -159, 0.001, 18, 101, 0.022, 36, 128, 0.115, 17, 30, 0.001, 51, -114, 0.015, -17, -46, 0.002, 27, -104, 0.001, 45, -68, 0.001, 42, 94, 0.001, 41, -75, 0.023, -16, -68, 0.006, 21, -78, 0.018, 52, 84, 0.002, -40, -62, 0.001, 32, 23, 0.002, 31, 12, 0.001, 31, 109, 0.098, 46, 9, 0.015, -4, -43, 0.007, 6, -9, 0.008, -29, 27, 0.008, 42, 15, 0.022, 33, -3, 0.008, -5, -78, 0.003, 22, 93, 0.068, 0, 117, 0.002, 52, 16, 0.017, 13, 47, 0.004, -10, -50, 0.001, 24, 94, 0.055, 33, -101, 0.009, 44, 42, 0.019, 58, 93, 0.004, 1, 174, 0.001, -4, 22, 0.001, 13, 77, 0.089, 47, -3, 0.013, 44, -71, 0.003, 62, 25, 0.002, 34, -118, 0.187, 14, 5, 0.012, 11, 49, 0.001, 10, 4, 0.006, 62, 12, 0.000, 61, 31, 0.001, 14, 24, 0.005, 48, -100, 0.001, -9, -73, 0.002, 25, -13, 0.000, 2, 74, 0.001, 20, 93, 0.032, 53, 1, 0.003, 49, -2, 0.005, 48, 43, 0.003, 29, 31, 0.078, 44, 102, 0.000, 40, 142, 0.024, 35, -86, 0.014, 53, -110, 0.001, 48, 122, 0.005, 29, -112, 0.001, 63, 44, 0.000, 40, 29, 0.025, 35, -5, 0.058, 16, 43, 0.006, 11, 109, 0.042, -8, 17, 0.006, 7, 101, 0.034, 40, -76, 0.044, 36, -81, 0.009, 17, 107, 0.026, 50, 26, 0.023, 27, 97, 0.004, 5, -3, 0.062, -17, 48, 0.005, -21, 45, 0.004, 51, 80, 0.001, 53, 85, 0.006, 50, -119, 0.004, 30, 8, 0.001, 41, 3, 0.143, -17, -63, 0.003, 36, 141, 0.080, -6, 20, 0.013, -33, -60, 0.013, 30, 119, 0.077, 58, 10, 0.001, 60, 54, 0.000, 41, 20, 0.031, 17, 26, 0.001, 31, -81, 0.009, -7, 32, 0.003, -44, 148, 0.001, 41, -95, 0.014, 3, 102, 0.141, 51, 43, 0.008, 32, -5, 0.020, 28, -10, 0.003, 4, 44, 0.003, -1, 111, 0.008, 32, -86, 0.013, 46, 37, 0.006, 8, -72, 0.024, 19, 43, 0.007, 33, 108, 0.054, -5, 29, 0.008, 57, 83, 0.000, 19, -100, 0.032, 37, 24, 0.072, -2, 116, 0.005, 10, 100, 0.009, -10, 31, 0.003, 22, 89, 0.856, 56, 49, 0.005, 52, 60, 0.002, 33, -118, 0.125, 13, 19, 0.002, 47, -65, 0.003, -10, -54, 0.001, -11, 25, 0.007, 56, 104, 0.001, -38, -73, 0.008, -3, 141, 0.009, 47, 16, 0.028, 44, 6, 0.008, 23, 42, 0.008, 19, 103, 0.008, 34, -101, 0.002, -23, -48, 0.021, 44, -107, 0.001, 58, 52, 0.002, 38, 47, 0.022, 15, 16, 0.001, 14, -15, 0.021, 10, -8, 0.007, 14, 42, 0.001, 14, 31, 0.003, 38, -102, 0.001, 34, -3, 0.024, 15, -95, 0.000, 49, 41, 0.004, 48, -80, 0.001, 2, 46, 0.039, 1, 21, 0.003, -18, 49, 0.016, 16, 105, 0.041, -22, 56, 0.018, -3, 103, 0.014, 26, 99, 0.005, 40, 114, 0.069, 5, 11, 0.073, -18, -60, 0.001, 16, -16, 0.006, 53, -122, 0.003, 50, 92, 0.001, 12, -13, 0.006, 49, -121, 0.002, 59, 61, 0.007, 40, 1, 0.008, 36, 12, 0.002, -31, -58, 0.003, 6, -68, 0.001, 40, -104, 0.005, 39, 107, 0.032, 54, 63, 0.002, 50, 30, 0.013, 26, 40, 0.002, -22, -50, 0.019, 41, 82, 0.006, 3, 23, 0.006, 2, 114, 0.001, 51, 124, 0.001, 45, 30, 0.007, 21, 44, 0.008, -3, 18, 0.004, -6, 40, 0.022, -7, -37, 0.013, 30, 131, 0.001, 60, 18, 0.005, 17, -10, 0.001, 32, 96, 0.001, 31, -109, 0.002, 28, 35, 0.001, -29, -48, 0.006, 8, -10, 0.025, -30, -63, 0.001, 55, 74, 0.023, 51, 71, 0.002, -3, 120, 0.012, 31, 68, 0.007, 28, -110, 0.005, 27, 57, 0.011, 4, 8, 0.096, 21, 79, 0.092, -1, 19, 0.009, -5, -48, 0.002, 31, 101, 0.002, 46, 17, 0.038, 22, 27, 0.000, -2, 29, 0.031, -8, -77, 0.005, -6, 108, 0.001, -25, 30, 0.025, 5, 10, 0.027, 46, -92, 0.006, -34, 116, 0.002, 57, 47, 0.003, 37, 60, 0.009, 33, 53, 0.003, 28, 95, 0.003, 9, 43, 0.032, -10, 27, 0.004, -15, 33, 0.005, 22, 117, 0.010, 37, -87, 0.015, -4, -80, 0.009, 13, -9, 0.004, 9, -4, 0.004, 46, 126, 0.048, 43, -96, 0.007, 24, 38, 0.001, -22, -54, 0.001, 0, 36, 0.055, 67, 55, 0.001, 47, 52, 0.006, 43, 73, 0.003, 24, -107, 0.026, 23, 46, 0.004, 1, 102, 0.014, 15, 99, 0.005, -23, -68, 0.003, 11, 32, 0.003, 25, 77, 0.055, 38, 75, 0.001, 35, 119, 0.207, 37, 112, 0.068, 15, -12, 0.006, 11, 9, 0.136, 10, 28, 0.004, 38, -74, 0.001, 53, 76, 0.001, 49, 69, 0.000, 44, 143, 0.004, 25, 59, 0.001, 5, 48, 0.001, 2, 18, 0.000, -18, -51, 0.003, -22, 28, 0.004, 48, 99, 0.000, 26, 119, 0.061, -12, -74, 0.005, 40, 86, 0.000, 39, -83, 0.022, 35, -78, 0.038, 12, 15, 0.009, -12, 37, 0.003, 59, 25, 0.019, 39, 62, 0.003, 36, -88, 0.008, 35, 67, 0.008, 30, -114, 0.001, -8, -39, 0.021, 39, 79, 0.005, 54, 59, 0.006, 53, 128, 0.001, 50, 66, 0.000, 30, 61, 0.003, -39, 176, 0.002, 26, 76, 0.127, 7, -2, 0.029, 57, -4, 0.004, 17, -76, 0.010, -3, -59, 0.005, -26, 24, 0.001, -27, -61, 0.001, 45, 66, 0.001, 60, -1, 0.001, 41, 75, 0.002, 30, 95, 0.001, 4, -58, 0.001, -16, -63, 0.000, 32, 68, 0.007, 31, -89, 0.009, 28, 63, 0.002, 8, 26, 0.000, -16, 40, 0.026, -39, -60, 0.002, 55, 14, 0.018, 31, 24, 0.001, 28, -82, 0.043, 42, -87, 0.057, 21, 115, 0.000, -1, 39, 0.007, 33, 115, 0.286, -6, 141, 0.001, 46, 45, 0.004, 45, 134, 0.007, 42, 60, 0.023, -11, 33, 0.003, 22, 55, 0.003, 6, 1, 0.038, 52, -106, 0.008, 9, -70, 0.025, 46, -64, 0.006, -11, -77, 0.007, -14, 19, 0.001, 57, 27, 0.004, 56, 10, 0.017, 52, 5, 0.126, 10, 124, 0.123, 43, -117, 0.000, 24, 91, 0.411, -33, 152, 0.012, 34, 129, 0.013, -4, -52, 0.001, 44, 47, 0.002, 43, -100, 0.000, 24, 74, 0.071, 67, 35, 0.001, 13, 108, 0.009, -28, 33, 0.008, 44, -66, 0.000, 23, 82, 0.047, 20, -156, 0.004, 38, -8, 0.012, 14, -86, 0.014, 11, 28, 0.004, -13, 30, 0.003, 61, 22, 0.005, 58, 44, 0.001, 34, 54, 0.002, 49, 84, 0.002, 48, -95, 0.001, 10, 48, 0.001, -37, 145, 0.004, 53, 32, 0.006, 48, 8, 0.057, 5, 20, 0.003, 1, -51, 0.000, 48, 87, 0.002, -12, -62, 0.003, -32, -59, 0.008, 40, 58, 0.003, 39, -111, 0.001, 36, 53, 0.047, 12, 75, 0.028, -31, -51, 0.055, 39, 34, 0.032, 36, -108, 0.003, -8, -35, 0.064, 29, 105, 0.212, 7, 17, 0.006, -17, 27, 0.004, 54, 23, 0.010, 30, 41, 0.001, 6, 35, 0.002, 12, 120, 0.001, 18, 102, 0.007, 36, 129, 0.047, 17, 29, 0.001, 51, -115, 0.001, 32, 113, 0.188, 27, -105, 0.004, 45, -69, 0.001, 41, -72, 0.068, -16, -75, 0.000, 21, -79, 0.010, 32, 24, 0.000, 31, 11, 0.001, -25, -60, 0.001, 46, 10, 0.014, 33, 79, 0.000, 66, 22, 0.001, -29, 26, 0.001, -48, -66, 0.000, 19, -81, 0.001, 18, 42, 0.008, 33, 0, 0.002, -5, -79, 0.010, 22, 94, 0.006, 0, 118, 0.005, 52, 17, 0.038, 13, 42, 0.006, 9, 51, 0.001, -10, -45, 0.001, 24, 95, 0.015, -35, -61, 0.005, 33, -98, 0.005, 44, 43, 0.017, 43, -8, 0.024, 1, 173, 0.000, -4, 23, 0.003, 13, 80, 0.120, 47, 12, 0.031, 44, -70, 0.007, 62, 26, 0.006, 23, 118, 0.029, 14, 6, 0.023, 10, 1, 0.019, 62, 9, 0.001, 14, 21, 0.002, 11, -63, 0.004, 29, 9, 0.000, -9, -74, 0.005, -13, -69, 0.001, 20, 94, 0.022, 48, 44, 0.003, 44, 103, 0.000, 5, 40, 0.005, 35, -87, 0.006, -19, 46, 0.004, 53, -111, 0.001, 48, 123, 0.007, 29, -113, 0.000, 14, 109, 0.026, 63, 43, 0.000, 40, 30, 0.070, -20, -45, 0.007, 35, -6, 0.007, 16, 44, 0.036, -8, 18, 0.006, 7, 100, 0.034, 40, -83, 0.021, 36, -80, 0.020, 17, 78, 0.099, 50, 23, 0.029, 27, 104, 0.069, -17, 47, 0.007, 51, 79, 0.001, 53, 88, 0.028, 50, -118, 0.001, 30, 5, 0.001, 7, -58, 0.001, 6, 127, 0.005, -17, -64, 0.003, -6, 17, 0.009, -35, -56, 0.057, 30, 120, 0.100, 45, 10, 0.208, 17, 25, 0.001, 32, 133, 0.003, 31, -82, 0.005, -7, 31, 0.005, -26, -65, 0.006, 41, -92, 0.005, 3, 101, 0.003, 52, 113, 0.000, 51, 42, 0.006, 32, -4, 0.008, 28, -9, 0.002, 27, 36, 0.001, 4, 29, 0.002, -1, 110, 0.029, -36, 147, 0.001, 32, -85, 0.010, 31, 80, 0.001, 46, 38, 0.001, 8, -79, 0.009, 19, 42, 0.011, 33, 107, 0.037, -5, 36, 0.018, -6, 133, 0.003, 65, 73, 0.002, 19, -101, 0.045, 37, 23, 0.014, 52, -66, 0.000, -2, 113, 0.002, -10, 32, 0.005, -2, 11, 0.001, 22, 90, 0.238, 56, 50, 0.006, 37, 8, 0.001, 52, 45, 0.005, 13, 14, 0.005, 47, -66, 0.001, 46, 87, 0.001, -11, 28, 0.004, 56, 97, 0.001, -38, -72, 0.014, 47, 15, 0.013, 44, 7, 0.005, 24, -14, 0.000, 23, 41, 0.003, 19, 102, 0.007, 34, -100, 0.001, -36, -62, 0.002, -23, -49, 0.026, 44, -106, 0.001, 62, 54, 0.001, 58, 49, 0.003, 38, 48, 0.017, 34, 43, 0.004, 15, 15, 0.001, 14, -14, 0.005, 10, -11, 0.009, 61, 62, 0.000, 38, -97, 0.007, 34, -2, 0.027, 15, -96, 0.005, 49, 44, 0.003, 48, -71, 0.007, 2, 43, 0.006, -28, -62, 0.001, 1, 24, 0.003, -18, 50, 0.013, 16, 106, 0.015, 53, -8, 0.006, 26, 100, 0.022, 40, 115, 0.058, 38, 121, 0.001, 16, -7, 0.002, -22, -56, 0.002, 12, -12, 0.004, 49, -118, 0.001, 48, 143, 0.001, 5, 121, 0.008, 36, -3, 0.007, -31, -59, 0.003, 6, -71, 0.003, 40, -111, 0.040, 39, 106, 0.001, 54, 64, 0.002, 50, 59, 0.002, 26, 37, 0.001, 41, 81, 0.005, 3, 22, 0.005, -21, 16, 0.000, 51, 123, 0.002, 50, -114, 0.006, 45, 29, 0.033, 21, 43, 0.013, 57, 10, 0.005, -3, 17, 0.006, -6, 37, 0.008, -7, -50, 0.002, 30, 132, 0.001, 60, 19, 0.001, 17, -11, 0.001, 32, 105, 0.018, 31, -110, 0.007, 28, 36, 0.002, 8, -9, 0.012, -30, -62, 0.001, -15, 34, 0.026, 55, 73, 0.003, 51, 70, 0.002, -3, 119, 0.002, 31, 67, 0.005, 28, -109, 0.004, 27, 64, 0.002, 4, 9, 0.029, 21, 90, 0.011, -1, 18, 0.002, -2, -77, 0.002, -5, -49, 0.002, -8, 141, 0.001, 46, 18, 0.018, 43, 116, 0.001, 22, 28, 0.000, -17, -45, 0.001, -2, 30, 0.094, -6, 105, 0.039, -25, 29, 0.009, 46, -95, 0.003, -11, 39, 0.012, 57, 50, 0.003, 37, 59, 0.009, 33, 56, 0.001, 28, 96, 0.004, 9, 30, 0.006, -10, 28, 0.002, -33, -71, 0.024, -15, 36, 0.031, 56, 22, 0.008, 37, -84, 0.015, -4, -79, 0.023, 13, -14, 0.014, 9, -5, 0.017, 46, 131, 0.049, 43, -97, 0.002, 24, 39, 0.003, 0, 29, 0.016, -23, 30, 0.002, 47, 51, 0.001, 43, 48, 0.013, 24, -106, 0.003, 23, 45, 0.004, 1, 101, 0.014, 15, 98, 0.010, -23, -69, 0.001, 14, -61, 0.007, 11, 31, 0.006, -9, -36, 0.030, 25, 80, 0.087, 62, 66, 0.003, 58, 69, 0.004, 38, 76, 0.002, 35, 118, 0.211, 37, 111, 0.047, 15, -13, 0.004, 11, -16, 0.001, 10, 25, 0.004, -9, 114, 0.109, 5, -54, 0.001, 53, 75, 0.002, 49, 72, 0.001, 29, 49, 0.028, 44, 144, 0.002, 25, 46, 0.004, 5, 47, 0.002, 2, 15, 0.002, -18, -50, 0.004, -19, 37, 0.008, 48, 100, 0.000, 26, 120, 0.142, -12, -73, 0.001, 40, 87, 0.000, 39, -84, 0.088, 36, 26, 0.001, 35, -79, 0.019, 12, 16, 0.006, -7, 110, 0.114, -12, 38, 0.003, 59, 32, 0.004, 39, 61, 0.002, 36, -87, 0.011, 35, 66, 0.005, 30, -109, 0.001, -8, -38, 0.014, 7, 44, 0.004, 39, 78, 0.011, 54, 60, 0.007, 30, 62, 0.008, 18, 111, 0.019, 26, 73, 0.038, 7, -3, 0.014, 17, -77, 0.011, -3, -56, 0.003, 12, 125, 0.024, -7, -55, 0.000, -27, -66, 0.001, 45, 65, 0.000, 41, 62, 0.007, -21, 149, 0.001, 30, 96, 0.001, -37, -65, 0.000, 45, -110, 0.001, -16, -62, 0.001, -35, 136, 0.001, -20, -67, 0.000, 54, 101, 0.002, 32, 61, 0.002, 31, -90, 0.005, 28, 64, 0.001, 8, 27, 0.002, -16, 17, 0.002, 55, 13, 0.063, 31, 23, 0.002, 28, -81, 0.062, 42, -86, 0.009, 21, 110, 0.088, -1, 38, 0.081, 33, 118, 0.177, -6, 142, 0.001, 65, 20, 0.001, 46, 46, 0.000, 43, 80, 0.002, 45, 133, 0.010, 22, 56, 0.002, 52, -105, 0.001, 9, -71, 0.004, 46, -67, 0.003, -14, 20, 0.001, 57, 14, 0.006, 56, 11, 0.016, 52, 6, 0.085, -38, 176, 0.009, 24, 92, 0.264, -33, 151, 0.001, 34, 130, 0.002, 44, 48, 0.000, 24, 75, 0.074, 67, 34, 0.003, 13, 107, 0.003, 44, -65, 0.002, 43, 44, 0.023, 58, -6, 0.001, 20, -75, 0.040, 1, 129, 0.001, 11, 27, 0.005, 14, 49, 0.006, -13, 29, 0.033, 49, 109, 0.000, 58, 41, 0.003, -37, -63, 0.002, 34, 51, 0.022, 49, 83, 0.010, 11, -84, 0.006, -8, 122, 0.000, 10, 45, 0.002, -18, 31, 0.020, -19, -68, 0.000, 53, 31, 0.016, 5, 19, 0.001, 48, 88, 0.003, -12, -61, 0.007, -32, -58, 0.006, 40, 59, 0.003, 39, -112, 0.000, 36, 54, 0.023, 16, 49, 0.001, 50, 129, 0.005, 12, 76, 0.126, -20, 26, 0.001, 39, 33, 0.044, -8, -34, 0.062, 29, 108, 0.094, 7, 16, 0.005, 3, -51, 0.000, -17, 26, 0.002, -20, 46, 0.003, 54, 24, 0.021, 30, 42, 0.001, 6, 36, 0.009, -25, -54, 0.007, 12, 121, 0.002, 41, 42, 0.017, -29, -57, 0.001, 21, -157, 0.023, 18, 99, 0.030, 36, 130, 0.020, 17, 32, 0.001, 32, 114, 0.096, -6, -35, 0.039, -7, 22, 0.013, 27, -106, 0.002, 45, -74, 0.013, 42, 108, 0.001, 4, -77, 0.002, 41, -73, 0.080, -16, -74, 0.001, 21, -76, 0.010, 52, 102, 0.000, 31, 10, 0.001, -25, -61, 0.001, 9, 119, 0.005, 46, -1, 0.019, -1, 74, 0.001, 5, -9, 0.006, -29, 25, 0.009, 42, 13, 0.046, 4, 96, 0.004, 18, 39, 0.001, 33, -1, 0.002, -5, -72, 0.000, -30, 152, 0.001, -1, -80, 0.015, -18, -58, 0.000, 22, 99, 0.008, 52, 18, 0.026, 13, 41, 0.011, -10, -44, 0.001, 24, 96, 0.010, 23, -109, 0.002, 33, -99, 0.001, 44, 44, 0.023, 43, -9, 0.001, -4, 24, 0.012, 13, 79, 0.095, 47, 11, 0.026, 44, -69, 0.009, 62, 15, 0.000, 23, 117, 0.332, 38, 17, 0.024, 0, -52, 0.000, 34, -120, 0.007, 14, 11, 0.002, 10, 2, 0.011, 47, 92, 0.000, 62, 10, 0.001, 14, 22, 0.002, 29, 12, 0.000, -9, -75, 0.002, -13, -70, 0.000, 20, 95, 0.038, 49, 0, 0.016, 48, 37, 0.012, 5, 39, 0.023, 35, -96, 0.006, -19, 45, 0.002, -22, -175, 0.002, 48, 124, 0.011, 63, 42, 0.000, 40, 31, 0.038, 16, 37, 0.010, -8, 19, 0.004, 26, -97, 0.009, 7, 99, 0.006, -32, 25, 0.001, 40, -82, 0.026, 36, -79, 0.026, 17, 77, 0.083, -33, -64, 0.004, 50, 24, 0.020, 27, 103, 0.040, -17, 46, 0.002, 51, 78, 0.001, 53, 87, 0.011, 50, -121, 0.000, 30, 6, 0.001, 7, -59, 0.001, 21, -14, 0.000, -17, -65, 0.003, -6, 18, 0.011, 30, 117, 0.114, 64, 53, 0.001, 45, 9, 0.082, 60, 56, 0.000, 41, -122, 0.001, 17, 28, 0.001, -17, -51, 0.002, 31, -83, 0.007, -7, 34, 0.004, -26, -64, 0.002, 41, -93, 0.018, 52, 114, 0.013, 51, 41, 0.007, 28, -8, 0.001, 4, 30, 0.002, -20, 36, 0.005, 32, -84, 0.012, 31, 79, 0.005, 46, 43, 0.003, 8, -78, 0.001, -34, 117, 0.001, 19, 41, 0.002, 6, -4, 0.019, -2, 23, 0.004, -5, 35, 0.018, -6, 134, 0.001, 57, 101, 0.000, 19, -102, 0.029, 37, 34, 0.015, -2, 114, 0.006, -10, 29, 0.005, -11, 21, 0.001, 0, 101, 0.016, -34, 23, 0.006, 56, 51, 0.005, 37, 7, 0.001, 52, 46, 0.004, 33, -116, 0.016, 13, 13, 0.005, 47, -67, 0.001, 46, 88, 0.001, -11, 27, 0.005, 56, 98, 0.001, 47, 14, 0.022, 44, 8, 0.030, 0, 12, 0.001, 23, 40, 0.005, 19, 101, 0.023, 34, -103, 0.002, -23, -46, 0.037, 44, -105, 0.001, 58, 50, 0.021, 20, -99, 0.031, 38, 45, 0.019, 34, 44, 0.010, 10, -10, 0.005, -9, 40, 0.002, 38, -96, 0.002, 34, -5, 0.071, 15, -97, 0.000, 49, 43, 0.002, 48, -70, 0.002, -9, 132, 0.000, 2, 44, 0.006, 1, 23, 0.003, 16, 107, 0.008, 53, -9, 0.005, 26, 97, 0.001, 40, 116, 0.059, 38, 122, 0.030, 16, -6, 0.001, 12, -11, 0.005, 49, -119, 0.006, -31, 23, 0.000, 23, 102, 0.025, 36, -2, 0.012, 7, 135, 0.001, -31, -56, 0.002, 6, -70, 0.002, 3, 12, 0.032, 40, -110, 0.001, 39, 105, 0.001, 54, 61, 0.006, 50, 60, 0.002, 30, 55, 0.002, 26, 38, 0.003, 41, 84, 0.007, 3, 21, 0.010, 2, 112, 0.009, 51, 122, 0.002, 12, 98, 0.000, -13, -41, 0.006, -3, 20, 0.002, -6, 38, 0.009, -7, -51, 0.002, -27, 26, 0.009, 42, 145, 0.002, 60, 20, 0.001, 32, 106, 0.058, 31, -111, 0.004, 28, 37, 0.001, 8, -8, 0.011, -30, -65, 0.002, -35, 20, 0.003, 55, 72, 0.002, 51, 69, 0.002, -3, 114, 0.005, 31, 66, 0.020, 28, -108, 0.001, 27, 63, 0.003, 42, -77, 0.010, 4, 10, 0.032, 21, 89, 0.051, -1, 17, 0.001, -3, -46, 0.002, -5, -50, 0.001, 43, 115, 0.000, -2, 35, 0.035, -6, 106, 0.107, -25, 28, 0.003, 46, -94, 0.003, -4, -51, 0.001, 57, 49, 0.003, 37, 54, 0.001, 33, 55, 0.001, -9, 148, 0.002, 28, 97, 0.001, 9, 29, 0.008, -10, 25, 0.002, -15, 35, 0.043, 56, 23, 0.007, 37, -85, 0.009, 34, 91, 0.000, -4, -78, 0.003, 13, -15, 0.020, 46, 132, 0.035, 43, -98, 0.001, 24, 40, 0.003, -4, 138, 0.002, 0, 30, 0.042, -23, 29, 0.003, -30, -53, 0.013, 47, 50, 0.001, 43, 47, 0.018, 24, -105, 0.005, 23, 76, 0.092, 1, 104, 0.168, -4, -48, 0.002, 14, -60, 0.006, 11, 30, 0.006, -9, -37, 0.008, 25, 79, 0.093, -13, 24, 0.001, 38, 73, 0.001, 35, 117, 0.253, 37, 122, 0.093, 15, -14, 0.003, 10, 26, 0.003, 5, -55, 0.011, 1, -58, 0.000, 53, 70, 0.007, 29, 52, 0.017, 44, 145, 0.001, 25, 45, 0.004, 2, 16, 0.001, -18, -45, 0.001, -8, -75, 0.001, 26, 117, 0.051, -12, -72, 0.000, 25, -98, 0.013, 40, 88, 0.000, 39, -85, 0.015, 36, 27, 0.000, 50, 94, 0.000, 12, 17, 0.006, -7, 109, 0.200, -12, 39, 0.005, 62, 131, 0.000, 59, 31, 0.101, 39, 60, 0.002, 36, -86, 0.033, 35, 65, 0.012, 30, -108, 0.001, -8, -37, 0.015, 7, 43, 0.005, 39, 77, 0.024, -20, 47, 0.018, 54, 57, 0.035, 30, 67, 0.028, 26, 74, 0.058, 7, -4, 0.020, -3, -57, 0.001, 12, 126, 0.009, 45, 68, 0.000, 41, 61, 0.039, 21, 74, 0.096, 30, 93, 0.001, 45, -111, 0.002, 42, 133, 0.006, -29, -63, 0.002, -20, -66, 0.004, 54, 102, 0.001, -40, -71, 0.002, 32, 62, 0.002, 31, -91, 0.004, 28, 65, 0.001, 8, 28, 0.006, -16, 18, 0.000, 55, 44, 0.012, 32, -83, 0.014, 31, 22, 0.007, 28, -80, 0.015, 9, 78, 0.140, 42, -89, 0.018, 21, 109, 0.025, -1, 37, 0.071, 33, 117, 0.201, -6, 155, 0.002, 43, 79, 0.003, 45, 136, 0.000, 42, 58, 0.001, 4, 117, 0.002, 22, 53, 0.002, 52, -104, 0.001, 9, -68, 0.016, 46, -66, 0.001, -14, 17, 0.009, 57, 13, 0.020, 0, 100, 0.021, 52, 7, 0.058, 10, 122, 0.005, -33, -57, 0.002, 24, 85, 0.163, -33, 150, 0.001, 34, 127, 0.024, -5, 117, 0.001, -24, -55, 0.003, 43, -102, 0.000, 24, 76, 0.063, -10, -71, 0.000, 20, 71, 0.023, -36, -71, 0.017, 67, 33, 0.003, 13, 102, 0.046, 44, -64, 0.003, 43, 43, 0.011, 23, 80, 0.077, 20, -74, 0.008, 0, -79, 0.013, 11, 26, 0.008, -13, 36, 0.002, 61, 24, 0.010, 58, 42, 0.003, -10, 126, 0.006, 34, 52, 0.019, 49, 86, 0.001, 11, -85, 0.008, 48, -93, 0.001, 10, 46, 0.001, -18, 32, 0.035, -19, -69, 0.004, 53, 42, 0.006, 29, 24, 0.001, 5, 118, 0.008, 5, 14, 0.003, 14, 39, 0.030, 48, 129, 0.006, -12, -60, 0.002, -32, -57, 0.003, 40, 60, 0.002, 36, 55, 0.024, 16, 50, 0.002, 50, 130, 0.002, 12, 45, 0.010, -45, -68, 0.000, 39, 32, 0.019, 29, 107, 0.281, 7, 15, 0.003, -17, 25, 0.001, 54, 21, 0.025, 53, 94, 0.001, 30, 31, 0.179, 6, 33, 0.003, 12, 122, 0.017, 64, 34, 0.000, 41, 41, 0.002, 18, 100, 0.039, 17, 31, 0.001, 51, -109, 0.000, 32, 115, 0.141, -7, 21, 0.014, 27, -107, 0.002, 45, -75, 0.036, 4, -76, 0.018, 41, -70, 0.018, 3, 127, 0.001, -16, -73, 0.001, 21, -77, 0.017, 52, 103, 0.001, -40, -67, 0.001, 31, 9, 0.001, 32, -111, 0.008, 31, 122, 0.550, 46, 0, 0.018, 18, -11, 0.001, -36, 151, 0.002, 42, 14, 0.027, 4, 97, 0.016, 6, 6, 0.054, 33, 2, 0.001, -5, -73, 0.007, -15, -50, 0.001, 22, 100, 0.016, 0, 120, 0.001, 52, 19, 0.028, 13, 44, 0.051, 47, -88, 0.001, -10, -47, 0.001, 24, 121, 0.101, 23, -110, 0.002, 33, -96, 0.022, -13, 38, 0.000, 44, 13, 0.025, -4, 25, 0.004, 47, 10, 0.054, 44, -68, 0.005, 62, 16, 0.001, 23, 116, 0.123, 38, 18, 0.000, -38, -59, 0.004, 14, 12, 0.001, -36, 145, 0.001, 10, -1, 0.013, 47, 91, 0.001, -9, 123, 0.011, -40, 177, 0.005, 14, 27, 0.001, 48, -105, 0.000, 29, 11, 0.000, -9, -76, 0.004, -13, -71, 0.000, 20, 96, 0.060, 53, -2, 0.204, 49, -1, 0.011, 48, 38, 0.066, 38, 99, 0.001, 35, -97, 0.035, -19, 48, 0.062, 53, -109, 0.001, 48, 117, 0.000, 63, 41, 0.001, 40, 32, 0.026, 16, 38, 0.003, -4, -42, 0.009, -8, 20, 0.002, -12, -49, 0.001, -4, 31, 0.039, -32, 26, 0.001, 40, -81, 0.027, 36, -78, 0.012, 17, 80, 0.105, 50, 21, 0.045, 27, 102, 0.018, 26, 15, 0.001, 3, 48, 0.000, -17, 45, 0.001, 51, 77, 0.001, 50, -120, 0.003, 30, 11, 0.000, -33, -69, 0.005, 7, -60, 0.000, 41, -8, 0.093, 21, -15, 0.000, -17, -66, 0.003, -6, 15, 0.018, 30, 118, 0.100, -37, -72, 0.020, 64, 54, 0.001, 45, 12, 0.083, 60, 57, 0.000, 41, -123, 0.001, 17, 27, 0.001, -7, 33, 0.004, 3, 107, 0.001, 52, 115, 0.001, 51, 32, 0.021, 27, 34, 0.002, 4, 31, 0.006, -53, -70, 0.000, -1, 124, 0.002, 32, -91, 0.004, 31, 78, 0.054, 46, 44, 0.002, 8, -77, 0.002, -4, 142, 0.002, -34, 118, 0.000, 19, 32, 0.001, -2, 24, 0.003, -5, 34, 0.016, 69, 18, 0.000, 57, 104, 0.001, 19, -103, 0.021, 37, 33, 0.016, -2, 135, 0.001, -10, 30, 0.004, -14, -39, 0.020, -4, 115, 0.049, -34, 24, 0.001, 56, 52, 0.005, 52, 47, 0.004, 33, -117, 0.144, 13, 16, 0.003, -27, 152, 0.001, 47, -52, 0.006, 46, 85, 0.004, 24, 125, 0.002, -14, -52, 0.001, -34, -57, 0.003, 56, 99, 0.001, 47, 13, 0.023, 44, 9, 0.051, 24, -12, 0.000, 23, 39, 0.002, 34, -102, 0.002, -23, -47, 0.098, -42, 148, 0.003, 44, -104, 0.000, 58, 47, 0.001, 20, -98, 0.039, 38, 46, 0.021, 35, 80, 0.001, 34, 41, 0.007, 14, -24, 0.001, 10, 35, 0.007, -9, 39, 0.003, 61, 64, 0.001, 38, -99, 0.001, 34, -4, 0.044, 49, 14, 0.023, 48, -69, 0.001, 2, 41, 0.002, 1, 26, 0.002, 16, 108, 0.047, -22, 35, 0.003, 48, 74, 0.000, 26, 98, 0.001, 40, 109, 0.005, 38, 127, 0.062, 16, -5, 0.000, 50, 87, 0.000, 12, -10, 0.003, 49, -116, 0.001, -31, 26, 0.002, 40, 4, 0.000, -20, -40, 0.015, -31, -57, 0.003, 6, -65, 0.000, 3, 11, 0.009, 40, -109, 0.001, 39, 104, 0.003, 54, 62, 0.012, 50, 57, 0.002, 30, 56, 0.007, 26, 51, 0.019, 41, 83, 0.005, 3, 28, 0.004, -20, 29, 0.005, 51, 121, 0.001, 12, 99, 0.009, 45, 31, 0.001, 21, 37, 0.000, 18, 121, 0.014, -3, 19, 0.006, -7, -48, 0.002, -27, 25, 0.003, 17, -9, 0.000, 54, 111, 0.000, 32, 107, 0.066, 31, -112, 0.001, 28, 38, 0.001, -30, -64, 0.001, -35, 19, 0.038, 55, 71, 0.001, 52, 143, 0.000, 51, 76, 0.005, -3, 113, 0.008, 31, 65, 0.011, 28, -107, 0.004, 27, 62, 0.003, 42, -76, 0.019, 4, 11, 0.009, 22, -81, 0.015, 21, 92, 0.022, -1, 16, 0.002, -39, -67, 0.005, -2, -79, 0.031, -5, -51, 0.001, 43, 114, 0.001, 42, 67, 0.001, 22, 26, 0.000, -2, 36, 0.007, -25, 27, 0.003, 46, -105, 0.000, 57, 52, 0.002, 33, 58, 0.001, 28, 98, 0.001, 9, 32, 0.004, -10, 26, 0.004, -15, 38, 0.005, 56, 24, 0.013, 37, -90, 0.004, 34, 92, 0.000, -12, -63, 0.001, 13, -12, 0.002, 46, 129, 0.017, 43, -99, 0.001, 24, 33, 0.027, -14, -176, 0.000, 0, 31, 0.047, -23, 32, 0.001, 47, 49, 0.001, 43, 46, 0.030, 24, -104, 0.008, 23, 75, 0.094, 1, 103, 0.013, 15, 96, 0.009, 11, 29, 0.003, -43, -70, 0.000, -9, -38, 0.005, 25, 82, 0.233, -13, 23, 0.001, 38, 74, 0.000, 37, 121, 0.125, 15, -15, 0.006, 10, 23, 0.001, -32, 142, 0.001, 5, -52, 0.001, 53, 69, 0.002, 49, 74, 0.015, 29, 51, 0.009, 44, 146, 0.000, 25, 48, 0.003, 2, 13, 0.003, -18, -44, 0.006, -29, -49, 0.020, -8, -74, 0.003, 26, 118, 0.047, -12, -71, 0.000, 25, -99, 0.006, 40, 81, 0.005, 39, -86, 0.046, 36, 28, 0.002, 50, 123, 0.002, 12, 18, 0.003, -7, 112, 0.076, -12, 40, 0.008, 59, 30, 0.046, 39, 59, 0.003, 36, -85, 0.007, 35, 56, 0.001, -7, 157, 0.000, 30, -111, 0.001, -8, -36, 0.010, 7, 42, 0.002, -17, 36, 0.037, 54, 58, 0.003, 50, 61, 0.000, 30, 68, 0.017, 26, 71, 0.007, 7, -5, 0.023, -26, 27, 0.006, -27, -64, 0.004, 45, 67, 0.001, 41, 64, 0.000, 21, 73, 0.150, 57, -3, 0.003, 30, 94, 0.001, 45, -108, 0.004, 42, 134, 0.000, -16, -60, 0.000, 21, -102, 0.034, -20, -65, 0.010, -40, -70, 0.000, 32, 63, 0.005, 28, 66, 0.002, 8, 21, 0.000, -16, 19, 0.000, 55, 43, 0.013, 32, -82, 0.005, 31, 21, 0.016, 9, 77, 0.251, 42, -88, 0.048, 19, 55, 0.000, 21, 112, 0.077, 33, 120, 0.232, -6, 156, 0.001, 65, 22, 0.002, 43, 78, 0.015, 45, 135, 0.001, 4, 118, 0.011, 22, 54, 0.003, 52, -103, 0.000, 9, -69, 0.029, -14, 18, 0.007, 57, 16, 0.003, 52, 8, 0.043, 10, 119, 0.002, 24, 86, 0.172, -33, 149, 0.002, 34, 128, 0.028, -5, 124, 0.002, -24, -54, 0.004, 47, -124, 0.000, 43, -103, 0.001, 24, 69, 0.041, -11, 121, 0.001, 20, 72, 0.008, 13, 101, 0.315, 44, -63, 0.012, 43, 42, 0.008, 23, 79, 0.064, 38, -5, 0.005, 0, -78, 0.015, 11, 25, 0.007, -9, -34, 0.054, 25, 110, 0.043, -13, 35, 0.006, 61, 23, 0.003, 58, 39, 0.001, 34, 49, 0.040, 49, 85, 0.003, 11, -86, 0.024, 20, 85, 0.049, -18, 29, 0.007, 53, 41, 0.006, 5, 13, 0.004, 48, 130, 0.013, 63, 20, 0.001, -32, -56, 0.003, 40, 53, 0.001, 36, 56, 0.004, 16, 51, 0.001, 50, 127, 0.004, 12, 46, 0.006, 39, 31, 0.016, 54, 11, 0.022, 16, -62, 0.000, 29, 102, 0.003, 7, 14, 0.004, 41, 126, 0.027, -17, 24, 0.002, 54, 22, 0.009, 53, 93, 0.001, 30, 32, 0.652, 6, 34, 0.001, 12, 123, 0.007, 64, 35, 0.001, 41, 44, 0.015, 18, 97, 0.034, 17, 34, 0.003, -21, 119, 0.000, 32, 116, 0.197, -7, 24, 0.056, 27, -100, 0.001, 45, -72, 0.013, 41, -71, 0.052, 3, 126, 0.004, -16, -72, 0.002, 21, -82, 0.002, 52, 104, 0.015, -40, -66, 0.001, 32, 35, 0.064, 31, 8, 0.001, 32, -110, 0.020, 31, 121, 0.307, -29, -66, 0.001, -38, 144, 0.004, 42, 27, 0.015, 4, 98, 0.020, 19, -76, 0.001, 18, 37, 0.005, 33, 1, 0.001, -5, -74, 0.001, 22, 97, 0.044, 0, 129, 0.001, 52, 20, 0.027, 13, 43, 0.001, -10, -46, 0.000, 24, 122, 0.147, -9, 15, 0.005, -4, 129, 0.016, 33, -97, 0.011, 44, 14, 0.001, -8, 145, 0.001, -4, 26, 0.002, 47, 9, 0.101, -13, -50, 0.001, 23, 115, 0.107, 38, 23, 0.009, 14, 9, 0.011, 10, 0, 0.030, 47, 90, 0.001, 14, 28, 0.001, 5, -53, 0.000, -8, 128, 0.000, 29, 6, 0.001, -9, -77, 0.008, 20, 97, 0.035, 53, -3, 0.033, -3, 107, 0.011, 49, 2, 0.040, 48, 39, 0.083, 38, 100, 0.001, 35, -98, 0.003, -19, 47, 0.008, 53, -114, 0.002, 48, 118, 0.000, 40, 25, 0.004, 16, 39, 0.011, 26, -99, 0.003, -12, -48, 0.002, -32, 27, 0.006, 40, -80, 0.047, 36, -77, 0.006, 17, 79, 0.275, 50, 22, 0.037, 12, -71, 0.001, 27, 101, 0.012, 7, 50, 0.001, 41, 106, 0.001, 3, 47, 0.004, -16, 167, 0.001, -21, 49, 0.009, 51, 84, 0.001, 30, 12, 0.000, 7, -61, 0.001, 6, 126, 0.048, -25, -59, 0.001, -17, -67, 0.017, -6, 16, 0.015, 30, 123, 0.025, 8, 127, 0.014, 45, 11, 0.063, 60, 58, 0.000, -29, -54, 0.008, -6, -65, 0.000, -7, 36, 0.015, -26, -66, 0.000, 41, -107, 0.000, 52, 116, 0.001, 51, 31, 0.005, 32, -9, 0.008, 4, 32, 0.003, -53, -71, 0.000, -1, 123, 0.004, 32, -90, 0.016, 31, 77, 0.105, 46, 41, 0.007, 8, -76, 0.012, 19, 31, 0.001, -2, 21, 0.001, -5, 33, 0.013, 48, 95, 0.000, 5, -2, 0.022, -10, 148, 0.010, 37, 36, 0.036, -2, 136, 0.001, -10, 35, 0.012, -14, -38, 0.003, -18, -65, 0.007, -34, 21, 0.002, 56, 45, 0.016, 52, 48, 0.010, 13, 15, 0.003, 47, -53, 0.003, 46, 86, 0.001, 24, 126, 0.002, -14, -55, 0.000, -34, -56, 0.002, 56, 100, 0.000, -38, -61, 0.002, 47, 28, 0.040, 44, 10, 0.027, -11, 166, 0.000, 19, 107, 0.001, -23, -44, 0.029, -24, 33, 0.001, 44, -103, 0.004, 58, 48, 0.001, 20, -97, 0.050, 35, 79, 0.001, 34, 42, 0.004, 15, 28, 0.001, 10, 36, 0.003, -9, 38, 0.003, 61, 63, 0.000, 38, -98, 0.002, 49, 13, 0.025, 48, -68, 0.003, -2, 104, 0.031, 2, 42, 0.002, 1, 25, 0.003, 16, 101, 0.045, -22, 36, 0.001, 49, -98, 0.002, 48, 75, 0.000, 26, 95, 0.077, 40, 110, 0.041, 2, -71, 0.001, 1, 10, 0.002, 38, 128, 0.036, 16, -4, 0.001, 12, -9, 0.004, 49, -117, 0.002, 63, 76, 0.003, -31, 25, 0.001, 40, -3, 0.180, 35, 27, 0.001, -17, 146, 0.004, -31, -54, 0.003, 3, 10, 0.020, 39, 103, 0.002, 54, 67, 0.002, 50, 58, 0.011, 30, 53, 0.010, 27, 129, 0.002, 6, 47, 0.004, 3, 27, 0.003, 51, 112, 0.001, 12, 100, 0.015, 45, 26, 0.039, 21, 40, 0.011, 18, 122, 0.013, -14, -45, 0.001, -3, 14, 0.001, -7, -49, 0.003, 30, 87, 0.000, -27, 28, 0.114, 42, 143, 0.006, 60, 22, 0.002, 32, 108, 0.051, -17, -40, 0.005, 31, -113, 0.001, 28, 39, 0.001, -30, -67, 0.001, 55, 70, 0.002, 51, 75, 0.000, -3, 116, 0.031, 31, 64, 0.003, 28, -106, 0.012, 27, 61, 0.002, 42, -79, 0.011, 4, 12, 0.017, 22, -80, 0.029, 21, 91, 0.009, -1, 15, 0.001, -2, -78, 0.031, -5, -44, 0.014, 43, 113, 0.002, 42, 68, 0.001, 6, -3, 0.022, -2, 33, 0.000, -6, 104, 0.002, -25, 26, 0.007, -28, -61, 0.002, 57, 51, 0.002, 37, 56, 0.015, 33, 57, 0.000, 28, 99, 0.002, 9, 31, 0.004, -15, 37, 0.006, 22, 121, 0.098, 56, 17, 0.003, 37, -91, 0.003, 13, -13, 0.005, 46, 130, 0.022, 43, -92, 0.005, 24, 34, 0.003, -22, 166, 0.001, 0, 32, 0.031, -23, 31, 0.021, -5, 144, 0.003, 47, 48, 0.001, 43, 45, 0.021, 24, -111, 0.002, 23, 74, 0.102, 15, 95, 0.004, 11, 36, 0.002, -43, -71, 0.001, -9, -39, 0.006, 25, 81, 0.113, -13, 22, 0.001, 15, -16, 0.021, 48, -119, 0.001, 10, 24, 0.004, 5, 38, 0.024, 20, 122, 0.000, 53, 72, 0.001, 49, 73, 0.017, -1, -48, 0.003, 29, 46, 0.002, -9, 127, 0.006, 25, 47, 0.004, 2, 14, 0.002, -18, -47, 0.002, -19, 34, 0.006, 49, -102, 0.001, -8, -73, 0.001, -12, -70, 0.000, 40, 82, 0.007, 39, -87, 0.009, 50, 124, 0.002, 12, 19, 0.002, -7, 111, 0.134, 7, 152, 0.002, 62, 129, 0.002, 59, 29, 0.007, 39, 58, 0.002, 36, -84, 0.009, 35, 55, 0.002, 30, -110, 0.002, -8, -43, 0.002, 7, 41, 0.015, -17, 35, 0.013, 54, 31, 0.013, 50, 62, 0.000, 30, 65, 0.001, 26, 72, 0.009, 7, -6, 0.019, -27, -50, 0.008, -26, 28, 0.027, -27, -65, 0.029, 45, 62, 0.001, 41, 63, 0.002, 21, 76, 0.092]], ["2000", [6, 159, 0.001, 30, 99, 0.002, 45, -109, 0.001, 42, 115, 0.006, 4, -54, 0.000, -16, -67, 0.018, 21, -103, 0.006, -20, -64, 0.004, -40, -69, 0.001, 32, 64, 0.001, 28, 67, 0.008, 8, 22, 0.000, -15, 133, 0.000, -16, 20, 0.000, 55, 42, 0.006, 32, -81, 0.011, 31, 36, 0.098, 9, 80, 0.013, 42, -91, 0.007, 19, 54, 0.001, 21, 111, 0.186, -3, -51, 0.001, 33, 119, 0.164, 65, 21, 0.001, 46, 49, 0.010, 43, 77, 0.041, 45, 130, 0.018, 4, 119, 0.007, 22, 59, 0.003, 9, -82, 0.003, 46, -60, 0.002, -14, 15, 0.008, -15, -76, 0.001, 57, 15, 0.007, 52, 9, 0.060, 10, 120, 0.005, 24, 87, 0.168, 0, -51, 0.008, -5, 123, 0.018, -24, -53, 0.009, -28, -58, 0.018, 43, 0, 0.019, 24, 70, 0.029, -9, 33, 0.016, 20, 73, 0.046, 13, 104, 0.046, 43, 41, 0.009, 23, 78, 0.115, 20, -72, 0.001, 38, -4, 0.006, 0, -77, 0.020, -9, -35, 0.062, 25, 109, 0.036, -13, 34, 0.018, 61, 18, 0.001, 58, 40, 0.002, 34, 50, 0.030, 49, 88, 0.000, 48, -99, 0.001, -42, 176, 0.002, 20, 86, 0.178, -18, 30, 0.009, 53, 44, 0.006, 29, 18, 0.001, 5, 16, 0.004, 49, -74, 0.000, 48, 131, 0.006, 14, 121, 0.272, 63, 19, 0.001, 40, 54, 0.001, 36, 57, 0.005, 16, 52, 0.000, 50, 128, 0.010, 39, 30, 0.026, 54, 12, 0.007, 16, -61, 0.012, 27, 80, 0.237, 29, 101, 0.002, 14, 78, 0.075, 7, 13, 0.003, 41, 125, 0.025, -17, 23, 0.002, 54, 27, 0.009, 30, 29, 0.001, 41, 142, 0.003, 12, 124, 0.029, 41, 43, 0.013, 18, 98, 0.004, 36, 117, 0.203, 17, 33, 0.004, 32, 109, 0.047, -7, 23, 0.015, 27, -101, 0.005, 45, -73, 0.128, 21, -83, 0.000, 55, -131, 0.001, 52, 105, 0.024, -40, -65, 0.000, 32, 36, 0.132, 31, 7, 0.001, 32, -109, 0.001, 31, 120, 0.209, 9, 124, 0.046, 46, -2, 0.001, -2, -50, 0.003, 18, -13, 0.001, 42, 28, 0.015, 4, 99, 0.009, 19, -77, 0.003, 18, 38, 0.008, 33, 4, 0.006, -5, -75, 0.000, -14, 51, 0.001, -15, -48, 0.002, 57, -5, 0.000, 52, 37, 0.017, 13, 38, 0.017, -10, -41, 0.002, -11, 36, 0.008, -18, -71, 0.004, -20, 27, 0.002, 56, 89, 0.001, 33, -94, 0.007, 44, 15, 0.001, 43, -4, 0.006, 20, 37, 0.000, -4, 27, 0.009, 47, 8, 0.078, 44, -98, 0.001, 23, 114, 0.481, 38, 24, 0.061, 14, 10, 0.008, 10, -3, 0.010, 47, 89, 0.002, -34, 152, 0.087, 38, -121, 0.073, 14, 25, 0.002, 29, 5, 0.001, -9, -78, 0.019, 20, 98, 0.021, -19, -39, 0.004, 53, 0, 0.048, -23, 150, 0.000, 49, 1, 0.029, 48, 40, 0.044, 38, 97, 0.001, 35, -99, 0.001, 16, 1, 0.004, 53, -115, 0.000, 48, 119, 0.001, 29, -85, 0.000, 63, 39, 0.001, 40, 26, 0.002, 16, 40, 0.002, 11, 120, 0.002, -8, 14, 0.003, 26, -98, 0.024, -12, -47, 0.001, -32, 28, 0.011, 40, -87, 0.006, 36, -76, 0.040, 17, 82, 0.057, 50, 19, 0.091, 12, -70, 0.002, 27, 108, 0.078, 7, 49, 0.003, 41, 105, 0.000, 3, 46, 0.006, -16, 168, 0.001, -21, 56, 0.005, 51, 83, 0.002, 50, -122, 0.000, 30, 9, 0.001, 7, -62, 0.002, 41, -6, 0.004, -17, -52, 0.001, -38, -58, 0.003, -6, 13, 0.020, 45, 6, 0.050, 60, 59, 0.000, 41, -121, 0.000, 17, -3, 0.001, -6, -64, 0.000, -7, 35, 0.003, -26, -61, 0.001, 41, -104, 0.003, 51, 30, 0.004, 32, -8, 0.046, 27, 40, 0.002, 4, 33, 0.003, 21, 98, 0.010, -1, 122, 0.002, 32, -89, 0.006, 31, 92, 0.001, 46, 42, 0.008, 8, -83, 0.003, 22, 36, 0.000, 19, 30, 0.001, -10, -64, 0.003, -2, 22, 0.002, -5, 40, 0.040, 69, 20, 0.001, 37, 35, 0.025, -2, 133, 0.002, 10, 93, 0.001, -10, 36, 0.010, -14, -41, 0.006, -34, 22, 0.001, 56, 46, 0.003, 37, -108, 0.001, 52, 49, 0.003, 13, 10, 0.022, 46, 91, 0.001, -11, 24, 0.003, -34, -59, 0.006, 56, 93, 0.025, -38, -60, 0.002, -30, -57, 0.004, 47, 27, 0.037, 44, 11, 0.058, -33, -65, 0.002, 19, 106, 0.128, -23, -45, 0.034, -24, 34, 0.001, 58, 45, 0.001, 20, -96, 0.004, 35, 78, 0.002, -38, 150, 0.000, 34, 39, 0.005, 15, 27, 0.001, 10, 33, 0.003, 47, 109, 0.000, -9, 118, 0.013, 38, -93, 0.005, 34, -6, 0.051, 15, -84, 0.001, 49, 16, 0.022, 25, 38, 0.002, 2, 39, 0.001, 1, 28, 0.005, 16, 102, 0.028, 6, 122, 0.010, 68, 65, 0.000, 49, -99, 0.002, 48, 76, 0.000, 26, 96, 0.009, 40, 111, 0.045, 2, -70, 0.000, 38, 125, 0.004, 16, -11, 0.004, 50, 85, 0.001, 12, -8, 0.042, 63, 75, 0.001, -31, 28, 0.012, -20, -49, 0.004, 40, -2, 0.002, 36, 1, 0.016, 35, 26, 0.010, -31, -55, 0.005, 6, -67, 0.001, 3, 9, 0.004, 40, -115, 0.001, 39, 102, 0.000, 54, 68, 0.002, 50, 55, 0.001, 30, 54, 0.005, 26, 49, 0.002, 60, -135, 0.001, 6, 48, 0.004, 3, 26, 0.003, 51, 111, 0.001, 12, 101, 0.007, 45, 25, 0.024, -3, 13, 0.002, -7, -46, 0.002, 30, 88, 0.001, -27, 27, 0.016, 42, 144, 0.007, 60, 23, 0.012, 32, 101, 0.002, 31, -114, 0.004, 28, 40, 0.002, 8, -13, 0.030, -30, -66, 0.003, 55, 69, 0.002, 51, 74, 0.001, -3, 115, 0.015, 31, 63, 0.001, 28, -105, 0.008, 27, 68, 0.059, 42, -78, 0.035, 22, -83, 0.021, 21, 86, 0.064, -1, 14, 0.001, -2, -57, 0.000, -5, -45, 0.007, 32, -117, 0.063, 43, 120, 0.010, 45, 93, 0.000, 55, 103, 0.001, -2, 34, 0.015, -25, 25, 0.001, 57, 70, 0.000, 37, 55, 0.013, 33, 60, 0.004, 28, 100, 0.004, 9, 34, 0.005, -9, 24, 0.003, -4, 120, 0.047, 22, 122, 0.002, 37, -88, 0.008, 8, 101, 0.012, 46, 119, 0.001, 43, -93, 0.005, -11, 124, 0.017, 0, 41, 0.005, -23, 34, 0.001, -5, 143, 0.003, 47, 47, 0.001, 43, 52, 0.006, 24, -110, 0.003, 23, 73, 0.233, 1, 105, 0.026, -4, -45, 0.011, 11, 35, 0.006, 14, 45, 0.072, 25, 84, 0.322, -13, 21, 0.001, 58, 17, 0.007, 37, 123, 0.051, 34, 75, 0.093, -4, 130, 0.003, 11, -12, 0.024, 48, -118, 0.001, 10, 21, 0.001, 5, -58, 0.001, 1, -57, 0.000, 53, 71, 0.002, 49, 76, 0.001, 29, 45, 0.002, 14, 18, 0.001, 25, 50, 0.002, 2, 11, 0.007, -18, -46, 0.003, -19, 33, 0.019, 49, -103, 0.001, -8, -72, 0.001, -12, -69, 0.001, 25, -97, 0.023, 40, 83, 0.002, 39, -88, 0.009, 50, 121, 0.001, 12, 20, 0.002, -7, 114, 0.027, 14, 107, 0.004, -37, 149, 0.001, 62, 130, 0.003, 59, 36, 0.001, 39, 57, 0.001, 36, -99, 0.001, 35, 54, 0.006, 30, -89, 0.015, -8, -42, 0.003, 7, 40, 0.047, -17, 34, 0.010, 54, 32, 0.015, -4, -50, 0.001, 30, 66, 0.001, 26, 69, 0.078, 7, -7, 0.023, -20, 34, 0.019, -3, -60, 0.037, -19, -44, 0.004, -26, 25, 0.002, -27, -54, 0.008, 21, 75, 0.087, 30, 100, 0.002, 42, 116, 0.005, 4, -53, 0.000, -16, -66, 0.001, 21, -100, 0.016, -20, -63, 0.001, -40, -68, 0.002, 32, 73, 0.094, 28, 68, 0.018, -16, 13, 0.001, -5, -41, 0.006, 55, 41, 0.007, 32, -80, 0.014, 31, 35, 0.103, 9, 79, 0.135, 42, -90, 0.007, 19, 53, 0.002, -2, -45, 0.004, 65, 24, 0.000, 46, 50, 0.001, 43, 84, 0.008, 45, 129, 0.024, 4, 120, 0.003, 22, 60, 0.004, 9, -83, 0.028, 46, -63, 0.003, -14, 16, 0.016, 52, 10, 0.064, 24, 88, 0.204, 0, -50, 0.004, 34, 126, 0.001, -5, 122, 0.008, -24, -52, 0.016, -28, -57, 0.002, 43, -1, 0.024, 24, 71, 0.014, 58, 83, 0.002, 20, 74, 0.125, -1, 11, 0.001, 13, 103, 0.031, 43, 16, 0.004, 23, 77, 0.080, 38, -7, 0.009, 0, -76, 0.008, 47, 100, 0.000, 25, 112, 0.073, -13, 33, 0.006, 61, 17, 0.003, 58, 37, 0.002, 34, 47, 0.028, 49, 87, 0.001, 48, -98, 0.001, 20, 87, 0.188, -33, -56, 0.002, -18, 35, 0.006, 53, 43, 0.005, 29, 17, 0.001, 5, 15, 0.003, 48, 132, 0.001, -19, 178, 0.001, 63, 18, 0.001, 36, 58, 0.010, 16, 45, 0.017, 50, 125, 0.001, 39, 29, 0.033, 54, 9, 0.005, -55, -66, 0.001, 27, 79, 0.311, 29, 104, 0.111, 41, 128, 0.013, -17, 22, 0.000, 54, 28, 0.009, 53, 95, 0.000, 30, 30, 0.021, 41, 141, 0.016, -21, -53, 0.000, 64, 29, 0.001, 41, 30, 0.111, 18, 95, 0.015, 36, 118, 0.278, 17, 36, 0.003, 32, 110, 0.040, -7, 26, 0.006, 27, -102, 0.000, 45, -78, 0.000, 41, -69, 0.001, 21, -80, 0.001, 52, 106, 0.001, 31, 6, 0.001, -16, 49, 0.009, 32, -108, 0.001, 31, 119, 0.238, 9, 123, 0.026, 46, 3, 0.009, 18, -12, 0.001, 6, -8, 0.025, 66, 15, 0.001, 6, 117, 0.013, 42, 25, 0.031, 18, 35, 0.001, 33, 3, 0.004, 14, 40, 0.035, -15, -49, 0.004, 22, 103, 0.012, 52, 38, 0.007, 13, 37, 0.006, 47, -91, 0.001, -10, -40, 0.014, -11, 35, 0.011, 56, 90, 0.002, 33, -95, 0.005, 44, 16, 0.011, 43, -5, 0.031, 58, 103, 0.004, -4, 28, 0.006, -10, 161, 0.002, 47, 7, 0.029, 44, -97, 0.002, -13, -44, 0.003, 23, 113, 0.154, 38, 21, 0.003, 14, -1, 0.006, 10, -2, 0.016, 47, 88, 0.003, 38, -120, 0.007, 6, 39, 0.113, 14, 26, 0.001, 29, 8, 0.001, -9, -79, 0.019, 20, 99, 0.004, 53, -1, 0.157, 49, 4, 0.023, 48, 17, 0.082, 40, 140, 0.001, 38, 98, 0.001, 35, -92, 0.006, 16, 2, 0.001, 53, -112, 0.002, 12, -3, 0.016, 48, 120, 0.002, 29, -90, 0.031, 40, 27, 0.012, 16, 17, 0.000, -8, 15, 0.007, -12, -46, 0.001, 40, -86, 0.017, 39, 129, 0.001, 17, 81, 0.079, 50, 20, 0.092, 12, -69, 0.003, 27, 107, 0.114, 7, 48, 0.004, 41, 108, 0.017, 3, 45, 0.006, 51, 82, 0.009, 50, -125, 0.001, -15, 50, 0.012, 30, 10, 0.001, 7, -63, 0.006, 41, -7, 0.015, -17, -53, 0.001, -6, 14, 0.032, 30, 121, 0.338, 23, 96, 0.024, 45, 5, 0.086, 60, 60, 0.002, -4, -41, 0.010, 17, 0, 0.001, -6, -67, 0.000, 28, 13, 0.001, -26, -60, 0.001, 41, -105, 0.001, -8, 132, 0.002, 51, 29, 0.006, 32, 1, 0.001, 27, 39, 0.002, 4, 34, 0.003, 21, 97, 0.050, -1, 121, 0.004, -3, -42, 0.003, 32, -88, 0.005, 46, 31, 0.054, 8, -82, 0.016, 19, 29, 0.001, -2, 27, 0.003, -5, 39, 0.029, 69, 19, 0.001, 57, 105, 0.000, 37, 30, 0.021, -2, 134, 0.002, -10, 33, 0.009, -14, -40, 0.008, -34, 27, 0.005, 56, 47, 0.004, 52, 50, 0.005, 13, 9, 0.042, 47, -55, 0.001, 9, 6, 0.017, 46, 92, 0.000, -11, 23, 0.003, -14, -57, 0.001, -4, 134, 0.001, -34, -58, 0.004, 56, 94, 0.004, -38, -63, 0.001, 47, 26, 0.016, 44, 12, 0.057, 19, 105, 0.010, -8, 142, 0.001, -24, 35, 0.003, 58, 46, 0.002, 38, 49, 0.034, 35, 77, 0.011, 37, 98, 0.001, 34, 40, 0.006, 15, 26, 0.001, 10, 34, 0.004, 47, 124, 0.051, -33, 30, 0.001, 38, -92, 0.010, -8, 139, 0.000, 15, -85, 0.006, 49, 15, 0.024, 2, 40, 0.002, 1, 27, 0.001, 16, 103, 0.065, -22, 34, 0.002, 49, -96, 0.003, 26, 93, 0.155, 25, -106, 0.001, 40, 112, 0.050, 2, -73, 0.001, 1, 12, 0.004, 38, 126, 0.132, 16, -10, 0.002, 50, 86, 0.000, 12, -7, 0.016, -31, 27, 0.002, 40, -1, 0.003, 36, 2, 0.034, 35, 25, 0.007, -7, 150, 0.001, -31, -52, 0.005, 6, -66, 0.001, 45, -120, 0.000, 39, 101, 0.017, 54, 65, 0.002, 50, 56, 0.001, 30, 59, 0.005, 26, 50, 0.002, 6, 45, 0.002, 3, 25, 0.002, 17, -66, 0.004, -21, 19, 0.001, 51, 110, 0.001, 12, 102, 0.023, 45, 28, 0.033, -25, -64, 0.005, -3, 16, 0.001, -7, -47, 0.004, 45, -87, 0.004, 42, 141, 0.009, 60, 24, 0.005, -29, -67, 0.001, 17, -4, 0.001, 32, 102, 0.002, 31, -115, 0.013, 28, 41, 0.002, 8, -12, 0.029, 55, 68, 0.002, 51, 73, 0.001, 31, 62, 0.007, 28, -104, 0.001, 27, 67, 0.006, 42, -81, 0.013, 4, -2, 0.003, 22, -82, 0.025, 21, 85, 0.055, -1, 13, 0.001, -39, -62, 0.009, -2, -56, 0.001, -5, -46, 0.004, 32, -116, 0.055, 46, 75, 0.003, 43, 119, 0.009, 55, 102, 0.001, -8, -76, 0.004, -25, 24, 0.002, 5, 9, 0.036, 57, 69, 0.000, 37, 66, 0.006, 33, 59, 0.002, 28, 101, 0.003, 9, 33, 0.006, -15, 39, 0.008, 37, -89, 0.009, 46, 120, 0.001, 43, -94, 0.003, -11, 123, 0.001, 0, 42, 0.002, -23, 33, 0.001, -5, 142, 0.002, 47, 46, 0.001, 23, 72, 0.036, -4, -44, 0.012, 11, 34, 0.006, -9, -41, 0.002, 25, 83, 0.377, -13, 28, 0.013, 58, 18, 0.002, 35, 121, 0.006, 37, 118, 0.165, 34, 76, 0.020, -4, 131, 0.002, 49, 94, 0.000, 11, -13, 0.008, 48, -117, 0.002, 10, 22, 0.001, -32, 153, 0.004, 53, 50, 0.025, 49, 75, 0.001, 29, 48, 0.026, 5, 122, 0.007, 25, 49, 0.002, -2, 105, 0.004, 2, 12, 0.006, -19, 36, 0.004, 68, 30, 0.000, 49, -100, 0.001, 48, 105, 0.001, 26, 129, 0.002, -12, -68, 0.001, 40, 84, 0.002, 39, -89, 0.011, 36, 15, 0.011, 50, 122, 0.003, 12, 21, 0.003, -7, 113, 0.030, 18, 123, 0.003, 59, 35, 0.001, 39, 56, 0.001, 36, -98, 0.001, 35, 53, 0.010, 30, -88, 0.021, -8, -41, 0.006, 7, 39, 0.087, -17, 33, 0.007, 54, 29, 0.018, -55, -68, 0.001, 30, 23, 0.000, 26, 70, 0.037, 7, -8, 0.022, 6, 73, 0.000, 22, 98, 0.014, -3, -61, 0.001, -26, 26, 0.018, -27, -55, 0.009, 45, 64, 0.000, 60, 5, 0.001, 41, 65, 0.003, 21, 70, 0.025, 30, 97, 0.001, 42, 113, 0.002, 4, -52, 0.003, -16, -65, 0.001, 21, -101, 0.052, -20, -62, 0.000, -41, -62, 0.000, 32, 74, 0.179, 28, 69, 0.058, 8, 24, 0.001, -16, 14, 0.004, 55, 40, 0.013, 31, 34, 0.004, -15, 26, 0.002, 21, 121, 0.001, 33, 121, 0.112, -6, 151, 0.002, 65, 23, 0.001, 43, 83, 0.009, 45, 132, 0.032, 22, 57, 0.002, 6, 2, 0.091, 9, -80, 0.001, 46, -62, 0.001, -14, 13, 0.002, -15, -74, 0.002, 57, 17, 0.003, 52, 11, 0.052, -43, 172, 0.001, 24, 81, 0.072, -5, 121, 0.029, -24, -59, 0.000, -28, -56, 0.004, 43, -2, 0.042, 24, 72, 0.047, 58, 84, 0.000, 20, 75, 0.111, -28, 23, 0.001, 23, 108, 0.064, 38, -6, 0.013, 14, -92, 0.018, 47, 99, 0.000, 25, 111, 0.081, 58, 38, 0.002, -46, 169, 0.001, 34, 48, 0.039, 49, 90, 0.001, 48, -97, 0.001, -18, 36, 0.013, 53, 38, 0.009, 44, 113, 0.000, 5, 26, 0.001, 48, 125, 0.020, 63, 17, 0.001, 40, 56, 0.000, 36, 59, 0.016, 35, 8, 0.021, 16, 46, 0.003, 50, 126, 0.005, 39, 28, 0.037, 54, 10, 0.029, 27, 78, 0.233, 29, 103, 0.032, 41, 127, 0.037, -17, 21, 0.000, 54, 25, 0.012, 53, 106, 0.001, 30, 35, 0.007, 6, 37, 0.019, 64, 30, 0.000, 41, 29, 0.206, 18, 96, 0.067, 36, 119, 0.193, 17, 35, 0.004, 32, 111, 0.059, -7, 25, 0.018, 45, -79, 0.002, 41, -82, 0.016, 52, 107, 0.001, 51, 24, 0.016, 31, 5, 0.001, -13, -43, 0.003, -16, 50, 0.008, 55, 12, 0.015, 32, -115, 0.014, 31, 118, 0.203, 46, 4, 0.013, 42, -121, 0.002, 18, -15, 0.015, -6, 123, 0.014, 66, 16, 0.000, -44, -74, 0.000, 42, 26, 0.023, 18, 36, 0.001, -1, -74, 0.000, 33, 6, 0.003, -5, -69, 0.001, -14, 49, 0.007, -15, -46, 0.002, 22, 104, 0.023, 37, -6, 0.027, 52, 39, 0.010, 13, 40, 0.036, -10, -43, 0.002, 24, 117, 0.091, -33, 118, 0.000, 56, 91, 0.008, 33, -92, 0.004, 44, 17, 0.022, 43, -6, 0.005, -4, 29, 0.025, 47, 6, 0.020, 44, -96, 0.002, -13, -45, 0.002, 23, 112, 0.078, 38, 22, 0.016, 35, 104, 0.071, 14, 0, 0.007, 10, 11, 0.026, 47, 87, 0.002, 38, -123, 0.001, 49, 118, 0.007, 29, 7, 0.001, 20, 100, 0.017, 53, 10, 0.062, 49, 3, 0.057, 48, 18, 0.050, 44, 77, 0.003, 38, 103, 0.024, 35, -93, 0.005, 53, -113, 0.031, 12, -2, 0.031, 29, -91, 0.004, 14, 110, 0.017, 40, 28, 0.013, -20, -44, 0.071, -8, 16, 0.007, 7, 94, 0.001, 40, -85, 0.018, 39, 128, 0.056, 17, 84, 0.073, 16, -95, 0.012, 50, 17, 0.037, 12, -68, 0.006, 27, 106, 0.103, 7, 47, 0.003, 41, 107, 0.002, 51, 81, 0.002, 30, -1, 0.001, 7, -64, 0.002, 41, -4, 0.020, -17, -54, 0.006, -6, 27, 0.008, -35, -57, 0.011, 30, 122, 0.149, 45, 8, 0.069, 60, 61, 0.001, 41, -119, 0.000, -35, 150, 0.001, 17, -1, 0.001, -6, -66, 0.001, -26, -63, 0.001, 8, 9, 0.032, 41, -102, 0.000, 51, 36, 0.009, 32, 2, 0.001, 28, -3, 0.000, 27, 38, 0.003, 4, 35, 0.002, 22, -105, 0.007, 21, 100, 0.009, -1, 120, 0.018, 46, 32, 0.010, 8, -81, 0.007, 19, 36, 0.001, -2, 28, 0.003, -5, 38, 0.007, -10, 151, 0.001, 22, -15, 0.000, 37, 29, 0.028, -2, 139, 0.000, -8, -62, 0.000, 10, 107, 0.361, -10, 34, 0.031, -2, 12, 0.001, -34, 28, 0.009, 56, 48, 0.033, 52, 51, 0.002, -12, -67, 0.000, 13, 12, 0.007, 9, 5, 0.007, 46, 89, 0.001, -14, -56, 0.001, -34, -53, 0.002, 56, 95, 0.001, -38, -62, 0.001, 47, 25, 0.016, 19, 96, 0.040, 34, -106, 0.004, -36, -61, 0.003, -23, -59, 0.001, -24, 36, 0.017, 44, -100, 0.001, 58, 59, 0.001, 37, 97, 0.001, 34, 37, 0.041, 15, 25, 0.001, 10, 31, 0.009, 47, 123, 0.014, 5, -76, 0.011, -33, 29, 0.017, 38, -95, 0.007, 15, -86, 0.015, 49, 18, 0.041, 25, 40, 0.004, 2, 37, 0.001, 1, 30, 0.012, 16, 104, 0.064, -22, 31, 0.004, 49, -97, 0.024, 26, 94, 0.067, 25, -107, 0.008, 40, 105, 0.000, 2, -72, 0.001, 1, 11, 0.004, -18, -69, 0.001, 16, -9, 0.002, 50, 83, 0.006, 12, -6, 0.012, -31, 30, 0.024, 40, 0, 0.005, 36, 3, 0.043, 29, 122, 0.142, -31, -53, 0.003, 6, -61, 0.001, 39, 100, 0.009, 54, 66, 0.002, 50, 53, 0.001, 30, 60, 0.004, 26, 47, 0.004, 6, 46, 0.003, 3, 16, 0.002, 17, -67, 0.001, -21, 18, 0.000, 51, 109, 0.003, 12, 103, 0.021, 45, 27, 0.022, 22, 84, 0.054, -3, 15, 0.001, -7, -44, 0.002, 45, -84, 0.003, 42, 142, 0.029, 60, 25, 0.031, 32, 103, 0.003, 31, -100, 0.004, 28, 42, 0.001, -30, -68, 0.000, 55, 67, 0.002, 51, 64, 0.001, -3, 109, 0.002, 31, 61, 0.001, 9, 101, 0.001, 27, 66, 0.002, 42, -80, 0.011, 4, -1, 0.008, 21, 88, 0.114, -1, 28, 0.002, -39, -63, 0.000, -5, -47, 0.004, 46, 76, 0.001, 43, 118, 0.005, -48, -67, 0.000, 55, 101, 0.001, -10, -63, 0.005, 46, -101, 0.000, 57, 72, 0.001, 37, 65, 0.005, 33, 62, 0.002, 28, 102, 0.010, 9, 36, 0.027, 37, -78, 0.005, -4, -73, 0.008, 13, -16, 0.037, 43, -95, 0.003, 24, 29, 0.000, 0, 43, 0.006, -23, 36, 0.004, -5, 141, 0.002, 13, 125, 0.009, 47, 45, 0.001, 23, 71, 0.014, 15, 108, 0.007, 11, 33, 0.004, -43, -74, 0.001, -9, -42, 0.002, 25, 102, 0.042, -13, 27, 0.003, 58, 15, 0.004, 35, 112, 0.109, 37, 117, 0.171, 34, 73, 0.153, -4, 132, 0.000, 49, 93, 0.000, 11, -14, 0.010, 48, -116, 0.002, -9, 113, 0.103, 5, -56, 0.001, 1, -55, 0.000, 53, 49, 0.008, 49, 46, 0.003, 29, 47, 0.010, 25, 52, 0.019, -19, 35, 0.004, 68, 31, 0.000, 49, -101, 0.000, 48, 106, 0.000, 40, 77, 0.003, 39, -90, 0.005, 36, 16, 0.003, 50, 119, 0.003, 12, 22, 0.004, -7, 116, 0.003, 11, 93, 0.001, -12, 44, 0.013, 59, 34, 0.003, 39, 55, 0.004, 36, -97, 0.006, 35, 60, 0.016, 30, -91, 0.022, -8, -40, 0.010, 7, 38, 0.103, 8, 99, 0.017, 54, 30, 0.005, 30, 24, 0.001, 7, -9, 0.008, 6, 74, 0.001, 17, -71, 0.001, -3, -66, 0.001, -26, 31, 0.006, -27, -52, 0.013, 45, 63, 0.001, 60, 6, 0.012, 41, 68, 0.002, 17, 74, 0.072, -6, -45, 0.004, 30, 98, 0.002, 45, -112, 0.001, 42, 114, 0.004, -16, -64, 0.001, 21, -106, 0.001, 54, 79, 0.001, 32, 75, 0.262, 28, 70, 0.059, 8, 17, 0.012, -16, 15, 0.006, 55, 39, 0.056, 6, 118, 0.003, 31, 33, 0.026, 9, 81, 0.023, 42, -108, 0.000, -2, -47, 0.016, -6, 152, 0.004, 5, 37, 0.009, 65, 26, 0.003, 43, 82, 0.012, 45, 131, 0.047, -4, 152, 0.001, 22, 58, 0.005, -35, 119, 0.000, 46, -73, 0.005, -11, -68, 0.005, -14, 14, 0.007, -15, -75, 0.010, 0, 105, 0.005, 52, 12, 0.024, 28, 130, 0.003, 24, 82, 0.099, -24, -58, 0.000, -28, -55, 0.024, 43, -3, 0.024, 20, 76, 0.097, -24, -43, 0.022, -28, 24, 0.004, 43, 14, 0.032, 23, 107, 0.044, 38, -1, 0.017, -25, -68, 0.002, 14, 50, 0.004, 25, 114, 0.058, -18, 146, 0.002, 34, 45, 0.015, 49, 89, 0.000, 48, -96, 0.001, -18, 33, 0.013, 53, 37, 0.007, 29, 19, 0.001, 44, 114, 0.000, 5, 25, 0.000, 48, 126, 0.030, 63, 16, 0.001, 40, 49, 0.016, 39, 10, 0.018, 36, 60, 0.043, 35, 7, 0.027, 16, 47, 0.002, 39, 27, 0.015, 27, 77, 0.140, 29, 98, 0.001, 41, 130, 0.027, 54, 26, 0.028, 53, 105, 0.001, -35, -70, 0.016, 30, 36, 0.009, 6, 38, 0.060, -25, -55, 0.005, -19, -49, 0.008, 64, 31, 0.001, 41, 32, 0.015, -29, -58, 0.003, 36, 120, 0.186, 17, 38, 0.005, 32, 112, 0.095, -7, 28, 0.004, 45, -76, 0.004, 41, -83, 0.032, 52, 108, 0.001, 51, 23, 0.035, 5, 27, 0.001, -16, 51, 0.005, 55, 11, 0.015, 51, 8, 0.205, 32, -114, 0.009, 31, 117, 0.123, 46, 1, 0.015, 18, -14, 0.001, -8, -69, 0.000, -6, 124, 0.004, 42, 23, 0.020, 18, 33, 0.002, -1, -75, 0.001, 33, 5, 0.009, -14, 50, 0.008, -18, -53, 0.001, -15, -47, 0.001, 22, 101, 0.022, 0, 125, 0.012, 37, -7, 0.011, 52, 40, 0.027, 13, 39, 0.029, 47, -109, 0.000, -10, -42, 0.003, 24, 118, 0.140, -33, 117, 0.004, 56, 92, 0.001, 33, -93, 0.004, 47, 36, 0.038, 44, 18, 0.022, 43, -7, 0.008, 20, 40, 0.005, -4, 30, 0.102, 47, 5, 0.008, 44, -95, 0.003, 62, 17, 0.003, 23, 111, 0.108, 20, -105, 0.009, 38, 27, 0.026, 35, 103, 0.020, 15, 36, 0.014, 14, -3, 0.014, 10, 12, 0.042, 47, 86, 0.001, 38, -122, 0.036, 49, 117, 0.001, 29, 2, 0.000, -13, -76, 0.084, -29, -51, 0.009, 16, 109, 0.022, 53, 9, 0.053, -23, 151, 0.000, 49, 6, 0.019, 48, 19, 0.032, 44, 78, 0.002, 38, 104, 0.008, 35, -94, 0.011, 12, -1, 0.060, 59, -151, 0.000, 40, 21, 0.019, -12, -44, 0.002, 40, -84, 0.015, -28, 153, 0.022, 39, 127, 0.060, 17, 83, 0.098, 16, -94, 0.007, 50, 18, 0.029, 27, 105, 0.084, 7, 46, 0.003, 41, 94, 0.001, 51, 104, 0.001, 50, -127, 0.000, 30, 0, 0.001, 7, -65, 0.001, 41, -5, 0.007, 3, -60, 0.005, 21, -16, 0.001, -17, -55, 0.001, 69, 89, 0.010, 30, 111, 0.049, 8, 123, 0.004, 45, 7, 0.017, -35, 149, 0.001, 17, 2, 0.000, -26, -62, 0.001, 64, 178, 0.000, 41, -103, 0.002, 51, 35, 0.007, 32, 3, 0.002, 28, -2, 0.000, 27, 37, 0.002, 4, 36, 0.002, 22, -104, 0.002, 21, 99, 0.008, -39, -72, 0.017, -52, -71, 0.001, 46, 29, 0.035, 8, -80, 0.011, 22, 39, 0.000, 19, 35, 0.001, -2, 25, 0.002, -5, 37, 0.008, 42, -5, 0.012, 37, 32, 0.021, -10, -77, 0.014, 10, 108, 0.059, -10, 39, 0.004, -14, -42, 0.006, -34, 25, 0.001, 56, 73, 0.001, 52, 52, 0.002, -44, -65, 0.002, 13, 11, 0.010, 9, 8, 0.028, 46, 90, 0.001, 24, 26, 0.000, -14, -59, 0.000, 56, 96, 0.005, 47, 24, 0.026, 19, 95, 0.015, 34, -109, 0.001, -23, -56, 0.003, -24, 29, 0.010, -43, -63, 0.000, 58, 60, 0.007, 38, 55, 0.001, 35, 83, 0.001, 37, 100, 0.001, 34, 38, 0.009, 15, 24, 0.001, 14, -23, 0.002, 10, 32, 0.003, 47, 122, 0.008, 5, -77, 0.002, 38, -94, 0.027, 15, -87, 0.040, 49, 17, 0.040, 48, -72, 0.002, -28, -50, 0.008, 25, 39, 0.004, 2, 38, 0.001, 1, 29, 0.003, 16, 81, 0.214, -22, 32, 0.005, 49, -94, 0.001, 48, 71, 0.001, 26, 107, 0.160, 25, -104, 0.002, 40, 106, 0.001, 2, -75, 0.016, 36, 37, 0.053, -18, -68, 0.002, 16, -8, 0.002, 50, 84, 0.005, 12, -5, 0.023, -21, -48, 0.016, -31, 29, 0.017, 40, -7, 0.017, 36, 4, 0.157, 35, 15, 0.013, 29, 121, 0.163, 40, -112, 0.006, 39, 99, 0.012, 54, 71, 0.002, 50, 54, 0.001, 30, 57, 0.007, 26, 48, 0.002, 3, 15, 0.002, 8, 81, 0.041, 17, -64, 0.002, -21, 17, 0.001, 51, 116, 0.002, 12, 104, 0.018, -7, -74, 0.001, 45, 22, 0.028, 6, 94, 0.000, -3, 42, 0.000, -7, -45, 0.001, 30, 91, 0.001, -27, 24, 0.003, 45, -85, 0.001, 60, 26, 0.022, -30, -56, 0.005, 32, 104, 0.005, -33, -66, 0.000, 31, -101, 0.001, 28, 43, 0.001, -30, -71, 0.003, 55, 66, 0.018, 51, 63, 0.001, -3, 112, 0.008, 31, 76, 0.222, 28, -102, 0.002, 27, 65, 0.002, 42, -83, 0.144, 21, 87, 0.124, -1, 27, 0.002, -3, -47, 0.004, -2, -58, 0.000, -5, -40, 0.013, 43, 117, 0.003, 45, 90, 0.001, 42, 64, 0.001, -1, 12, 0.001, 46, -100, 0.003, 57, 71, 0.001, 37, 68, 0.030, 33, 61, 0.003, 28, 103, 0.033, 9, 35, 0.015, -15, 41, 0.024, 56, 13, 0.012, 37, -79, 0.016, -4, -72, 0.001, 33, -82, 0.013, 9, -12, 0.018, 46, 118, 0.000, 43, -88, 0.029, -9, 37, 0.005, -4, 139, 0.006, 0, 44, 0.005, -23, 35, 0.003, -30, -52, 0.016, 23, 70, 0.012, 1, 110, 0.018, 38, -28, 0.001, 15, 107, 0.009, 11, 40, 0.066, -9, -43, 0.001, 25, 101, 0.069, -13, 26, 0.003, 61, 10, 0.001, 58, 16, 0.009, 35, 111, 0.111, 37, 120, 0.042, 34, 74, 0.079, 15, -4, 0.005, 49, 96, 0.000, 11, -15, 0.016, 48, -123, 0.016, 5, -57, 0.002, 20, 110, 0.022, 53, 52, 0.005, 49, 45, 0.002, 29, 74, 0.070, 25, 51, 0.003, 2, 10, 0.001, -19, 30, 0.012, 68, 32, 0.000, 49, -66, 0.000, 48, 107, 0.008, 26, 127, 0.000, -32, -71, 0.002, 40, 78, 0.004, 39, -91, 0.006, 50, 120, 0.001, 12, 23, 0.010, -7, 115, 0.002, 11, 100, 0.009, -12, 29, 0.005, 59, 33, 0.004, 39, 54, 0.003, 36, -96, 0.006, 35, 59, 0.009, 30, -90, 0.024, -8, -47, 0.002, 7, 37, 0.051, -18, 17, 0.006, -17, 31, 0.010, -20, 48, 0.052, 54, 35, 0.003, 7, -10, 0.007, 6, 15, 0.005, -3, -67, 0.000, -7, -62, 0.000, -26, 32, 0.029, -27, -53, 0.013, 60, 7, 0.001, 41, 67, 0.001, 21, 72, 0.085, 36, 77, 0.001, -6, -44, 0.008, 42, 111, 0.002, -16, -55, 0.009, 54, 80, 0.001, -40, -73, 0.004, 32, 76, 0.118, 28, 71, 0.094, 27, -12, 0.003, 8, 18, 0.008, -16, 16, 0.004, 55, 38, 0.468, 31, 32, 0.189, 42, -111, 0.001, -2, -46, 0.006, -6, 149, 0.001, 65, 25, 0.001, 43, 81, 0.005, 45, 126, 0.051, 52, -114, 0.001, 13, -83, 0.001, 9, -78, 0.001, 46, -72, 0.011, -11, -69, 0.001, -15, -72, 0.004, 57, 19, 0.002, 52, -3, 0.015, -10, -69, 0.000, 24, 83, 0.077, 34, 121, 0.024, -24, -57, 0.003, -28, -54, 0.013, 43, 4, 0.031, -36, -70, 0.005, 13, 100, 0.054, -28, 25, 0.008, 43, 13, 0.034, 23, 106, 0.032, 38, 0, 0.052, 25, 113, 0.096, 34, 46, 0.021, 49, 92, 0.000, -8, 113, 0.489, -18, 34, 0.003, 53, 40, 0.008, 29, 14, 0.001, 44, 115, 0.001, 5, 28, 0.001, -20, -51, 0.002, 48, 127, 0.018, 63, 15, 0.001, 40, 50, 0.057, 39, 9, 0.015, 36, 45, 0.026, 35, 6, 0.037, 16, 48, 0.000, 39, 26, 0.001, 17, 122, 0.042, 50, 11, 0.038, 27, 84, 0.181, 29, 97, 0.001, 0, 98, 0.010, 41, 129, 0.020, -36, 174, 0.002, 30, 33, 0.036, 6, 43, 0.004, -30, 31, 0.118, 41, 31, 0.011, 18, 94, 0.004, 36, 121, 0.194, 17, 37, 0.003, 32, 121, 0.281, -7, 27, 0.004, 27, -97, 0.014, 45, -77, 0.002, 42, 83, 0.004, 41, -80, 0.029, 21, -71, 0.000, 52, 93, 0.000, -26, 153, 0.002, 51, 22, 0.032, 27, 16, 0.002, 55, 10, 0.019, 51, 7, 0.192, 32, -113, 0.001, 31, 132, 0.023, 46, 2, 0.010, 42, -123, 0.004, -29, 115, 0.001, -5, 16, 0.196, -6, 121, 0.025, 66, 14, 0.001, 42, 24, 0.057, 18, 34, 0.002, 6, 11, 0.037, 33, 8, 0.005, 5, 117, 0.024, -15, -44, 0.003, 22, 102, 0.015, 37, -4, 0.029, 52, 41, 0.009, 13, 34, 0.032, -10, -37, 0.017, 24, 119, 0.156, 56, 85, 0.021, 33, -90, 0.006, 47, 35, 0.020, 44, 19, 0.025, 20, 41, 0.015, 15, 146, 0.002, 44, -94, 0.005, 62, 18, 0.003, 23, 110, 0.110, 20, -104, 0.008, 38, 28, 0.066, 35, 102, 0.005, 15, 35, 0.005, 14, -2, 0.007, 10, 9, 0.037, 47, 85, 0.001, -9, 122, 0.015, -33, -59, 0.003, 61, 50, 0.001, -18, 179, 0.007, 49, 120, 0.005, 48, -67, 0.002, -13, -77, 0.086, -19, -43, 0.005, 53, 12, 0.018, 49, 5, 0.021, 48, 20, 0.022, 44, 79, 0.004, 38, 101, 0.015, 35, -95, 0.008, 16, -3, 0.010, 12, 0, 0.028, 29, -89, 0.004, -3, 12, 0.002, 62, 78, 0.002, 59, 48, 0.001, 40, 22, 0.012, 11, 124, 0.020, -32, 24, 0.001, 40, -91, 0.005, 39, 126, 0.145, 16, -93, 0.030, 50, 15, 0.076, 27, 112, 0.203, 7, 45, 0.004, 41, 93, 0.001, -50, -74, 0.000, 39, 143, 0.000, 51, 103, 0.001, 30, -3, 0.001, -33, -70, 0.009, 7, -66, 0.003, -17, -56, 0.001, -6, 25, 0.006, 30, 112, 0.127, -37, -73, 0.016, 8, 124, 0.047, 45, 2, 0.018, -35, 152, 0.006, 17, 1, 0.001, 32, 77, 0.033, -26, -57, 0.080, 8, 11, 0.013, 41, -100, 0.001, 51, 34, 0.015, 32, 4, 0.002, 27, 44, 0.002, 4, 21, 0.005, 21, 94, 0.004, -1, 118, 0.027, -39, -73, 0.002, 46, 30, 0.029, 43, 128, 0.019, -4, 143, 0.002, 22, 40, 0.014, 19, 34, 0.001, -2, 26, 0.002, -10, 149, 0.002, 42, -4, 0.004, 57, 94, 0.001, 37, 31, 0.019, -2, 137, 0.004, 10, 105, 0.047, -10, 40, 0.006, -9, 28, 0.004, -4, 116, 0.011, -34, 26, 0.036, 56, 74, 0.001, 37, -112, 0.001, 52, 69, 0.002, 13, 6, 0.056, 9, 7, 0.024, -10, -73, 0.000, 24, 27, 0.000, -14, -58, 0.000, 23, -80, 0.001, -34, -55, 0.002, 0, 17, 0.001, -38, -64, 0.000, 47, 23, 0.023, 19, 94, 0.012, -23, -57, 0.002, -24, 30, 0.028, 58, 57, 0.019, 38, 56, 0.002, 35, 82, 0.001, 37, 99, 0.001, -8, 121, 0.000, 15, 23, 0.002, 10, 29, 0.003, 47, 121, 0.003, 38, -89, 0.013, 15, -88, 0.033, 49, 20, 0.045, 14, 14, 0.002, 25, 42, 0.004, 2, 35, 0.008, 1, 32, 0.021, 16, 82, 0.191, -22, 29, 0.005, 26, 108, 0.071, 25, -105, 0.001, 40, 107, 0.007, 2, -74, 0.001, 36, 38, 0.034, 38, 129, 0.013, 50, 81, 0.013, 12, -4, 0.015, 40, -6, 0.005, -20, -39, 0.002, -7, 151, 0.001, 40, -119, 0.000, 39, 98, 0.002, 54, 72, 0.003, 50, 51, 0.001, 30, 58, 0.005, 26, 45, 0.006, 3, 14, 0.003, 2, 103, 0.051, -20, 30, 0.012, -21, 24, 0.000, 51, 115, 0.001, -3, -68, 0.000, 12, 105, 0.029, -7, -75, 0.002, 45, 21, 0.025, -3, 41, 0.006, -35, -66, 0.003, 30, 92, 0.003, 45, -90, 0.002, 60, 27, 0.005, 32, 49, 0.028, 31, -102, 0.006, 28, 44, 0.001, -30, -70, 0.004, 55, 65, 0.003, 51, 62, 0.001, -3, 111, 0.003, 31, 75, 0.404, 28, -101, 0.003, 27, 72, 0.013, 42, -82, 0.046, 22, -79, 0.024, -1, 26, 0.002, -39, -61, 0.005, -2, -53, 0.001, 70, 24, 0.000, 66, 67, 0.002, 43, 124, 0.035, 45, 89, 0.001, 42, 61, 0.006, 55, 99, 0.002, -11, -62, 0.005, 57, 74, 0.001, 37, 67, 0.013, 33, 64, 0.003, 10, 125, 0.042, 28, 104, 0.037, 9, 22, 0.000, 56, 14, 0.007, 37, -76, 0.019, -4, -71, 0.001, 33, -83, 0.018, 9, -13, 0.049, 46, 123, 0.017, 43, -89, 0.018, 57, -152, 0.000, 0, 37, 0.015, 23, 69, 0.004, 1, 109, 0.002, 15, 106, 0.033, 11, 39, 0.053, -43, -72, 0.000, -9, -44, 0.001, 25, 104, 0.080, -13, 25, 0.002, 61, 9, 0.000, 58, 13, 0.007, 35, 110, 0.075, 37, 119, 0.122, 34, 71, 0.048, 15, -5, 0.001, 49, 95, 0.000, 11, -8, 0.011, 48, -122, 0.017, 20, 111, 0.073, 1, -53, 0.000, 53, 51, 0.038, 49, 48, 0.001, 29, 73, 0.092, 25, 70, 0.068, -19, 29, 0.010, 68, 33, 0.002, 48, 108, 0.003, 26, 128, 0.040, -32, -70, 0.002, 40, 79, 0.002, 39, -92, 0.004, 50, 117, 0.002, 12, 24, 0.008, 11, 99, 0.006, -12, 30, 0.006, 59, 40, 0.012, 39, 53, 0.001, 36, -95, 0.024, 35, 58, 0.009, 30, -85, 0.009, -8, -46, 0.002, 7, 36, 0.022, -17, 30, 0.006, 54, 36, 0.004, 7, -11, 0.025, 6, 16, 0.007, -3, -64, 0.000, -26, 29, 0.096, -27, -58, 0.006, 60, 8, 0.000, 21, 71, 0.091, 36, 78, 0.003, 17, 76, 0.104, -6, -47, 0.014, 42, 112, 0.002, -16, -54, 0.002, 21, -104, 0.015, 54, 77, 0.001, -40, -72, 0.006, 32, 69, 0.005, 28, 72, 0.043, 27, -13, 0.001, 8, 19, 0.007, -15, 40, 0.013, -16, 25, 0.003, 55, 37, 0.022, 31, 31, 0.188, 42, -110, 0.000, -6, 150, 0.002, 43, 88, 0.070, 45, 125, 0.045, 18, 27, 0.001, 52, -113, 0.005, 9, -79, 0.041, 46, -75, 0.001, -11, -74, 0.001, -15, -73, 0.002, 57, 38, 0.003, 52, -2, 0.076, 24, 84, 0.104, -24, -56, 0.005, -28, -53, 0.013, 43, 3, 0.017, 24, 67, 0.046, 13, 99, 0.015, -28, 26, 0.006, -28, -64, 0.014, 43, 20, 0.024, 23, 105, 0.046, 38, -3, 0.012, 0, -80, 0.000, 25, 116, 0.067, 61, 13, 0.000, 49, 91, 0.000, -8, 114, 0.133, -18, 23, 0.001, 53, 39, 0.020, 29, 13, 0.001, 44, 116, 0.002, 6, -1, 0.099, 48, 128, 0.011, 40, 51, 0.019, 36, 46, 0.023, 35, 5, 0.020, -19, 146, 0.001, -30, -50, 0.024, 26, -109, 0.009, 17, 121, 0.029, 50, 12, 0.041, 12, -61, 0.004, 27, 83, 0.184, 29, 100, 0.002, 6, -7, 0.018, -36, 175, 0.003, 54, -128, 0.001, 30, 34, 0.002, 6, 44, 0.003, 54, -113, 0.001, 64, 41, 0.012, -30, 32, 0.032, 41, 34, 0.009, 36, 122, 0.022, 32, 122, 0.071, -25, 153, 0.002, -7, 14, 0.003, 27, -98, 0.002, 42, 84, 0.006, 41, -81, 0.088, 52, 94, 0.000, 51, 21, 0.024, 32, 41, 0.004, 27, 15, 0.001, -9, -40, 0.005, 55, 9, 0.009, 51, 6, 0.116, 32, -112, 0.001, 31, 131, 0.052, 42, -122, 0.006, 18, -16, 0.004, -1, -46, 0.002, -38, 141, 0.002, -5, 15, 0.012, -6, 122, 0.001, 42, 21, 0.049, 18, 31, 0.001, 33, 7, 0.003, -5, -64, 0.001, -15, -45, 0.001, 22, 107, 0.036, 37, -5, 0.041, 52, 42, 0.020, 13, 33, 0.026, 47, -111, 0.003, -10, -36, 0.037, -11, 31, 0.005, -9, 14, 0.042, 56, 86, 0.003, -3, 148, 0.001, 33, -91, 0.004, 47, 34, 0.028, 44, 20, 0.027, 23, 28, 0.000, 20, 42, 0.017, -8, 146, 0.002, -4, 32, 0.019, 44, -93, 0.059, 62, 39, 0.000, 23, 109, 0.094, 20, -103, 0.148, 38, 25, 0.001, 35, 101, 0.003, -27, 154, 0.006, 15, 34, 0.015, 14, 3, 0.008, 10, 10, 0.025, 47, 132, 0.014, 61, 49, 0.000, -8, 111, 0.456, 49, 119, 0.001, 48, -66, 0.001, 29, 4, 0.001, -19, -40, 0.010, 53, 11, 0.074, -3, 102, 0.013, 49, 8, 0.054, 48, 13, 0.038, 44, 80, 0.003, 38, 102, 0.010, 16, -2, 0.002, 12, 1, 0.009, 29, -94, 0.009, 59, 47, 0.001, 40, 23, 0.047, 11, 123, 0.059, 40, -90, 0.006, 39, 125, 0.021, -44, -73, 0.000, 16, -92, 0.029, 50, 16, 0.040, 27, 111, 0.106, -22, -49, 0.013, 41, 96, 0.001, -21, -47, 0.023, 39, 142, 0.034, 51, 102, 0.000, 30, -2, 0.001, 7, -67, 0.005, -17, -57, 0.001, -6, 26, 0.005, 30, 109, 0.111, 45, 1, 0.016, 60, 64, 0.000, -29, -55, 0.005, -35, 151, 0.020, 32, 78, 0.004, -6, -55, 0.000, -26, -56, 0.018, 8, 12, 0.020, 41, -101, 0.000, 3, 100, 0.050, 55, 60, 0.011, 51, 33, 0.008, 32, -3, 0.002, 66, 77, 0.003, 27, 43, 0.002, 4, 22, 0.006, -16, -47, 0.052, 21, 93, 0.071, -1, 117, 0.007, -39, -70, 0.001, 46, 35, 0.006, 43, 127, 0.062, 19, 33, 0.001, -2, 15, 0.001, 48, 96, 0.000, -25, 48, 0.003, 9, -84, 0.047, -10, 150, 0.002, 43, 144, 0.008, 42, -7, 0.014, 57, 93, 0.001, 37, 42, 0.027, 10, 106, 0.208, 28, 77, 0.219, -10, 37, 0.004, -14, -44, 0.003, 56, 75, 0.002, 37, -113, 0.004, 52, 70, 0.002, 13, 5, 0.016, 9, 10, 0.048, 46, 80, 0.000, 24, 28, 0.000, -14, -61, 0.001, 23, -81, 0.008, -34, -54, 0.002, 0, 18, 0.001, -38, -67, 0.001, 47, 22, 0.034, 34, -111, 0.002, -23, -54, 0.009, -24, 31, 0.039, 62, 51, 0.001, 58, 58, 0.006, 35, 81, 0.001, 37, 94, 0.000, 34, 36, 0.025, 15, 22, 0.002, 10, 30, 0.011, 47, 120, 0.001, 1, -78, 0.008, 38, -88, 0.005, 15, -89, 0.019, 49, 19, 0.074, 25, 41, 0.002, -2, 101, 0.016, 2, 36, 0.004, 1, 31, 0.028, 16, 83, 0.051, -22, 30, 0.005, 48, 49, 0.000, 26, 105, 0.092, 25, -102, 0.002, 40, 108, 0.014, 2, -77, 0.007, 36, 39, 0.025, -18, -70, 0.006, 50, 82, 0.003, 12, 29, 0.006, -31, 31, 0.033, 40, -5, 0.012, 29, 123, 0.022, 7, 127, 0.020, 6, -62, 0.001, 39, 97, 0.001, 54, 69, 0.002, 50, 52, 0.001, 30, 47, 0.019, 26, 46, 0.005, 6, 49, 0.001, 3, 13, 0.005, 2, 104, 0.012, 17, -62, 0.002, -21, 23, 0.000, 51, 114, 0.001, -3, -69, 0.000, 12, 106, 0.040, 45, 24, 0.020, 6, 100, 0.010, 30, 89, 0.001, 45, -91, 0.003, 60, 28, 0.002, 32, 50, 0.017, -17, -41, 0.005, 31, -103, 0.001, 28, 45, 0.001, 55, 64, 0.003, 51, 61, 0.001, 31, 74, 0.259, 28, -100, 0.008, 9, 106, 0.134, 27, 71, 0.017, 22, -78, 0.005, -1, 25, 0.002, -2, -52, 0.000, -5, -42, 0.016, 46, 63, 0.001, 43, 123, 0.027, 45, 92, 0.001, 42, 62, 0.004, 6, -2, 0.033, 46, -102, 0.001, -11, -63, 0.002, -15, -66, 0.001, 57, 73, 0.000, 37, 62, 0.010, 33, 63, 0.004, 10, 126, 0.012, 28, 105, 0.126, 9, 21, 0.001, 56, 15, 0.007, 37, -77, 0.036, -4, -70, 0.001, 33, -80, 0.014, 46, 124, 0.019, 43, -90, 0.004, 0, 38, 0.035, -5, 146, 0.002, 13, 122, 0.067, 1, 112, 0.008, 15, 105, 0.067, 11, 38, 0.069, -43, -73, 0.003, -9, -45, 0.001, 25, 103, 0.089, -13, 16, 0.024, 61, 12, 0.001, 58, 14, 0.006, 0, 102, 0.043, -18, 169, 0.002, 35, 109, 0.053, 37, 130, 0.007, 34, 72, 0.141, 15, -6, 0.003, 14, 75, 0.046, 11, -9, 0.008, 48, -121, 0.001, -32, 149, 0.000, 53, 46, 0.018, 49, 47, 0.001, 29, 76, 0.114, -9, 126, 0.012, 25, 69, 0.121, -19, 32, 0.016, 68, 34, 0.004, 48, 101, 0.000, 40, 80, 0.004, 39, -93, 0.003, 50, 118, 0.001, 12, 25, 0.013, -12, 31, 0.004, 59, 39, 0.002, 36, -94, 0.015, 35, 57, 0.003, 30, -84, 0.013, -8, -45, 0.001, 7, 35, 0.001, -17, 29, 0.005, 54, 33, 0.006, 7, -12, 0.007, 6, 13, 0.003, 17, -98, 0.018, -3, -65, 0.000, -26, 30, 0.024, -27, -59, 0.003, -13, -39, 0.022, 60, 9, 0.001, 21, 50, 0.002, 36, 79, 0.002, 17, 75, 0.113, -6, -46, 0.003, 31, -116, 0.001, 42, 109, 0.001, -16, -53, 0.000, 21, -105, 0.009, -20, -58, 0.000, 54, 78, 0.001, 32, 70, 0.032, 28, 73, 0.023, 8, 20, 0.001, -16, 26, 0.003, 55, 36, 0.005, 31, 30, 0.073, 42, -113, 0.002, 19, 48, 0.003, 18, -87, 0.001, -3, -48, 0.004, 65, 27, 0.000, 43, 87, 0.008, 45, 128, 0.042, 18, 28, 0.001, 52, -112, 0.001, 9, -76, 0.002, 46, -74, 0.002, -11, -75, 0.005, -14, 41, 0.010, -15, -70, 0.007, 57, 37, 0.003, 52, -1, 0.161, -10, -35, 0.042, 24, 77, 0.062, 34, 119, 0.232, -24, -63, 0.003, -28, -52, 0.018, 43, 2, 0.043, 24, 68, 0.283, -9, 32, 0.013, 0, 74, 0.001, 13, 94, 0.001, -28, 27, 0.015, 43, 19, 0.021, 24, -77, 0.001, 23, 104, 0.059, 38, -2, 0.004, 25, 115, 0.079, -38, 177, 0.004, 61, 16, 0.001, 49, 126, 0.009, -8, 115, 0.020, -42, 173, 0.001, -18, 24, 0.001, 53, 18, 0.018, 44, 117, 0.002, 5, 22, 0.005, 38, 79, 0.005, 49, -68, 0.001, 48, 137, 0.000, 14, 122, 0.423, 63, 13, 0.000, 36, 47, 0.023, 35, 12, 0.002, 11, 126, 0.017, 26, -108, 0.007, -11, 30, 0.005, 39, 24, 0.002, 50, 9, 0.114, 27, 82, 0.202, 29, 99, 0.002, 6, -6, 0.034, 53, 102, 0.002, 30, -9, 0.043, 6, 41, 0.007, 17, -102, 0.001, 54, -112, 0.000, 64, 42, 0.000, -30, 29, 0.021, 41, 33, 0.023, 36, 123, 0.007, 17, 39, 0.007, -3, -44, 0.044, -25, 152, 0.001, -7, 13, 0.001, 27, -99, 0.018, 45, -83, 0.001, 42, 81, 0.004, 41, -78, 0.006, -17, -48, 0.021, 51, 28, 0.006, 32, 42, 0.003, -25, -69, 0.003, 22, -97, 0.021, -16, 46, 0.001, -20, 49, 0.014, 51, 5, 0.158, 32, -103, 0.002, -25, -70, 0.001, 19, 28, 0.001, -1, -47, 0.006, -5, 14, 0.015, 46, -121, 0.001, 42, 22, 0.056, 18, 32, 0.001, 33, 10, 0.008, -5, -65, 0.001, -15, -42, 0.009, 22, 108, 0.047, 0, 128, 0.010, 52, 43, 0.005, 13, 36, 0.005, -10, -39, 0.002, 24, 113, 0.057, 56, 87, 0.005, 33, -88, 0.007, 47, 33, 0.008, 44, 21, 0.031, 23, 27, 0.000, 20, 43, 0.012, -4, 33, 0.035, 44, -92, 0.014, 62, 40, 0.000, 20, -102, 0.038, 35, 108, 0.061, 15, 33, 0.108, 14, 4, 0.008, 10, 7, 0.015, 47, 131, 0.024, 61, 52, 0.003, 38, -119, 0.002, 49, 122, 0.004, 48, -65, 0.001, 29, 3, 0.001, -19, -41, 0.012, 53, 6, 0.012, 49, 7, 0.070, 48, 14, 0.030, 44, 81, 0.011, 40, 129, 0.034, 38, 107, 0.047, 35, -105, 0.004, 16, -1, 0.002, 53, -101, 0.000, 12, 2, 0.005, 29, -95, 0.132, 59, 46, 0.001, 40, 24, 0.009, 61, 77, 0.000, 35, 40, 0.015, 11, 122, 0.002, 40, -89, 0.016, 39, 124, 0.016, 16, -99, 0.019, 50, 13, 0.064, -12, -51, 0.000, 27, 110, 0.077, 41, 95, 0.002, 3, 40, 0.004, 2, 129, 0.002, 39, 141, 0.035, -21, 58, 0.039, -21, -64, 0.003, 30, 3, 0.002, 7, -68, 0.001, -17, -58, 0.001, -6, 23, 0.027, 30, 110, 0.068, 8, 118, 0.004, 45, 4, 0.024, 60, 65, 0.002, -35, 146, 0.001, 32, 79, 0.000, -26, -59, 0.002, 8, 5, 0.063, 3, 99, 0.174, 55, 59, 0.003, 51, 56, 0.023, 32, -2, 0.001, 27, 42, 0.002, 4, 23, 0.003, 22, -101, 0.021, -16, -46, 0.002, 21, 96, 0.093, -1, 132, 0.003, -39, -71, 0.003, 46, 36, 0.010, 43, 126, 0.137, 55, 125, 0.002, -2, 16, 0.002, -25, 47, 0.007, 9, -85, 0.003, 43, 143, 0.020, 42, -6, 0.007, -11, 38, 0.005, 57, 96, 0.000, 37, 41, 0.026, 28, 78, 0.779, -10, 38, 0.003, -14, -47, 0.001, 56, 76, 0.001, 52, 71, 0.003, 13, 8, 0.046, 9, 9, 0.055, 46, 77, 0.000, -14, -60, 0.001, 23, -82, 0.071, -34, -65, 0.003, 0, 19, 0.004, 47, 21, 0.021, 19, 100, 0.034, 34, -110, 0.001, -23, -55, 0.005, -24, 32, 0.004, 58, 55, 0.002, 35, 136, 0.061, 34, 33, 0.004, 15, 21, 0.001, 10, 43, 0.006, -9, 31, 0.004, -9, 117, 0.104, -40, 175, 0.004, 1, -79, 0.001, 38, -91, 0.006, 15, -90, 0.031, 49, 22, 0.031, 25, 44, 0.006, 2, 33, 0.039, 1, 34, 0.053, 26, 106, 0.108, 25, -103, 0.031, 40, 101, 0.000, 2, -76, 0.028, 36, 40, 0.028, 50, 79, 0.001, 12, 30, 0.007, 40, -4, 0.014, -52, -70, 0.001, 29, 118, 0.066, 7, 126, 0.090, 6, -57, 0.004, 40, -117, 0.000, 36, -122, 0.002, 54, 70, 0.010, 53, 141, 0.001, 50, 49, 0.002, 30, 48, 0.039, 26, 59, 0.004, 6, 50, 0.000, 3, 20, 0.020, 2, 101, 0.011, -21, 22, 0.000, 51, 113, 0.001, 12, 107, 0.007, 45, 23, 0.014, 30, 90, 0.001, -37, -70, 0.001, -27, 33, 0.028, 45, -88, 0.002, 60, 29, 0.004, 21, -98, 0.031, 32, 51, 0.023, 28, 46, 0.001, 8, 41, 0.032, 55, 63, 0.003, 51, 68, 0.001, -3, 137, 0.001, 31, 73, 0.162, 28, -99, 0.001, 9, 105, 0.013, 27, 70, 0.053, -1, 24, 0.004, -2, -55, 0.001, -5, -43, 0.010, 66, 65, 0.000, 46, 64, 0.000, 43, 122, 0.023, 45, 91, 0.002, 42, 75, 0.042, 55, 97, 0.001, 46, -113, 0.001, -15, -67, 0.001, 57, 76, 0.000, 37, 61, 0.004, 33, 66, 0.007, 28, 106, 0.133, 9, 24, 0.002, -11, -47, 0.001, -9, 23, 0.002, -4, 121, 0.017, 56, 16, 0.006, 37, -82, 0.010, -4, -69, 0.002, 33, -81, 0.015, 44, 62, 0.000, 46, 121, 0.005, 43, -91, 0.007, 24, 57, 0.010, 0, 39, 0.004, -5, 145, 0.004, 13, 121, 0.021, 1, 111, 0.025, 15, 104, 0.069, 11, 37, 0.026, 14, 46, 0.018, 25, 106, 0.071, -13, 15, 0.010, 61, 11, 0.002, 58, 27, 0.007, 35, 116, 0.259, 37, 129, 0.027, 34, 69, 0.023, 15, -7, 0.003, 14, 76, 0.120, 11, -10, 0.005, -8, 144, 0.001, -32, 150, 0.000, -19, -54, 0.001, 53, 45, 0.012, 49, 50, 0.001, 29, 75, 0.068, 25, 72, 0.032, -33, -67, 0.001, -19, 31, 0.013, 48, 102, 0.001, -32, -68, 0.018, 40, 73, 0.094, 39, -94, 0.039, 50, 115, 0.001, 12, 26, 0.013, -12, 32, 0.002, 59, 38, 0.012, 36, -93, 0.007, 35, 48, 0.019, 12, -87, 0.010, 30, -87, 0.018, -8, -44, 0.001, 29, 90, 0.005, 7, 34, 0.003, -36, 149, 0.001, 54, 34, 0.003, 30, 28, 0.002, 6, 14, 0.005, -20, 35, 0.025, 17, -99, 0.028, -7, -61, 0.000, -27, -56, 0.007, 60, 10, 0.001, 21, 49, 0.002, 18, 85, 0.039, 36, 80, 0.005, 17, 46, 0.001, -6, -49, 0.004, 42, 110, 0.001, -16, -52, 0.002, -20, -57, 0.002, 54, 83, 0.007, 32, 71, 0.069, 31, -4, 0.006, 28, 74, 0.028, 27, -15, 0.007, 8, 13, 0.013, -16, 27, 0.003, 55, 35, 0.004, 42, -112, 0.003, 19, 47, 0.004, 65, 30, 0.000, 43, 86, 0.003, 45, 127, 0.176, 18, 25, 0.001, 52, -111, 0.000, 13, -86, 0.027, -30, 153, 0.001, -18, -57, 0.001, -15, -71, 0.008, 57, 40, 0.029, 56, -3, 0.024, 52, 0, 0.061, 24, 78, 0.056, 34, 120, 0.163, -5, 132, 0.001, -24, -62, 0.001, 47, -116, 0.004, 43, 1, 0.013, -1, 10, 0.003, 67, 16, 0.001, 13, 93, 0.002, -28, 28, 0.007, 43, 18, 0.029, 23, 103, 0.045, -37, -60, 0.003, 0, -70, 0.000, 15, 76, 0.092, 61, 15, 0.001, 49, 125, 0.006, -8, 116, 0.001, 29, -6, 0.001, 20, 77, 0.093, -18, 21, 0.000, 53, 17, 0.013, 29, 15, 0.001, 44, 118, 0.003, 5, 21, 0.005, 38, 80, 0.003, 48, 138, 0.000, 63, 28, 0.003, 40, 45, 0.082, 36, 48, 0.013, 35, 11, 0.048, 12, 54, 0.001, 11, 125, 0.050, 26, -111, 0.000, 39, 23, 0.017, 17, 123, 0.004, -55, -67, 0.001, 50, 10, 0.044, 27, 81, 0.228, 29, 94, 0.001, 41, 118, 0.031, 54, -130, 0.001, 53, 101, 0.001, 30, -8, 0.018, 26, -13, 0.001, 6, 42, 0.003, -10, -68, 0.003, 54, -115, 0.001, -21, -54, 0.024, 64, 43, 0.000, -30, 30, 0.011, 41, 36, 0.022, 17, 42, 0.002, -3, -45, 0.008, -6, -77, 0.004, -25, 151, 0.000, -7, 16, 0.007, 45, -80, 0.000, 42, 82, 0.004, 41, -79, 0.008, 3, 118, 0.006, 51, 27, 0.010, 32, 43, 0.003, 8, 49, 0.003, -16, 47, 0.007, 51, 12, 0.044, 32, -102, 0.003, 45, 142, 0.002, 19, 27, 0.001, 6, -11, 0.008, 33, 92, 0.000, -5, 13, 0.019, -6, 120, 0.090, 65, 58, 0.002, 46, -120, 0.007, 42, 3, 0.020, 18, 29, 0.001, 33, 9, 0.002, -5, -66, 0.000, -29, 152, 0.001, -15, -43, 0.003, 22, 105, 0.036, -20, -50, 0.003, 52, 44, 0.006, 13, 35, 0.005, 47, -113, 0.000, -10, -38, 0.008, 24, 114, 0.067, 56, 88, 0.002, 33, -89, 0.004, 47, 32, 0.011, 44, 22, 0.027, 23, 26, 0.000, 20, 44, 0.009, 19, 87, 0.006, 34, -85, 0.016, -4, 34, 0.036, 44, -91, 0.009, 62, 37, 0.000, 20, -101, 0.073, 38, 31, 0.019, 35, 107, 0.061, 15, 32, 0.003, 14, 1, 0.007, 10, 8, 0.066, 47, 130, 0.016, 61, 51, 0.005, -33, 20, 0.001, -18, 178, 0.009, 6, 40, 0.017, 49, 121, 0.007, 48, -64, 0.001, 29, -2, 0.001, -13, -56, 0.001, 16, 121, 0.084, 53, 5, 0.000, 49, 10, 0.058, 48, 15, 0.034, 26, 83, 0.289, 44, 82, 0.025, 40, 130, 0.010, 38, 108, 0.002, 35, -106, 0.024, 16, 0, 0.003, 12, 3, 0.008, 29, -92, 0.001, 48, -113, 0.000, 59, 45, 0.001, 40, 17, 0.023, 35, 39, 0.029, 11, 121, 0.001, -8, 37, 0.012, 40, -88, 0.013, 39, 123, 0.064, 16, -98, 0.011, 50, 14, 0.037, 27, 109, 0.059, 3, 39, 0.002, 51, 108, 0.015, 30, 4, 0.001, 7, -69, 0.002, 3, -72, 0.001, -17, -59, 0.000, -6, 24, 0.014, 30, 115, 0.298, 23, 95, 0.013, 45, 3, 0.006, -4, -40, 0.019, 17, 6, 0.001, -6, -57, 0.000, 28, 19, 0.000, -26, -58, 0.007, 8, 6, 0.023, 3, 98, 0.013, 55, 58, 0.003, 51, 55, 0.003, 32, -1, 0.001, 31, 52, 0.011, 27, 41, 0.002, 4, 24, 0.002, 22, -100, 0.024, -16, -45, 0.001, 21, 95, 0.039, -1, 131, 0.000, -3, -43, 0.003, 46, 33, 0.032, 43, 125, 0.080, 22, 43, 0.015, 55, 92, 0.001, -2, 13, 0.001, -25, 46, 0.008, 43, 142, 0.074, 42, -9, 0.002, 57, 95, 0.000, 19, -88, 0.003, 37, 44, 0.015, -2, 128, 0.001, 10, 104, 0.009, 28, 79, 0.291, -14, -46, 0.001, 56, 69, 0.002, 37, -103, 0.000, 52, 72, 0.001, 13, 7, 0.034, 8, 94, 0.000, 47, -77, 0.000, 9, 12, 0.034, 46, 78, 0.000, 43, -80, 0.034, -11, 125, 0.003, -34, -64, 0.005, 0, 20, 0.003, 37, -118, 0.001, 47, 68, 0.007, 19, 99, 0.009, -8, 143, 0.001, -23, -52, 0.008, -24, 25, 0.000, 14, 38, 0.010, 58, 56, 0.005, 38, 59, 0.005, 35, 135, 0.025, 34, 34, 0.009, 15, 4, 0.003, 10, 44, 0.008, 14, 32, 0.006, 1, -76, 0.012, 38, -90, 0.079, 15, -91, 0.057, 49, 21, 0.038, 25, 43, 0.007, 2, 34, 0.022, 1, 33, 0.018, 16, 77, 0.073, -22, 44, 0.003, 48, 51, 0.000, 26, 103, 0.054, 25, -100, 0.122, 36, 41, 0.051, -22, -69, 0.001, 50, 80, 0.001, 12, 31, 0.009, 7, 172, 0.001, 5, 126, 0.007, -7, 156, 0.005, 29, 117, 0.097, 7, 125, 0.068, 39, 95, 0.001, 36, -121, 0.021, 54, 75, 0.003, 50, 50, 0.001, 30, 45, 0.004, 26, 60, 0.003, 3, 19, 0.005, 2, 102, 0.042, 12, 108, 0.015, -7, -70, 0.001, 45, 18, 0.012, -25, -65, 0.025, 36, 101, 0.002, -3, 38, 0.014, 30, 79, 0.073, 45, -89, 0.004, 60, 30, 0.014, -29, -60, 0.001, 21, -99, 0.012, 32, 52, 0.053, 31, -105, 0.000, 28, 47, 0.002, 8, 42, 0.020, 55, 62, 0.051, 51, 67, 0.001, -3, 140, 0.001, 31, 72, 0.059, 28, -98, 0.001, 27, 69, 0.081, 42, -71, 0.148, -1, 23, 0.004, -2, -54, 0.001, 43, 121, 0.013, 45, 86, 0.006, 42, 76, 0.007, 22, 71, 0.088, 56, -117, 0.001, 55, 96, 0.001, 52, -122, 0.001, 13, -59, 0.009, -25, 18, 0.000, 5, 12, 0.008, 46, -112, 0.002, -11, -61, 0.003, -15, -64, 0.002, 57, 75, 0.000, 37, 64, 0.003, 33, 65, 0.005, 28, 107, 0.097, 9, 23, 0.000, -11, -44, 0.002, -18, -63, 0.030, -15, 13, 0.001, 56, 41, 0.026, 37, -83, 0.006, -4, -68, 0.001, 33, -78, 0.005, 44, 63, 0.001, 46, 122, 0.009, 43, -84, 0.013, 20, 53, 0.002, 0, 40, 0.002, -5, 152, 0.002, 13, 124, 0.087, 43, 53, 0.002, 1, 114, 0.001, 34, -77, 0.013, 15, 103, 0.066, 11, 44, 0.010, 10, -83, 0.012, -9, -47, 0.001, 25, 105, 0.087, -13, 14, 0.006, 61, 6, 0.002, 58, 28, 0.001, 35, 115, 0.212, 34, 70, 0.118, 15, -8, 0.004, 49, 100, 0.000, 11, -11, 0.011, -32, 151, 0.002, -19, -55, 0.001, 53, 48, 0.004, 49, 49, 0.001, 29, 70, 0.018, 25, 71, 0.025, -2, 106, 0.005, -19, 26, 0.001, 48, 103, 0.000, 40, 74, 0.017, 39, -95, 0.008, 36, 69, 0.037, 50, 116, 0.001, 12, 27, 0.005, -7, 135, 0.001, 11, 104, 0.003, -12, 33, 0.002, 59, 37, 0.001, 5, 98, 0.015, 39, 50, 0.014, 36, -92, 0.004, 35, 47, 0.025, 12, -86, 0.054, 30, -86, 0.009, -8, -51, 0.000, 29, 89, 0.004, 7, 33, 0.005, -36, 150, 0.013, 54, 39, 0.016, 30, 25, 0.001, 6, 19, 0.002, 17, -96, 0.029, -27, -57, 0.003, 60, 11, 0.013, 21, 52, 0.002, 36, 81, 0.003, 17, 45, 0.002, -6, -48, 0.004, 42, 123, 0.041, -16, -59, 0.001, -20, -56, 0.001, 52, 85, 0.003, 54, 84, 0.027, -41, -63, 0.001, 32, 72, 0.061, 31, -5, 0.008, 28, 75, 0.038, 8, 14, 0.005, -16, 28, 0.007, 55, 34, 0.004, 31, 44, 0.008, 19, 46, 0.004, 18, -89, 0.003, 33, 127, 0.019, -5, 56, 0.003, -36, 148, 0.002, 65, 29, 0.000, 43, 85, 0.004, 45, 122, 0.013, 18, 26, 0.001, 6, 7, 0.116, 52, -110, 0.001, 13, -87, 0.032, 46, -68, 0.001, -11, -73, 0.001, -14, 39, 0.010, -15, -68, 0.001, 57, 39, 0.013, 56, -2, 0.010, 52, 1, 0.033, 24, 79, 0.074, 34, 117, 0.262, 33, -114, 0.001, -24, -61, 0.000, 47, -117, 0.015, 43, 8, 0.036, 19, 122, 0.001, 67, 15, 0.001, 43, 17, 0.017, 58, -3, 0.001, -37, -61, 0.002, 15, 75, 0.092, 47, 93, 0.000, 62, -7, 0.001, 61, 42, 0.001, -46, 170, 0.001, 49, 128, 0.005, -8, 109, 0.203, 29, -7, 0.001, 20, 78, 0.099, -18, 22, 0.000, 53, 20, 0.017, 48, -4, 0.018, 29, 42, 0.001, 44, 119, 0.006, 5, 24, 0.001, 38, 77, 0.015, 48, 139, 0.000, 63, 27, 0.001, 40, 46, 0.019, 39, 5, 0.001, 36, 49, 0.016, 35, 10, 0.023, -19, 147, 0.000, 12, 55, 0.001, 39, 22, 0.010, 50, 7, 0.082, 27, 88, 0.026, 29, 93, 0.002, 41, 117, 0.015, 53, 104, 0.004, 26, -12, 0.002, -9, 143, 0.001, 17, -100, 0.009, 54, -114, 0.000, -30, 27, 0.023, 41, 35, 0.011, 36, 109, 0.013, 32, 117, 0.196, -6, -76, 0.002, -7, 15, 0.005, 42, 79, 0.005, 41, -76, 0.010, 3, 117, 0.001, 21, -75, 0.002, 51, 26, 0.009, 32, 44, 0.003, 8, 50, 0.002, 4, 45, 0.004, 22, -99, 0.008, -16, 48, 0.006, 51, 11, 0.037, 32, -101, 0.002, 8, -63, 0.008, 19, 26, 0.001, -1, -49, 0.001, 33, 91, 0.000, -5, 20, 0.019, 46, -123, 0.004, 42, 4, 0.004, 57, 86, 0.002, 18, 30, 0.001, 33, 12, 0.003, 6, 0, 0.045, -29, 151, 0.000, -15, -40, 0.016, 22, 106, 0.025, 37, -8, 0.010, 52, 29, 0.006, 13, 30, 0.008, 47, -114, 0.001, 46, 103, 0.001, 24, 115, 0.049, 33, -86, 0.034, 47, 31, 0.008, 44, 23, 0.024, 19, 86, 0.037, 34, -84, 0.035, -4, 35, 0.018, 44, -90, 0.004, 62, 38, 0.000, 20, -100, 0.078, 38, 32, 0.018, 35, 106, 0.065, 15, 31, 0.001, 14, 2, 0.011, 10, 5, 0.012, 47, 129, 0.016, 61, 46, 0.000, -33, 19, 0.003, 49, 124, 0.003, 11, -83, 0.001, 48, -55, 0.001, 29, -3, 0.001, 16, 122, 0.046, 53, 8, 0.024, 49, 9, 0.134, 48, 16, 0.018, 26, 84, 0.383, 44, 83, 0.005, 5, -4, 0.083, 38, 105, 0.001, 35, -107, 0.001, 16, 9, 0.000, 12, 4, 0.023, 29, -93, 0.004, -37, 141, 0.000, 59, 52, 0.001, 40, 18, 0.040, -20, -43, 0.092, 35, 38, 0.068, 16, 16, 0.001, -8, 38, 0.015, 40, -95, 0.003, 39, 122, 0.086, 16, -97, 0.011, 50, 43, 0.004, 27, 116, 0.081, 3, 38, 0.001, -1, 103, 0.016, -21, 32, 0.015, 51, 107, 0.002, 30, 1, 0.000, 7, -70, 0.004, 3, -73, 0.008, -13, -38, 0.139, -6, 21, 0.010, -35, -62, 0.003, 30, 116, 0.171, -35, 148, 0.001, 17, 5, 0.000, -6, -56, 0.001, -26, -53, 0.014, 8, 7, 0.019, 41, -112, 0.005, 3, 97, 0.004, 55, 57, 0.004, 52, 125, 0.001, 51, 54, 0.002, 32, 0, 0.001, 31, 51, 0.015, 27, 48, 0.002, 4, 25, 0.002, 22, -103, 0.005, -16, -44, 0.005, 21, 106, 0.251, -39, -69, 0.004, 31, 100, 0.002, 46, 34, 0.012, 43, 132, 0.017, 22, 44, 0.008, 55, 91, 0.002, -2, 14, 0.003, -25, 45, 0.006, -10, 153, 0.000, 43, 141, 0.004, 42, -8, 0.043, 19, -89, 0.003, 37, 43, 0.019, -2, 125, 0.001, 28, 80, 0.267, -14, -49, 0.002, 56, 70, 0.004, 37, -100, 0.003, 52, 73, 0.001, -12, -66, 0.002, 13, 2, 0.013, 9, 11, 0.017, 46, 83, 0.002, 43, -81, 0.008, -14, -62, 0.000, -34, -67, 0.001, 0, 13, 0.001, 37, -119, 0.002, -23, 46, 0.002, -30, -49, 0.004, 23, 29, 0.000, 19, 98, 0.010, 34, -112, 0.004, -36, -60, 0.004, -23, -53, 0.003, -24, 26, 0.005, -43, -64, 0.001, 62, 50, 0.001, 58, 53, 0.006, 38, 60, 0.002, 35, 134, 0.025, 37, 95, 0.000, 15, 3, 0.002, 11, 0, 0.030, 10, 41, 0.015, -9, 29, 0.004, 5, -70, 0.001, -10, 162, 0.002, 1, -77, 0.035, 38, -85, 0.040, 49, 24, 0.043, 2, 31, 0.053, 1, 36, 0.020, 16, 78, 0.094, 48, 52, 0.001, 26, 104, 0.090, 25, -101, 0.010, 2, -78, 0.003, 36, 42, 0.040, -22, -68, 0.001, 50, 77, 0.000, 12, 32, 0.010, -42, -73, 0.006, -12, 22, 0.001, 59, 16, 0.008, 5, 125, 0.001, 36, -7, 0.001, 29, 120, 0.103, 7, 124, 0.029, 40, -123, 0.001, 39, 94, 0.001, 36, -120, 0.005, 54, 76, 0.002, 53, 143, 0.001, 50, 47, 0.003, 30, 46, 0.004, 26, 57, 0.002, 3, 18, 0.002, 2, 99, 0.035, 17, -61, 0.002, -21, 28, 0.005, 12, 77, 0.176, 64, -147, 0.002, 45, 17, 0.019, 6, 103, 0.025, 57, 12, 0.013, 36, 102, 0.059, -21, 165, 0.001, -3, 37, 0.006, 30, 80, 0.019, 45, -94, 0.009, 60, 31, 0.016, 32, 45, 0.050, 31, -106, 0.067, 28, 48, 0.007, 8, 43, 0.008, -16, 33, 0.003, 55, 61, 0.010, 51, 66, 0.001, -3, 139, 0.001, 31, 71, 0.043, 28, -97, 0.004, 9, 107, 0.052, 27, 76, 0.122, 42, -70, 0.030, -1, 22, 0.005, -5, -37, 0.007, 66, 63, 0.001, 46, 62, 0.001, 43, 96, 0.001, 45, 85, 0.004, 42, 73, 0.004, 22, 72, 0.072, 18, 51, 0.001, 55, 95, 0.003, -29, -50, 0.006, -15, -65, 0.000, 57, 62, 0.011, 56, -5, 0.001, 37, 63, 0.006, 33, 68, 0.013, 28, 108, 0.067, 9, 26, 0.000, -11, -45, 0.001, -15, 16, 0.006, 56, 42, 0.016, 37, -80, 0.011, 33, -79, 0.008, 44, 64, 0.000, 43, -85, 0.012, 20, 54, 0.002, -23, 26, 0.001, 13, 123, 0.029, 47, 55, 0.001, 43, 60, 0.003, 20, -155, 0.000, 1, 113, 0.002, 38, -27, 0.002, 37, 142, 0.001, 34, -76, 0.003, 15, 102, 0.036, 11, 43, 0.011, -9, -48, 0.002, 25, 108, 0.036, 58, 25, 0.004, 35, 114, 0.224, 37, 131, 0.000, 34, 67, 0.008, 15, -9, 0.007, 49, 99, 0.000, 11, -4, 0.027, -9, 112, 0.071, -32, 152, 0.001, -19, -52, 0.001, 53, 47, 0.008, 49, 52, 0.001, 48, 1, 0.016, 29, 69, 0.008, 25, 74, 0.059, -19, 25, 0.000, 48, 104, 0.000, -12, -77, 0.062, 40, 75, 0.003, 39, -96, 0.005, 36, 70, 0.025, -19, 170, 0.001, 50, 113, 0.001, 12, 28, 0.006, 11, 103, 0.002, -12, 34, 0.017, 59, 44, 0.001, 5, 97, 0.023, 39, 49, 0.026, 36, -107, 0.001, 35, 46, 0.029, 12, -85, 0.019, 30, -97, 0.040, -8, -50, 0.002, 29, 92, 0.014, 7, 32, 0.007, 8, 100, 0.049, 54, 40, 0.024, 6, 20, 0.003, -31, 152, 0.001, 17, -97, 0.012, -26, 33, 0.053, 8, 105, 0.007, 60, 12, 0.005, 41, 58, 0.003, 21, 51, 0.002, 18, 83, 0.048, 36, 82, 0.002, 17, 48, 0.002, -6, -51, 0.000, 42, 124, 0.148, -16, -58, 0.003, -20, -55, 0.001, 52, 86, 0.012, 54, 81, 0.001, 31, -6, 0.014, 28, 76, 0.089, 27, -9, 0.001, 8, 15, 0.003, -16, 21, 0.000, 55, 33, 0.003, 31, 43, 0.003, 42, -114, 0.003, 19, 45, 0.005, 18, -88, 0.005, 33, 130, 0.024, 43, 92, 0.001, 45, 121, 0.007, -4, 153, 0.001, 52, -109, 0.000, 13, -84, 0.003, 46, -71, 0.030, -14, 40, 0.015, -15, -69, 0.003, 57, 42, 0.012, 0, 103, 0.006, 52, 2, 0.033, 24, 80, 0.058, -9, 18, 0.004, 34, 118, 0.279, 33, -115, 0.001, -5, 130, 0.001, 47, -118, 0.000, 43, 7, 0.024, -13, -47, 0.001, -24, -45, 0.041, 43, 24, 0.018, 23, 101, 0.021, 38, 1, 0.004, 15, 74, 0.040, 47, 108, 0.010, 62, -6, 0.001, 61, 41, 0.001, -4, 102, 0.004, 49, 127, 0.008, -8, 110, 0.285, 29, -4, 0.000, 20, 79, 0.078, -18, 27, 0.004, 53, 19, 0.038, -3, 106, 0.009, 29, 41, 0.002, 44, 120, 0.011, 5, 23, 0.001, 38, 78, 0.019, -22, -159, 0.000, 48, 140, 0.000, 29, -102, 0.002, 63, 26, 0.001, 40, 47, 0.030, 39, 4, 0.006, 36, 50, 0.019, 35, 9, 0.018, 16, 53, 0.000, 39, 21, 0.012, 50, 8, 0.092, 27, 87, 0.036, 29, 96, 0.000, -22, -45, 0.023, 41, 120, 0.047, 3, 73, 0.000, 53, 103, 0.003, -35, -71, 0.012, -25, -56, 0.009, 17, -101, 0.005, -21, -44, 0.028, 8, 77, 0.114, -30, 28, 0.029, 41, 22, 0.024, -29, -59, 0.005, 36, 110, 0.024, 17, 44, 0.014, 32, 118, 0.156, -6, -79, 0.012, -7, 18, 0.007, 42, 80, 0.002, 41, -77, 0.006, 51, 25, 0.011, 32, 37, 0.047, 4, 46, 0.004, 22, -98, 0.014, 51, 10, 0.047, 32, -100, 0.002, -38, 178, 0.000, 8, -62, 0.027, 19, 25, 0.001, -1, -50, 0.001, 33, 94, 0.000, -5, 19, 0.030, 5, 1, 0.011, 46, -122, 0.008, 42, 1, 0.003, 57, 85, 0.001, 33, 11, 0.010, -5, -60, 0.001, -30, 150, 0.000, -18, -52, 0.002, -15, -41, 0.008, 22, 79, 0.063, 52, 30, 0.012, 13, 29, 0.005, 47, -115, 0.000, 46, 104, 0.001, 24, 116, 0.086, -14, -69, 0.001, 33, -87, 0.011, 47, 30, 0.017, 44, 24, 0.029, 19, 85, 0.101, 34, -87, 0.011, -4, 36, 0.015, 14, 44, 0.064, 44, -89, 0.009, 62, 43, 0.000, 38, 29, 0.040, 35, 105, 0.054, 15, 30, 0.001, 14, -9, 0.005, 10, 6, 0.016, 47, 128, 0.030, 61, 45, 0.000, -33, 18, 0.001, 38, -112, 0.001, 34, 11, 0.018, 49, 123, 0.003, 48, -54, 0.001, 29, 0, 0.000, 22, -12, 0.002, 16, 123, 0.004, 53, 7, 0.026, 49, 12, 0.055, 48, 25, 0.029, 26, 81, 0.361, 44, 84, 0.004, 5, -5, 0.022, 38, 106, 0.014, 35, -100, 0.001, 16, 10, 0.000, 53, -104, 0.000, 12, 5, 0.045, 29, -98, 0.057, 59, 51, 0.001, 40, 19, 0.020, 35, 37, 0.099, 16, 25, 0.001, -8, 39, 0.012, 26, -77, 0.001, -32, 29, 0.030, 40, -94, 0.002, -17, -47, 0.014, 16, -96, 0.017, 50, 44, 0.005, 27, 115, 0.093, 3, 37, 0.001, 2, 128, 0.000, -21, 31, 0.016, 51, 106, 0.001, 50, -101, 0.001, 30, 2, 0.000, 7, -71, 0.006, 3, -74, 0.055, -6, 22, 0.010, 30, 113, 0.161, -35, 147, 0.001, 17, 8, 0.000, -26, -52, 0.008, 8, 8, 0.020, 55, 56, 0.005, 52, 126, 0.001, 51, 53, 0.002, 32, 9, 0.003, 31, 50, 0.023, 27, 47, 0.002, 4, 26, 0.001, 22, -102, 0.024, -16, -51, 0.001, 21, 105, 0.034, -1, 129, 0.000, -36, 139, 0.011, 31, 99, 0.002, 46, 23, 0.010, 43, 131, 0.009, 22, 41, 0.011, 55, 90, 0.004, -2, 19, 0.005, -25, 44, 0.001, 57, 97, 0.001, 19, -90, 0.009, 37, 38, 0.037, -10, -76, 0.017, -2, 126, 0.001, 28, 81, 0.109, -14, -48, 0.002, -34, 19, 0.062, 56, 71, 0.001, 37, -101, 0.001, 34, 107, 0.051, 52, 74, 0.001, -44, -64, 0.001, 13, 1, 0.009, 47, -79, 0.001, 9, -2, 0.007, 46, 84, 0.006, 43, -82, 0.004, -34, -66, 0.004, -22, 167, 0.001, 0, 14, 0.001, -23, 45, 0.003, 43, 63, 0.000, 19, 97, 0.030, 34, -115, 0.000, -24, 27, 0.003, -43, -65, 0.002, 58, 54, 0.002, 38, 57, 0.004, 35, 133, 0.012, 37, 106, 0.023, 15, 2, 0.002, 11, -1, 0.014, 10, 42, 0.005, 5, -71, 0.001, 1, -74, 0.001, 38, -84, 0.019, 49, 23, 0.020, -28, -49, 0.012, 2, 32, 0.020, 1, 35, 0.049, 16, 79, 0.064, 48, 45, 0.052, 26, 101, 0.034, 36, 43, 0.019, 12, 33, 0.016, -42, -72, 0.005, -21, -49, 0.024, -12, 23, 0.001, 59, 15, 0.004, 39, 76, 0.017, 36, -6, 0.022, -7, 142, 0.001, 29, 119, 0.057, 7, 123, 0.033, 6, -58, 0.012, 40, -122, 0.007, 36, -119, 0.041, 54, 73, 0.003, 50, 48, 0.002, 30, 51, 0.015, 26, 58, 0.007, 7, 12, 0.006, 3, 17, 0.002, 2, 100, 0.063, 8, 82, 0.014, -21, 27, 0.001, 50, -97, 0.001, 12, 78, 0.142, 45, 20, 0.026, 36, 103, 0.047, -3, 40, 0.001, 30, 77, 0.232, -27, 30, 0.016, 45, -95, 0.003, 60, 32, 0.000, 21, -97, 0.009, 32, 46, 0.018, 31, -107, 0.001, 28, 49, 0.004, 8, 44, 0.006, -16, 34, 0.005, 55, 28, 0.005, 51, 65, 0.001, -3, 134, 0.001, 31, 70, 0.009, 28, -96, 0.004, 27, 75, 0.064, 42, -73, 0.033, 18, -63, 0.003, -1, 21, 0.004, -5, -38, 0.020, 66, 64, 0.001, 43, 95, 0.001, 45, 88, 0.003, 42, 74, 0.007, 22, 69, 0.001, 18, 52, 0.000, 55, 94, 0.001, 46, -114, 0.003, -11, -67, 0.002, -28, 152, 0.005, -15, -62, 0.001, 57, 61, 0.013, 56, -4, 0.003, 52, -9, 0.006, 33, 67, 0.007, 28, 109, 0.066, 9, 25, 0.003, -11, -50, 0.000, -15, 15, 0.006, 56, 43, 0.007, 37, -81, 0.011, 34, 79, 0.000, 44, 65, 0.001, -52, -69, 0.001, 43, -86, 0.009, -9, 36, 0.012, 20, 55, 0.002, -30, -55, 0.003, 47, 54, 0.001, 43, 59, 0.002, -12, 21, 0.001, 37, 141, 0.067, 34, -79, 0.015, 15, 101, 0.052, 11, 42, 0.004, 10, -69, 0.041, -9, -49, 0.002, 25, 107, 0.039, -13, 20, 0.001, 61, 8, 0.001, 58, 26, 0.004, 35, 113, 0.113, 37, 126, 0.010, 34, 68, 0.011, 15, -10, 0.004, 49, 102, 0.000, 11, -5, 0.018, 14, 33, 0.034, -19, -53, 0.001, 53, 58, 0.001, 49, 51, 0.000, 48, 2, 0.034, 29, 72, 0.146, 44, 125, 0.045, 25, 73, 0.043, -19, 28, 0.004, 48, 81, 0.001, -12, -76, 0.031, 40, 76, 0.001, 39, -97, 0.001, 36, 71, 0.008, 50, 114, 0.001, -38, 147, 0.001, -12, 35, 0.011, 59, 43, 0.001, 39, 48, 0.021, 36, -106, 0.001, 35, 45, 0.033, 12, -84, 0.005, 30, -96, 0.009, -8, -49, 0.003, 29, 91, 0.004, 14, 79, 0.078, 7, 31, 0.006, -17, 41, 0.001, 54, 37, 0.016, 53, 110, 0.001, 30, 15, 0.001, -22, -43, 0.031, 6, 17, 0.004, 17, -94, 0.016, -26, 34, 0.009, 8, 106, 0.008, 41, 57, 0.001, 21, 46, 0.005, 18, 84, 0.127, 36, 83, 0.001, 17, 47, 0.001, -6, -50, 0.004, 42, 121, 0.024, -16, -57, 0.002, -20, -54, 0.001, 52, 87, 0.001, 54, 82, 0.002, 31, -7, 0.028, 27, -10, 0.001, 8, 16, 0.016, -16, 22, 0.001, 55, 32, 0.002, 31, 42, 0.002, -2, -49, 0.005, 19, 52, 0.002, 18, -91, 0.003, -29, 32, 0.032, 43, 91, 0.002, 45, 124, 0.025, 52, -108, 0.001, 13, -85, 0.013, 5, 7, 0.130, 46, -70, 0.005, -14, 37, 0.001, 57, 41, 0.019, 0, 104, 0.010, -43, 148, 0.007, 24, 105, 0.045, 34, 115, 0.251, 33, -112, 0.058, 47, -119, 0.002, 44, 29, 0.023, 43, 6, 0.078, 23, -13, 0.000, -36, -69, 0.000, -24, -44, 0.003, 43, 23, 0.024, 24, -81, 0.002, 23, 100, 0.027, 20, -78, 0.001, 38, 2, 0.002, 0, -75, 0.002, 47, 107, 0.008, 61, 44, 0.001, 35, 141, 0.148, -4, 103, 0.050, 49, 130, 0.003, 48, -89, 0.004, 29, -5, 0.001, 20, 80, 0.068, -18, 28, 0.005, 53, 14, 0.016, 29, 44, 0.001, 44, 121, 0.006, 5, 34, 0.002, 38, 83, 0.001, 48, 133, 0.004, 63, 25, 0.001, 40, 48, 0.028, 39, 3, 0.018, 36, 51, 0.033, 35, 0, 0.062, 16, 54, 0.001, 26, -112, 0.001, 59, 7, 0.001, 39, 20, 0.004, 17, 96, 0.096, 50, 5, 0.123, 27, 86, 0.140, 29, 95, 0.001, 41, 119, 0.039, 54, -127, 0.000, 53, 82, 0.003, 30, -5, 0.006, -21, -45, 0.012, 8, 78, 0.195, -30, 25, 0.002, 41, 21, 0.031, 36, 111, 0.021, 17, 43, 0.019, 32, 119, 0.179, -6, -78, 0.014, -7, 17, 0.007, 42, 77, 0.005, 41, -90, 0.015, 51, 16, 0.027, 32, 38, 0.005, 4, 47, 0.002, 51, 9, 0.058, 32, -107, 0.001, 8, -61, 0.001, 45, 143, 0.000, -1, -51, 0.002, 33, 93, 0.000, -5, 18, 0.012, 46, -117, 0.003, 42, 2, 0.008, -34, 149, 0.001, 6, 12, 0.011, -44, -71, 0.001, -5, -61, 0.000, 22, 80, 0.064, 52, 31, 0.019, 13, 32, 0.013, 47, -100, 0.000, -10, -67, 0.002, 24, 109, 0.054, 20, -16, 0.001, 56, 83, 0.000, 33, -84, 0.105, 47, 29, 0.045, 44, 25, 0.029, 34, -86, 0.022, -4, 37, 0.030, 44, -88, 0.020, 62, 44, 0.000, 38, 30, 0.023, 35, 96, 0.000, 15, 29, 0.001, 14, -8, 0.003, 10, -13, 0.016, 47, 127, 0.043, -9, 121, 0.023, 61, 48, 0.002, 34, 12, 0.001, 49, 30, 0.011, 48, -53, 0.001, 29, -1, 0.001, -13, -59, 0.000, -19, -45, 0.002, 6, 123, 0.010, 49, 11, 0.044, 48, 26, 0.032, 26, 82, 0.257, 44, 85, 0.009, 40, 125, 0.070, 38, 111, 0.030, 35, -101, 0.009, 53, -105, 0.002, 12, 6, 0.034, 29, -99, 0.002, 59, 50, 0.001, 40, 20, 0.024, -11, 150, 0.001, 35, 44, 0.026, 16, 26, 0.001, -8, 40, 0.020, -32, 30, 0.025, 40, -93, 0.002, 39, 120, 0.033, 50, 41, 0.007, 27, 114, 0.157, 26, 35, 0.001, 3, 44, 0.010, -21, 30, 0.008, 51, 105, 0.001, 50, -100, 0.000, 23, 81, 0.086, 7, -72, 0.044, 3, -75, 0.019, -6, 35, 0.010, 30, 114, 0.218, 18, 81, 0.018, 45, 0, 0.017, 17, 7, 0.000, -26, -55, 0.010, 8, 1, 0.016, 41, -110, 0.001, 55, 55, 0.006, 52, 127, 0.000, 51, 60, 0.002, 32, 10, 0.002, 31, 49, 0.039, 28, 5, 0.000, 27, 46, 0.002, 4, 27, 0.001, -16, -50, 0.003, 21, 108, 0.030, -1, 128, 0.003, 31, 98, 0.003, 46, 24, 0.030, 43, 130, 0.027, -4, 144, 0.002, 22, 42, 0.015, 55, 89, 0.001, -2, 20, 0.003, 46, -89, 0.001, 57, 100, 0.000, 37, 37, 0.036, -2, 131, 0.000, 28, 82, 0.070, -9, 27, 0.008, -34, 20, 0.012, 56, 72, 0.001, 37, -106, 0.001, 34, 108, 0.099, 52, 75, 0.001, 13, 4, 0.020, 9, -3, 0.004, 46, 81, 0.001, 43, -83, 0.022, -34, -61, 0.008, 0, 15, 0.000, -23, 48, 0.018, 13, 145, 0.005, 43, 62, 0.001, 23, 59, 0.026, 34, -114, 0.003, -24, 28, 0.002, -42, 146, 0.001, 44, -124, 0.001, 38, 58, 0.003, 35, 140, 0.978, 37, 105, 0.014, 15, 1, 0.002, 11, -2, 0.014, 10, 39, 0.054, 1, -75, 0.012, 38, -87, 0.009, 49, 26, 0.027, 14, 19, 0.002, 2, 29, 0.007, 1, 38, 0.001, 16, 80, 0.081, 48, 46, 0.002, 26, 102, 0.045, 40, 97, 0.002, 36, 44, 0.019, 38, 139, 0.002, -22, -70, 0.001, 50, 107, 0.001, 12, 34, 0.006, -12, 24, 0.001, 59, 14, 0.005, 40, -8, 0.039, 39, 75, 0.001, 36, -5, 0.023, 35, 72, 0.022, -7, 141, 0.001, 29, 114, 0.128, 7, 122, 0.003, 40, -121, 0.001, 36, -118, 0.001, 54, 74, 0.025, 50, 45, 0.004, 30, 52, 0.012, 26, 55, 0.001, 7, 11, 0.015, 2, 97, 0.001, -20, 31, 0.010, -21, 26, 0.001, -3, -78, 0.020, 50, -96, 0.002, 12, 79, 0.154, -7, -69, 0.000, 45, 19, 0.019, 6, 101, 0.055, 18, 109, 0.012, 36, 104, 0.083, -3, 39, 0.005, -35, -67, 0.001, 30, 78, 0.125, -27, 29, 0.119, 45, -92, 0.008, 60, 33, 0.000, 21, -86, 0.005, 32, 47, 0.011, 31, -92, 0.007, 8, 37, 0.033, -16, 35, 0.026, 55, 27, 0.011, -3, 133, 0.002, 31, 69, 0.006, 28, -95, 0.001, 9, 93, 0.002, 27, 74, 0.042, 42, -72, 0.032, -1, 36, 0.078, -5, -39, 0.008, 66, 61, 0.000, 5, -6, 0.031, 43, 94, 0.001, 45, 87, 0.003, 42, 71, 0.007, 22, 70, 0.033, 18, 49, 0.002, 55, 93, 0.009, -11, -64, 0.001, -15, -63, 0.001, 57, 64, 0.004, 37, 73, 0.002, 52, -8, 0.011, 33, 70, 0.028, 28, 110, 0.069, 9, 28, 0.004, -11, -51, 0.001, -15, 18, 0.001, 56, 44, 0.065, 34, 80, 0.000, -4, -65, 0.001, 44, 66, 0.006, 46, 109, 0.001, 43, -87, 0.023, 24, 53, 0.000, 20, 56, 0.000, -20, 147, 0.005, -23, 28, 0.003, 47, 53, 0.002, -47, -68, 0.000, 1, 115, 0.001, 34, -78, 0.009, 14, -83, 0.002, 11, 41, 0.012, 10, -68, 0.043, -9, -50, 0.001, 25, 94, 0.041, -13, 19, 0.004, 61, 7, 0.001, 58, 23, 0.001, 37, 125, 0.001, 34, 65, 0.003, 15, -11, 0.004, 49, 101, 0.000, 11, -6, 0.014, -19, -58, 0.001, 53, 57, 0.014, 49, 54, 0.001, 48, 3, 0.340, 29, 71, 0.074, 44, 126, 0.088, 25, 76, 0.072, -19, 27, 0.002, 48, 82, 0.001, -12, -59, 0.001, 40, 69, 0.041, 39, -98, 0.001, 36, 72, 0.004, 50, 111, 0.000, -7, 140, 0.002, -12, 36, 0.006, 59, 42, 0.001, 39, 47, 0.015, 36, -105, 0.002, 35, 52, 0.364, 30, -99, 0.002, -8, -48, 0.005, 29, 86, 0.000, 7, 30, 0.007, -17, 40, 0.015, 54, 38, 0.037, 30, 16, 0.001, 6, 18, 0.004, 17, -95, 0.011, 64, 19, 0.000, 41, 60, 0.010, 21, 45, 0.005, 57, -1, 0.001, -6, -37, 0.014, 42, 122, 0.052, 4, -75, 0.084, -16, -56, 0.018, -20, -53, 0.001, 52, 88, 0.001, 54, 87, 0.020, 31, -8, 0.051, 27, -11, 0.001, -16, 23, 0.003, 55, 31, 0.014, 31, 41, 0.001, 19, 51, 0.002, 18, -90, 0.004, 33, 132, 0.045, 66, 33, 0.000, -29, 31, 0.023, 43, 90, 0.004, 45, 123, 0.032, 42, 43, 0.028, 4, 114, 0.003, 13, -90, 0.005, 46, -81, 0.003, -14, 38, 0.002, 57, 44, 0.002, 0, 113, 0.005, 24, 106, 0.029, 34, 116, 0.265, 33, -113, 0.001, -5, 136, 0.000, 47, -120, 0.004, 43, 5, 0.030, 23, -14, 0.000, 19, 111, 0.080, -24, -51, 0.047, 44, -83, 0.002, 43, 22, 0.033, 58, 12, 0.005, 20, -77, 0.017, -37, -56, 0.002, 0, -74, 0.001, 47, 106, 0.000, 61, 43, 0.001, -4, 104, 0.031, 49, 129, 0.002, -8, 112, 0.261, 29, -10, 0.002, 20, 81, 0.044, -18, 25, 0.003, 53, 13, 0.012, 29, 43, 0.001, 44, 122, 0.011, 5, 33, 0.003, -28, -59, 0.011, 48, 134, 0.002, 29, -100, 0.002, 63, 24, 0.003, 40, 41, 0.025, 39, 2, 0.001, 36, 52, 0.036, 35, -1, 0.013, 59, 6, 0.005, 39, 19, 0.005, 17, 95, 0.021, 54, -9, 0.001, 50, 6, 0.072, 27, 85, 0.110, 41, 122, 0.087, 53, 81, 0.002, 30, -4, 0.002, 54, -111, 0.000, 23, 99, 0.015, -30, 26, 0.001, 41, 24, 0.015, 36, 112, 0.090, 32, 120, 0.273, -6, -81, 0.001, -7, 20, 0.008, 42, 78, 0.002, 41, -91, 0.011, 51, 15, 0.034, 32, 39, 0.002, 8, 45, 0.006, 4, 48, 0.002, -3, -39, 0.001, 51, 0, 0.331, 32, -106, 0.006, -29, -70, 0.002, -38, 142, 0.000, -5, 17, 0.009, 46, -116, 0.002, 42, -1, 0.017, 57, 87, 0.000, -2, 120, 0.009, -5, -62, 0.001, -15, -39, 0.029, 22, 77, 0.089, 52, 32, 0.014, 13, 31, 0.012, 47, -101, 0.001, 46, 102, 0.000, 24, 110, 0.099, -14, -71, 0.017, 20, -15, 0.001, 56, 84, 0.001, -3, 147, 0.001, 33, -85, 0.012, 47, 44, 0.002, 44, 26, 0.040, 34, -89, 0.008, -4, 38, 0.044, 44, -87, 0.007, 62, 41, 0.001, 38, 35, 0.019, 35, 95, 0.000, -27, 153, 0.004, 15, 44, 0.074, 49, 144, 0.001, 10, -12, 0.018, 47, 126, 0.037, 61, 47, 0.003, 34, 9, 0.014, 15, -83, 0.001, 49, 29, 0.023, -19, -50, 0.004, -3, 101, 0.001, 48, 27, 0.026, 26, 79, 0.148, 44, 86, 0.016, 40, 126, 0.021, 38, 112, 0.031, 35, -102, 0.001, 12, 7, 0.039, 29, -96, 0.004, 59, 49, 0.001, 35, 43, 0.018, 16, 27, 0.001, -8, 33, 0.003, 14, 98, 0.001, -31, -70, 0.003, -32, 31, 0.001, 40, -92, 0.003, 39, 119, 0.154, 16, -86, 0.001, 50, 42, 0.006, 27, 113, 0.184, -22, -48, 0.032, 41, 86, 0.009, 3, 43, 0.003, 2, 126, 0.002, -54, -68, 0.001, -21, 29, 0.086, 50, -103, 0.001, -35, -72, 0.000, 45, 42, 0.022, 7, -73, 0.042, -6, 36, 0.015, 45, -1, 0.003, 41, -124, 0.001, -29, -64, 0.004, -35, 141, 0.001, 17, 10, 0.001, 32, 92, 0.001, -26, -54, 0.030, 8, 2, 0.013, 41, -111, 0.012, 55, 54, 0.004, 52, 128, 0.001, 51, 59, 0.017, 32, 11, 0.001, 31, 48, 0.017, 28, 6, 0.000, 27, 45, 0.002, 4, 28, 0.002, -16, -49, 0.008, 21, 107, 0.117, 18, -69, 0.094, -20, 18, 0.001, 31, 97, 0.002, 46, 21, 0.024, 43, 129, 0.012, 55, 88, 0.001, -2, 17, 0.003, -8, -79, 0.011, 5, 0, 0.140, 46, -88, 0.001, 43, 146, 0.002, 37, 40, 0.025, -39, 142, 0.001, -2, 132, 0.004, 28, 83, 0.037, -10, 15, 0.007, -14, -50, 0.001, -18, -67, 0.009, 56, 65, 0.002, 37, -107, 0.002, 34, 105, 0.040, 52, 76, 0.001, 13, 3, 0.020, 9, 0, 0.022, 46, 82, 0.001, 43, -76, 0.020, -14, -67, 0.000, -34, -60, 0.045, 0, 16, 0.001, 37, -122, 0.130, -23, 47, 0.005, 43, 61, 0.001, 23, 58, 0.016, -23, -64, 0.003, 44, -123, 0.019, 58, 68, 0.000, 38, 63, 0.003, 35, 139, 0.091, 37, 108, 0.011, 15, 0, 0.001, 11, -3, 0.015, 10, 40, 0.057, 1, -72, 0.001, 38, -86, 0.008, 49, 25, 0.040, -2, 102, 0.017, 2, 30, 0.007, 1, 37, 0.003, 48, 47, 0.002, 26, 115, 0.068, 40, 98, 0.004, 36, 29, 0.008, 38, 140, 0.015, 50, 108, 0.002, 12, 35, 0.011, -12, 25, 0.004, 59, 13, 0.003, 39, 74, 0.003, 36, -4, 0.036, 35, 71, 0.005, -7, 144, 0.006, 29, 113, 0.157, 40, -120, 0.001, 54, 47, 0.006, 50, 46, 0.008, 30, 49, 0.033, 26, 56, 0.003, 7, 10, 0.037, 2, 98, 0.006, -21, 25, 0.000, -3, -79, 0.044, 50, -99, 0.001, 12, 80, 0.189, 45, 14, 0.031, 6, 102, 0.054, 18, 110, 0.049, 36, 105, 0.037, -3, 34, 0.041, -27, 32, 0.020, 45, -93, 0.038, 42, 131, 0.016, 60, 34, 0.001, 21, -87, 0.004, 32, 48, 0.010, -17, -42, 0.005, 31, -93, 0.004, 28, 51, 0.002, 8, 38, 0.053, -16, 36, 0.084, 55, 26, 0.006, 31, 20, 0.001, 27, 73, 0.017, 42, -75, 0.011, 4, -8, 0.003, 18, -65, 0.025, -1, 35, 0.127, -36, 144, 0.001, 66, 62, 0.000, 43, 93, 0.001, 45, 82, 0.002, 42, 72, 0.015, 22, 75, 0.099, 18, 50, 0.001, 6, 3, 0.099, 9, -66, 0.005, -10, 124, 0.002, -11, -65, 0.001, -15, -60, 0.000, 57, 63, 0.002, 37, 76, 0.001, 52, -7, 0.010, 33, 69, 0.060, 28, 111, 0.055, 9, 27, 0.003, -11, -48, 0.008, -33, 148, 0.000, -15, 17, 0.003, 56, 37, 0.015, 34, 77, 0.003, -4, -64, 0.001, 44, 67, 0.001, 43, -112, 0.003, 24, 54, 0.001, -23, 27, 0.002, 1, 118, 0.002, 34, -81, 0.019, 11, 16, 0.009, 10, -71, 0.080, 25, 93, 0.045, -13, 18, 0.008, -32, 116, 0.024, 58, 24, 0.001, 37, 128, 0.352, 34, 66, 0.005, 49, 104, 0.000, 11, -7, 0.010, 10, 76, 0.023, -19, -59, 0.001, 53, 60, 0.012, 49, 53, 0.001, 48, 4, 0.014, 29, 66, 0.001, 44, 127, 0.085, 25, 75, 0.075, -19, 22, 0.001, 48, 83, 0.001, -12, -58, 0.000, -32, -63, 0.006, 40, 70, 0.055, 39, -99, 0.001, 36, 73, 0.009, 50, 112, 0.000, -7, 139, 0.001, 11, 108, 0.047, 59, 41, 0.003, 39, 46, 0.016, 36, -104, 0.000, 35, 51, 0.047, 30, -98, 0.004, 29, 85, 0.000, 7, 29, 0.005, -17, 39, 0.006, 54, 43, 0.004, 30, 13, 0.001, -9, 147, 0.002, 6, 23, 0.001, 8, 79, 0.021, 17, -92, 0.031, 64, 20, 0.001, -13, -48, 0.001, 41, 59, 0.005, 21, 48, 0.005, 18, 82, 0.028, 17, 49, 0.000, -6, -36, 0.007, -44, 173, 0.014, 42, 119, 0.037, 4, -74, 0.231, -20, -52, 0.001, 52, 89, 0.001, 54, 88, 0.001, 31, -9, 0.019, -16, 24, 0.005, 55, 30, 0.007, 31, 40, 0.001, 19, 50, 0.002, 18, -93, 0.021, -3, -49, 0.006, 33, 131, 0.201, -29, 30, 0.015, 43, 89, 0.007, 45, 118, 0.001, 42, 44, 0.013, 4, 115, 0.016, 13, -91, 0.001, 46, -80, 0.003, -28, -65, 0.011, -14, 35, 0.020, 57, 43, 0.007, 0, 114, 0.001, 52, 21, 0.055, 24, 107, 0.028, 34, 113, 0.231, 33, -110, 0.001, -24, -65, 0.003, 47, -121, 0.004, 43, 12, 0.055, 23, -15, 0.000, 19, 110, 0.064, -24, -50, 0.014, -30, -58, 0.002, 43, 21, 0.034, -28, -60, 0.004, 23, 98, 0.015, 20, -76, 0.048, -37, -57, 0.002, 11, 76, 0.165, 47, 105, 0.000, -13, 46, 0.005, 61, 38, 0.000, -4, 105, 0.077, 49, 132, 0.000, -42, 174, 0.003, 20, 82, 0.068, -18, 26, 0.005, 53, 16, 0.012, 29, 38, 0.001, 44, 123, 0.015, 5, 36, 0.002, 38, 81, 0.006, 48, 135, 0.002, 29, -101, 0.002, 63, 23, 0.002, 40, 42, 0.012, 39, 1, 0.000, -20, -47, 0.008, 35, -2, 0.008, 39, 18, 0.003, 17, 98, 0.025, 54, -8, 0.004, 50, 3, 0.056, 27, 92, 0.018, 41, 121, 0.070, 53, 84, 0.028, 30, -7, 0.011, 41, 10, 0.003, 54, -110, 0.001, -35, -58, 0.436, 64, 40, 0.007, -30, 23, 0.001, 41, 23, 0.015, 36, 113, 0.048, 32, 129, 0.002, -6, -80, 0.020, -7, 19, 0.005, 42, 91, 0.002, 41, -88, 0.055, 52, 117, 0.001, 51, 14, 0.045, 32, 40, 0.003, 8, 46, 0.005, 51, -1, 0.053, 32, -105, 0.002, 8, -67, 0.003, -2, -44, 0.002, 33, 95, 0.000, -5, 24, 0.005, 65, 61, 0.000, 46, -119, 0.008, 42, 0, 0.004, -1, -52, 0.000, -2, 117, 0.022, -5, -63, 0.000, 22, 78, 0.057, 52, 33, 0.010, 13, 26, 0.010, -10, -61, 0.001, 24, 111, 0.059, -14, -70, 0.001, 56, 77, 0.001, -20, 170, 0.000, 47, 43, 0.010, 44, 27, 0.101, 20, 33, 0.001, 34, -88, 0.009, -4, 39, 0.008, 47, -4, 0.004, 44, -86, 0.001, 62, 42, 0.000, 38, 36, 0.021, 15, 43, 0.008, 49, 143, 0.001, 47, 125, 0.036, 61, 74, 0.010, -34, 150, 0.003, 38, -109, 0.000, 34, 10, 0.018, 49, 32, 0.017, -19, -51, 0.002, -22, 49, 0.005, 48, 28, 0.019, 26, 80, 0.176, 44, 87, 0.021, 40, 127, 0.022, 38, 109, 0.003, 35, -103, 0.000, 16, 5, 0.001, 12, 8, 0.082, -42, -65, 0.000, 29, -97, 0.006, -36, -68, 0.001, 59, 56, 0.001, 40, 14, 0.002, 35, 42, 0.021, 16, 28, 0.001, -8, 34, 0.005, 26, -78, 0.001, -31, -71, 0.008, 40, -99, 0.003, 39, 118, 0.305, 50, 39, 0.009, -12, -50, 0.000, 27, 120, 0.063, 26, 33, 0.071, 41, 85, 0.002, 3, 42, 0.006, 51, 95, 0.003, -21, -65, 0.002, 50, -102, 0.001, 45, 41, 0.017, 7, -74, 0.007, -6, 33, 0.007, 17, 9, 0.001, 28, 24, 0.001, 8, 3, 0.012, 55, 53, 0.028, 51, 58, 0.004, 32, 12, 0.010, 31, 47, 0.021, 28, 7, 0.000, 27, 52, 0.001, 4, 13, 0.005, -16, -48, 0.024, 21, 102, 0.010, 18, -68, 0.012, -20, 19, 0.001, 31, 96, 0.002, 46, 22, 0.023, 55, 87, 0.023, -10, -66, 0.001, -2, 18, 0.005, 46, -91, 0.001, 43, 145, 0.011, -11, 37, 0.005, 57, 54, 0.004, 37, 39, 0.026, -17, -50, 0.004, 28, 84, 0.041, -10, 16, 0.007, -34, 18, 0.001, 56, 66, 0.003, 37, -104, 0.001, 34, 106, 0.070, 52, 61, 0.002, 13, -2, 0.026, 9, -1, 0.007, 46, 135, 0.001, 43, -77, 0.029, -14, -66, 0.001, -34, -63, 0.003, 0, 25, 0.008, -38, -56, 0.001, 47, 63, 0.000, 43, 68, 0.001, 23, 57, 0.006, -22, 150, 0.003, 15, 110, 0.001, -23, -65, 0.002, 44, -122, 0.007, 58, 65, 0.000, 38, 64, 0.004, 35, 138, 0.084, 37, 107, 0.024, 15, -1, 0.002, 11, 4, 0.015, 10, 37, 0.027, -9, 116, 0.097, -40, 176, 0.002, 5, -74, 0.023, 1, -73, 0.001, 38, -81, 0.013, 49, 28, 0.017, 25, 34, 0.000, 2, 27, 0.003, 1, 40, 0.002, 48, 48, 0.000, 26, 116, 0.073, 40, 99, 0.005, 36, 30, 0.017, 35, -75, 0.001, 50, 105, 0.001, 12, 36, 0.004, -12, 26, 0.007, 62, 114, 0.001, -32, -51, 0.001, 39, 73, 0.004, 35, 70, 0.025, -7, 143, 0.002, 30, -105, 0.000, 29, 116, 0.108, 36, -116, 0.001, 54, 48, 0.005, 50, 75, 0.001, 30, 50, 0.016, 7, 9, 0.048, 50, -98, 0.000, 12, 81, 0.071, -27, -70, 0.001, 45, 13, 0.062, 8, 125, 0.065, 36, 106, 0.031, -3, 33, 0.038, -7, -34, 0.001, -37, -71, 0.009, -27, 31, 0.011, 45, -98, 0.001, 42, 132, 0.004, 60, 35, 0.001, 21, -84, 0.001, 32, 57, 0.001, 31, -94, 0.007, 28, 52, 0.007, 8, 39, 0.093, -16, 29, 0.048, 55, 25, 0.012, -3, 135, 0.001, 42, -74, 0.007, 4, -7, 0.008, 18, -64, 0.003, -1, 34, 0.000, 45, 81, 0.002, 42, 69, 0.003, 22, 76, 0.116, 56, -120, 0.001, 18, 47, 0.001, -35, 118, 0.000, 13, -60, 0.003, 14, -11, 0.008, 9, -67, 0.018, 46, -111, 0.001, -11, -54, 0.001, -15, -61, 0.000, 57, 66, 0.022, 37, 75, 0.000, 52, -6, 0.007, 33, 72, 0.102, 28, 112, 0.111, 9, 14, 0.018, -11, -49, 0.001, -9, 22, 0.001, -4, 122, 0.006, 56, 38, 0.016, 34, 78, 0.000, -4, -63, 0.000, 44, 68, 0.001, 43, -113, 0.000, 24, 55, 0.003, 20, 58, 0.000, 1, 117, 0.000, 34, -80, 0.016, 15, 82, 0.001, 11, 15, 0.024, 10, -70, 0.009, 25, 96, 0.003, -13, 17, 0.015, 37, 127, 0.413, 34, 63, 0.025, 49, 103, 0.000, 10, 73, 0.001, 53, 59, 0.010, 49, 56, 0.001, 48, -3, 0.013, 29, 65, 0.001, 44, 128, 0.036, 25, 62, 0.003, -1, 167, 0.000, 35, -120, 0.009, -19, 21, 0.001, 48, 84, 0.001, -12, -57, 0.001, -32, -62, 0.005, 40, 71, 0.047, 39, -100, 0.000, 36, 74, 0.018, 50, 109, 0.001, 11, 107, 0.076, -12, 154, 0.000, 39, 45, 0.018, 35, 50, 0.021, 30, -93, 0.011, 29, 88, 0.002, 7, 28, 0.003, -17, 38, 0.013, 54, 44, 0.005, 53, 111, 0.001, 30, 14, 0.001, -25, -52, 0.009, 17, -93, 0.019, 12, 109, 0.046, 64, 13, 0.000, 45, 49, 0.001, 41, 46, 0.024, 21, 47, 0.005, 18, 79, 0.123, 36, 134, 0.001, 51, -104, 0.000, -6, -39, 0.009, 45, -62, 0.002, 42, 120, 0.030, 4, -73, 0.023, 52, 90, 0.001, 54, 85, 0.002, 32, 13, 0.016, 55, 29, 0.008, 31, 39, 0.001, 9, 139, 0.000, 42, -102, 0.001, 19, 49, 0.002, 18, -92, 0.016, 33, 134, 0.035, 66, 31, 0.000, -29, 29, 0.024, 45, 117, 0.001, 42, 41, 0.000, 4, 116, 0.004, 22, 29, 0.000, 13, -88, 0.060, 46, -83, 0.000, -14, 36, 0.010, 57, 30, 0.002, 0, 115, 0.000, 52, 22, 0.059, 33, 36, 0.102, 24, 108, 0.045, -15, 48, 0.001, -38, 148, 0.001, 34, 114, 0.324, 33, -111, 0.051, -24, -64, 0.005, 47, -122, 0.110, 46, 143, 0.004, 43, 11, 0.046, 19, 109, 0.011, -1, 9, 0.000, -24, -49, 0.013, 44, -81, 0.003, 43, 28, 0.026, 23, 97, 0.010, -37, -58, 0.001, 47, 104, 0.000, -46, -68, 0.001, -13, 45, 0.010, 61, 37, 0.000, -4, 106, 0.009, 49, 131, 0.001, 29, -8, 0.006, 20, 83, 0.052, -18, 15, 0.003, 53, 15, 0.029, 48, 33, 0.018, 29, 37, 0.001, 44, 124, 0.027, 5, 35, 0.002, 38, 82, 0.002, 48, 136, 0.019, 29, -106, 0.014, 63, 22, 0.002, 40, 43, 0.011, 39, 0, 0.074, 35, -3, 0.010, 16, 33, 0.023, -17, 169, 0.001, -7, 106, 0.035, 26, -101, 0.008, -19, -42, 0.010, 59, 12, 0.008, 39, 17, 0.027, 36, -75, 0.003, 17, 97, 0.065, 50, 4, 0.118, 27, 91, 0.012, 41, 124, 0.284, -33, -53, 0.003, 53, 83, 0.003, -17, 180, 0.003, 30, -6, 0.006, 41, 9, 0.003, -21, -40, 0.055, -21, -55, 0.002, -30, 24, 0.001, 41, 26, 0.018, 36, 114, 0.116, 32, 130, 0.023, -17, -49, 0.065, -7, 38, 0.016, 42, 92, 0.002, 41, -89, 0.008, 52, 118, 0.001, 51, 13, 0.057, 8, 47, 0.003, -15, 14, 0.003, -1, 105, 0.002, 51, -2, 0.074, 32, -104, 0.002, 24, -13, 0.000, 8, -66, 0.003, 6, -10, 0.024, 33, 98, 0.001, -5, 23, 0.007, -33, 116, 0.017, 46, -118, 0.002, 42, -3, 0.009, 37, 14, 0.027, -5, -56, 0.001, -29, 154, 0.014, 22, 83, 0.076, 52, 34, 0.007, 13, 25, 0.010, 24, 112, 0.067, -14, -73, 0.010, 20, -13, 0.001, 56, 78, 0.001, 47, 42, 0.006, 44, 28, 0.018, 0, 10, 0.018, 61, -149, 0.011, 20, 34, 0.001, 34, -91, 0.003, -4, 40, 0.030, -23, -42, 0.053, 44, -85, 0.006, 62, 31, 0.001, 38, 33, 0.018, 37, 82, 0.002, 14, -5, 0.007, 10, -14, 0.008, -9, 20, 0.002, 61, 73, 0.004, 38, -108, 0.001, 34, 7, 0.008, 49, 31, 0.021, 11, -72, 0.010, 48, -58, 0.001, -19, -48, 0.017, 48, 21, 0.028, 26, 77, 0.098, 44, 88, 0.013, 40, 128, 0.029, 2, -57, 0.002, 38, 110, 0.019, 35, -112, 0.000, 16, 6, 0.001, -22, -63, 0.002, 12, 9, 0.107, 63, 58, 0.001, 59, 55, 0.002, 40, 15, 0.145, 35, 41, 0.017, -8, 35, 0.010, 26, -81, 0.024, -31, -68, 0.001, 40, -98, 0.004, 39, 117, 0.312, 50, 40, 0.010, 27, 119, 0.041, 26, 34, 0.002, 41, 88, 0.001, 3, 41, 0.003, -21, 35, 0.005, 51, 94, 0.001, 50, -105, 0.001, 45, 44, 0.005, 7, -75, 0.008, 6, 80, 0.063, 21, 34, 0.001, -6, 34, 0.007, -33, -58, 0.006, -4, -39, 0.015, -35, 143, 0.002, 28, 25, 0.001, 8, 4, 0.029, 45, -118, 0.002, 41, -109, 0.001, 55, 52, 0.011, 51, 57, 0.002, 32, 5, 0.002, 31, 46, 0.016, -9, -46, 0.001, 4, 14, 0.003, -8, 147, 0.005, -16, -39, 0.009, 21, 101, 0.013, 18, -71, 0.030, -3, -40, 0.004, 31, 95, 0.002, 46, 27, 0.035, 43, 135, 0.001, 55, 86, 0.004, -2, 39, 0.013, 46, -90, 0.001, 57, 53, 0.003, 37, 50, 0.055, -39, 144, 0.001, 28, 85, 0.025, -4, -46, 0.003, 22, 111, 0.158, 56, 67, 0.004, 37, -105, 0.001, 34, 103, 0.003, 52, 62, 0.003, 13, -3, 0.012, 9, 2, 0.024, 46, 136, 0.000, 43, -78, 0.022, -4, 136, 0.003, -34, -62, 0.004, 0, 26, 0.019, 37, -120, 0.020, -23, 49, 0.001, 47, 62, 0.001, 43, 67, 0.001, 23, 56, 0.005, -26, -48, 0.011, 15, 109, 0.077, -23, -62, 0.000, 10, -61, 0.043, 47, 143, 0.006, 44, -121, 0.004, 62, 75, 0.002, 58, 66, 0.002, 38, 61, 0.003, 35, 137, 0.220, 37, 102, 0.018, -20, -48, 0.012, 15, -2, 0.003, 11, 3, 0.008, 10, 38, 0.060, 14, 29, 0.001, 5, -75, 0.053, 1, -70, 0.000, 38, -80, 0.003, 53, 66, 0.002, 49, 27, 0.020, 25, 33, 0.057, 2, 28, 0.012, 1, 39, 0.001, -18, -41, 0.009, -3, 100, 0.000, 26, 113, 0.169, 40, 100, 0.003, 36, 31, 0.013, 16, -22, 0.001, 50, 106, 0.001, 12, 37, 0.011, -12, 27, 0.011, 59, 19, 0.034, 39, 72, 0.004, 35, 69, 0.012, -7, 146, 0.014, 29, 115, 0.076, 7, 119, 0.000, -1, 100, 0.003, 54, 45, 0.006, 50, 76, 0.001, 30, 71, 0.050, 26, 54, 0.001, 7, 8, 0.049, 2, 96, 0.001, 51, 138, 0.000, -3, -77, 0.001, -7, -80, 0.002, 45, 16, 0.017, -25, -66, 0.000, 36, 107, 0.027, -3, 36, 0.006, -7, -35, 0.031, 30, 81, 0.004, 45, -99, 0.000, 42, 129, 0.010, 60, 36, 0.001, -29, -61, 0.001, 32, 58, 0.000, 31, -95, 0.004, 28, 53, 0.009, 8, 40, 0.053, -16, 30, 0.006, 55, 24, 0.013, -3, 130, 0.001, 42, -93, 0.005, 4, -6, 0.006, 18, -67, 0.015, -1, 33, 0.002, -2, -60, 0.001, -22, 33, 0.003, 66, 60, 0.000, 46, 55, 0.001, 45, 84, 0.002, 42, 70, 0.024, 22, 73, 0.204, 18, 48, 0.002, 13, -61, 0.005, 9, -64, 0.014, -11, -55, 0.002, 57, 65, 0.002, 37, 70, 0.033, 33, 71, 0.047, 28, 113, 0.230, 9, 13, 0.029, -11, -38, 0.011, -18, -62, 0.011, -15, 19, 0.000, 56, 39, 0.018, 34, 139, 0.029, -4, -62, 0.001, 43, -114, 0.001, 24, 56, 0.025, 20, 59, 0.001, 23, 92, 0.277, 34, -83, 0.017, 15, 81, 0.049, 11, 14, 0.046, 10, -73, 0.022, 25, 95, 0.028, -13, 40, 0.004, 37, 138, 0.003, 34, 64, 0.006, 49, 106, 0.001, 10, 74, 0.001, -19, -57, 0.002, 53, 54, 0.003, 49, 55, 0.001, 48, -2, 0.015, 29, 68, 0.011, 44, 129, 0.017, 25, 61, 0.003, 5, 74, 0.001, 39, -118, 0.001, 35, -121, 0.000, -19, 24, 0.001, 49, -56, 0.000, 48, 77, 0.000, -12, -56, 0.000, -32, -61, 0.007, 40, 72, 0.094, 39, -101, 0.001, 36, 75, 0.016, 50, 110, 0.000, 11, 106, 0.103, 5, 96, 0.030, 39, 44, 0.016, 36, -102, 0.000, 35, 49, 0.021, 30, -92, 0.014, 29, 87, 0.001, 7, 27, 0.001, -17, 37, 0.010, 54, 41, 0.004, 53, 122, 0.001, 30, 19, 0.001, 6, 21, 0.001, 17, -90, 0.002, 12, 110, 0.036, -27, -51, 0.008, 41, 45, 0.068, 21, 58, 0.000, 18, 80, 0.116, 51, -105, 0.000, -21, -69, 0.001, -6, -38, 0.009, 45, -63, 0.003, 42, 117, 0.007, 4, -72, 0.003, 52, 91, 0.001, 54, 86, 0.003, -41, -64, 0.001, 32, 14, 0.060, 55, -4, 0.066, 31, 38, 0.007, -11, 32, 0.005, 9, 126, 0.022, 42, -105, 0.000, 18, -95, 0.021, 33, 133, 0.038, 66, 32, 0.000, 45, 120, 0.005, 42, 42, 0.015, 4, 101, 0.021, 6, 8, 0.143, 13, -89, 0.130, 46, -82, 0.001, -14, 33, 0.018, 57, 29, 0.010, 0, 116, 0.002, 52, 23, 0.016, 47, -92, 0.002, 24, 101, 0.039, 34, 111, 0.088, 47, -123, 0.003, -4, 13, 0.004, -24, -48, 0.012, 44, -80, 0.005, 43, 27, 0.021, 58, 7, 0.002, -37, -59, 0.002, -38, -57, 0.014, 47, 103, 0.001, -46, -71, 0.001, 61, 40, 0.001, 58, -134, 0.001, -4, 107, 0.001, 49, 134, 0.001, 48, -109, 0.001, 29, -9, 0.014, 20, 84, 0.074, -18, 16, 0.013, 53, 26, 0.014, 48, 34, 0.020, 29, 40, 0.002, 44, 93, 0.001, 5, 30, 0.002, 29, -107, 0.002, 63, 21, 0.002, 40, 44, 0.021, 39, -1, 0.006, 35, 4, 0.018, 16, 34, 0.007, 26, -100, 0.003, 59, 11, 0.034, 39, 16, 0.003, 17, 100, 0.026, 50, 1, 0.014, 27, 90, 0.016, 41, 123, 0.121, 53, 78, 0.002, -9, 142, 0.001, -21, -41, 0.022, 60, 45, 0.001, 41, 25, 0.014, 36, 115, 0.299, 32, 131, 0.075, -7, 37, 0.018, 42, 89, 0.003, 41, -86, 0.022, 52, 119, 0.001, 51, 20, 0.059, 8, 48, 0.003, -1, 104, 0.014, 51, -3, 0.063, 32, -95, 0.012, 8, -65, 0.003, 18, 5, 0.000, 33, 97, 0.002, -5, 22, 0.007, 42, -2, 0.020, 37, 13, 0.013, -1, -54, 0.001, -2, 123, 0.005, -29, 153, 0.002, -4, 113, 0.001, 57, 9, 0.001, 37, -2, 0.006, 52, 35, 0.005, 13, 28, 0.005, 47, -104, 0.001, 46, 105, 0.000, -11, 18, 0.006, -14, -72, 0.012, -33, 138, 0.001, -34, -69, 0.004, 47, 41, 0.027, 20, 35, 0.000, 19, 80, 0.056, 34, -90, 0.006, -4, 41, 0.006, -23, -43, 0.361, 44, -84, 0.004, 62, 32, 0.000, 38, 34, 0.017, 35, 100, 0.001, 37, 81, 0.005, 15, 41, 0.000, 14, -4, 0.013, -9, 19, 0.002, -46, -67, 0.002, 61, 76, 0.002, 38, -111, 0.000, 34, 8, 0.013, 49, 34, 0.023, 11, -73, 0.008, 48, -57, 0.001, 5, 8, 0.222, 14, 15, 0.002, -13, -55, 0.002, 1, 14, 0.001, 16, 120, 0.009, -22, 47, 0.012, 48, 22, 0.034, 26, 78, 0.111, 44, 89, 0.006, 40, 121, 0.060, 38, 115, 0.236, 35, -113, 0.001, 16, 7, 0.001, -22, -62, 0.001, 12, 10, 0.070, 60, 77, 0.011, 59, 54, 0.001, 40, 16, 0.025, -20, -42, 0.027, -8, 36, 0.010, 26, -80, 0.090, 7, 82, 0.044, 6, -77, 0.001, 40, -97, 0.002, 39, 116, 0.145, 16, -91, 0.010, 50, 37, 0.049, 27, 118, 0.035, 41, 87, 0.004, 3, 32, 0.025, -1, 102, 0.015, -21, 34, 0.006, 51, 93, 0.001, 50, -104, 0.007, 45, 43, 0.009, 7, -76, 0.010, 3, -71, 0.000, 21, 33, 0.001, -6, 31, 0.010, -35, -63, 0.001, 60, 73, 0.002, 17, 11, 0.001, -39, -66, 0.001, 8, -3, 0.007, 45, -119, 0.002, 55, 51, 0.007, 51, 48, 0.006, 32, 6, 0.001, 31, 45, 0.015, 27, 50, 0.000, 4, 15, 0.004, -16, -38, 0.001, 21, 104, 0.025, 18, -70, 0.068, 31, 94, 0.001, 65, -18, 0.001, 46, 28, 0.024, 43, 134, 0.002, 55, 85, 0.006, -2, 40, 0.001, 69, 34, 0.008, 46, -85, 0.000, 57, 56, 0.004, 19, -87, 0.001, 37, 49, 0.016, -39, 143, 0.002, 33, 46, 0.019, 10, 79, 0.177, 28, 86, 0.010, -10, 14, 0.032, -2, 10, 0.002, 22, 112, 0.109, 56, 68, 0.001, 37, -94, 0.008, 34, 104, 0.012, 52, 63, 0.003, -12, -65, 0.002, 13, 0, 0.018, 47, -68, 0.002, 9, 1, 0.014, 46, 133, 0.012, 43, -79, 0.189, 0, 27, 0.001, 37, -121, 0.084, -30, -51, 0.092, 67, 64, 0.001, 43, 66, 0.001, 23, 55, 0.006, -36, -59, 0.004, -23, -63, 0.003, -24, 24, 0.000, 44, -120, 0.001, 25, 86, 0.470, 58, 63, 0.001, 38, 62, 0.005, 35, 128, 0.062, 37, 101, 0.002, 15, -3, 0.007, 11, 2, 0.007, 10, 19, 0.003, 5, -72, 0.013, 1, -71, 0.000, 38, -83, 0.007, 53, 65, 0.002, 14, 103, 0.046, 2, 25, 0.003, 1, 42, 0.004, -18, -40, 0.006, 48, 58, 0.001, 26, 114, 0.078, 25, -111, 0.001, 39, -74, 0.035, 36, 32, 0.008, 50, 103, 0.000, 12, 38, 0.049, -42, -71, 0.004, -12, 28, 0.040, 59, 18, 0.035, 39, 71, 0.006, 35, 76, 0.022, -7, 145, 0.010, 30, -107, 0.003, 29, 110, 0.054, 7, 118, 0.001, 54, 46, 0.018, -10, -75, 0.003, 50, 73, 0.005, -12, -45, 0.002, 30, 72, 0.156, 26, 67, 0.006, 7, 7, 0.061, 51, 137, 0.000, -27, -68, 0.001, 45, 15, 0.013, 22, 82, 0.049, 36, 108, 0.021, -3, 35, 0.020, 30, 82, 0.001, 64, -22, 0.001, 45, -96, 0.001, 42, 130, 0.035, 60, 37, 0.001, 17, -25, 0.001, 54, 95, 0.001, 32, 59, 0.003, 31, -96, 0.003, 28, 54, 0.013, 8, 33, 0.007, -16, 31, 0.003, 55, 23, 0.008, -3, 129, 0.001, 42, -92, 0.008, 18, -66, 0.091, -1, 32, 0.052, 46, 56, 0.000, 45, 83, 0.003, 22, 74, 0.203, 18, 45, 0.002, 9, -65, 0.006, -11, -52, 0.000, -15, -59, 0.001, 57, 68, 0.001, 37, 69, 0.034, 52, -4, 0.004, 33, 74, 0.148, 28, 114, 0.140, 9, 16, 0.019, 43, -124, 0.002, -11, -39, 0.008, -15, 22, 0.001, 56, 40, 0.006, 34, 140, 0.005, -4, -61, 0.001, 43, -115, 0.001, 24, 49, 0.002, -23, 16, 0.000, -5, 153, 0.003, -28, -67, 0.000, 23, 91, 0.844, 1, 119, 0.001, 34, -82, 0.031, 15, 80, 0.062, 11, 13, 0.009, 10, -72, 0.013, 25, 98, 0.010, -13, 39, 0.001, 58, 35, 0.003, 37, 137, 0.003, 34, 61, 0.006, 14, 37, 0.007, 49, 105, 0.003, -9, 111, 0.016, -19, -62, 0.001, 53, 53, 0.005, 49, 58, 0.001, 48, -1, 0.030, 29, 67, 0.011, 44, 130, 0.042, 25, 64, 0.005, 5, 73, 0.000, 39, -119, 0.015, -19, 23, 0.000, 49, -57, 0.000, -12, -55, 0.003, -32, -60, 0.025, 40, 65, 0.012, 39, -102, 0.000, 36, 76, 0.010, 50, 139, 0.000, 11, 105, 0.107, -24, -47, 0.070, 39, 43, 0.016, 36, -101, 0.001, 54, -1, 0.073, 30, -95, 0.026, 29, 82, 0.022, -17, 20, 0.000, 54, 42, 0.006, 53, 121, 0.000, 6, 22, 0.001, 17, -91, 0.010, -27, -48, 0.024, 41, 48, 0.012, 21, 57, 0.001, 18, 77, 0.105, 17, 54, 0.003, -6, -41, 0.002, 27, -112, 0.000, 45, -60, 0.002, 42, 118, 0.014, 4, -71, 0.001, 55, -118, 0.002, 52, 92, 0.001, 54, 91, 0.001, 32, 15, 0.016, 31, 4, 0.002, 55, -5, 0.001, 51, -8, 0.011, 31, 37, 0.025, 9, 125, 0.021, 42, -104, 0.001, 18, -94, 0.018, 33, 136, 0.011, 45, 119, 0.001, 4, 102, 0.035, 19, -72, 0.078, -14, 34, 0.065, 57, 32, 0.002, 0, 109, 0.007, 52, 24, 0.016, 33, 38, 0.018, 47, -93, 0.002, 24, 102, 0.026, -9, 17, 0.006, -4, 127, 0.003, 34, 112, 0.084, -3, 151, 0.001, 33, -109, 0.000, -5, 140, 0.004, -24, -70, 0.002, 44, 34, 0.018, 43, 9, 0.002, -25, -63, 0.001, -4, 14, 0.003, 44, -79, 0.020, 43, 26, 0.022, 58, 8, 0.003, 15, 52, 0.001, 11, 73, 0.001, 47, 102, 0.001, 61, 39, 0.000, -4, 108, 0.001, 49, 133, 0.000, -8, 140, 0.001, 20, 101, 0.012, -18, 13, 0.000, 53, 25, 0.014, -3, 105, 0.051, -23, 167, 0.003, 48, 35, 0.036, 29, 39, 0.001, 44, 94, 0.001, 5, 29, 0.002, 29, -104, 0.001, 63, 36, 0.000, -2, 100, 0.000, 40, 37, 0.027, 39, -2, 0.006, 35, 3, 0.022, 16, 35, 0.005, 50, 143, 0.001, -7, 108, 0.464, -8, 25, 0.005, 26, -103, 0.002, 59, 10, 0.007, 17, 99, 0.010, 54, -5, 0.024, -1, -90, 0.000, 50, 2, 0.018, 12, -83, 0.001, 27, 89, 0.033, -22, -44, 0.010, 41, 110, 0.006, 54, -122, 0.000, 53, 77, 0.001, -35, -68, 0.002, -25, -57, 0.001, -21, -42, 0.021, 60, 46, 0.001, 41, 28, 0.021, -29, -52, 0.015, 36, 116, 0.237, 32, 132, 0.022, 14, 125, 0.000, -7, 40, 0.091, 42, 90, 0.003, 41, -87, 0.188, 51, 19, 0.025, 55, -1, 0.019, 51, 4, 0.042, 32, -94, 0.011, 8, -64, 0.007, 18, 6, 0.001, 33, 100, 0.001, -5, 21, 0.006, 48, 93, 0.000, 42, 11, 0.004, 37, 16, 0.033, -1, -55, 0.001, -2, 124, 0.004, -5, -58, 0.001, 22, 81, 0.041, 56, 57, 0.003, 37, -3, 0.030, 52, 36, 0.008, 13, 27, 0.005, -10, -62, 0.002, -11, 17, 0.007, -14, -75, 0.004, -34, -68, 0.008, -5, 104, 0.021, 47, 40, 0.056, -11, 162, 0.001, 20, 36, 0.000, 19, 79, 0.057, 34, -93, 0.004, -24, 45, 0.007, -9, 161, 0.002, 62, 29, 0.002, 38, 39, 0.023, -38, 145, 0.041, 15, 40, 0.016, 14, -7, 0.003, 47, 138, 0.000, -33, 28, 0.028, 34, 5, 0.013, 49, 33, 0.019, 11, -74, 0.016, -9, -61, 0.000, 1, 13, 0.001, 46, -108, 0.000, 16, 97, 0.159, -22, 48, 0.029, 48, 23, 0.031, 26, 91, 0.132, 44, 90, 0.004, 40, 122, 0.009, 38, 116, 0.246, 35, -114, 0.003, 16, 8, 0.000, -22, -65, 0.003, 12, 11, 0.043, 59, 53, 0.001, 40, 9, 0.013, -8, 29, 0.004, 7, 81, 0.166, -31, -66, 0.001, 6, -76, 0.007, 40, -96, 0.011, 39, 115, 0.046, 16, -90, 0.006, 50, 38, 0.008, 27, 117, 0.069, 26, 32, 0.133, 41, 90, 0.002, 3, 31, 0.033, -21, 33, 0.016, 50, -107, 0.001, 45, 38, 0.008, 7, -77, 0.002, 21, 36, 0.000, -14, -43, 0.005, -3, 26, 0.004, -6, 32, 0.008, 8, -2, 0.010, 45, -116, 0.000, 55, 50, 0.039, 51, 47, 0.023, 32, 7, 0.001, 31, 60, 0.001, 27, 49, 0.002, 4, 16, 0.005, 21, 103, 0.006, 18, -73, 0.034, -20, 22, 0.000, -36, 140, 0.001, 31, 93, 0.002, 46, 25, 0.027, 43, 133, 0.013, -34, 139, 0.001, 55, 84, 0.011, -2, 37, 0.123, 69, 33, 0.002, 46, -84, 0.004, 57, 55, 0.006, 19, -96, 0.066, -39, 146, 0.018, 33, 45, 0.230, 10, 80, 0.148, 28, 87, 0.002, -10, 19, 0.002, 14, 100, 0.031, 22, 109, 0.107, 56, 61, 0.059, 37, -95, 0.004, 34, 101, 0.001, 52, 64, 0.003, -36, -67, 0.002, 13, -1, 0.025, 47, -69, 0.002, 9, 4, 0.008, 46, 134, 0.008, 43, -72, 0.007, 0, 28, 0.002, 67, 63, 0.000, 0, 7, 0.004, 23, 54, 0.006, -23, -60, 0.001, 10, -63, 0.022, 25, 85, 0.357, 58, 64, 0.001, 38, 67, 0.016, 35, 127, 0.090, 37, 104, 0.021, -4, 117, 0.006, 11, 1, 0.011, 10, 20, 0.003, 5, -73, 0.037, 38, -82, 0.016, 53, 68, 0.002, 14, 104, 0.046, 29, 58, 0.005, -28, -48, 0.036, 25, 35, 0.002, 2, 26, 0.003, 1, 41, 0.003, -18, -43, 0.003, 49, -114, 0.001, 48, 59, 0.000, 26, 111, 0.066, 63, -21, 0.001, 25, -108, 0.019, 40, 94, 0.002, 39, -75, 0.102, 36, 33, 0.019, 50, 104, 0.001, 12, 39, 0.027, -21, -50, 0.014, 59, 17, 0.011, 39, 70, 0.013, 35, 75, 0.023, -7, 148, 0.003, 30, -106, 0.000, 29, 109, 0.060, 40, -124, 0.003, 54, 51, 0.005, 51, 143, 0.000, 50, 74, 0.006, 30, 69, 0.010, 26, 68, 0.036, 7, 6, 0.108, 51, 128, 0.000, -7, -78, 0.022, -27, -69, 0.001, 36, 93, 0.000, -3, 30, 0.139, 30, 103, 0.012, 64, -21, 0.005, 45, -97, 0.001, 42, 127, 0.039, 60, 38, 0.001, 54, 96, 0.001, 32, 60, 0.003, 31, -97, 0.019, 28, 55, 0.008, 8, 34, 0.006, -16, 32, 0.002, 55, 22, 0.016, 9, 100, 0.017, 42, -95, 0.003, 18, -101, 0.005, -1, 31, 0.069, -17, -44, 0.007, 66, 58, 0.002, 45, 78, 0.001, 22, 47, 0.005, 18, 46, 0.001, 9, -62, 0.007, -11, -53, 0.001, -14, 27, 0.002, -15, -56, 0.002, 57, 67, 0.001, -16, -61, 0.000, 37, 72, 0.004, 33, 73, 0.108, 28, 115, 0.073, 9, 15, 0.018, -11, -36, 0.013, -15, 21, 0.001, 56, 33, 0.002, 37, -75, 0.002, 34, 137, 0.075, -4, -60, 0.006, -33, -52, 0.007, 44, 71, 0.000, 43, -108, 0.001, 24, 50, 0.002, -9, 35, 0.016, 20, 45, 0.005, -23, 15, 0.002, -30, -54, 0.004, 43, 29, 0.006, 23, 90, 0.386, 1, 122, 0.003, 15, 79, 0.066, 11, 20, 0.001, 10, -75, 0.039, 25, 97, 0.008, -4, -49, 0.004, 58, 36, 0.002, 37, 140, 0.044, 34, 62, 0.005, 49, 108, 0.001, 14, 34, 0.041, -19, -63, 0.009, 53, 56, 0.009, 49, 57, 0.001, 48, 0, 0.016, 29, 62, 0.002, 44, 131, 0.012, 25, 63, 0.005, 39, -120, 0.003, -19, 18, 0.001, 49, -54, 0.001, 14, 123, 0.018, -12, -54, 0.001, 25, -80, 0.086, -32, -67, 0.001, 40, 66, 0.018, -36, -64, 0.001, 36, 61, 0.027, 50, 140, 0.000, 11, 80, 0.200, 39, 42, 0.014, 36, -100, 0.001, 54, 0, 0.010, 50, -5, 0.008, 30, -94, 0.010, 29, 81, 0.042, 14, 80, 0.072, -17, 19, 0.000, 53, 124, 0.001, 30, 17, 0.001, -22, -42, 0.023, 6, 27, 0.001, 17, -88, 0.004, -35, -54, 0.005, -27, -49, 0.029, 45, 46, 0.001, 41, 47, 0.014, 21, 60, 0.001, 18, 78, 0.098, 36, 137, 0.060, 51, -107, 0.000, -6, -40, 0.006, 27, -113, 0.001, 45, -61, 0.001, 55, -119, 0.001, 52, 77, 0.007, 54, 92, 0.001, 32, 16, 0.004, 31, 3, 0.001, 55, -6, 0.004, 51, -9, 0.002, 31, 116, 0.089, -2, -48, 0.074, 18, -97, 0.047, 33, 135, 0.009, -24, 134, 0.001, 66, 30, 0.000, 4, 103, 0.004, 19, -73, 0.007, -1, -76, 0.003, 33, -8, 0.012, -14, 31, 0.003, 57, 31, 0.002, 0, 110, 0.024, 52, 25, 0.009, 33, 37, 0.028, 47, -94, 0.002, 24, 103, 0.084, 23, -100, 0.005, -15, 49, 0.006, -48, -68, 0.000, 34, 109, 0.219, 33, -106, 0.000, -5, 139, 0.002, -24, -69, 0.001, 44, 35, 0.022, 46, 142, 0.001, -10, 160, 0.003, -4, 15, 0.002, 47, 4, 0.011, 44, -78, 0.010, 43, 25, 0.023, 23, 94, 0.009, 15, 51, 0.003, 47, 101, 0.001, -13, 50, 0.005, 61, 34, 0.001, 49, 136, 0.000, 48, -115, 0.001, 20, 102, 0.007, -18, 14, 0.000, 53, 28, 0.065, 48, 36, 0.041, 29, 34, 0.000, 44, 95, 0.000, 5, 32, 0.003, 29, -105, 0.001, 63, 35, 0.001, 40, 38, 0.032, 39, -3, 0.012, 35, 2, 0.025, 16, 36, 0.010, 50, 144, 0.000, -7, 107, 0.833, -8, 26, 0.005, 26, -102, 0.002, -12, -43, 0.002, 59, 9, 0.001, 40, -75, 0.110, 5, 120, 0.004, 17, 102, 0.021, 54, -4, 0.003, 50, -1, 0.053, 27, 96, 0.082, 41, 109, 0.009, 51, 87, 0.003, 53, 80, 0.002, 41, -2, 0.003, -21, -43, 0.022, 60, 47, 0.002, 41, 27, 0.016, -7, 39, 0.014, 42, 87, 0.005, 41, -84, 0.011, 3, 109, 0.001, 52, 121, 0.001, 51, 18, 0.036, -3, 11, 0.001, 28, -17, 0.003, 4, 37, 0.002, 55, -2, 0.009, 51, 3, 0.013, 32, -93, 0.015, 8, -71, 0.025, 33, 99, 0.001, -5, 28, 0.004, -6, 125, 0.000, 42, 12, 0.012, -11, 41, 0.007, 37, 15, 0.034, 6, 9, 0.067, -2, 121, 0.008, -5, -59, 0.000, -25, -46, 0.010, 61, 130, 0.002, 57, 11, 0.006, 56, 58, 0.004, 37, 0, 0.010, 52, 53, 0.006, 13, 22, 0.003, -11, 20, 0.001, -14, -74, 0.009, -34, -71, 0.036, 56, 105, 0.001, -5, 103, 0.007, 47, 39, 0.028, 44, -1, 0.004, 19, 78, 0.106, 34, -92, 0.021, -23, -41, 0.009, -24, 46, 0.004, -9, 160, 0.000, 62, 30, 0.003, -33, -54, 0.002, 38, 40, 0.022, 37, 83, 0.001, 15, 39, 0.045, 14, -6, 0.004, 47, 137, 0.000, -9, 120, 0.003, 61, 70, 0.001, -33, 27, 0.007, 38, -105, 0.002, 34, 6, 0.009, 26, -11, 0.000, 49, 36, 0.011, 48, -79, 0.002, -9, -62, 0.000, 1, 16, 0.001, 16, 98, 0.064, -22, 45, 0.002, -9, 125, 0.006, 48, 24, 0.022, 26, 92, 0.177, 44, 91, 0.003, 40, 123, 0.116, 38, 113, 0.075, 35, -115, 0.002, 16, -15, 0.007, -22, -64, 0.008, 12, 12, 0.011, 63, 55, 0.001, 60, 79, 0.002, 59, 60, 0.002, 40, 10, 0.008, 36, 5, 0.077, 30, -81, 0.036, -8, 30, 0.006, 26, -82, 0.005, 7, 80, 0.060, -31, -67, 0.000, 40, -103, 0.002, 39, 114, 0.047, 16, -89, 0.006, 50, 35, 0.021, -22, -41, 0.025, 41, 89, 0.001, 3, 30, 0.005, 45, 37, 0.008, 21, 35, 0.000, -17, -68, 0.030, -3, 25, 0.004, -6, 29, 0.005, -7, -42, 0.005, 32, 97, 0.002, 8, -1, 0.008, 45, -117, 0.001, -35, 25, 0.002, 55, 49, 0.017, 51, 46, 0.027, 32, 8, 0.004, 31, 59, 0.002, 28, 11, 0.000, 27, 56, 0.009, 4, 17, 0.004, 21, 82, 0.144, 18, -72, 0.124, -20, 23, 0.000, 31, 108, 0.135, 46, 26, 0.014, -4, 145, 0.000, 55, 83, 0.026, -2, 38, 0.065, 69, 36, 0.001, -21, -46, 0.009, 46, -87, 0.002, 57, 58, 0.002, 19, -97, 0.057, 37, 51, 0.012, -39, 145, 0.008, 33, 48, 0.018, 10, 77, 0.325, 28, 88, 0.001, 9, 38, 0.038, -10, 20, 0.001, -9, 26, 0.005, 22, 110, 0.131, 56, 62, 0.013, 37, -92, 0.005, 34, 102, 0.002, 52, 65, 0.001, 13, -6, 0.017, 47, -70, 0.002, 9, 3, 0.010, 43, -73, 0.010, 0, 21, 0.003, 43, 72, 0.003, -11, 149, 0.000, 23, 53, 0.005, 15, 122, 0.027, -24, 18, 0.001, 10, -62, 0.005, 14, 47, 0.008, 25, 88, 0.293, 58, 61, 0.005, 38, 68, 0.026, 37, 103, 0.026, 11, 8, 0.093, 10, 17, 0.009, 38, -77, 0.088, 53, 67, 0.002, 14, 101, 0.111, 29, 57, 0.005, 14, 20, 0.002, 2, 23, 0.014, 1, 44, 0.007, -18, -42, 0.007, -22, 17, 0.001, 49, -115, 0.001, 26, 112, 0.114, 63, -22, 0.001, 25, -109, 0.005, 40, 95, 0.002, 39, -76, 0.103, 36, 34, 0.028, 38, 141, 0.082, 12, 40, 0.036, -8, 148, 0.002, -12, 14, 0.001, 59, 24, 0.001, 39, 69, 0.013, 35, 74, 0.030, -7, 147, 0.007, 29, 112, 0.116, 54, 52, 0.003, 50, 71, 0.001, 30, 70, 0.010, 26, 65, 0.005, 7, 5, 0.137, -20, 32, 0.014, 51, 127, 0.001, -3, -80, 0.068, -19, -46, 0.008, -7, -79, 0.040, 41, 70, 0.138, 36, 94, 0.000, -3, 29, 0.063, -35, -64, 0.001, 30, 104, 0.189, 42, 128, 0.017, 60, 39, 0.001, 21, -88, 0.003, 54, 93, 0.001, 32, 53, 0.040, 31, -98, 0.002, 28, 56, 0.005, 8, 35, 0.015, -26, -51, 0.009, -16, 41, 0.008, 31, 15, 0.001, 9, 99, 0.009, 42, -94, 0.004, 18, -100, 0.017, -1, 30, 0.040, 33, 110, 0.043, 5, -7, 0.007, 46, 54, 0.001, 45, 77, 0.001, 42, 49, 0.005, 22, 48, 0.005, 18, 75, 0.100, 9, -63, 0.012, -11, -58, 0.000, -14, 28, 0.005, -15, -57, 0.003, 57, 22, 0.002, 37, 71, 0.012, 33, 76, 0.050, 28, 116, 0.185, 9, 18, 0.009, -11, -37, 0.036, -15, 24, 0.003, 56, 34, 0.001, 34, 138, 0.091, -4, -59, 0.006, 44, 72, 0.000, 24, 51, 0.002, 20, 46, 0.005, -20, 148, 0.001, -23, 18, 0.007, 23, 89, 0.386, 1, 121, 0.002, 15, 78, 0.095, 14, -89, 0.050, 11, 19, 0.002, 10, -74, 0.071, 25, 100, 0.034, -13, 37, 0.001, 58, 33, 0.002, 37, 139, 0.044, 34, 59, 0.005, 49, 107, 0.003, -18, 39, 0.002, -19, -60, 0.001, 53, 55, 0.003, 49, 60, 0.000, 48, 9, 0.079, 29, 61, 0.006, 44, 132, 0.006, 25, 66, 0.003, 39, -121, 0.014, -19, 17, 0.002, 49, -55, 0.001, 48, 80, 0.000, 29, -82, 0.018, 25, -81, 0.001, -32, -66, 0.001, 40, 67, 0.013, 39, -104, 0.044, 36, 62, 0.005, 50, 137, 0.004, 11, 79, 0.173, 39, 41, 0.010, 36, -115, 0.043, 54, -3, 0.011, 50, -4, 0.021, 29, 84, 0.001, -17, 18, 0.001, 54, 16, 0.004, 53, 123, 0.001, 30, 18, 0.001, 6, 28, 0.002, 17, -89, 0.003, 50, -66, 0.001, 64, 25, 0.002, 45, 45, 0.002, 41, 50, 0.001, 21, 59, 0.002, 18, 107, 0.009, 36, 138, 0.048, 51, -100, 0.001, -6, -43, 0.006, 45, -66, 0.005, 55, -120, 0.001, 52, 78, 0.009, 54, 89, 0.000, 31, 2, 0.001, 4, 74, 0.003, 55, -7, 0.003, -4, 140, 0.002, 32, -64, 0.002, 31, 115, 0.164, 9, 127, 0.005, 46, 7, 0.055, 42, -106, 0.002, 18, -96, 0.047, 66, 27, 0.000, -29, 33, 0.010, 4, 104, 0.011, -15, -170, 0.002, -1, -77, 0.004, -5, -80, 0.019, 46, -79, 0.003, -14, 32, 0.008, 57, 34, 0.004, 0, 111, 0.012, 52, 26, 0.010, 33, 40, 0.004, 47, -95, 0.001, 9, 46, 0.004, 14, 41, 0.008, 24, 104, 0.060, 23, -101, 0.002, 34, 110, 0.252, 33, -107, 0.000, -5, 138, 0.001, 44, 36, 0.001, -4, 16, 0.026, 47, 3, 0.016, 44, -77, 0.006, 62, 23, 0.004, 23, 93, 0.028, 38, 9, 0.000, 0, -60, 0.000, 15, 50, 0.006, 47, 84, 0.002, -46, -72, 0.001, -13, 49, 0.000, 61, 33, 0.001, 15, -61, 0.004, 49, 135, 0.001, 48, -114, 0.002, 20, 103, 0.008, -18, 19, 0.001, 53, 27, 0.010, 48, 29, 0.013, 29, 33, 0.013, 5, 31, 0.002, 35, -88, 0.009, 29, -110, 0.003, 63, 34, 0.000, -13, 132, 0.000, 40, 39, 0.021, 39, -4, 0.008, 35, 1, 0.045, 16, 29, 0.001, -8, 27, 0.008, 26, -105, 0.002, -12, -42, 0.003, 40, -74, 0.251, 17, 101, 0.024, 54, -7, 0.010, 50, 0, 0.030, 12, -81, 0.002, 27, 95, 0.061, 41, 112, 0.019, 51, 86, 0.002, 53, 79, 0.004, 41, -3, 0.003, 54, -101, 0.000, 58, 9, 0.005, 60, 48, 0.001, 41, 14, 0.033, 42, 88, 0.002, 41, -85, 0.027, 3, 116, 0.001, 52, 122, 0.001, 51, 17, 0.041, 28, -16, 0.024, 4, 38, 0.002, 55, -3, 0.039, 51, 2, 0.020, 32, -92, 0.008, 8, -70, 0.014, 55, 110, 0.001, 33, 102, 0.001, -5, 27, 0.010, 42, 9, 0.001, 37, 26, 0.002, -2, 122, 0.003, -13, -40, 0.006, -25, -47, 0.008, -2, 99, 0.000, 61, 129, 0.001, 57, -2, 0.014, 56, 59, 0.003, 37, -1, 0.022, 52, 54, 0.003, 13, 21, 0.003, -10, -56, 0.001, -11, 19, 0.003, 23, -97, 0.000, -34, -70, 0.196, 56, 106, 0.002, -3, 142, 0.000, 47, 38, 0.054, 44, 0, 0.037, 19, 77, 0.088, 34, -95, 0.003, -24, 47, 0.004, 10, -85, 0.009, 62, 35, 0.001, 38, 37, 0.024, 37, 78, 0.004, 15, 38, 0.005, 14, -17, 0.099, 47, 136, 0.001, 62, -114, 0.001, -33, 26, 0.002, 38, -104, 0.022, 34, 3, 0.008, 49, 35, 0.021, 11, -68, 0.001, 48, -78, 0.001, -9, -63, 0.005, -13, -66, 0.001, 1, 15, 0.001, -18, 47, 0.003, 16, 99, 0.016, -22, 46, 0.001, -3, 104, 0.013, 26, 89, 0.222, 44, 92, 0.001, 40, 124, 0.046, -12, 41, 0.004, 38, 114, 0.060, 35, -108, 0.002, 16, -14, 0.007, 63, 54, 0.002, 59, 59, 0.002, 5, 116, 0.008, 36, 6, 0.055, -8, 31, 0.004, -31, -64, 0.004, 40, -102, 0.001, 39, 113, 0.044, 16, -88, 0.002, 50, 36, 0.010, -22, -51, 0.011, 41, 92, 0.001, 3, 29, 0.003, 45, 40, 0.031, -25, -62, 0.001, -17, -69, 0.010, -3, 28, 0.005, -6, 30, 0.005, -39, -68, 0.007, -7, -43, 0.004, -45, 172, 0.002, -29, -65, 0.007, 17, -16, 0.001, 32, 98, 0.002, 8, 0, 0.011, 45, -122, 0.065, 55, 48, 0.012, 51, 45, 0.003, -3, 122, 0.005, 31, 58, 0.004, 28, 12, 0.000, 27, 55, 0.005, 4, 18, 0.004, 5, 6, 0.058, 21, 81, 0.081, -20, 24, 0.001, -39, -58, 0.002, 31, 107, 0.182, 46, 15, 0.034, 55, 82, 0.001, -8, -78, 0.021, 69, 35, 0.001, -25, 36, 0.007, 5, -1, 0.052, 46, -86, 0.000, 57, 57, 0.015, 19, -98, 0.272, 37, 46, 0.044, -39, 148, 0.001, 33, 47, 0.014, 10, 78, 0.136, 28, 89, 0.002, 9, 37, 0.023, -10, 17, 0.006, -18, -66, 0.034, 22, 115, 0.449, 56, 63, 0.007, 37, -93, 0.013, 52, 66, 0.001, 13, -7, 0.012, 47, -71, 0.001, 9, -10, 0.008, 43, -74, 0.003, -22, -55, 0.002, 0, 22, 0.003, 43, 71, 0.003, 23, 52, 0.002, 15, 121, 0.169, 10, -65, 0.002, 44, -117, 0.001, 25, 87, 0.348, 58, 62, 0.001, 38, 65, 0.004, 37, 114, 0.053, 15, 10, 0.001, 11, 7, 0.028, 10, 18, 0.006, 38, -76, 0.047, 53, 62, 0.002, 14, 102, 0.039, 29, 60, 0.005, -2, 107, 0.003, 2, 24, 0.005, 1, 43, 0.005, 49, -112, 0.004, 48, 53, 0.000, 26, 109, 0.045, 40, 96, 0.001, 39, -77, 0.053, 36, 35, 0.013, 38, 142, 0.029, 35, -80, 0.051, 50, 102, 0.000, 12, 41, 0.018, -12, 15, 0.007, 39, 68, 0.038, 35, 73, 0.056, 29, 111, 0.056, 54, 49, 0.022, 50, 72, 0.001, 30, 75, 0.139, -33, -63, 0.007, 26, 66, 0.002, 7, 4, 0.118, 51, 126, 0.001, -7, -76, 0.013, 45, 76, 0.000, 41, 69, 0.011, 36, 95, 0.000, -21, 148, 0.000, -3, 32, 0.023, 30, 101, 0.002, 42, 125, 0.042, 60, 40, 0.001, 21, -89, 0.017, 54, 94, 0.001, 32, 54, 0.006, -17, -43, 0.010, 31, -99, 0.001, 28, 57, 0.004, 8, 36, 0.033, -22, -46, 0.024, -3, 126, 0.001, 31, 14, 0.001, 42, -97, 0.003, 18, -103, 0.006, -1, 29, 0.011, 33, 109, 0.041, -6, 147, 0.002, 45, 80, 0.002, -11, 34, 0.006, 22, 45, 0.005, 18, 76, 0.069, 6, 4, 0.299, -11, -59, 0.000, -14, 25, 0.002, -15, -54, 0.001, -10, -74, 0.001, 33, 75, 0.085, 28, 117, 0.136, 9, 17, 0.014, -11, -42, 0.002, -15, 23, 0.002, 56, 35, 0.005, 34, 135, 0.112, -4, -58, 0.002, 43, -110, 0.001, 24, 52, 0.002, 20, 47, 0.005, -23, 17, 0.001, 13, 110, 0.045, 23, 88, 0.238, 15, 77, 0.107, 14, -88, 0.029, 11, 18, 0.004, 25, 99, 0.034, -13, 44, 0.001, 58, 34, 0.002, -46, 171, 0.005, 34, 60, 0.006, -37, 143, 0.001, -19, -61, 0.001, 53, 34, 0.007, 49, 59, 0.001, 48, 10, 0.111, 29, 64, 0.001, 44, 133, 0.005, 25, 65, 0.003, 39, -122, 0.003, 35, -117, 0.002, -19, 20, 0.002, 68, 14, 0.000, 48, 89, 0.002, 29, -83, 0.001, -32, -65, 0.002, 40, 68, 0.017, 39, -105, 0.037, 36, 63, 0.003, 16, 74, 0.044, 50, 138, 0.008, 11, 78, 0.166, -20, 17, 0.001, -13, -49, 0.001, 39, 40, 0.007, 36, -114, 0.003, 54, -2, 0.014, -41, -70, 0.000, 29, 83, 0.005, 7, 23, 0.000, -17, 17, 0.002, 54, 13, 0.013, 53, 118, 0.001, 30, 39, 0.001, 8, 80, 0.006, 64, 26, 0.004, 45, 48, 0.002, -31, 150, 0.000, 41, 49, 0.018, 21, 54, 0.002, 36, 139, 0.068, 17, 55, 0.003, 51, -101, 0.000, -6, -42, 0.027, 45, -67, 0.001, 52, 79, 0.002, 54, 90, 0.001, 31, 1, 0.001, 55, -8, 0.000, 31, 114, 0.133, 46, 8, 0.034, 19, 76, 0.108, 18, -99, 0.066, 33, 137, 0.001, 66, 28, 0.000, -29, 24, 0.002, 45, 116, 0.000, -15, -171, 0.000, 19, -75, 0.007, -1, -78, 0.080, 33, -6, 0.068, -5, -81, 0.004, -24, 151, 0.003, -14, 29, 0.012, -4, 109, 0.000, 57, 33, 0.001, 19, -154, 0.000, 0, 112, 0.009, 52, 27, 0.010, 33, 39, 0.005, 47, -96, 0.001, 9, 45, 0.007, 24, 97, 0.015, 23, -102, 0.006, -15, 51, 0.005, 33, -104, 0.002, -5, 137, 0.003, -9, 30, 0.006, -4, 17, 0.003, 47, 2, 0.023, 44, -76, 0.008, 62, 24, 0.002, 15, 49, 0.005, 47, 83, 0.001, 62, 7, 0.004, 14, 35, 0.007, -30, 154, 0.001, 29, -13, 0.001, -9, -68, 0.001, 20, 104, 0.006, -18, 20, 0.001, 53, 22, 0.012, 48, 30, 0.012, 29, 36, 0.002, 5, 42, 0.003, 35, -89, 0.030, 48, 109, 0.000, 29, -111, 0.008, 63, 33, 0.000, -37, 144, 0.001, -13, 131, 0.003, 40, 40, 0.026, 39, -5, 0.005, -20, -46, 0.006, 16, 30, 0.001, -8, 28, 0.006, 26, -104, 0.001, -12, -41, 0.010, 40, -73, 0.362, 39, 140, 0.003, 17, 104, 0.048, 54, -6, 0.024, 50, -3, 0.025, 27, 94, 0.014, 14, 81, 0.020, 41, 111, 0.006, 51, 85, 0.001, 53, 90, 0.002, 41, 0, 0.019, -35, -59, 0.016, 60, 49, 0.001, 41, 13, 0.111, -1, 133, 0.000, -6, -70, 0.000, 42, 85, 0.002, 41, -98, 0.001, 3, 115, 0.001, 52, 123, 0.002, 51, 40, 0.045, 28, -15, 0.017, 4, 39, 0.003, -1, 116, 0.003, 51, 1, 0.154, 32, -99, 0.006, 8, -69, 0.009, 33, 101, 0.001, -5, 26, 0.002, -6, 139, 0.001, 42, 10, 0.004, 37, 25, 0.002, -1, -58, 0.000, -2, 111, 0.007, -5, -53, 0.000, -8, -56, 0.001, -25, -48, 0.008, 61, 132, 0.000, 22, 88, 0.312, 56, 60, 0.007, 37, 10, 0.012, 52, 55, 0.002, 13, 24, 0.009, 46, 93, 0.000, -11, 14, 0.002, -14, -76, 0.013, 23, -98, 0.002, 47, 37, 0.008, 44, 1, 0.016, -11, 163, 0.000, 19, 84, 0.046, 34, -94, 0.002, -36, -63, 0.003, -24, 48, 0.009, 10, -84, 0.035, -9, 158, 0.001, 62, 36, 0.000, 20, -90, 0.004, 38, 38, 0.021, 37, 77, 0.007, 15, 37, 0.010, 14, -16, 0.064, 10, -5, 0.013, 47, 135, 0.003, -33, 25, 0.002, 38, -107, 0.002, 34, 4, 0.010, 49, 38, 0.012, 11, -69, 0.012, 48, -77, 0.001, -9, -64, 0.001, 1, 18, 0.001, -18, 48, 0.004, 16, 100, 0.032, 53, -6, 0.052, 26, 90, 0.196, 40, 117, 0.257, 2, -60, 0.003, 38, 119, 0.014, 35, -109, 0.001, 16, -13, 0.006, -22, -66, 0.001, 49, -124, 0.005, 63, 53, 0.001, 59, 58, 0.002, 36, 7, 0.075, 35, 36, 0.019, 30, -83, 0.007, -8, 32, 0.007, -31, -65, 0.001, 6, -73, 0.018, 40, -101, 0.000, 39, 112, 0.024, 50, 33, 0.012, 27, 122, 0.004, 26, 43, 0.004, 41, 91, 0.001, 3, 36, 0.004, -17, -151, 0.001, -21, -66, 0.001, 45, 39, 0.023, 7, -80, 0.007, 6, 81, 0.198, -17, -70, 0.002, -3, 27, 0.006, -7, -40, 0.004, 60, 13, 0.001, 32, 99, 0.002, 8, -7, 0.006, 45, -123, 0.006, 55, 47, 0.008, 51, 52, 0.010, -3, 121, 0.019, 31, 57, 0.005, 27, 54, 0.006, 4, 19, 0.028, -8, 107, 0.030, -16, -42, 0.005, 21, 84, 0.094, 18, -74, 0.014, -1, 136, 0.001, -39, -59, 0.003, 31, 106, 0.150, 46, 16, 0.065, -34, 138, 0.001, 55, 81, 0.001, 69, 30, 0.000, -25, 35, 0.012, 46, -97, 0.001, -11, 40, 0.026, 57, 60, 0.012, 19, -99, 0.543, 37, 45, 0.029, -39, 147, 0.003, 33, 50, 0.018, 28, 90, 0.003, 9, 40, 0.043, -10, 18, 0.004, -47, 170, 0.000, -15, 30, 0.003, 22, 116, 0.042, 56, 64, 0.006, 37, -98, 0.001, 34, 100, 0.001, 52, 67, 0.002, 13, -4, 0.015, 47, -72, 0.001, 9, -11, 0.008, 46, 137, 0.000, 43, -75, 0.013, 24, 41, 0.004, 0, 23, 0.004, 43, 70, 0.003, -11, 151, 0.002, 23, 51, 0.002, 15, 120, 0.003, -24, 20, 0.000, 10, -64, 0.029, 44, -116, 0.001, 25, 90, 0.372, 38, 66, 0.024, 37, 113, 0.148, 15, 9, 0.001, 11, 6, 0.023, 10, 15, 0.044, -9, 115, 0.068, 38, -79, 0.004, 53, 61, 0.003, 49, 66, 0.000, 29, 59, 0.005, 25, 56, 0.027, 5, 49, 0.000, 2, 21, 0.011, 1, 46, 0.001, 6, 125, 0.060, 49, -113, 0.001, 48, 54, 0.000, 26, 110, 0.044, 39, -78, 0.010, 36, 36, 0.017, -18, -149, 0.006, 35, -81, 0.031, 16, -25, 0.001, 50, 99, 0.000, 12, 42, 0.003, -12, 16, 0.012, 39, 67, 0.063, 35, 64, 0.005, 30, -103, 0.000, 39, 84, 0.001, 54, 50, 0.006, 50, 69, 0.001, 30, 76, 0.166, 26, 63, 0.006, 7, 3, 0.034, 51, 125, 0.001, -3, -54, 0.006, -26, -50, 0.015, -7, -77, 0.006, -33, -61, 0.007, 45, 75, 0.000, 41, 72, 0.035, -36, -66, 0.001, 8, 126, 0.040, 36, 96, 0.000, -21, 147, 0.000, -3, 31, 0.080, 30, 102, 0.003, -37, -64, 0.004, 45, -100, 0.000, 42, 126, 0.055, 60, 41, 0.001, -35, 138, 0.000, 54, 99, 0.001, 32, 55, 0.003, 31, -84, 0.007, 28, 58, 0.005, 8, 29, 0.015, 31, 13, 0.002, 42, -96, 0.007, 18, -102, 0.012, 33, 112, 0.064, -6, 148, 0.001, 65, 14, 0.000, 46, 60, 0.000, 45, 79, 0.005, 42, 47, 0.009, 22, 46, 0.005, 18, 73, 0.075, -35, 117, 0.000, 14, -10, 0.005, 9, -61, 0.002, -11, -56, 0.002, -14, 26, 0.001, -15, -55, 0.001, 57, 24, 0.001, -38, 175, 0.005, 28, 118, 0.103, 9, 20, 0.006, -11, -43, 0.002, -9, 21, 0.001, -4, 123, 0.011, 56, 36, 0.016, 34, 136, 0.551, -4, -57, 0.002, 44, 74, 0.000, -17, 32, 0.014, 43, -111, 0.003, 24, 45, 0.005, 20, 48, 0.005, 67, 32, 0.001, 13, 109, 0.030, 23, 87, 0.253, 14, -91, 0.080, 11, 17, 0.007, 25, 118, 0.071, 58, 31, 0.002, 34, 57, 0.001, 49, 77, 0.000, 10, 51, 0.001, -33, -62, 0.004, -18, 37, 0.017, -19, -66, 0.007, 53, 33, 0.007, 48, 11, 0.055, 29, 63, 0.001, 44, 134, 0.003, 25, 68, 0.076, 39, -123, 0.003, 1, 74, 0.000, 35, -118, 0.007, -19, 19, 0.001, 68, 15, 0.001, 48, 90, 0.001, 29, -80, 0.002, 63, 12, 0.002, -32, -64, 0.058, 40, 61, 0.001, 39, -106, 0.003, 36, 64, 0.004, 16, 75, 0.210, 50, 135, 0.000, 11, 77, 0.166, 39, 39, 0.010, -20, 64, 0.001, -41, -71, 0.002, 29, 78, 0.315, 7, 22, 0.001, -17, 16, 0.002, 54, 14, 0.009, 30, 40, 0.002, -25, -53, 0.017, -26, 47, 0.004, 64, 27, 0.001, 45, 47, 0.000, -29, -56, 0.002, 21, 53, 0.002, 18, 105, 0.006, 36, 140, 0.188, 51, -102, 0.001, 27, -108, 0.001, 45, -64, 0.003, 52, 80, 0.002, 31, 0, 0.001, 51, -4, 0.011, 31, 113, 0.092, 46, 5, 0.025, 42, -124, 0.001, 19, 75, 0.110, 18, -98, 0.053, 66, 25, 0.001, 5, -8, 0.012, 42, 19, 0.010, 57, 115, 0.001, -1, -79, 0.025, 33, -7, 0.147, -24, 152, 0.001, -14, 30, 0.002, -18, -59, 0.000, 57, 36, 0.004, 19, -155, 0.004, 0, 121, 0.010, 52, 28, 0.010, 33, 42, 0.004, 47, -97, 0.003, 9, 48, 0.001, 24, 98, 0.019, 23, -103, 0.008, 33, -105, 0.001, 44, 38, 0.014, -4, 18, 0.010, 13, 81, 0.205, 47, 1, 0.028, 44, -75, 0.007, -13, -42, 0.004, 38, 15, 0.004, 15, 48, 0.002, 47, 82, 0.001, 62, 8, 0.002, 61, 35, 0.008, 14, 36, 0.009, 48, -112, 0.000, -9, -69, 0.000, -13, -72, 0.003, 20, 105, 0.014, -10, 120, 0.014, 53, 21, 0.018, 48, 31, 0.017, 29, 35, 0.001, 5, 41, 0.003, 35, -90, 0.015, 29, -108, 0.001, 40, 33, 0.034, 39, -6, 0.009, 16, 31, 0.001, -17, 168, 0.001, -8, 21, 0.003, 26, -107, 0.003, -12, -40, 0.010, -32, 19, 0.002, 40, -72, 0.010, 17, 103, 0.065, -55, -65, 0.000, 50, -2, 0.014, 27, 93, 0.005, 41, 114, 0.030, 51, 92, 0.001, 53, 89, 0.004, -17, 179, 0.001, 26, -9, 0.000, 41, -1, 0.011, -30, 18, 0.002, 60, 50, 0.000, 41, 16, 0.027, -6, -73, 0.001, 27, -80, 0.018, 42, 86, 0.004, 41, -99, 0.001, 3, 114, 0.005, 52, 124, 0.001, 51, 39, 0.007, 32, -17, 0.001, 28, -14, 0.001, 4, 40, 0.002, 22, -84, 0.003, -1, 115, 0.004, 32, -98, 0.003, 8, -68, 0.002, 6, -5, 0.037, 33, 104, 0.003, -5, 25, 0.004, -6, 140, 0.001, 46, -124, 0.000, 19, -104, 0.012, 37, 28, 0.024, -2, 112, 0.002, -5, -54, 0.000, -25, -49, 0.008, 61, 131, 0.000, -11, 22, 0.001, 22, 85, 0.074, 56, 53, 0.006, 52, 56, 0.007, 13, 23, 0.014, 47, -61, 0.000, -10, -58, 0.000, 23, -99, 0.012, -38, -69, 0.000, 47, 20, 0.089, 44, 2, 0.011, 5, 119, 0.008, 0, 11, 0.001, 19, 83, 0.073, 34, -97, 0.005, -36, -57, 0.007, 62, 33, 0.000, 20, -89, 0.028, 38, 43, 0.014, 37, 80, 0.011, 15, 20, 0.002, 10, -4, 0.010, 47, 134, 0.009, 38, -106, 0.001, 34, 1, 0.008, -38, 146, 0.064, 49, 37, 0.049, 11, -70, 0.008, -8, 108, 0.153, -13, -60, 0.001, 1, 17, 0.000, -18, 45, 0.001, 53, -7, 0.008, 26, 87, 0.245, 40, 118, 0.086, -18, -64, 0.003, 35, -110, 0.001, 16, -12, 0.004, -22, -53, 0.001, 49, -125, 0.002, 59, 57, 0.008, 36, 8, 0.058, 35, 35, 0.001, 30, -82, 0.005, -31, -62, 0.002, 6, -72, 0.012, 40, -100, 0.001, 39, 111, 0.017, 50, 34, 0.011, 27, 121, 0.141, 26, 44, 0.007, 41, 78, 0.001, 3, 35, 0.007, 2, 118, 0.004, 51, 120, 0.000, 50, -111, 0.001, 45, 34, 0.015, 7, -81, 0.002, 6, 82, 0.027, 3, -76, 0.118, -17, -71, 0.030, -3, 22, 0.001, -7, -41, 0.004, 58, 6, 0.007, 60, 14, 0.001, -4, -38, 0.098, 17, -14, 0.001, 32, 100, 0.002, 28, 31, 0.108, 8, -6, 0.007, -30, -59, 0.005, -35, 22, 0.001, 55, 46, 0.005, 51, 51, 0.002, -33, -55, 0.002, 31, 56, 0.002, 28, -114, 0.001, 27, 53, 0.004, 4, 20, 0.006, -16, -41, 0.006, 21, 83, 0.089, 18, -77, 0.034, -1, 135, 0.001, -3, -41, 0.004, -5, 12, 0.012, 31, 105, 0.187, 46, 13, 0.013, 45, 102, 0.001, 55, 80, 0.001, -2, 41, 0.003, -25, 34, 0.023, 46, -96, 0.007, 57, 59, 0.001, 37, 48, 0.014, 33, 49, 0.028, 28, 91, 0.002, 9, 39, 0.111, -10, 23, 0.003, -47, 169, 0.003, -15, 29, 0.012, 22, 113, 0.137, 56, 25, 0.025, 37, -99, 0.001, 34, 97, 0.001, 52, 68, 0.001, 13, -5, 0.018, 9, -8, 0.009, 46, 138, 0.000, 24, 42, 0.004, -14, -171, 0.004, -4, 137, 0.003, 0, 24, 0.005, 43, 69, 0.008, 24, -103, 0.009, 23, 50, 0.002, 1, 98, 0.014, -22, -40, 0.001, 10, -67, 0.093, 25, 89, 0.297, 38, 71, 0.004, 37, 116, 0.187, 15, 8, 0.001, 11, 5, 0.029, 10, 16, 0.024, 14, 30, 0.001, 38, -78, 0.015, 53, 64, 0.013, 14, 108, 0.011, 29, 54, 0.026, 2, 22, 0.010, 1, 45, 0.024, -18, -39, 0.008, 48, 55, 0.000, 39, -79, 0.010, 35, -82, 0.019, 16, -24, 0.002, 50, 100, 0.000, 12, 43, 0.002, -12, 17, 0.012, 39, 66, 0.018, 35, 63, 0.004, 30, -102, 0.000, 39, 83, 0.002, -1, 99, 0.001, 54, 55, 0.007, 50, 70, 0.000, 30, 73, 0.197, 26, 64, 0.006, 7, 2, 0.026, -3, -55, 0.001, 41, 71, 0.013, 36, 97, 0.000, 30, 107, 0.254, 60, 42, 0.001, -29, -62, 0.002, 54, 100, 0.001, 32, 56, 0.001, 31, -85, 0.009, 28, 59, 0.005, 8, 30, 0.007, 31, 28, 0.001, -1, 43, 0.020, 33, 111, 0.045, -6, 145, 0.015, 65, 13, 0.001, 42, 48, 0.018, 4, 127, 0.002, 22, 51, 0.002, 18, 74, 0.212, 9, -74, 0.017, -11, -57, 0.001, -14, 23, 0.002, -15, -52, 0.001, 57, 23, 0.002, -39, 178, 0.001, 28, 119, 0.089, 9, 19, 0.007, 43, -121, 0.001, -11, -40, 0.008, -15, 25, 0.003, 56, 29, 0.003, 34, 133, 0.086, -4, -56, 0.001, -5, 115, 0.000, 39, -103, 0.000, 44, 75, 0.001, 24, 46, 0.005, 20, 49, 0.002, -36, -72, 0.004, -23, 19, 0.001, 67, 31, 0.001, -28, 29, 0.004, 24, -99, 0.004, 23, 86, 0.166, 1, 126, 0.008, 14, -90, 0.141, 11, 24, 0.006, 25, 117, 0.054, 61, 26, 0.003, 58, 32, 0.010, -10, 125, 0.030, 34, 58, 0.002, 49, 80, 0.000, -8, 157, 0.000, -18, 38, 0.017, -19, -67, 0.003, 53, 36, 0.004, 48, 12, 0.096, 44, 135, 0.001, 25, 67, 0.008, 35, -119, 0.015, 68, 16, 0.001, 49, -82, 0.000, 48, 91, 0.001, 29, -81, 0.017, 63, 11, 0.007, -32, -55, 0.003, 40, 62, 0.001, 39, -107, 0.002, 36, 65, 0.008, 16, 76, 0.100, 50, 136, 0.000, 5, 102, 0.010, 39, 38, 0.009, -41, -72, 0.005, 29, 77, 0.174, -17, 15, 0.002, 54, 19, 0.044, 53, 120, 0.000, 30, 37, 0.001, 6, 31, 0.007, 64, 28, 0.001, -19, 179, 0.005, 21, 56, 0.001, 18, 106, 0.089, 51, -103, 0.000, -21, -70, 0.004, 27, -109, 0.012, 45, -65, 0.003, 42, 95, 0.002, -16, -71, 0.002, 52, 81, 0.002, -41, -65, 0.000, 31, -1, 0.001, 51, -5, 0.001, 31, 112, 0.053, 46, 6, 0.017, 19, 74, 0.203, 66, 26, 0.002, -29, 22, 0.003, 42, 20, 0.017, -11, 29, 0.005, 19, -69, 0.011, 6, 5, 0.042, 33, -4, 0.018, 57, 35, 0.005, 0, 122, 0.005, 52, 13, 0.021, 33, 41, 0.004, 13, 46, 0.021, 47, -98, 0.000, 9, 47, 0.002, -10, -49, 0.001, 24, 99, 0.037, 23, -104, 0.008, 33, -102, 0.002, -28, -70, 0.002, 44, 39, 0.010, -4, 19, 0.009, 47, 0, 0.027, 44, -74, 0.003, 62, 22, 0.002, 23, 122, 0.013, 38, 16, 0.028, 34, -117, 0.086, 15, 47, 0.003, 11, 52, 0.000, 47, 81, 0.001, -9, 124, 0.008, 61, 30, 0.002, 49, 140, 0.000, 48, -103, 0.001, -9, -70, 0.001, -13, -73, 0.003, 20, 106, 0.178, -18, 18, 0.001, 53, 24, 0.024, 48, 32, 0.010, 5, 44, 0.002, 35, -91, 0.005, -19, 50, 0.008, 29, -109, 0.001, 63, 31, 0.000, 40, 34, 0.022, 39, -7, 0.006, 16, 32, 0.016, -8, 22, 0.006, 26, -106, 0.001, -12, -39, 0.013, -32, 20, 0.000, 40, -79, 0.053, 17, 106, 0.007, 50, 27, 0.026, 27, 100, 0.010, 41, 113, 0.015, -21, 48, 0.024, 51, 91, 0.001, 53, 92, 0.016, -33, -68, 0.028, -9, 141, 0.003, 41, 2, 0.043, 3, -57, 0.001, -17, -60, 0.000, -13, -46, 0.002, 60, 51, 0.000, 41, 15, 0.043, -26, -69, 0.001, 27, -81, 0.011, 41, -96, 0.016, 3, 113, 0.000, 52, 109, 0.001, 51, 38, 0.016, 32, -16, 0.007, 28, -13, 0.003, 27, 32, 0.058, 4, 41, 0.003, -53, -72, 0.000, -1, 114, 0.002, 32, -97, 0.064, 8, -75, 0.027, -4, 141, 0.001, 19, 38, 0.011, 33, 103, 0.002, -5, 32, 0.011, 19, -105, 0.001, 37, 27, 0.002, -5, -55, 0.001, -25, -50, 0.008, -4, 114, 0.001, 22, 86, 0.077, 56, 54, 0.031, 37, 12, 0.000, 52, 57, 0.003, 13, 18, 0.002, -10, -53, 0.000, 43, -65, 0.001, -11, 16, 0.006, 56, 101, 0.001, -38, -68, 0.001, 47, 19, 0.045, 44, 3, 0.011, 19, 82, 0.031, 34, -96, 0.003, -42, 147, 0.003, 62, 34, 0.000, 20, -88, 0.006, 38, 44, 0.013, 37, 79, 0.002, 15, 19, 0.001, 10, -7, 0.005, 47, 133, 0.013, 61, 66, 0.000, -33, 23, 0.001, 38, -101, 0.000, 34, 2, 0.010, 15, -92, 0.027, 49, 40, 0.006, 11, -71, 0.002, 14, 16, 0.001, -13, -61, 0.001, 2, 47, 0.000, 1, 20, 0.003, -18, 46, 0.002, 53, -4, 0.003, 26, 88, 0.198, 40, 119, 0.078, 38, 117, 0.183, 35, -111, 0.003, -22, -52, 0.002, 12, -16, 0.017, 49, -122, 0.043, 63, 67, 0.001, 36, 9, 0.034, 35, 34, 0.012, -31, -63, 0.001, 6, -75, 0.130, 40, -107, 0.001, 39, 110, 0.011, 14, 43, 0.007, 53, 159, 0.009, 50, 31, 0.120, 26, 41, 0.002, 41, 77, 0.002, 3, 34, 0.008, 2, 115, 0.001, -1, 101, 0.098, 51, 119, 0.000, 50, -110, 0.002, 12, 93, 0.003, 45, 33, 0.001, 3, -77, 0.005, -17, -72, 0.003, -3, 21, 0.001, -7, -38, 0.018, -27, 19, 0.001, 60, 15, 0.002, 17, -15, 0.004, 32, 93, 0.001, 28, 32, 0.002, 8, -5, 0.008, 45, -121, 0.002, -35, 21, 0.002, 55, 45, 0.005, 51, 50, 0.002, 31, 55, 0.005, 28, -113, 0.002, 27, 60, 0.002, -16, -40, 0.008, 21, 78, 0.067, 18, -76, 0.028, -1, 134, 0.002, -39, -57, 0.008, 31, 104, 0.055, 46, 14, 0.020, 43, 112, 0.001, 55, 79, 0.004, -2, 42, 0.003, 69, 32, 0.000, -25, 33, 0.006, 46, -99, 0.000, 57, 46, 0.003, 37, 47, 0.046, 33, 52, 0.012, 28, 92, 0.002, 9, 42, 0.054, -10, 24, 0.003, -15, 32, 0.007, 22, 114, 0.444, 56, 26, 0.005, 37, -96, 0.002, 34, 98, 0.000, -12, -64, 0.001, 13, -10, 0.003, 9, -9, 0.010, 46, 127, 0.068, 43, -69, 0.002, 24, 43, 0.005, 0, 33, 0.129, 67, 66, 0.001, 43, 76, 0.003, 24, -102, 0.001, 23, 49, 0.003, 10, -66, 0.151, 25, 92, 0.079, 38, 72, 0.002, 35, 130, 0.158, 37, 115, 0.186, 15, 7, 0.001, 11, 12, 0.021, 10, 13, 0.024, 53, 63, 0.002, 14, 105, 0.037, 29, 53, 0.045, 25, 58, 0.000, 2, 19, 0.009, -41, 177, 0.001, 68, 37, 0.001, 39, -80, 0.010, 36, 22, 0.001, 35, -83, 0.014, 12, 44, 0.002, 5, 5, 0.001, -12, 18, 0.007, 59, 28, 0.003, 5, 81, 0.011, 39, 65, 0.025, 36, -91, 0.003, 35, 62, 0.005, 39, 82, 0.006, 54, 56, 0.014, 50, 67, 0.003, 30, 74, 0.199, 26, 61, 0.006, 7, 1, 0.025, -3, -52, 0.001, -27, -62, 0.001, 41, 74, 0.010, 22, 87, 0.152, 36, 98, 0.000, 30, 108, 0.173, 42, 140, 0.001, 60, 43, 0.001, -35, 140, 0.001, 32, 65, 0.006, 31, -86, 0.004, 28, 60, 0.003, 8, 31, 0.005, -16, 37, 0.011, 31, 27, 0.001, 42, -98, 0.001, 22, -159, 0.001, 21, 114, 0.002, 18, -104, 0.000, -1, 42, 0.024, 33, 114, 0.220, -6, 146, 0.005, 42, 45, 0.019, 22, 52, 0.002, 9, -75, 0.035, -14, 24, 0.002, -15, -53, 0.001, 57, 26, 0.005, -39, 177, 0.004, -26, 154, 0.001, 10, 109, 0.010, 28, 120, 0.060, 43, -122, 0.001, -11, -41, 0.002, -15, 28, 0.007, 56, 30, 0.002, 34, 134, 0.099, -4, -55, 0.001, 44, 76, 0.001, 24, 47, 0.005, -11, 122, 0.002, 20, 50, 0.002, 67, 30, 0.000, -28, 30, 0.006, -28, -66, 0.001, 43, 40, 0.008, 24, -98, 0.002, 23, 85, 0.074, 1, 125, 0.037, 14, -85, 0.006, 11, 23, 0.004, 25, 120, 0.111, -13, 41, 0.006, -32, 117, 0.004, 61, 25, 0.005, 58, 29, 0.001, 34, 55, 0.002, -8, 158, 0.000, 10, 49, 0.002, -37, 148, 0.001, -19, -64, 0.003, 53, 35, 0.025, 48, 5, 0.014, 29, 25, 0.001, 44, 136, 0.002, 68, 17, 0.001, 48, 92, 0.000, 63, 10, 0.001, 25, -77, 0.007, -32, -54, 0.006, 40, 63, 0.007, 39, -108, 0.004, 36, 66, 0.012, -35, -60, 0.007, -24, -46, 0.695, 5, 101, 0.079, 39, 37, 0.012, 36, -111, 0.001, -21, -62, 0.000, -41, -73, 0.010, 29, 80, 0.081, 7, 20, 0.002, -17, 14, 0.002, 54, 20, 0.012, 53, 119, 0.000, -6, 28, 0.006, 30, 38, 0.001, 60, -151, 0.001, 6, 32, 0.007, -26, 45, 0.001, 64, 21, 0.003, -31, 151, 0.001, 41, 38, 0.004, 21, 55, 0.002, 18, 103, 0.021, 51, -112, 0.001, 27, -110, 0.005, 64, 12, 0.001, 45, -70, 0.001, 42, 96, 0.002, -16, -70, 0.014, 52, 82, 0.002, 32, 21, 0.004, 31, -2, 0.001, 31, 111, 0.035, 46, 11, 0.008, 19, 73, 0.473, 18, -4, 0.001, 33, 78, 0.001, 66, 23, 0.001, -29, 21, 0.001, 42, 17, 0.000, 19, -70, 0.062, 18, 43, 0.009, 33, -5, 0.032, -5, -76, 0.001, 22, 95, 0.026, 0, 123, 0.016, 37, -25, 0.004, 52, 14, 0.142, 33, 44, 0.014, 13, 45, 0.079, -44, 172, 0.001, 47, -99, 0.000, 9, 50, 0.002, -10, -48, 0.003, 24, 100, 0.045, -9, 16, 0.008, 23, -105, 0.006, -4, 128, 0.004, 8, 10, 0.028, -28, -69, 0.001, 44, 40, 0.016, -4, 20, 0.003, 47, -1, 0.038, 44, -73, 0.010, 62, 27, 0.001, 23, 121, 0.165, 38, 13, 0.002, 34, -116, 0.004, 15, 46, 0.005, 14, 7, 0.021, 11, 51, 0.002, 47, 80, 0.001, -36, 146, 0.001, 62, 6, 0.001, 59, 152, 0.000, 61, 29, 0.003, 49, 139, 0.000, 11, -60, 0.002, -8, 130, 0.000, -9, -71, 0.001, -13, -74, 0.013, 20, 107, 0.293, -37, 176, 0.001, 53, 23, 0.014, -3, 108, 0.004, 48, 41, 0.015, 5, 43, 0.002, 35, -84, 0.018, -19, 49, 0.011, 29, -114, 0.002, 63, 30, 0.001, 40, 35, 0.015, 39, -8, 0.027, -8, 23, 0.009, -45, -67, 0.001, 14, 99, 0.010, -12, -38, 0.013, 40, -78, 0.016, 36, -83, 0.014, 17, 105, 0.037, 50, 28, 0.014, 27, 99, 0.004, -22, -47, 0.037, 41, 116, 0.016, -17, 50, 0.008, -21, 47, 0.009, 51, 90, 0.001, 53, 91, 0.002, -35, -69, 0.001, -28, -51, 0.011, 41, 1, 0.013, 3, -58, 0.000, -25, -58, 0.001, -17, -61, 0.000, 41, 18, 0.002, -29, -53, 0.010, -6, -75, 0.001, -7, 30, 0.005, -26, -68, 0.001, 27, -82, 0.065, 41, -97, 0.003, 3, 104, 0.013, 52, 110, 0.000, 51, 37, 0.020, 32, -7, 0.032, 27, 31, 0.086, 4, 42, 0.002, -1, 113, 0.003, 32, -96, 0.088, 46, 39, 0.009, 8, -74, 0.010, 19, 37, 0.001, 33, 106, 0.039, -5, 31, 0.025, -34, 148, 0.001, 37, 22, 0.009, -2, 110, 0.003, -25, -51, 0.008, -18, -54, 0.001, 22, 91, 0.316, -26, -49, 0.095, 56, 55, 0.010, 37, 11, 0.005, 52, 58, 0.001, 13, 17, 0.001, 43, -66, 0.000, -11, 15, 0.006, 56, 102, 0.010, -38, -71, 0.003, -5, 106, 0.051, 47, 18, 0.025, 44, 4, 0.005, 23, 44, 0.005, 19, 81, 0.018, 34, -99, 0.002, -23, -50, 0.013, 44, -109, 0.000, 62, 55, 0.001, 20, -87, 0.006, 38, 41, 0.023, 15, 18, 0.001, 14, -13, 0.004, 10, -6, 0.009, 61, 65, 0.001, 38, -100, 0.001, 34, -1, 0.029, 15, -93, 0.004, 49, 39, 0.009, -9, -67, 0.000, -13, -62, 0.001, -2, 103, 0.017, 1, 19, 0.002, -10, 121, 0.004, 16, 95, 0.035, -9, 149, 0.001, 26, 85, 0.379, 40, 120, 0.073, 38, 118, 0.083, 53, -116, 0.000, 12, -15, 0.021, 49, -123, 0.037, 36, 10, 0.040, 35, 33, 0.001, -4, -47, 0.002, -31, -60, 0.002, 6, -74, 0.008, 40, -106, 0.001, 39, 109, 0.002, 50, 32, 0.012, 26, 42, 0.002, 41, 80, 0.006, 3, 33, 0.011, 51, 118, 0.001, 50, -113, 0.006, 45, 36, 0.007, 21, 42, 0.015, -3, 24, 0.004, -7, -39, 0.013, 64, -51, 0.000, 60, 16, 0.005, 17, -12, 0.002, 32, 94, 0.001, -17, -39, 0.010, 28, 33, 0.001, 8, -4, 0.005, -30, -61, 0.001, -35, 24, 0.002, 55, 76, 0.002, 51, 49, 0.004, 31, 54, 0.011, 28, -112, 0.000, 27, 59, 0.003, -15, 20, 0.001, 4, 6, 0.013, 21, 77, 0.069, -20, 28, 0.006, -2, -80, 0.026, 31, 103, 0.005, 46, 19, 0.026, 45, 104, 0.000, 55, 78, 0.001, -2, 31, 0.071, 69, 31, 0.000, -25, 32, 0.017, 46, -98, 0.001, 57, 45, 0.002, 37, 58, 0.012, -10, -78, 0.007, 33, 51, 0.018, 28, 93, 0.002, 9, 41, 0.018, -10, 21, 0.001, -15, 31, 0.006, 56, 27, 0.004, 37, -97, 0.019, 13, -11, 0.002, 9, -6, 0.007, 46, 128, 0.045, 43, -70, 0.020, 24, 44, 0.005, 0, 34, 0.095, 67, 65, 0.002, 43, 75, 0.005, 24, -101, 0.008, 23, 48, 0.005, 1, 100, 0.029, -4, 12, 0.001, -23, -70, 0.000, 25, 91, 0.086, 38, 69, 0.058, 35, 129, 0.202, 37, 110, 0.028, 15, 6, 0.002, 11, 11, 0.050, 10, 14, 0.053, 5, -67, 0.002, 53, 74, 0.001, 14, 106, 0.021, 29, 56, 0.005, -9, 128, 0.002, 25, 57, 0.006, 5, 46, 0.004, 2, 20, 0.013, -18, -49, 0.005, -41, 176, 0.007, 68, 38, 0.000, -8, -71, 0.001, 26, 121, 0.004, 39, -81, 0.010, 36, 23, 0.002, 35, -76, 0.003, 12, 13, 0.009, -7, 121, 0.002, -21, -51, 0.007, -12, 19, 0.007, 59, 27, 0.002, 39, 64, 0.014, 36, -90, 0.006, 35, 61, 0.022, 30, -112, 0.002, 39, 81, 0.006, 54, 53, 0.014, 53, 126, 0.001, 50, 68, 0.001, 30, 63, 0.001, 26, 62, 0.003, 7, 0, 0.010, 51, 130, 0.000, -3, -53, 0.001, -37, -62, 0.002, -7, -56, 0.001, -27, -63, 0.001, -13, -37, 0.001, 41, 73, 0.017, 36, 99, 0.001, 30, 105, 0.365, 60, 44, 0.001, 49, 98, 0.000, -35, 139, 0.030, 55, -97, 0.001, 32, 66, 0.008, 31, -87, 0.004, 28, 61, 0.004, 8, 32, 0.005, -16, 38, 0.015, 55, 16, 0.000, 32, -79, 0.006, 42, -85, 0.037, -20, 25, 0.001, 21, 113, 0.019, -1, 41, 0.002, -3, -50, 0.001, 33, 113, 0.143, -6, 143, 0.005, 46, 47, 0.001, 42, 46, 0.008, 22, 49, 0.003, -20, 45, 0.002, 9, -72, 0.004, -14, 21, 0.001, 57, 25, 0.012, 13, 76, 0.082, 28, 121, 0.169, 43, -123, 0.004, 24, 89, 0.375, -15, 27, 0.002, 56, 31, 0.006, 34, 131, 0.006, -4, -54, 0.003, 44, 45, 0.008, 24, 48, 0.004, -9, 34, 0.012, 20, 51, 0.002, 13, 106, 0.005, -28, 31, 0.021, 24, -97, 0.001, 23, 84, 0.044, 1, 128, 0.004, 14, -84, 0.002, 11, 22, 0.002, 25, 119, 0.192, -13, 32, 0.002, 61, 28, 0.003, 58, 30, 0.002, 34, 56, 0.001, 49, 82, 0.001, 10, 50, 0.004, -42, 175, 0.011, -37, 147, 0.004, -19, -65, 0.010, 53, 30, 0.011, 48, 6, 0.010, 5, 18, 0.003, -19, 16, 0.001, 68, 18, 0.001, 48, 85, 0.001, 14, 124, 0.002, 63, 9, 0.001, -32, -53, 0.002, 40, 64, 0.005, -36, -58, 0.013, 36, 67, 0.025, 5, 104, 0.013, 39, 36, 0.017, 36, -110, 0.001, -21, -63, 0.001, 29, 79, 0.191, 14, 77, 0.089, 7, 19, 0.002, -17, 13, 0.001, 54, 17, 0.010, 30, 43, 0.001, 60, -150, 0.000, 6, 29, 0.004, -16, -43, 0.006, -21, -29, 0.001, -35, -55, 0.013, -26, 46, 0.005, 64, 22, 0.000, -31, 154, 0.001, 41, 37, 0.015, 21, -158, 0.008, 18, 104, 0.020, 36, 127, 0.042, 51, -113, 0.007, 45, -71, 0.008, 42, 93, 0.002, 41, -74, 0.037, -16, -69, 0.009, 52, 83, 0.003, -40, -63, 0.000, 32, 22, 0.005, 31, -3, 0.003, 51, -7, 0.000, 31, 110, 0.058, 9, 118, 0.001, 46, 12, 0.025, -2, -51, 0.001, 33, 77, 0.003, -6, 115, 0.001, 66, 24, 0.001, -29, 28, 0.008, 42, 18, 0.003, 19, -71, 0.039, 18, 44, 0.007, 33, -2, 0.004, -5, -77, 0.001, 22, 96, 0.072, 0, 124, 0.017, 52, 15, 0.019, 33, 43, 0.004, 13, 48, 0.001, 9, 49, 0.002, -10, -51, 0.000, 24, 93, 0.163, 23, -106, 0.014, -28, -68, 0.001, 44, 41, 0.018, -52, -72, 0.000, -4, 21, 0.001, 13, 78, 0.161, 47, -2, 0.020, 44, -72, 0.006, 62, 28, 0.005, 23, 120, 0.003, 38, 14, 0.033, 0, -55, 0.001, 34, -119, 0.022, 15, 45, 0.075, 14, 8, 0.019, 11, 50, 0.002, 10, 3, 0.008, -28, 154, 0.042, 62, 11, 0.001, 59, 151, 0.004, 61, 32, 0.001, -28, -63, 0.002, 14, 23, 0.007, 48, -101, 0.002, -9, -72, 0.001, 25, -12, 0.000, -13, -75, 0.014, 20, 108, 0.006, -37, 175, 0.035, 48, 42, 0.004, 29, 32, 0.238, 40, 141, 0.038, 35, -85, 0.016, 48, 121, 0.002, 29, -115, 0.001, 63, 29, 0.001, 40, 36, 0.020, 39, -9, 0.010, 35, -4, 0.008, 16, 42, 0.001, 11, 110, 0.010, -8, 24, 0.015, -12, -37, 0.021, 40, -77, 0.015, 36, -82, 0.020, 17, 108, 0.002, 50, 25, 0.021, 27, 98, 0.003, 41, 115, 0.024, -17, 49, 0.004, -21, 46, 0.002, 51, 89, 0.000, 53, 86, 0.002, 30, 7, 0.001, 26, -10, 0.000, 41, 4, 0.003, -17, -62, 0.001, -6, 19, 0.018, 60, 53, 0.000, 41, 17, 0.038, -6, -74, 0.001, 31, -80, 0.000, -7, 29, 0.005, -44, 147, 0.000, 41, -94, 0.003, 3, 103, 0.017, 52, 111, 0.000, 51, 44, 0.007, 32, -6, 0.039, -36, 118, 0.001, 28, -11, 0.001, 4, 43, 0.003, -1, 112, 0.009, 32, -87, 0.004, 46, 40, 0.010, 8, -73, 0.017, 19, 44, 0.008, 33, 105, 0.020, -5, 30, 0.021, -6, 135, 0.001, 57, 84, 0.001, 37, 21, 0.001, 6, 10, 0.035, -2, 115, 0.004, 10, 99, 0.007, 22, 92, 0.297, 56, 56, 0.004, 52, 59, 0.004, 13, 20, 0.002, 47, -64, 0.001, -10, -55, 0.001, -11, 26, 0.008, 56, 103, 0.001, -38, -70, 0.000, -5, 105, 0.061, 47, 17, 0.027, 44, 5, 0.028, 23, 43, 0.006, 19, 104, 0.006, 34, -98, 0.006, -23, -51, 0.016, -24, 44, 0.007, 44, -108, 0.001, 58, 51, 0.007, 20, -86, 0.006, 38, 42, 0.025, 15, 17, 0.001, 14, -12, 0.005, 10, -9, 0.006, -9, 119, 0.024, 38, -103, 0.001, 34, 0, 0.019, 49, 42, 0.003, 48, -81, 0.001, -13, -63, 0.001, 2, 45, 0.009, 1, 22, 0.004, 16, 96, 0.104, 6, 121, 0.003, 26, 86, 0.391, 40, 113, 0.038, -18, -61, 0.001, 53, -117, 0.000, 50, 91, 0.001, 12, -14, 0.014, 49, -120, 0.000, 48, 141, 0.001, 59, 62, 0.001, 36, 11, 0.082, 35, 24, 0.002, -31, -61, 0.003, 6, -69, 0.001, 40, -105, 0.016, 39, 108, 0.002, 50, 29, 0.023, 26, 39, 0.003, 41, 79, 0.003, 3, 24, 0.003, 2, 113, 0.004, 51, 117, 0.002, 50, -112, 0.000, 45, 35, 0.015, 21, 41, 0.015, -3, 23, 0.002, -6, 39, 0.016, -7, -36, 0.012, 60, 17, 0.005, 17, -13, 0.001, 32, 95, 0.001, 31, -108, 0.001, 28, 34, 0.001, 8, -11, 0.023, -30, -60, 0.001, -34, 151, 0.043, -35, 23, 0.004, 55, 75, 0.003, 51, 72, 0.011, -3, 117, 0.003, 31, 53, 0.021, 28, -111, 0.009, 27, 58, 0.006, 4, 7, 0.073, 21, 80, 0.123, 18, -78, 0.005, -1, 20, 0.003, 31, 102, 0.004, 46, 20, 0.019, 45, 103, 0.001, -38, 143, 0.001, 55, 77, 0.002, -2, 32, 0.029, -6, 107, 0.007, -25, 31, 0.015, 46, -93, 0.001, 57, 48, 0.002, 37, 57, 0.010, 33, 54, 0.001, 28, 94, 0.001, 9, 44, 0.008, -10, 22, 0.001, -9, 25, 0.003, -4, 119, 0.005, 56, 28, 0.005, 37, -86, 0.007, 5, -10, 0.001, 13, -8, 0.009, 9, -7, 0.005, 46, 125, 0.047, 43, -71, 0.013, -14, -172, 0.001, 0, 35, 0.172, -23, 44, 0.005, 43, 74, 0.004, 24, -100, 0.005, 23, 47, 0.005, 1, 99, 0.011, 15, 100, 0.024, 14, 48, 0.004, 25, 78, 0.047, 38, 70, 0.020, 35, 120, 0.108, 37, 109, 0.013, 15, 5, 0.001, 11, 10, 0.060, 48, -124, 0.000, 10, 27, 0.006, 38, -75, 0.013, 53, 73, 0.001, 49, 70, 0.000, 29, 55, 0.005, 14, 17, 0.001, 44, 142, 0.001, 25, 60, 0.002, 5, 45, 0.003, 2, 17, 0.001, -18, -48, 0.005, -22, 27, 0.001, -41, 175, 0.000, -8, -70, 0.001, -12, -75, 0.021, 40, 85, 0.001, 39, -82, 0.026, 35, -77, 0.020, 50, 95, 0.000, 12, 14, 0.012, -12, 20, 0.002, -37, 150, 0.001, 59, 26, 0.002, 39, 63, 0.003, 36, -89, 0.006, 35, 68, 0.007, 30, -115, 0.003, 39, 80, 0.006, 54, 54, 0.013, 53, 125, 0.001, 30, 64, 0.001, 26, 75, 0.083, 7, -1, 0.028, -20, 33, 0.021, 51, 129, 0.004, -3, -58, 0.001, -19, -47, 0.006, -27, -60, 0.006, 41, 76, 0.002, 36, 100, 0.002, -35, -65, 0.002, 30, 106, 0.228, 6, 119, 0.001, 54, 103, 0.001, 32, 67, 0.005, 31, -88, 0.003, 28, 62, 0.003, 8, 25, 0.001, -16, 39, 0.010, 55, 15, 0.003, 31, 25, 0.001, 42, -84, 0.026, -1, 40, 0.005, 33, 116, 0.296, -6, 144, 0.009, 46, 48, 0.009, 42, 59, 0.006, 22, 50, 0.002, 52, -107, 0.000, 9, -73, 0.012, 46, -65, 0.001, -11, -76, 0.012, -14, 22, 0.001, 57, 28, 0.004, 56, 9, 0.009, -39, 179, 0.001, 13, 75, 0.051, 10, 123, 0.079, 28, 122, 0.139, 43, -116, 0.016, 24, 90, 0.449, -33, 153, 0.001, 56, 32, 0.002, 34, 132, 0.034, -4, -53, 0.001, -5, 120, 0.034, 44, 46, 0.003, 24, 73, 0.083, 20, 52, 0.002, 13, 105, 0.013, -28, 32, 0.018, 44, -67, 0.001, 23, 83, 0.051, 38, -9, 0.082, 14, -87, 0.053, 11, 21, 0.001, 25, 122, 0.198, -13, 31, 0.002, 61, 27, 0.002, 58, 43, 0.002, 34, 53, 0.005, 15, -23, 0.006, 49, 81, 0.001, 10, 47, 0.001, -37, 146, 0.003, -19, -70, 0.007, 53, 29, 0.008, 48, 7, 0.029, 5, 17, 0.003, 1, -50, 0.000, -19, 15, 0.001, 48, 86, 0.001, 63, 8, 0.001, -32, -52, 0.016, 40, 57, 0.001, 39, -110, 0.001, 36, 68, 0.025, 50, 131, 0.001, -31, -50, 0.004, 5, 103, 0.025, 39, 35, 0.015, 36, -109, 0.001, -21, -56, 0.001, 29, 106, 0.240, 7, 18, 0.003, -20, -41, 0.008, -17, 28, 0.011, 54, 18, 0.012, 30, 44, 0.007, 6, 30, 0.006, -21, -52, 0.001, -31, 153, 0.003, 41, 40, 0.002, 21, -159, 0.001, 18, 101, 0.022, 36, 128, 0.123, 17, 30, 0.001, 51, -114, 0.017, -17, -46, 0.002, 27, -104, 0.001, 45, -68, 0.001, 42, 94, 0.002, 41, -75, 0.023, -16, -68, 0.006, 21, -78, 0.019, 52, 84, 0.002, -40, -62, 0.001, 32, 23, 0.002, 31, 12, 0.001, 31, 109, 0.100, 46, 9, 0.015, -4, -43, 0.007, 6, -9, 0.011, -29, 27, 0.007, 42, 15, 0.022, 33, -3, 0.009, -5, -78, 0.003, 22, 93, 0.077, 0, 117, 0.002, 52, 16, 0.017, 13, 47, 0.005, -10, -50, 0.001, 24, 94, 0.062, 33, -101, 0.009, 44, 42, 0.020, 58, 93, 0.004, 1, 174, 0.001, -4, 22, 0.002, 13, 77, 0.096, 47, -3, 0.013, 44, -71, 0.003, 62, 25, 0.002, 34, -118, 0.192, 14, 5, 0.014, 11, 49, 0.001, 10, 4, 0.007, 62, 12, 0.000, 61, 31, 0.001, 14, 24, 0.005, 48, -100, 0.001, -9, -73, 0.003, 25, -13, 0.000, 2, 74, 0.001, 20, 93, 0.034, 53, 1, 0.004, 49, -2, 0.005, 48, 43, 0.003, 29, 31, 0.084, 44, 102, 0.000, 40, 142, 0.024, 35, -86, 0.017, 53, -110, 0.001, 48, 122, 0.005, 29, -112, 0.001, 63, 44, 0.000, 40, 29, 0.028, 35, -5, 0.066, 16, 43, 0.007, 11, 109, 0.045, -8, 17, 0.007, 7, 101, 0.037, 40, -76, 0.045, 36, -81, 0.010, 17, 107, 0.028, 50, 26, 0.023, 27, 97, 0.005, 5, -3, 0.070, -17, 48, 0.005, -21, 45, 0.004, 51, 80, 0.001, 53, 85, 0.006, 50, -119, 0.004, 30, 8, 0.001, 41, 3, 0.143, -17, -63, 0.004, 36, 141, 0.081, -6, 20, 0.015, -33, -60, 0.014, 30, 119, 0.077, 58, 10, 0.001, 60, 54, 0.000, 41, 20, 0.036, 17, 26, 0.001, 31, -81, 0.009, -7, 32, 0.004, -44, 148, 0.001, 41, -95, 0.014, 3, 102, 0.164, 51, 43, 0.008, 32, -5, 0.021, 28, -10, 0.003, 4, 44, 0.004, -1, 111, 0.008, 32, -86, 0.014, 46, 37, 0.006, 8, -72, 0.026, 19, 43, 0.008, 33, 108, 0.053, -5, 29, 0.009, 57, 83, 0.000, 19, -100, 0.035, 37, 24, 0.078, -2, 116, 0.005, 10, 100, 0.010, -10, 31, 0.004, 22, 89, 0.919, 56, 49, 0.005, 52, 60, 0.002, 33, -118, 0.128, 13, 19, 0.002, 47, -65, 0.003, -10, -54, 0.001, -11, 25, 0.008, 56, 104, 0.001, -38, -73, 0.008, -3, 141, 0.010, 47, 16, 0.028, 44, 6, 0.008, 23, 42, 0.009, 19, 103, 0.010, 34, -101, 0.002, -23, -48, 0.022, 44, -107, 0.001, 58, 52, 0.002, 38, 47, 0.022, 15, 16, 0.001, 14, -15, 0.024, 10, -8, 0.008, 14, 42, 0.001, 14, 31, 0.003, 38, -102, 0.001, 34, -3, 0.025, 15, -95, 0.000, 49, 41, 0.004, 48, -80, 0.001, 2, 46, 0.046, 1, 21, 0.004, -18, 49, 0.020, 16, 105, 0.044, -22, 56, 0.020, -3, 103, 0.016, 26, 99, 0.006, 40, 114, 0.072, 5, 11, 0.082, -18, -60, 0.001, 16, -16, 0.007, 53, -122, 0.002, 50, 92, 0.001, 12, -13, 0.007, 49, -121, 0.002, 59, 61, 0.007, 40, 1, 0.008, 36, 12, 0.002, -31, -58, 0.003, 6, -68, 0.001, 40, -104, 0.006, 39, 107, 0.034, 54, 63, 0.002, 50, 30, 0.012, 26, 40, 0.003, -22, -50, 0.020, 41, 82, 0.007, 3, 23, 0.007, 2, 114, 0.001, 51, 124, 0.001, 45, 30, 0.007, 21, 44, 0.010, -3, 18, 0.005, -6, 40, 0.024, -7, -37, 0.013, 30, 131, 0.001, 60, 18, 0.005, 17, -10, 0.001, 32, 96, 0.001, 31, -109, 0.002, 28, 35, 0.001, -29, -48, 0.006, 8, -10, 0.028, -30, -63, 0.001, 55, 74, 0.023, 51, 71, 0.002, -3, 120, 0.013, 31, 68, 0.008, 28, -110, 0.005, 27, 57, 0.013, 4, 8, 0.110, 21, 79, 0.101, -1, 19, 0.011, -5, -48, 0.002, 31, 101, 0.003, 46, 17, 0.038, 22, 27, 0.000, -2, 29, 0.035, -8, -77, 0.005, -6, 108, 0.001, -25, 30, 0.026, 5, 10, 0.030, 46, -92, 0.007, -34, 116, 0.003, 57, 47, 0.003, 37, 60, 0.009, 33, 53, 0.003, 28, 95, 0.004, 9, 43, 0.037, -10, 27, 0.005, -15, 33, 0.006, 22, 117, 0.010, 37, -87, 0.015, -4, -80, 0.010, 13, -9, 0.004, 9, -4, 0.004, 46, 126, 0.049, 43, -96, 0.008, 24, 38, 0.002, -22, -54, 0.002, 0, 36, 0.063, 67, 55, 0.001, 47, 52, 0.006, 43, 73, 0.002, 24, -107, 0.029, 23, 46, 0.005, 1, 102, 0.017, 15, 99, 0.006, -23, -68, 0.003, 11, 32, 0.004, 25, 77, 0.061, 38, 75, 0.001, 35, 119, 0.213, 37, 112, 0.073, 15, -12, 0.008, 11, 9, 0.156, 10, 28, 0.004, 38, -74, 0.001, 53, 76, 0.001, 49, 69, 0.000, 44, 143, 0.004, 25, 59, 0.001, 5, 48, 0.001, 2, 18, 0.000, -18, -51, 0.004, -22, 28, 0.004, 48, 99, 0.000, 26, 119, 0.062, -12, -74, 0.005, 40, 86, 0.000, 39, -83, 0.023, 35, -78, 0.044, 12, 15, 0.011, -12, 37, 0.004, 59, 25, 0.018, 39, 62, 0.003, 36, -88, 0.008, 35, 67, 0.009, 30, -114, 0.001, -8, -39, 0.022, 39, 79, 0.006, 54, 59, 0.006, 53, 128, 0.001, 50, 66, 0.000, 30, 61, 0.004, -39, 176, 0.002, 26, 76, 0.142, 7, -2, 0.032, 57, -4, 0.004, 17, -76, 0.011, -3, -59, 0.006, -26, 24, 0.001, -27, -61, 0.002, 45, 66, 0.001, 60, -1, 0.001, 41, 75, 0.002, 30, 95, 0.001, 4, -58, 0.001, -16, -63, 0.001, 32, 68, 0.008, 31, -89, 0.010, 28, 63, 0.002, 8, 26, 0.000, -16, 40, 0.027, -39, -60, 0.002, 55, 14, 0.019, 31, 24, 0.001, 28, -82, 0.048, 42, -87, 0.058, 21, 115, 0.001, -1, 39, 0.008, 33, 115, 0.294, -6, 141, 0.001, 46, 45, 0.004, 45, 134, 0.006, 42, 60, 0.026, -11, 33, 0.003, 22, 55, 0.004, 6, 1, 0.043, 52, -106, 0.008, 9, -70, 0.027, 46, -64, 0.006, -11, -77, 0.008, -14, 19, 0.001, 57, 27, 0.003, 56, 10, 0.017, 52, 5, 0.127, 10, 124, 0.138, 43, -117, 0.000, 24, 91, 0.452, -33, 152, 0.013, 34, 129, 0.014, -4, -52, 0.001, 44, 47, 0.002, 43, -100, 0.000, 24, 74, 0.080, 67, 35, 0.001, 13, 108, 0.010, -28, 33, 0.010, 44, -66, 0.000, 23, 82, 0.052, 20, -156, 0.004, 38, -8, 0.013, 14, -86, 0.015, 11, 28, 0.005, -13, 30, 0.004, 61, 22, 0.005, 58, 44, 0.001, 34, 54, 0.002, 49, 84, 0.002, 48, -95, 0.001, 10, 48, 0.001, -37, 145, 0.004, 53, 32, 0.005, 48, 8, 0.059, 5, 20, 0.003, 1, -51, 0.000, 48, 87, 0.002, -12, -62, 0.003, -32, -59, 0.009, 40, 58, 0.003, 39, -111, 0.002, 36, 53, 0.050, 12, 75, 0.029, -31, -51, 0.058, 39, 34, 0.035, 36, -108, 0.003, -8, -35, 0.066, 29, 105, 0.214, 7, 17, 0.007, -17, 27, 0.005, 54, 23, 0.010, 30, 41, 0.002, 6, 35, 0.002, 12, 120, 0.001, 18, 102, 0.008, 36, 129, 0.046, 17, 29, 0.001, 51, -115, 0.001, 32, 113, 0.194, 27, -105, 0.004, 45, -69, 0.001, 41, -72, 0.068, -16, -75, 0.000, 21, -79, 0.010, 32, 24, 0.000, 31, 11, 0.001, -25, -60, 0.001, 46, 10, 0.014, 33, 79, 0.001, 66, 22, 0.001, -29, 26, 0.001, -48, -66, 0.000, 19, -81, 0.001, 18, 42, 0.009, 33, 0, 0.002, -5, -79, 0.011, 22, 94, 0.007, 0, 118, 0.006, 52, 17, 0.038, 13, 42, 0.006, 9, 51, 0.001, -10, -45, 0.001, 24, 95, 0.017, -35, -61, 0.005, 33, -98, 0.005, 44, 43, 0.018, 43, -8, 0.024, 1, 173, 0.001, -4, 23, 0.003, 13, 80, 0.127, 47, 12, 0.032, 44, -70, 0.007, 62, 26, 0.006, 23, 118, 0.030, 14, 6, 0.029, 10, 1, 0.022, 62, 9, 0.001, 14, 21, 0.002, 11, -63, 0.005, 29, 9, 0.000, -9, -74, 0.005, -13, -69, 0.001, 20, 94, 0.023, 48, 44, 0.003, 44, 103, 0.000, 5, 40, 0.006, 35, -87, 0.007, -19, 46, 0.004, 53, -111, 0.001, 48, 123, 0.007, 29, -113, 0.000, 14, 109, 0.028, 63, 43, 0.000, 40, 30, 0.080, -20, -45, 0.007, 35, -6, 0.008, 16, 44, 0.045, -8, 18, 0.007, 7, 100, 0.038, 40, -83, 0.022, 36, -80, 0.021, 17, 78, 0.105, 50, 23, 0.030, 27, 104, 0.073, -17, 47, 0.008, 51, 79, 0.001, 53, 88, 0.028, 50, -118, 0.001, 30, 5, 0.001, 7, -58, 0.001, 6, 127, 0.006, -17, -64, 0.003, -6, 17, 0.010, -35, -56, 0.058, 30, 120, 0.102, 45, 10, 0.209, 17, 25, 0.001, 32, 133, 0.003, 31, -82, 0.006, -7, 31, 0.006, -26, -65, 0.006, 41, -92, 0.005, 3, 101, 0.003, 52, 113, 0.000, 51, 42, 0.006, 32, -4, 0.008, 28, -9, 0.002, 27, 36, 0.001, 4, 29, 0.002, -1, 110, 0.033, -36, 147, 0.001, 32, -85, 0.010, 31, 80, 0.001, 46, 38, 0.001, 8, -79, 0.011, 19, 42, 0.014, 33, 107, 0.037, -5, 36, 0.021, -6, 133, 0.003, 65, 73, 0.001, 19, -101, 0.047, 37, 23, 0.013, 52, -66, 0.000, -2, 113, 0.003, -10, 32, 0.006, -2, 11, 0.001, 22, 90, 0.260, 56, 50, 0.006, 37, 8, 0.001, 52, 45, 0.005, 13, 14, 0.005, 47, -66, 0.001, 46, 87, 0.001, -11, 28, 0.004, 56, 97, 0.001, -38, -72, 0.014, 47, 15, 0.013, 44, 7, 0.005, 24, -14, 0.000, 23, 41, 0.004, 19, 102, 0.008, 34, -100, 0.001, -36, -62, 0.002, -23, -49, 0.028, 44, -106, 0.001, 62, 54, 0.001, 58, 49, 0.003, 38, 48, 0.018, 34, 43, 0.005, 15, 15, 0.001, 14, -14, 0.006, 10, -11, 0.011, 61, 62, 0.000, 38, -97, 0.007, 34, -2, 0.028, 15, -96, 0.005, 49, 44, 0.004, 48, -71, 0.007, 2, 43, 0.007, -28, -62, 0.001, 1, 24, 0.003, -18, 50, 0.015, 16, 106, 0.017, 53, -8, 0.006, 26, 100, 0.023, 40, 115, 0.060, 38, 121, 0.001, 16, -7, 0.002, -22, -56, 0.002, 12, -12, 0.005, 49, -118, 0.001, 48, 143, 0.001, 5, 121, 0.011, 36, -3, 0.007, -31, -59, 0.003, 6, -71, 0.004, 40, -111, 0.044, 39, 106, 0.001, 54, 64, 0.002, 50, 59, 0.002, 26, 37, 0.002, 41, 81, 0.006, 3, 22, 0.006, -21, 16, 0.000, 51, 123, 0.002, 50, -114, 0.007, 45, 29, 0.033, 21, 43, 0.015, 57, 10, 0.005, -3, 17, 0.006, -6, 37, 0.010, -7, -50, 0.002, 30, 132, 0.001, 60, 19, 0.001, 17, -11, 0.001, 32, 105, 0.019, 31, -110, 0.008, 28, 36, 0.002, 8, -9, 0.014, -30, -62, 0.001, -15, 34, 0.031, 55, 73, 0.003, 51, 70, 0.001, -3, 119, 0.002, 31, 67, 0.006, 28, -109, 0.004, 27, 64, 0.003, 4, 9, 0.033, 21, 90, 0.012, -1, 18, 0.002, -2, -77, 0.002, -5, -49, 0.003, -8, 141, 0.001, 46, 18, 0.018, 43, 116, 0.001, 22, 28, 0.000, -17, -45, 0.002, -2, 30, 0.127, -6, 105, 0.041, -25, 29, 0.010, 46, -95, 0.003, -11, 39, 0.013, 57, 50, 0.003, 37, 59, 0.009, 33, 56, 0.001, 28, 96, 0.004, 9, 30, 0.006, -10, 28, 0.003, -33, -71, 0.026, -15, 36, 0.035, 56, 22, 0.008, 37, -84, 0.016, -4, -79, 0.025, 13, -14, 0.015, 9, -5, 0.017, 46, 131, 0.052, 43, -97, 0.002, 24, 39, 0.004, 0, 29, 0.018, -23, 30, 0.002, 47, 51, 0.001, 43, 48, 0.014, 24, -106, 0.003, 23, 45, 0.005, 1, 101, 0.016, 15, 98, 0.011, -23, -69, 0.001, 14, -61, 0.008, 11, 31, 0.007, -9, -36, 0.031, 25, 80, 0.095, 62, 66, 0.003, 58, 69, 0.004, 38, 76, 0.002, 35, 118, 0.216, 37, 111, 0.048, 15, -13, 0.005, 11, -16, 0.001, 10, 25, 0.005, -9, 114, 0.113, 5, -54, 0.001, 53, 75, 0.002, 49, 72, 0.001, 29, 49, 0.033, 44, 144, 0.002, 25, 46, 0.005, 5, 47, 0.002, 2, 15, 0.002, -18, -50, 0.005, -19, 37, 0.008, 48, 100, 0.000, 26, 120, 0.158, -12, -73, 0.001, 40, 87, 0.000, 39, -84, 0.089, 36, 26, 0.001, 35, -79, 0.021, 12, 16, 0.007, -7, 110, 0.119, -12, 38, 0.004, 59, 32, 0.003, 39, 61, 0.002, 36, -87, 0.012, 35, 66, 0.006, 30, -109, 0.001, -8, -38, 0.014, 7, 44, 0.005, 39, 78, 0.012, 54, 60, 0.007, 30, 62, 0.010, 18, 111, 0.020, 26, 73, 0.042, 7, -3, 0.014, 17, -77, 0.011, -3, -56, 0.003, 12, 125, 0.025, -7, -55, 0.000, -27, -66, 0.001, 45, 65, 0.000, 41, 62, 0.008, -21, 149, 0.001, 30, 96, 0.001, -37, -65, 0.000, 45, -110, 0.001, -16, -62, 0.001, -35, 136, 0.001, -20, -67, 0.000, 54, 101, 0.002, 32, 61, 0.003, 31, -90, 0.006, 28, 64, 0.002, 8, 27, 0.002, -16, 17, 0.002, 55, 13, 0.065, 31, 23, 0.002, 28, -81, 0.071, 42, -86, 0.009, 21, 110, 0.090, -1, 38, 0.087, 33, 118, 0.185, -6, 142, 0.001, 65, 20, 0.000, 46, 46, 0.000, 43, 80, 0.002, 45, 133, 0.010, 22, 56, 0.002, 52, -105, 0.001, 9, -71, 0.004, 46, -67, 0.003, -14, 20, 0.001, 57, 14, 0.006, 56, 11, 0.017, 52, 6, 0.088, -38, 176, 0.009, 24, 92, 0.290, -33, 151, 0.001, 34, 130, 0.001, 44, 48, 0.000, 24, 75, 0.082, 67, 34, 0.002, 13, 107, 0.003, 44, -65, 0.002, 43, 44, 0.025, 58, -6, 0.001, 20, -75, 0.040, 1, 129, 0.001, 11, 27, 0.005, 14, 49, 0.007, -13, 29, 0.034, 49, 109, 0.000, 58, 41, 0.002, -37, -63, 0.002, 34, 51, 0.024, 49, 83, 0.009, 11, -84, 0.008, -8, 122, 0.000, 10, 45, 0.002, -18, 31, 0.021, -19, -68, 0.001, 53, 31, 0.015, 5, 19, 0.002, 48, 88, 0.003, -12, -61, 0.007, -32, -58, 0.006, 40, 59, 0.004, 39, -112, 0.000, 36, 54, 0.024, 16, 49, 0.001, 50, 129, 0.005, 12, 76, 0.133, -20, 26, 0.001, 39, 33, 0.049, -8, -34, 0.066, 29, 108, 0.096, 7, 16, 0.006, 3, -51, 0.000, -17, 26, 0.003, -20, 46, 0.003, 54, 24, 0.021, 30, 42, 0.001, 6, 36, 0.010, -25, -54, 0.007, 12, 121, 0.002, 41, 42, 0.018, -29, -57, 0.001, 21, -157, 0.023, 18, 99, 0.031, 36, 130, 0.020, 17, 32, 0.001, 32, 114, 0.097, -6, -35, 0.043, -7, 22, 0.014, 27, -106, 0.001, 45, -74, 0.014, 42, 108, 0.001, 4, -77, 0.002, 41, -73, 0.081, -16, -74, 0.001, 21, -76, 0.010, 52, 102, 0.000, 31, 10, 0.001, -25, -61, 0.001, 9, 119, 0.007, 46, -1, 0.020, -1, 74, 0.001, 5, -9, 0.008, -29, 25, 0.009, 42, 13, 0.047, 4, 96, 0.004, 18, 39, 0.001, 33, -1, 0.002, -5, -72, 0.001, -30, 152, 0.001, -1, -80, 0.015, -18, -58, 0.000, 22, 99, 0.009, 52, 18, 0.027, 13, 41, 0.012, -10, -44, 0.001, 24, 96, 0.011, 23, -109, 0.003, 33, -99, 0.001, 44, 44, 0.025, 43, -9, 0.001, -4, 24, 0.014, 13, 79, 0.101, 47, 11, 0.026, 44, -69, 0.009, 62, 15, 0.000, 23, 117, 0.369, 38, 17, 0.023, 0, -52, 0.000, 34, -120, 0.007, 14, 11, 0.002, 10, 2, 0.012, 47, 92, 0.000, 62, 10, 0.001, 14, 22, 0.002, 29, 12, 0.001, -9, -75, 0.002, -13, -70, 0.001, 20, 95, 0.041, 49, 0, 0.016, 48, 37, 0.011, 5, 39, 0.026, 35, -96, 0.006, -19, 45, 0.002, -22, -175, 0.002, 48, 124, 0.010, 63, 42, 0.000, 40, 31, 0.041, 16, 37, 0.012, -8, 19, 0.004, 26, -97, 0.010, 7, 99, 0.008, -32, 25, 0.001, 40, -82, 0.027, 36, -79, 0.027, 17, 77, 0.089, -33, -64, 0.005, 50, 24, 0.020, 27, 103, 0.043, -17, 46, 0.002, 51, 78, 0.001, 53, 87, 0.011, 50, -121, 0.000, 30, 6, 0.001, 7, -59, 0.001, 21, -14, 0.000, -17, -65, 0.004, -6, 18, 0.012, 30, 117, 0.110, 64, 53, 0.001, 45, 9, 0.083, 60, 56, 0.000, 41, -122, 0.001, 17, 28, 0.001, -17, -51, 0.002, 31, -83, 0.008, -7, 34, 0.005, -26, -64, 0.002, 41, -93, 0.019, 52, 114, 0.012, 51, 41, 0.007, 28, -8, 0.001, 4, 30, 0.002, -20, 36, 0.006, 32, -84, 0.012, 31, 79, 0.005, 46, 43, 0.003, 8, -78, 0.001, -34, 117, 0.001, 19, 41, 0.002, 6, -4, 0.019, -2, 23, 0.004, -5, 35, 0.020, -6, 134, 0.001, 57, 101, 0.000, 19, -102, 0.031, 37, 34, 0.016, -2, 114, 0.007, -10, 29, 0.006, -11, 21, 0.001, 0, 101, 0.018, -34, 23, 0.007, 56, 51, 0.005, 37, 7, 0.001, 52, 46, 0.004, 33, -116, 0.019, 13, 13, 0.007, 47, -67, 0.001, 46, 88, 0.001, -11, 27, 0.006, 56, 98, 0.001, 47, 14, 0.022, 44, 8, 0.030, 0, 12, 0.001, 23, 40, 0.005, 19, 101, 0.024, 34, -103, 0.002, -23, -46, 0.040, 44, -105, 0.001, 58, 50, 0.020, 20, -99, 0.033, 38, 45, 0.021, 34, 44, 0.011, 10, -10, 0.005, -9, 40, 0.002, 38, -96, 0.002, 34, -5, 0.078, 15, -97, 0.000, 49, 43, 0.002, 48, -70, 0.001, -9, 132, 0.000, 2, 44, 0.007, 1, 23, 0.003, 16, 107, 0.009, 53, -9, 0.005, 26, 97, 0.001, 40, 116, 0.061, 38, 122, 0.034, 16, -6, 0.001, 12, -11, 0.005, 49, -119, 0.007, -31, 23, 0.000, 23, 102, 0.025, 36, -2, 0.012, 7, 135, 0.001, -31, -56, 0.003, 6, -70, 0.002, 3, 12, 0.036, 40, -110, 0.001, 39, 105, 0.001, 54, 61, 0.006, 50, 60, 0.002, 30, 55, 0.003, 26, 38, 0.003, 41, 84, 0.007, 3, 21, 0.011, 2, 112, 0.010, 51, 122, 0.002, 12, 98, 0.000, -13, -41, 0.005, -3, 20, 0.003, -6, 38, 0.010, -7, -51, 0.002, -27, 26, 0.008, 42, 145, 0.002, 60, 20, 0.001, 32, 106, 0.060, 31, -111, 0.004, 28, 37, 0.002, 8, -8, 0.013, -30, -65, 0.002, -35, 20, 0.004, 55, 72, 0.002, 51, 69, 0.002, -3, 114, 0.006, 31, 66, 0.023, 28, -108, 0.001, 27, 63, 0.004, 42, -77, 0.010, 4, 10, 0.036, 21, 89, 0.055, -1, 17, 0.001, -3, -46, 0.002, -5, -50, 0.001, 43, 115, 0.000, -2, 35, 0.039, -6, 106, 0.113, -25, 28, 0.003, 46, -94, 0.003, -4, -51, 0.001, 57, 49, 0.003, 37, 54, 0.001, 33, 55, 0.001, -9, 148, 0.002, 28, 97, 0.001, 9, 29, 0.009, -10, 25, 0.003, -15, 35, 0.048, 56, 23, 0.007, 37, -85, 0.010, 34, 91, 0.000, -4, -78, 0.004, 13, -15, 0.022, 46, 132, 0.034, 43, -98, 0.001, 24, 40, 0.004, -4, 138, 0.003, 0, 30, 0.049, -23, 29, 0.003, -30, -53, 0.014, 47, 50, 0.001, 43, 47, 0.019, 24, -105, 0.005, 23, 76, 0.101, 1, 104, 0.195, -4, -48, 0.002, 14, -60, 0.006, 11, 30, 0.007, -9, -37, 0.009, 25, 79, 0.102, -13, 24, 0.001, 38, 73, 0.001, 35, 117, 0.260, 37, 122, 0.098, 15, -14, 0.004, 10, 26, 0.003, 5, -55, 0.011, 1, -58, 0.000, 53, 70, 0.007, 29, 52, 0.019, 44, 145, 0.001, 25, 45, 0.005, 2, 16, 0.001, -18, -45, 0.001, -8, -75, 0.001, 26, 117, 0.051, -12, -72, 0.001, 25, -98, 0.015, 40, 88, 0.000, 39, -85, 0.016, 36, 27, 0.000, 50, 94, 0.000, 12, 17, 0.007, -7, 109, 0.219, -12, 39, 0.006, 62, 131, 0.000, 59, 31, 0.082, 39, 60, 0.002, 36, -86, 0.036, 35, 65, 0.014, 30, -108, 0.001, -8, -37, 0.015, 7, 43, 0.005, 39, 77, 0.027, -20, 47, 0.021, 54, 57, 0.036, 30, 67, 0.032, 26, 74, 0.065, 7, -4, 0.021, -3, -57, 0.001, 12, 126, 0.010, 45, 68, 0.000, 41, 61, 0.043, 21, 74, 0.105, 30, 93, 0.001, 45, -111, 0.002, 42, 133, 0.005, -29, -63, 0.002, -20, -66, 0.004, 54, 102, 0.001, -40, -71, 0.002, 32, 62, 0.002, 31, -91, 0.004, 28, 65, 0.002, 8, 28, 0.007, -16, 18, 0.001, 55, 44, 0.012, 32, -83, 0.015, 31, 22, 0.008, 28, -80, 0.016, 9, 78, 0.146, 42, -89, 0.019, 21, 109, 0.026, -1, 37, 0.078, 33, 117, 0.210, -6, 155, 0.002, 43, 79, 0.003, 45, 136, 0.000, 42, 58, 0.001, 4, 117, 0.003, 22, 53, 0.002, 52, -104, 0.001, 9, -68, 0.018, 46, -66, 0.001, -14, 17, 0.011, 57, 13, 0.021, 0, 100, 0.022, 52, 7, 0.059, 10, 122, 0.005, -33, -57, 0.002, 24, 85, 0.181, -33, 150, 0.001, 34, 127, 0.022, -5, 117, 0.001, -24, -55, 0.003, 43, -102, 0.001, 24, 76, 0.069, -10, -71, 0.000, 20, 71, 0.026, -36, -71, 0.018, 67, 33, 0.003, 13, 102, 0.049, 44, -64, 0.003, 43, 43, 0.012, 23, 80, 0.084, 20, -74, 0.009, 0, -79, 0.014, 11, 26, 0.009, -13, 36, 0.002, 61, 24, 0.011, 58, 42, 0.003, -10, 126, 0.006, 34, 52, 0.021, 49, 86, 0.001, 11, -85, 0.009, 48, -93, 0.001, 10, 46, 0.001, -18, 32, 0.039, -19, -69, 0.004, 53, 42, 0.006, 29, 24, 0.001, 5, 118, 0.010, 5, 14, 0.003, 14, 39, 0.034, 48, 129, 0.006, -12, -60, 0.002, -32, -57, 0.003, 40, 60, 0.003, 36, 55, 0.026, 16, 50, 0.003, 50, 130, 0.002, 12, 45, 0.012, -45, -68, 0.000, 39, 32, 0.020, 29, 107, 0.298, 7, 15, 0.003, -17, 25, 0.001, 54, 21, 0.025, 53, 94, 0.001, 30, 31, 0.197, 6, 33, 0.004, 12, 122, 0.019, 64, 34, 0.000, 41, 41, 0.002, 18, 100, 0.040, 17, 31, 0.001, 51, -109, 0.000, 32, 115, 0.139, -7, 21, 0.015, 27, -107, 0.003, 45, -75, 0.039, 4, -76, 0.020, 41, -70, 0.018, 3, 127, 0.001, -16, -73, 0.001, 21, -77, 0.017, 52, 103, 0.001, -40, -67, 0.001, 31, 9, 0.002, 32, -111, 0.010, 31, 122, 0.593, 46, 0, 0.018, 18, -11, 0.001, -36, 151, 0.002, 42, 14, 0.027, 4, 97, 0.017, 6, 6, 0.062, 33, 2, 0.001, -5, -73, 0.008, -15, -50, 0.001, 22, 100, 0.018, 0, 120, 0.001, 52, 19, 0.028, 13, 44, 0.063, 47, -88, 0.001, -10, -47, 0.001, 24, 121, 0.108, 23, -110, 0.003, 33, -96, 0.028, -13, 38, 0.001, 44, 13, 0.026, -4, 25, 0.005, 47, 10, 0.055, 44, -68, 0.005, 62, 16, 0.001, 23, 116, 0.130, 38, 18, 0.000, -38, -59, 0.004, 14, 12, 0.001, -36, 145, 0.001, 10, -1, 0.014, 47, 91, 0.001, -9, 123, 0.012, -40, 177, 0.005, 14, 27, 0.001, 48, -105, 0.000, 29, 11, 0.000, -9, -76, 0.004, -13, -71, 0.001, 20, 96, 0.064, 53, -2, 0.203, 49, -1, 0.011, 48, 38, 0.063, 38, 99, 0.001, 35, -97, 0.037, -19, 48, 0.071, 53, -109, 0.001, 48, 117, 0.000, 63, 41, 0.000, 40, 32, 0.028, 16, 38, 0.004, -4, -42, 0.009, -8, 20, 0.002, -12, -49, 0.001, -4, 31, 0.043, -32, 26, 0.001, 40, -81, 0.027, 36, -78, 0.012, 17, 80, 0.111, 50, 21, 0.045, 27, 102, 0.019, 26, 15, 0.001, 3, 48, 0.000, -17, 45, 0.001, 51, 77, 0.001, 50, -120, 0.003, 30, 11, 0.001, -33, -69, 0.006, 7, -60, 0.000, 41, -8, 0.097, 21, -15, 0.001, -17, -66, 0.003, -6, 15, 0.021, 30, 118, 0.100, -37, -72, 0.021, 64, 54, 0.000, 45, 12, 0.085, 60, 57, 0.000, 41, -123, 0.001, 17, 27, 0.001, -7, 33, 0.005, 3, 107, 0.001, 52, 115, 0.001, 51, 32, 0.021, 27, 34, 0.003, 4, 31, 0.006, -53, -70, 0.000, -1, 124, 0.002, 32, -91, 0.004, 31, 78, 0.057, 46, 44, 0.002, 8, -77, 0.002, -4, 142, 0.002, -34, 118, 0.000, 19, 32, 0.001, -2, 24, 0.004, -5, 34, 0.019, 69, 18, 0.000, 57, 104, 0.001, 19, -103, 0.023, 37, 33, 0.018, -2, 135, 0.001, -10, 30, 0.005, -14, -39, 0.021, -4, 115, 0.052, -34, 24, 0.002, 56, 52, 0.005, 52, 47, 0.004, 33, -117, 0.158, 13, 16, 0.004, -27, 152, 0.001, 47, -52, 0.006, 46, 85, 0.004, 24, 125, 0.002, -14, -52, 0.001, -34, -57, 0.003, 56, 99, 0.001, 47, 13, 0.024, 44, 9, 0.050, 24, -12, 0.000, 23, 39, 0.003, 34, -102, 0.002, -23, -47, 0.108, -42, 148, 0.003, 44, -104, 0.000, 58, 47, 0.001, 20, -98, 0.042, 38, 46, 0.022, 35, 80, 0.001, 34, 41, 0.008, 14, -24, 0.001, 10, 35, 0.007, -9, 39, 0.004, 61, 64, 0.001, 38, -99, 0.001, 34, -4, 0.047, 49, 14, 0.023, 48, -69, 0.001, 2, 41, 0.003, 1, 26, 0.002, 16, 108, 0.051, -22, 35, 0.003, 48, 74, 0.000, 26, 98, 0.001, 40, 109, 0.004, 38, 127, 0.065, 16, -5, 0.000, 50, 87, 0.000, 12, -10, 0.003, 49, -116, 0.001, -31, 26, 0.002, 40, 4, 0.000, -20, -40, 0.015, -31, -57, 0.003, 6, -65, 0.001, 3, 11, 0.010, 40, -109, 0.001, 39, 104, 0.003, 54, 62, 0.012, 50, 57, 0.002, 30, 56, 0.007, 26, 51, 0.021, 41, 83, 0.005, 3, 28, 0.004, -20, 29, 0.005, 51, 121, 0.001, 12, 99, 0.010, 45, 31, 0.000, 21, 37, 0.000, 18, 121, 0.015, -3, 19, 0.007, -7, -48, 0.003, -27, 25, 0.004, 17, -9, 0.000, 54, 111, 0.000, 32, 107, 0.068, 31, -112, 0.001, 28, 38, 0.002, -30, -64, 0.001, -35, 19, 0.040, 55, 71, 0.001, 52, 143, 0.000, 51, 76, 0.005, -3, 113, 0.009, 31, 65, 0.012, 28, -107, 0.004, 27, 62, 0.003, 42, -76, 0.018, 4, 11, 0.011, 22, -81, 0.015, 21, 92, 0.025, -1, 16, 0.002, -39, -67, 0.005, -2, -79, 0.034, -5, -51, 0.000, 43, 114, 0.001, 42, 67, 0.001, 22, 26, 0.000, -2, 36, 0.008, -25, 27, 0.003, 46, -105, 0.000, 57, 52, 0.002, 33, 58, 0.001, 28, 98, 0.001, 9, 32, 0.004, -10, 26, 0.004, -15, 38, 0.006, 56, 24, 0.012, 37, -90, 0.005, 34, 92, 0.000, -12, -63, 0.001, 13, -12, 0.002, 46, 129, 0.016, 43, -99, 0.001, 24, 33, 0.030, -14, -176, 0.000, 0, 31, 0.056, -23, 32, 0.002, 47, 49, 0.001, 43, 46, 0.032, 24, -104, 0.008, 23, 75, 0.105, 1, 103, 0.015, 15, 96, 0.009, 11, 29, 0.003, -43, -70, 0.000, -9, -38, 0.005, 25, 82, 0.255, -13, 23, 0.001, 38, 74, 0.000, 37, 121, 0.127, 15, -15, 0.007, 10, 23, 0.001, -32, 142, 0.001, 5, -52, 0.001, 53, 69, 0.002, 49, 74, 0.015, 29, 51, 0.009, 44, 146, 0.000, 25, 48, 0.003, 2, 13, 0.003, -18, -44, 0.006, -29, -49, 0.021, -8, -74, 0.003, 26, 118, 0.048, -12, -71, 0.000, 25, -99, 0.006, 40, 81, 0.006, 39, -86, 0.049, 36, 28, 0.003, 50, 123, 0.002, 12, 18, 0.004, -7, 112, 0.079, -12, 40, 0.009, 59, 30, 0.037, 39, 59, 0.003, 36, -85, 0.007, 35, 56, 0.002, -7, 157, 0.000, 30, -111, 0.001, -8, -36, 0.010, 7, 42, 0.002, -17, 36, 0.039, 54, 58, 0.003, 50, 61, 0.000, 30, 68, 0.019, 26, 71, 0.008, 7, -5, 0.025, -26, 27, 0.007, -27, -64, 0.004, 45, 67, 0.001, 41, 64, 0.000, 21, 73, 0.164, 57, -3, 0.003, 30, 94, 0.001, 45, -108, 0.004, 42, 134, 0.000, -16, -60, 0.000, 21, -102, 0.037, -20, -65, 0.010, -40, -70, 0.000, 32, 63, 0.006, 28, 66, 0.002, 8, 21, 0.000, -16, 19, 0.000, 55, 43, 0.013, 32, -82, 0.006, 31, 21, 0.018, 9, 77, 0.260, 42, -88, 0.053, 19, 55, 0.000, 21, 112, 0.080, 33, 120, 0.235, -6, 156, 0.001, 65, 22, 0.002, 43, 78, 0.015, 45, 135, 0.001, 4, 118, 0.012, 22, 54, 0.003, 52, -103, 0.000, 9, -69, 0.032, -14, 18, 0.008, 57, 16, 0.003, 52, 8, 0.045, 10, 119, 0.002, 24, 86, 0.192, -33, 149, 0.002, 34, 128, 0.027, -5, 124, 0.002, -24, -54, 0.004, 47, -124, 0.000, 43, -103, 0.001, 24, 69, 0.047, -11, 121, 0.001, 20, 72, 0.008, 13, 101, 0.354, 44, -63, 0.012, 43, 42, 0.007, 23, 79, 0.070, 38, -5, 0.005, 0, -78, 0.017, 11, 25, 0.008, -9, -34, 0.056, 25, 110, 0.042, -13, 35, 0.007, 61, 23, 0.003, 58, 39, 0.001, 34, 49, 0.042, 49, 85, 0.003, 11, -86, 0.028, 20, 85, 0.052, -18, 29, 0.009, 53, 41, 0.005, 5, 13, 0.004, 48, 130, 0.013, 63, 20, 0.001, -32, -56, 0.003, 40, 53, 0.002, 36, 56, 0.004, 16, 51, 0.001, 50, 127, 0.005, 12, 46, 0.008, 39, 31, 0.017, 54, 11, 0.022, 16, -62, 0.000, 29, 102, 0.004, 7, 14, 0.005, 41, 126, 0.027, -17, 24, 0.002, 54, 22, 0.009, 53, 93, 0.001, 30, 32, 0.714, 6, 34, 0.002, 12, 123, 0.008, 64, 35, 0.001, 41, 44, 0.015, 18, 97, 0.036, 17, 34, 0.004, -21, 119, 0.000, 32, 116, 0.195, -7, 24, 0.063, 27, -100, 0.001, 45, -72, 0.014, 41, -71, 0.052, 3, 126, 0.005, -16, -72, 0.002, 21, -82, 0.002, 52, 104, 0.014, -40, -66, 0.001, 32, 35, 0.070, 31, 8, 0.001, 32, -110, 0.022, 31, 121, 0.303, -29, -66, 0.002, -38, 144, 0.004, 42, 27, 0.015, 4, 98, 0.021, 19, -76, 0.001, 18, 37, 0.006, 33, 1, 0.001, -5, -74, 0.001, 22, 97, 0.047, 0, 129, 0.001, 52, 20, 0.027, 13, 43, 0.001, -10, -46, 0.001, 24, 122, 0.161, -9, 15, 0.006, -4, 129, 0.016, 33, -97, 0.013, 44, 14, 0.001, -8, 145, 0.001, -4, 26, 0.002, 47, 9, 0.103, -13, -50, 0.001, 23, 115, 0.122, 38, 23, 0.010, 14, 9, 0.013, 10, 0, 0.032, 47, 90, 0.001, 14, 28, 0.001, 5, -53, 0.000, -8, 128, 0.000, 29, 6, 0.001, -9, -77, 0.009, 20, 97, 0.038, 53, -3, 0.032, -3, 107, 0.011, 49, 2, 0.040, 48, 39, 0.079, 38, 100, 0.001, 35, -98, 0.003, -19, 47, 0.010, 53, -114, 0.002, 48, 118, 0.000, 40, 25, 0.004, 16, 39, 0.012, 26, -99, 0.003, -12, -48, 0.003, -32, 27, 0.006, 40, -80, 0.046, 36, -77, 0.006, 17, 79, 0.290, 50, 22, 0.037, 12, -71, 0.001, 27, 101, 0.013, 7, 50, 0.002, 41, 106, 0.001, 3, 47, 0.004, -16, 167, 0.001, -21, 49, 0.011, 51, 84, 0.001, 30, 12, 0.001, 7, -61, 0.001, 6, 126, 0.055, -25, -59, 0.001, -17, -67, 0.019, -6, 16, 0.017, 30, 123, 0.025, 8, 127, 0.015, 45, 11, 0.065, 60, 58, 0.000, -29, -54, 0.008, -6, -65, 0.000, -7, 36, 0.017, -26, -66, 0.000, 41, -107, 0.000, 52, 116, 0.001, 51, 31, 0.005, 32, -9, 0.008, 4, 32, 0.004, -53, -71, 0.000, -1, 123, 0.004, 32, -90, 0.017, 31, 77, 0.113, 46, 41, 0.008, 8, -76, 0.013, 19, 31, 0.001, -2, 21, 0.001, -5, 33, 0.015, 48, 95, 0.000, 5, -2, 0.026, -10, 148, 0.011, 37, 36, 0.039, -2, 136, 0.001, -10, 35, 0.013, -14, -38, 0.003, -18, -65, 0.007, -34, 21, 0.002, 56, 45, 0.016, 52, 48, 0.010, 13, 15, 0.004, 47, -53, 0.003, 46, 86, 0.002, 24, 126, 0.002, -14, -55, 0.000, -34, -56, 0.002, 56, 100, 0.000, -38, -61, 0.002, 47, 28, 0.040, 44, 10, 0.026, -11, 166, 0.000, 19, 107, 0.002, -23, -44, 0.031, -24, 33, 0.001, 44, -103, 0.004, 58, 48, 0.001, 20, -97, 0.052, 35, 79, 0.001, 34, 42, 0.004, 15, 28, 0.001, 10, 36, 0.003, -9, 38, 0.005, 61, 63, 0.001, 38, -98, 0.002, 49, 13, 0.025, 48, -68, 0.003, -2, 104, 0.034, 2, 42, 0.003, 1, 25, 0.004, 16, 101, 0.047, -22, 36, 0.001, 49, -98, 0.002, 48, 75, 0.000, 26, 95, 0.088, 40, 110, 0.046, 2, -71, 0.001, 1, 10, 0.003, 38, 128, 0.038, 16, -4, 0.001, 12, -9, 0.005, 49, -117, 0.002, 63, 76, 0.003, -31, 25, 0.001, 40, -3, 0.185, 35, 27, 0.001, -17, 146, 0.004, -31, -54, 0.003, 3, 10, 0.022, 39, 103, 0.002, 54, 67, 0.002, 50, 58, 0.010, 30, 53, 0.010, 27, 129, 0.002, 6, 47, 0.004, 3, 27, 0.003, 51, 112, 0.001, 12, 100, 0.016, 45, 26, 0.039, 21, 40, 0.014, 18, 122, 0.015, -14, -45, 0.001, -3, 14, 0.001, -7, -49, 0.003, 30, 87, 0.000, -27, 28, 0.122, 42, 143, 0.006, 60, 22, 0.002, 32, 108, 0.051, -17, -40, 0.005, 31, -113, 0.001, 28, 39, 0.001, -30, -67, 0.002, 55, 70, 0.002, 51, 75, 0.000, -3, 116, 0.033, 31, 64, 0.003, 28, -106, 0.013, 27, 61, 0.002, 42, -79, 0.011, 4, 12, 0.019, 22, -80, 0.029, 21, 91, 0.010, -1, 15, 0.001, -2, -78, 0.032, -5, -44, 0.014, 43, 113, 0.002, 42, 68, 0.001, 6, -3, 0.023, -2, 33, 0.001, -6, 104, 0.002, -25, 26, 0.008, -28, -61, 0.002, 57, 51, 0.002, 37, 56, 0.016, 33, 57, 0.000, 28, 99, 0.002, 9, 31, 0.005, -15, 37, 0.007, 22, 121, 0.100, 56, 17, 0.003, 37, -91, 0.003, 13, -13, 0.006, 46, 130, 0.022, 43, -92, 0.005, 24, 34, 0.003, -22, 166, 0.001, 0, 32, 0.037, -23, 31, 0.023, -5, 144, 0.003, 47, 48, 0.001, 43, 45, 0.024, 24, -111, 0.002, 23, 74, 0.113, 15, 95, 0.004, 11, 36, 0.002, -43, -71, 0.001, -9, -39, 0.006, 25, 81, 0.124, -13, 22, 0.001, 15, -16, 0.024, 48, -119, 0.001, 10, 24, 0.005, 5, 38, 0.027, 20, 122, 0.000, 53, 72, 0.001, 49, 73, 0.016, -1, -48, 0.004, 29, 46, 0.002, -9, 127, 0.006, 25, 47, 0.005, 2, 14, 0.003, -18, -47, 0.002, -19, 34, 0.007, 49, -102, 0.001, -8, -73, 0.002, -12, -70, 0.000, 40, 82, 0.009, 39, -87, 0.009, 50, 124, 0.001, 12, 19, 0.002, -7, 111, 0.140, 7, 152, 0.002, 62, 129, 0.001, 59, 29, 0.006, 39, 58, 0.002, 36, -84, 0.010, 35, 55, 0.002, 30, -110, 0.002, -8, -43, 0.002, 7, 41, 0.017, -17, 35, 0.015, 54, 31, 0.012, 50, 62, 0.000, 30, 65, 0.002, 26, 72, 0.010, 7, -6, 0.022, -27, -50, 0.009, -26, 28, 0.030, -27, -65, 0.032, 45, 62, 0.001, 41, 63, 0.002, 21, 76, 0.101]]];
	exports.default = json;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "globalPersonData.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _themeDesc = __webpack_require__(245);

	var _themeDesc2 = _interopRequireDefault(_themeDesc);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ThemeDesc = function (_Component) {
		_inherits(ThemeDesc, _Component);

		function ThemeDesc() {
			_classCallCheck(this, ThemeDesc);

			return _possibleConstructorReturn(this, (ThemeDesc.__proto__ || Object.getPrototypeOf(ThemeDesc)).apply(this, arguments));
		}

		_createClass(ThemeDesc, [{
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					null,
					_react2.default.createElement(
						'div',
						{ className: _themeDesc2.default["theme-title"] },
						this.props.title
					)
				);
			}
		}]);

		return ThemeDesc;
	}(_react.Component);

	exports.default = ThemeDesc;

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(246);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./themeDesc.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./themeDesc.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._1wtPWO-6T28kP6WVBgbyZS{\r\n\twidth:230px;\r\n\theight:40px;\r\n\tposition: absolute;\r\n\ttop: 80px;\r\n\tleft:100px;\r\n\tbackground: #ebebeb;\r\n\tborder:1px solid #b8b8b8;\r\n\tborder-left-width: 0px;\r\n\tcolor: #009999;\r\n\t    box-sizing: border-box;\r\n\t    border-top-right-radius:5px;\r\n\t    border-bottom-right-radius:5px;\r\n\t    line-height: 40px;\r\n\t    text-align: center;\r\n\t    font-size: 18px;\r\n}\r\n._2NyJI9RSvqgYZJvsftcZMu{\r\n\tposition: absolute;\r\n    top: 121px;\r\n    left: 40px;\r\n    background: #ebebeb;\r\n    width: 278px;\r\n    border:1px solid #b8b8b8;\r\n    border-radius: 5px;\r\n    line-height: 30px;\r\n    text-indent: 30px;\r\n    font-size: 15px;\r\n    padding: 5px;\r\n}", ""]);

	// exports
	exports.locals = {
		"theme-title": "_1wtPWO-6T28kP6WVBgbyZS",
		"theme-desc": "_2NyJI9RSvqgYZJvsftcZMu"
	};

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	    return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () {
	    function defineProperties(target, props) {
	        for (var i = 0; i < props.length; i++) {
	            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	        }
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	}();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _tianjin = __webpack_require__(248);

	var _tianjin2 = _interopRequireDefault(_tianjin);

	var _timeLine = __webpack_require__(249);

	var _timeLine2 = _interopRequireDefault(_timeLine);

	function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	}

	function _possibleConstructorReturn(self, call) {
	    if (!self) {
	        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	    }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	    if (typeof superClass !== "function" && superClass !== null) {
	        throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var Explosion = function (_Component) {
	    _inherits(Explosion, _Component);

	    function Explosion(props) {
	        _classCallCheck(this, Explosion);

	        var _this = _possibleConstructorReturn(this, (Explosion.__proto__ || Object.getPrototypeOf(Explosion)).call(this, props));

	        _this.state = {
	            currentObj: [],
	            max: '62',
	            maxtime: '00:32:30',
	            min: '0',
	            mintime: '22:57:43',
	            value: '0',
	            currentVal: '',
	            clock: 'obj',
	            mark: 1,
	            desc: "2015年8月12日23:30左右，位于天津市滨海新区天津港的瑞海公司危险品仓库发生火灾爆炸事故，造成165人遇难，798人受伤，304幢建筑物、12428辆商品汽车、7533个集装箱受损。",
	            take: 0
	        };
	        return _this;
	    }

	    _createClass(Explosion, [{
	        key: 'valueChange',
	        value: function valueChange() {
	            var re = this;
	            this.setState({
	                currentVal: document.querySelector('.range').value,
	                take: Number(document.querySelector('.range').value)
	            });
	            var currentTake = Number(document.querySelector('.range').value);
	            // re.state.take == 0 ? re.state.take = 62 : re.state.take;
	            if (re.state.take < currentTake && re.state.take != 0) {
	                //添加
	                var markerpoint = new GeoVis.PointMarker([_tianjin2.default[re.state.take][1], _tianjin2.default[re.state.take][2], 0], { id: 'marker_' + re.state.take, color: GeoVis.Color.RED });
	                markerpoint.addTo(window.earth.features);
	                markerpoint.bindPopup("<b>" + _tianjin2.default[re.state.take][0] + "</b><br>" + _tianjin2.default[re.state.take][4] + "", {
	                    maxWidth: 120
	                });
	                markerpoint.showPopup();
	                re.state.currentObj.push(markerpoint);
	            } else if (re.state.take != 0) {
	                //删除  
	                var removeNum = re.state.take - 1 < 0 ? 0 : re.state.take;
	                re.state.currentObj[removeNum].removeFrom(window.earth.features);
	                re.state.currentObj.splice(re.state.take, 1);
	            }
	            if (Number(document.querySelector('.range').value) == 0) {
	                re.state.currentObj.map(function (val, index) {
	                    val.removeFrom(window.earth.features);
	                });
	            }
	        }
	    }, {
	        key: 'actionValue',
	        value: function actionValue(event) {
	            var re = this;
	            //开始暂停      
	            if (event.target.src.slice(event.target.src.indexOf("assets")) == 'assets/bobo.png') {
	                clearInterval(re.clock);
	            } else {
	                var i = this.state.take;
	                var dataLength = _tianjin2.default.length > 2000 ? 2000 : _tianjin2.default.length;

	                re.clock = setInterval(function () {
	                    if (Number(document.querySelector('.range').value) >= Number(re.state.max) - 1) {
	                        clearInterval(re.clock);
	                    }

	                    re.setState({
	                        currentVal: document.querySelector('.range').value
	                    });

	                    var markerpoint = new GeoVis.PointMarker([_tianjin2.default[i][1], _tianjin2.default[i][2], 0], { id: 'marker_' + i, color: GeoVis.Color.RED });
	                    markerpoint.addTo(window.earth.features);
	                    markerpoint.bindPopup("<b>" + _tianjin2.default[i][0] + "</b><br>" + _tianjin2.default[i][4] + "", {
	                        maxWidth: 120
	                    });
	                    markerpoint.showPopup();
	                    re.state.currentObj.push(markerpoint);
	                    i++;
	                    document.querySelector('.range').value++;
	                }, 500);
	            }
	        }
	    }, {
	        key: 'initImg',
	        value: function initImg(id, callback) {
	            fetch('http://192.168.48.3:8690/remotedatasource/' + id, {
	                method: "POST"
	            }).then(function (res) {
	                if (res.status !== 200) {
	                    console.log(res.status);return;
	                }
	                res.json().then(function (data) {

	                    callback(data);
	                });
	            }).catch(function (err) {
	                console.log(err);
	            });
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var re = this;
	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(117.56, 39.01, 120000.0)
	            });
	            re.initImg(1, function (data) {
	                var a = data.remotedatasource.url;
	                a = a.replace('[abc]', 'a');
	                var layer = new GeoVis.TileLayer(a, { projection: 'EPSG:900913' }).addTo(window.earth.layers);
	            });
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.map(function (val, index) {
	                val.removeFrom(window.earth.features);
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null, _react2.default.createElement(_timeLine2.default, { max: this.state.max, maxtime: this.state.maxtime, min: this.state.min, mintime: this.state.mintime, value: this.state.value, nowVal: this.state.currentVal, valChange: this.valueChange.bind(this), actionVal: this.actionValue.bind(this) }));
	        }
	    }]);

	    return Explosion;
	}(_react.Component);

	exports.default = Explosion;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "tianJinExplosion.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var data = '\u4E8C\u697C\u9662\u957F\t117.726656\t39.043367\t2015-08-12 22:57:43\t\u4E1C\u6D77\u8DEF\u9644\u8FD1\u706B\u5149\u51B2\u5929\uFF0C\u8C01\u77E5\u9053\u600E\u4E48\u4E86?\t1\nblue\u65E0\u76D0\u5973\t117.390071\t39.055901\t2015-08-12 22:59:38\t\u5367\u69FD\u521A\u624D\u5B66\u6821\u5468\u56F4\u4E5F\u4E0D\u77E5\u9053\u662F\u54EA\u7740\u706B\u4E86\u628A\u5929\u90FD\u70E7\u7EA2\u4E86\u6211\u7AD9\u5341\u697C\u4E0A\u770B\u7684\u706B\u82D7\u7A9C\u7684\u8001\u9AD8\u4E86\u8001\u60CA\u609A\u4E86\u4F60\u4EEC\u90FD\u56DE\u5BB6\u4E86\u6CA1\u770B\u89C1\uFF01\t\n\u8587\u8587\u5B89\u70D8\u7119\u574A-\u5929\u6D25\t117.714969\t39.022775\t2015-08-12 23:24:28\t\u5F00\u53D1\u533A\u5929\u6D25\u6E2F\u65B9\u5411\u7740\u706B\u4E86\uFF0C\u79BB\u90A33\u91CC\u5730\u4E5F\u80FD\u770B\u89C1\u3002\u6700\u521D\u72B9\u5982\u767D\u663C\u822C\u7167\u4EAE\u4E86\u6211\u7684\u623F\u95F4\uFF0C\u79D1\u5E7B\u7535\u5F71\u5916\u661F\u4EBA\u6765\u7684\u8D76\u811A\uFF0C\u5E0C\u671B\u4E0D\u4F1A\u662F\u6709\u6BD2\u6C14\u4F53\uFF01\t\n\u5C0F\u5BF6\u6700\u7231\u65FB\u65FB\t117.214766\t39.103352\t2015-08-12 23:26:28\t\u91CD\u5927\u706B\u707E\uFF0C\u7206\u70B8\u58F0\u8DDF\u6253\u96F7\u4E00\u6837\uFF01 \t1\n\u732B\u67F3\u578B\u9AA8\u4F20\u5BFC\t117.693933\t39.103352\t2015-08-12 23:34:32\t\u6211\u9760\u5730\u9707\u4E86\uFF01\t1\n\u5858\u6CBD-\u6EE8\u6D77\u65B0\u533A\t117.674065\t39.024566\t2015-08-12 23:35:20\t\u4EC0\u4E48\u60C5\u51B5\uFF01\uFF01\uFF01\u7206\u70B8\u4E86\uFF01\uFF01\uFF01\t\nejjfjdj\t117.656534\t39.001288\t2015-08-12 23:37:04\t\u5929\u6D25\u5730\u9707\u4E86\u5417\uFF1F\t\n\u82E5\u6728\u82E5\u611A\t117.700945\t39.029937\t2015-08-12 23:39:11\t\u4EC0\u4E48\u7206\u70B8\u4E86\uFF1F\t\n\u90D1uknow_Rinka\t117.637835\t39.029937\t2015-08-12 23:40:03\t\u554A\u554A\u554A\u521A\u624D\u5858\u6CBD\u78A7\u6D77\u5E38\u4F4F\u9644\u8FD1\u662F\u4E0D\u662F\u7206\u70B8\u4E86\uFF01\uFF01\uFF01\uFF01\u5413\u4EBA\u3002\u505A\u7740\u8FD0\u52A8\u770B\u5230\u4E24\u5768\u8611\u83C7\u4E91\u3002\u6574\u4E2A\u5929\u90FD\u53D8\u6210\u6A59\u8272\u4E86\uFF01\uFF01\uFF01\t\n\u62BD\u5200\u65AD\u6C34\u6C34\u76F2\u6D41\t117.669390\t39.042472\t2015-08-12 23:40:47\t\u5858\u6CBD\u533A\u53D1\u751F\u5927\u7206\u70B8\uFF0C\u73B0\u573A\u6709\u5927\u4E2A\u513F\u7684\u8611\u83C7\u4E91\u3002\t\n\u591C\u7684\u9ED1v\t117.718475\t39.056796\t2015-08-12 23:41:18\t\u5929\u6D25\u6EE8\u6D77\u65B0\u533A\u8FD9\u8FB9\u4E0D\u77E5\u4EC0\u4E48\u5382\u623F\u53D1\u751F\u7279\u5927\u7206\u70B8\uFF0C\u70B8\u4E86\u56DB\u58F0\uFF0C\u6211\u4EEC\u516C\u53F8\u9644\u8FD1\u5BBF\u820D\u98DF\u5802\u73BB\u7483\u5168\u90E8\u9707\u788E\uFF0C\u592A\u6050\u6016\u4E86\uFF0C\u707E\u96BE\u7247\u4E00\u6837\uFF0C\u9644\u8FD1\u4EBA\u5168\u90E8\u758F\u6563\u4E86\u3002\u3002\u3002\u3002\u3002\t\nyovela\u6211\u8981\u73AF\u6E38\u4E16\u754C\t117.663547\t39.003078\t2015-08-12 23:42:19\t\u521A\u624D\u7206\u70B8\u4E86\uFF0C\u770B\u65B9\u5411\u662F\u5F00\u53D1\u533A\u516D\u8857\u5DE6\u53F3\u3002\t\n\u85CD\u8272\u7684\u5E74\t117.678740\t39.029937\t2015-08-12 23:43:09\t\u5858\u6CBD\u521A\u7206\u70B8\u4E86\uFF01\u6211\u521A\u5F00\u59CB\u8FD8\u4EE5\u4E3A\u662F\u5730\u9707\u5462\uFF01\u770B\u5230\u8611\u83C7\u4E91\u4E86\uFF01\t\nO_o\u9999\u7682\t117.594593\t39.036204\t2015-08-12 23:44:11\t\u4EC0\u4E48\u60C5\u51B5\uFF01\uFF01\uFF01\uFF01 \u4E0D\u662F\u5730\u9707\u554A\uFF01\u54EA\u70B8\u4E86\uFF1F\uFF01\uFF1F\uFF01\u7A97\u6237\u90FD\u560E\u5566\u560E\u5566\u54CD\u4E86\uFF01\u5413\u6B7B\u4EBA\u4E86\uFF01\t\n\u6709\u4E8B\u6CA1\u4E8Ba\t117.644847\t39.039786\t2015-08-12 23:45:17\t\u5929\u6D25\u5858\u6CBD\u5F00\u53D1\u533A\u6709\u7206\u70B8\u554A\uFF01\t\n\u4F9D\u7136\u611B\u590F\u7684Angel\t117.595762\t39.042472\t2015-08-12 23:46:10\t\u6211\u4EE5\u4E3A\u5730\u9707\u6765\u4E86\u6211\u4F1A\u4E0D\u77E5\u9053\u5462\u2026\u2026\u6CA1\u60F3\u5230\u77AC\u95F4\u53CD\u5E94\u2026\u2026\u60F3\u7A7F\u597D\u8863\u670D\uFF0C\u60F3\u4E09\u89D2\u533A\u5728\u54EA\u2026\u2026\u60F3\u600E\u4E48\u8DD1\u2026\u2026\u4E00\u79D2\u6211\u4E5F\u662F\u60F3\u7684\u633A\u591A\u7684\t\n\u6211\u671B\u773C\u6B32\u7A7F\u770B\u6211\u770B\u4E0D\u5230\u7684\u4F60o\t117.733669\t38.996811\t2015-08-12 23:46:19\t\u5929\u6D25\u65B0\u6E2F\u53D1\u751F\u5927\u4E8B\u4E86\u3002\u8D77\u521D\u5929\u4EAE\u4E86\u6211\u4EE5\u4E3A\u8981\u4E0B\u96E8\u4E86\uFF0C\u7136\u540E\u7A81\u7136\u5192\u51FA\u4E00\u4E2A\u53D1\u5149\u7684\u4E1C\u897F\u5728\u7A7A\u4E2D\u7206\u70B8\u4E86\u3002\t\n\u84B2\u7B56Albert\t117.177367\t39.087237\t2015-08-12 23:47:41\t\u5929\u6D25\u5858\u6CBD\u6EE8\u6D77\u65B0\u533A\u53D1\u751F\u7206\u70B8\u4E8B\u4EF6\uFF01\uFF01\uFF01\u9707\u611F\u5F3A\u70C8\uFF01\uFF01\u5E0C\u671B\u4E0D\u8981\u51FA\u73B0\u4EBA\u5458\u4F24\u4EA1\uFF01\u7948\u7977\u7948\u7977\uFF01\uFF01\t\n\u6CF0\u5434\u554A\u6296\u6296\u6296\t117.662378\t39.056796\t2015-08-12 23:51:01\t\u73B0\u5728\u4E3A\u5927\u5BB6\u76F4\u64AD! \u6839\u636E\u7A7A\u95F4\u62A5\u9053\uFF0C\u4F4D\u4E8E\u5929\u6D25\u6EE8\u6D77\u65B0\u533A\u5F00\u53D1\u533A\u7684\u52A0\u6CB9\u7AD9\u572811\u70B930\u5DE6\u53F3\u7206\u70B8\u3002\t\n\u674E\u65B9\u667A\u4E28Winner\t117.707957\t39.009346\t2015-08-12 23:51:16\t\u8FD9\u4E48\u662F\u4EC0\u4E48\u4E1C\u897F\u7206\u70B8\u4E86\uFF1F\u706B\u5149\u51B2\u5929\uFF01\u5BBF\u820D\u7684\u5929\u82B1\u677F\u90FD\u9707\u6389\u4E86\u3002\t\n\u5C0F\u5C0F\u76FC\u840C\u840C\u54D2\t117.657703\t39.055006\t2015-08-12 23:51:25\t\u5929\u6D25\u5F00\u53D1\u533A\u7740\u706B\u4E86\uFF0C\u7ED3\u679C\u6211\u5BB6\u8FD9\u8FB9\u9AD8\u65B0\u533A\u9707\u611F\u5341\u8DB3\uFF01\uFF01\t\nRoller_Evil\t117.744187\t39.122153\t2015-08-12 23:51:52\t\u521A\u7761\u7740\u88AB\u70B8\u9192\uFF0C\u73BB\u7483\u5DEE\u70B9\u788E\u697C\u8FD8\u6643\uFF01\t\n\u51B0\u7130-\u70AB\u84DD\t117.239308\t39.176767\t2015-08-12 23:52:57\t\u5858\u6CBD\u6709\u4EC0\u4E48\u70B8\u4E86\uFF0C\u597D\u53EF\u6015\u3002\t\n\u676D\u5927\u7A0B_\t117.663547\t39.046053\t2015-08-12 23:53:58\t\u9189\u4E86\uFF01\u5F00\u53D1\u533A\u7206\u70B8\uFF0C\u6211\u5728\u5BB6\u90FD\u80FD\u611F\u89C9\u5230\u5730\u9707\u3002\t\n\u5218\u5927\u53C9\u53C9\u53C9\u53C9\u8036\t117.197235\t39.191091\t2015-08-12 23:54:16\t\u5F00\u53D1\u533A\u7206\u70B8\u4E86\uFF1F\t\n\u6E05\u98CE\u660E\u6708\u5506\u5570\u871C\t117.696270\t39.009346\t2015-08-12 23:55:44\t\u5413\u5C4E\u4E86\uFF0C\u4EE5\u4E3A\u5929\u964D\u7EA2\u706B\u5730\u9707\u4E86\u3002\t\nlirry\u674E\t117.232296\t39.140059\t2015-08-12 23:55:53\t\u4ECA\u665A\u5728\u5858\u6CBD\u533A\u53D1\u751F\u4E86\u5927\u7206\u70B8\uFF0C\u8DDF\u5730\u9707\u4E00\u6837\uFF0C\u9707\u7684\u623F\u5B50\u90FD\u52A8\u4E86\uFF01\t\n\u843D\u9765\u5F52\u6839\t115.773759\t38.394274\t2015-08-12 23:57:00\t\u5927\u698211\u70B943\u5206\uFF0C\u597D\u50CF\u5730\u9707\u4E86\u3002\u95E8\u7A97\u90FD\u5728\u54CD\uFF01\t1\n\u590F\u4E86\u6211\u7684\u590F\u5929\u4E36\t117.702114\t39.020089\t2015-08-12 23:57:16\t\u592A\u5413\u4EBA\uFF01\u51E0\u767E\u7C73\u5916\u7684\u51B2\u51FB\u6CE2\u7A7F\u8FC7\u7A97\u6237\u76F4\u63A5\u628A\u95E8\u9707\u5F00\uFF0C\u6574\u680B\u697C\u8DDF\u7740\u6447\u6643\uFF0C\u540C\u4E8B\u5BBF\u820D\u7684\u95E8\u76F4\u63A5\u9707\u788E\uFF0C\u5E0C\u671B\u522B\u6709\u592A\u5927\u4F24\u4EA1\uFF0C\u7B49\u770B\u660E\u5929\u7684\u65B0\u95FB\u4E86\u3002\t1\t\n\u611A\u5927\u8C61\t117.720813\t39.035309\t2015-08-12 23:59:10\t\u5929\u6D25\u7ECF\u6D4E\u6280\u672F\u5F00\u53D1\u533A\u4E1C\u6D77\u8DEF\u65B9\u5411\u5927\u7206\u70B8\uFF0C\u4E07\u901A\u65B0\u57CE\u7684\u5BB6\u91CC\u95E8\u88AB\u9707\u6389\u4E86\u597D\u51E0\u4E2A\uFF0C\u5DE8\u5927\u7684\u51B2\u6D6A\u3001\u706B\u5149\u3002\u5C0F\u533A\u4E09\u4E2A\u9AD8\u5C42\u65AD\u7535\u4E86\u3002\u5927\u5BB6\u7AD9\u5728\u5916\u9762\uFF0C\u597D\u80FD\u542C\u89C1\u65F6\u5E38\u6709\u73BB\u7483\u6389\u5730\u4E0A\u7684\u58F0\u97F3\u3002\t\n\u6676\u6676_may\t117.707957\t39.089923\t2015-08-12 23:59:29\t\u4E0D\u77E5\u9053\u54EA\u4E2A\u5382\u5B50\u7206\u70B8\u4E86\uFF0C\u4EE5\u4E3A\u662F\u5730\u9707\uFF0C\u5988\u86CB\u5413\u6B7B\u4E86\uFF0C\u8DD1\u51FA\u5BBF\u820D\u697C\u5927\u5927\u7684\u8611\u83C7\u4E91\uFF0C\u751F\u547D\u65E0\u5E38\uFF0C\u73CD\u7231\u751F\u547D\u3002\t\n\u7A7A\u4E2D\u7684\u4E8C\u8205\u5988\t117.692764\t39.038890\t2015-08-12 23:59:32\t\u5929\u6D25\u6EE8\u6D77\u65B0\u533A\u7206\u70B8\u5566\u2026\u2026\u5413\u6B7B\u5B9D\u5B9D\u4E86\u2026\u2026\t\n\u4E2D\u65B0\u5BB6\u7684\u5C0F\u516C\u4E3B\t117.653028\t39.044262\t2015-08-12 23:59:44\t\u539F\u6765\u662F\u7206\u70B8\uFF0C\u6211\u8FD8\u4EE5\u4E3A\u6211\u5BB6\u697C\u4E0B\u53D1\u751F\u67AA\u6740\u6848\u4E86\u5462\uFF0C\u5413\u5F97\u6211\u8EB2\u5728\u7A97\u5E18\u540E\u9762\u9ED8\u9ED8\u5730\u5BFB\u627E\u51F6\u624B\u3002\t1\n\u8521\u660E\u661FStarCai\t117.294237\t39.112305\t2015-08-13 00:00:11\t\u6EE8\u6D77\u65B0\u533A\u5F00\u53D1\u533A\u53D1\u751F\u7206\u70B8\uFF0C\u6210\u8611\u83C7\u4E91\u3002\t\n\u6E29\u5F00\u6C34Xxy\t117.448506\t38.834762\t2015-08-13 00:00:13\t\u521A\u624D\u542C\u89C1\u4E00\u58F0\u5DE8\u54CD\uFF0C\u7136\u540E\u697C\u6643\u4E86\u51E0\u79D2\u949F\uFF0C\u5413\u5F97\u6211\u4E0D\u884C\uFF0C\u6211\u4EE5\u4E3A\u77F3\u5316\u5565\u4E1C\u897F\u70B8\u4E86\u8D76\u5FEB\u5173\u7A97\u6237\uFF0C\u518D\u5237\u7A7A\u95F4\u539F\u6765\u662F\u5858\u6CBD!\u5367\u69FD!\u79BB\u8FD9\u5927\u8001\u8FDC\u8FD9\u4E48\u5927\u52A8\u9759\u8FD9\u5F97\u70B8\u6210\u5565\u6837\uFF0C\u8611\u83C7\u4E91\u51B2\u5929\u8FD9\u4ED6\u5988\u96BE\u9053\u4E0D\u662F\u539F\u5B50\u5F39\u4E48!\u5413\u5F97\u6211\u73B0\u5728\u8FD8\u5BB3\u6015\u4E86\uFF0C\u5728\u8BA9\u6211\u77EB\u60C5\u4E00\u4E2A\u665A\u4E0A \t\nHan\u6C38\u8D8A\t117.523303\t38.919816\t2015-08-13 00:01:56\t\u5929\u6D25\u5F00\u53D1\u533A\u53D1\u751F\u5267\u70C8\u7206\u70B8\uFF0C\u4E09\u5341\u516C\u91CC\u5916\u4ECD\u80FD\u542C\u5230\u5DE8\u5927\u7684\u7206\u70B8\u58F0\uFF0C\u7206\u70B8\u73B0\u573A\u9644\u8FD1\u7684\u5C45\u6C11\u533A\u73BB\u7483\u90FD\u88AB\u9707\u788E\u4E86\uFF0C\u8BB8\u591A\u5C45\u6C11\u90FD\u4EE5\u4E3A\u53D1\u751F\u4E86\u5730\u9707\uFF0C\u7EB7\u7EB7\u4E0B\u697C\u907F\u96BE\u3002\t\n\u9678\u58F9\u8D30\u8FB0\t117.714969\t38.989649\t2015-08-13 00:02:19\t\u665A\u4E0A\u5341\u4E00\u70B9\u534A\u5DE6\u53F3\uFF0C\u611F\u89C9\u5916\u9762\u6709\u4E00\u70B9\u5F02\u5E38\u7684\u58F0\u97F3\uFF0C\u51E0\u5341\u79D2\u949F\u540E\uFF0C\u7A81\u7136\u4E00\u9635\u5996\u98CE\u5439\u8FDB\u7A97\u5B50(\u5176\u5B9E\u662F\u4E00\u80A1\u6C14\u6D41)\uFF0C\u4F34\u968F\u5DE8\u54CD\uFF0C\u697C\u90FD\u52A8\u4E86\uFF0C\u5F00\u59CB\u4EE5\u4E3A\u6253\u96F7\uFF0C\u7D27\u63A5\u7740\u542C\u5230\u697C\u4E0B\u5F88\u591A\u4EBA\u8BAE\u8BBA\u7206\u70B8\u3002\u539F\u6765\u6574\u4E2A\u5858\u6CBD\u90FD\u542C\u5230\u4E86\uFF0C\u6211\u5DF2\u7ECF\u7B97\u79BB\u5F97\u5F88\u8FDC\u7684\u4E86\uFF0C\u5F00\u53D1\u533A\u5F88\u591A\u5BB6\u73BB\u7483\u5168\u788E\uFF0C\u6709\u4EBA\u7761\u7740\u89C9\u98DE\u8D77\u6765\u4E86\u3002\t\n\u5F6A-\u98D9-\u98DA\t117.553689\t38.989649\t2015-08-13 00:03:12\t\u5858\u6CBD\u533A\u5927\u7206\u70B8\uFF0C\u6574\u4E2A\u5858\u6CBD\u5168\u88AB\u9707\u5230\u4E86\uFF0C\u5413\u5C3F\u6211\u4E86\uFF0C\u8DDF\u5927\u5730\u9707\u4E00\u6837\u3002\t\n\u767E\u5584sama\t117.266189\t39.144536\t2015-08-13 00:05:34\t"\u5413\u6B7B\u6211\u4E86,\u5858\u6CBD\u5230\u5E95\u54EA\u70B8\u4E86,\u7136\u800C\u6211\u5C31\u4F4F\u5858\u6CBD\u3002"\t\n\u5B6C\u4E44\u4E0D\u5B6C\t117.720813\t39.050529\t2015-08-13 00:05:47\t\u5341\u4E00\u70B9\u591A\uFF0C\u51E0\u58F0\u8F70\u9686\u9686\u7684\u7206\u70B8\u58F0\uFF0C\u95E8\u7A97\u90FD\u5728\u6643\u52A8\uFF0C\u6EE1\u5929\u7EA2\u5149\uFF0C\u4E00\u53E5\u8BDD\uFF0C\u5413\u6B7B\u6211\u4E86\uFF0C\u4ECE\u5E8A\u4E0A\u6EDA\u4E86\u4E0B\u6765\u3002\t\n\u6211\u53EB\u848B\u715C\u4E39\t117.817815\t39.318224\t2015-08-13 00:06:14\t\u751F\u547D\u597D\u6E3A\u5C0F\uFF0C\u4EBA\u751F\u7B2C\u4E00\u6B21\u6709\u8FD9\u79CD\u611F\u89C9\u3002\u614C\u4E71\u8DD1\u4E0B\u697C\uFF0C\u90FD\u662F\u788E\u73BB\u7483\u3002\u60CA\u614C\u5931\u63AA\u3002\u597D\u60F3\u54ED\uFF0C\u4E0D\u6562\u4E00\u4E2A\u4EBA\u7761\u3002\t\n\u5929\u624D\u5E06_\u6211\u7684ID\u7279\u522B\u77ED\t117.658872\t39.027252\t2015-08-13 00:06:26\t"\u7A81\u7136\u95E8\u5C31\u5F00\u4E86\uFF0C\u7136\u540E\u7A97\u5E18\u5C31\u53D8\u6A58\u7EA2\u8272\u4E86\u3002\u5413\u6B7B\u4E86,\u5E0C\u671B\u65E0\u4EBA\u4F24\u4EA1!"\t\n\u4E5D\u4E5D\u4E03\u4E5D\u5148\u751F\t117.367865\t38.858935\t2015-08-13 00:07:55\t"\u54E6\uFF0C\u542C\u8BF4\u52A0\u6CB9\u7AD9\u7206\u70B8\uFF0C\u521A\u521A\u5BB6\u91CC\u4EEC\u7A97\u90FD\u9707\u4E86\uFF0C\u6211\u4EE5\u4E3A\u6709\u5C0F\u5077\uFF0C\u5413\u5F97\u6211\u62FF\u7740\u94C1\u68CD\u5B50\u5728\u5C4B\u91CC\u6643\u60A0,\u5E0C\u671B\u6CA1\u4EBA\u53D7\u3002"\t\n\u51C9\u98CE\u5165\u620F\t117.714969\t39.008450\t2015-08-13 00:08:29\t\u5413\u5C41\u4E86\uFF0C\u5DE8\u5927\u8F70\u9686\u4E24\u58F0\uFF0C\u7136\u540E\u73BB\u7483\u788E\u58F0\u72D7\u53EB\u58F0\u4EBA\u8DD1\u58F0\uFF0C\u6211\u62FF\u7740\u94A5\u5319\u5C31\u5F80\u4E0B\u51B2\uFF0C\u539F\u6765\u662F\u54EA\u7206\u70B8\u4E86\uFF0C\u5E0C\u671B\u65E0\u4EBA\u5458\u4F24\u4EA1\u3002\t\nLLL\u84C9\t117.717307\t38.917130\t2015-08-13 00:08:32\t\u5C31\u8DDF\u5730\u9707\u4E00\u6837\u2026\u6211\u60F3\u8BF4\u8FD9\u4E48\u8FDC\u7684\u8DDD\u79BB\u6211\u90FD\u5413\u574F\u4E86\uFF0C\u9644\u8FD1\u7684\u4EB2\u4EEC\u8FD8\u597D\u5417\uFF1F\t\n_\u56FD\u6C11\u521D\u4E2D\u751F\t117.593425\t39.017403\t2015-08-13 00:12:04\t\u5929\u554A\uFF0C\u521A\u624D\u542C\u5230\u201Cbong!\u201D\u7684\u4E00\u58F0\uFF0C\u8FD8\u4E0D\u77E5\u9053\u53D1\u751F\u4EC0\u4E48\u4E86\uFF0C\u770B\u89C1\u59D0\u59D0\u670B\u53CB\u5708\u624D\u53D1\u73B0\u5F00\u53D1\u533A\u6709\u7206\u70B8\u4E86\u3002\u770B\u89C1\u5FAE\u535A\u91CC\u4F4F\u5728\u5F00\u53D1\u533A\u7684\u7F51\u53CB\u4EEC\uFF0C\u6211\u6709\u70B9\u5E78\u8FD0\uFF0C\u6BD5\u7ADF\u6211\u79BB\u5F00\u53D1\u533A\u8FD9\u4E48\u8FDC....\u5E0C\u671B\u53EF\u4EE5\u6CA1\u6709\u4F24\u8005\u5367\u69FD\uFF0C\u521A\u624D\u53C8\u542C\u89C1\u7238\u7238\u7684\u7535\u8BDD\u8BF4\u4E00\u4E2A\u670B\u53CB\u7684\u5355\u4F4D\u7206\u70B8\u4E86\t\n\u4E4C\u6258\u90A6-\u72EC\u4E00\u7121\u4E8C\t117.669390\t39.064854\t2015-08-13 00:12:28\t\u4E24\u58F0\u5DE8\u54CD\u4E24\u4E0B\u6643\uFF0C\u4EE5\u4E3A\u5730\u9707\u4E86\uFF0C\u5FC3\u90FD\u5FEB\u51FA\u6765\u4E86\uFF01\t\n\u738B\u6960Yana\t117.699776\t39.034414\t2015-08-13 00:12:30\t\u6B63\u5728\u770B\u7740\u7535\u89C6\u5267\uFF0C\u4E00\u9635\u5730\u52A8\u5C71\u6447\uFF0C\u7D27\u63A5\u7740\u697C\u9053\u73BB\u7483\u88AB\u51FB\u788E\u7684\u58F0\u97F3\uFF0C\u7A97\u6237\u7EB1\u7A97\u6389\u4E86\uFF01\u592A\u6050\u6016\u4E86\uFF01\t\n\u6D3E\u5C3C\u7F8E\u8981\u5AC1\u7ED9\u957F\u9888\u9E7F\u54CE\u54DF\u563F\t117.243983\t39.131106\t2015-08-13 00:12:34\t\u5C31\u8BA9\u4F60\u4EEC\u611F\u53D7\u4E00\u4E0B\u79BB\u6211\u5BB6\u4E0D\u8FDC\u7684\u5927\u7206\u70B8\uFF01\u771F\u7684\u662F\u5927\u7206\u70B8\uFF01\uFF01\uFF01\uFF01\u636E\u8BF4\u662F\u52A0\u6CB9\u7AD9\u7206\u70B8\u4E86\uFF0C\u8611\u83C7\u4E91\u73B0\u5728\u8FD8\u5728\u3002\u6211\u8981\u5413\u5C3F\u4E86\uFF0C\u771F\u7684\uFF01\t\nHayave\t117.279044\t39.142745\t2015-08-13 00:12:45\t\u6211\u542C\u8BF4\u539F\u5B50\u5F39\u8FD9\u6B21\u6295\u5230\u5858\u6CBD\u4E86\uFF0C\u70B3\u6674\u4F60\u53EF\u8FD8\u597D.\t\n\u82CF\u67D0\u4EBA\u72D0\u72F8\t117.822490\t39.244809\t2015-08-13 00:14:17\t\u7206\u70B8\u4E86\u2026\u2026\u6211\u4EE5\u4E3A\u5730\u9707\u4E86\u2026\u2026\u6EE8\u6D77\u65B0\u533A\u90FD\u70ED\u95F9\u4E86\u2026\u2026\t\n\u6CE2\u5B9D\u866B\u866B\t117.661209\t39.044262\t2015-08-13 00:14:29\t2015\u5E748\u670812\u65E5\uFF0C23:35\u5206\u5DE6\u53F3\uFF0C\u5929\u6D25\u5E02\u5858\u6CBD\u533A\u52A0\u6CB9\u7AD9\u7206\u70B8\uFF0C\u9707\u611F\u5F3A\u70C8\uFF0C\u8611\u83C7\u4E91\u5347\u817E\uFF01\t\n\u9694\u5899\u73AE\t117.445000\t39.051425\t2015-08-13 00:14:54\t\u5858\u6CBD\u52A0\u6CB9\u7AD9\u7206\u70B8\u4E86\uFF0C\u5C31\u79BB\u6211\u4E0A\u73ED\u7684\u5730\u65B9\u4E0D\u8FDC\u3002\t\n\u5411\u65E5\u8475\u541B\u4E0E\u957F\u9888\u9E7F\u541B\t117.628486\t39.017403\t2015-08-13 00:17:34\t\u521A\u56DE\u590D\u5B8C\u670B\u53CB\u53D1\u6765\u7684\u6D88\u606F\uFF0C\u51C6\u5907\u5012\u6C34\u5FFD\u7684\u611F\u89C9\u6574\u4E2A\u623F\u5B50\u90FD\u6296\u4E86\u4E00\u4E0B\uFF0C\u7A97\u6237\u201C\u7830\u201D\u7684\u54CD\u4E86\u4E00\u4E0B\uFF0C\u5012\u6C34\u7684\u624B\u72E0\u72E0\u5730\u6296\u4E86\u4E00\u4E0B\uFF0C\u7136\u540E\u5728\u4E0B\u4E00\u4E2A\u5206\u949F\u91CC\u88AB\u540C\u5B66\u670B\u53CB\u544A\u77E5\u5F00\u53D1\u533A\u90A3\u8FB9\u6CB9\u7F50\u7206\u70B8\u4E86\u3002\u53EA\u662F\u5E0C\u671B\u53D1\u751F\u4E86\u8FD9\u4E48\u5927\u7684\u7206\u70B8\uFF0C\u4E0D\u8981\u6709\u4EBA\u53D7\u4F24\u624D\u597D\u3002\t\n\u9752\u6625\u715E\u4EBA\t117.698608\t39.041576\t2015-08-13 00:20:04\t\u7761\u68A6\u4E2D\u611F\u89C9\u5E8A\u5F88\u4E25\u91CD\u7684\u6643\u4E86\u4E00\u4E0B\uFF0C\u820D\u53CB\u5C31\u8BF4\u8FD9\u662F\u4EC0\u4E48\uFF0C\u7136\u540E\u611F\u89C9\u66F4\u4E25\u91CD\u7684\u6447\u6643\uFF0C\u6211\u5927\u58F0\u547C\u558A\u5730\u9707\uFF01\u4ECE\u4E0A\u94FA\u722C\u4E0B\u6765\u544A\u8BC9\u540C\u5B66\u5FEB\u8DD1\u7136\u540E\u5C31\u4F7F\u52B2\u5F80\u697C\u4E0B\u8DD1\uFF0C\u8DD1\u5230\u534A\u8DEF\u53D1\u73B0\u6CA1\u7A7F\u978B\uFF0C\u7136\u540E\u60F3\u6211\u4E00\u5B9A\u8981\u8DD1\u51FA\u53BB\uFF0C\u7EC8\u4E8E\u6211\u662F\u8DD1\u4E0B\u53BB\u6BD4\u8F83\u65E9\u7684\uFF0C\u770B\u5230\u5929\u7A7A\u4E00\u56E2\u65E0\u6BD4\u5DE8\u5927\u7684\u8611\u83C7\u4E91\uFF0C\u7B2C\u4E00\u53CD\u5E94\u8FD9\u662F\u5929\u7A7A\u5F02\u50CF\uFF0C\u7136\u540E\u60F3\u662F\u4EC0\u4E48\u6C14\u4F53\u6CC4\u9732\u6216\u8005\u4EC0\u4E48\u7206\u70B8\t\n\u5C0FV\u7231\u7F8E\u98DF\t117.709126\t39.005764\t2015-08-13 00:24:28\t\u521A\u521A\u4E0D\u77E5\u54EA\u91CC\u7206\u70B8\u4E86\uFF0C\u53EF\u4E0B\u6B7B\u6211\u4E86\uFF0C\u5168\u697C\u7684\u4EBA\u90FD\u8DD1\u51FA\u6765\u4E86\uFF0C\u613F\u5E73\u5B89\t\n\u9A6C\u6B23\u6021chine\t117.704451\t39.022775\t2015-08-13 00:24:46\t\u5E0C\u671B\u6CA1\u4E8B\u513F\uFF01\u697C\u9053\u91CC\u7684\u73BB\u7483\u90FD\u788E\u4E86\uFF01\uFF01\u8FD8\u6709\u8B66\u8F66\u548C\u6D88\u9632\u8F66\u7684\u58F0\u97F3\uFF0C\u4E0D\u77E5\u9053\u662F\u54EA\u7206\u70B8\u4E86\uFF01\t\nBeat\u535A\t117.685752\t39.031728\t2015-08-13 00:24:58\t\u5858\u6CBD\u65B0\u6E2F\u5730\u533A\u4E25\u91CD\u7206\u70B8\uFF0C\u9707\u611F\u53EF\u8FBE\u5927\u6E2F\u5730\u533A\uFF0C\u5BB6\u91CC\u7A97\u6237\u88AB\u6C14\u6D6A\u51B2\u51FB\u6CE2\u9707\u788E\uFF0C\u5F00\u53D1\u533A\u5929\u4FDD\u91D1\u6D77\u5CB8\u9677\u5165\u6050\u614C\uFF0C\u5C45\u6C11\u6B63\u5728\u64A4\u79BB\uFF0C\u73B0\u5728\u6211\u4EEC\u4E00\u5BB6\u5728\u8857\u9053\u4E0A\uFF0C\u5929\u7A7A\u671B\u4E0B\u98D8\u843D\u8FD9\u7206\u70B8\u7269\u6B8B\u6E23 \t\n\u96C5\u69600000\t117.206585\t39.176767\t2015-08-13 00:28:33\t\u5929\u6D25\u5858\u6CBD\u5927\u7206\u70B8\uFF01\uFF01\u539F\u56E0\u4E0D\u660E \uFF01\uFF01\uFF01\u8611\u83C7\u4E91\uFF01\uFF01\uFF01\t\n\u522B\u4EBA\u7684\u90FD\u662F\u6700\u597D\u7684\t117.613292\t39.034414\t2015-08-13 00:29:01\t\u6CF0\u8FBE\u533B\u9662\u4EBA\u6EE1\u4E86\uFF5E\u4E0D\u63A5\u75C5\u4EBA\u4E86\uFF0C\u597D\u5FC3\u4EBA\u58EB\u63A5\u4E0A\u4F24\u60A3\u53BB\u522B\u7684\u533B\u9662\u5427\uFF01\uFF01\uFF01\u90FD\u6D41\u7740\u8840\uFF5E\u5728\u8DEF\u4E0A\u62E6\u8F66\u5462\uFF01\u9700\u8981\u4EBA\u62C9\u4ED6\u4EEC\uFF01\uFF01\uFF01\t\n70\u5E74\u7684\u7EA2\u9152\t117.201910\t39.115886\t2015-08-13 00:31:14\t\u8FD1\u591C\u91CC12\u70B9\u949F\uFF0C\u6211\u6EE8\u6D77\u65B0\u533A\u4E00\u5371\u9669\u54C1\u4ED3\u5E93\u7206\u70B8\uFF0C\u55B7\u51FA\u7684\u706B\u7403\u7275\u626F\u5230\u5176\u5B83\u4F01\u4E1A\u8DDF\u7740\u7206\u70B8\u3002\u8D77\u521D\u4EE5\u4E3A\u5730\u9707\uFF0C\u513F\u5B50\u611F\u89C9\u6BD4\u6211\u7075\u654F\uFF0C\u4E00\u58F0\u5730\u9707\u4E86\uFF0C\u6211\u8FD9\u624D\u611F\u89C9\u5230\u5E8A\u3001\u95E8\u3001\u706F\u3001\u5730\u677F\u90FD\u5728\u6643\uFF0C\u5413\u6B7B\u4E86\u3002\u8DDD\u4E8B\u53D1\u5730\u70B9\u8FD1\u7684\u4F4F\u5B85\u3001\u5546\u94FA\u3001\u529E\u516C\u697C\u623F\u73BB\u7483\u7C89\u788E\u3001\u95E8\u7A97\u9707\u6389\u3001\u7535\u68AF\u505C\u6B62\uFF0C\u4E00\u7247\u72FC\u85C9\u3002\u4E0D\u77E5\u6211\u516C\u53F8\u529E\u516C\u5BA4\u53D7\u4E0D\u53D7\u5F71\u54CD\u3002\t\n\u8FD8\u6709hhhhy\t117.663547\t39.025461\t2015-08-13 00:32:18\t\u4F24\u8005\u5927\u591A\u5728\u6C38\u65FA\u9644\u8FD1\uFF0C\u8BF7\u79BB\u5F97\u8FD1\u7684\u51FA\u79DF\u8F66\u53F8\u673A\u591A\u5F80\u90A3\u91CC\u53BB\t\norange\u795E\u5973\u5B50\t117.765223\t39.114096\t2015-08-13 00:32:30\t\u6EE8\u6D77\u65B0\u533A\u53D1\u751F\u7206\u70B8\u3002\u5E0C\u671B\u5927\u5BB6\u5E73\u5B89.';
	var dataArr = data.split('\n');
	for (var i = 0; i < dataArr.length; i++) {
		dataArr[i] = dataArr[i].split('\t');
	}
	exports.default = dataArr;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "tianjin.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _timeLine = __webpack_require__(250);

	var _timeLine2 = _interopRequireDefault(_timeLine);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TimeLine = function (_Component) {
		_inherits(TimeLine, _Component);

		function TimeLine(props) {
			_classCallCheck(this, TimeLine);

			var _this = _possibleConstructorReturn(this, (TimeLine.__proto__ || Object.getPrototypeOf(TimeLine)).call(this, props));

			_this.state = {
				begin: './src/assets/bobo.png'
			};
			return _this;
		}

		_createClass(TimeLine, [{
			key: 'tabImg',
			value: function tabImg() {
				if (this.state.begin == './src/assets/bobo.png') {
					this.setState({ begin: './src/assets/zant.png' });
				} else {
					this.setState({ begin: './src/assets/bobo.png' });
				}
			}
		}, {
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					{ className: _timeLine2.default['time-line'] + ' ' + this.props.isvisible },
					_react2.default.createElement('img', { className: 'beginBtn', onMouseDown: this.tabImg.bind(this), onClick: this.props.actionVal, src: this.state.begin }),
					_react2.default.createElement(
						'span',
						null,
						this.props.mintime
					),
					_react2.default.createElement(
						'div',
						{ className: _timeLine2.default["center-main"] },
						_react2.default.createElement('input', { className: 'range', ref: 'rangeval', type: 'range', defaultValue: this.props.value, max: this.props.max, min: this.props.min, onInput: this.props.valChange }),
						_react2.default.createElement(
							'p',
							null,
							this.props.nowVal
						)
					),
					_react2.default.createElement(
						'span',
						{ className: _timeLine2.default["fr"] },
						this.props.maxtime
					)
				);
			}
		}]);

		return TimeLine;
	}(_react.Component);

	exports.default = TimeLine;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(251);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./timeLine.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./timeLine.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._2043cGn_NiPTcDlkzJf42p{width: 385px;height: 45px;background: rgba(67,67,67,0.9);position: absolute;bottom: 0px;left: 50%;transform: translate(-193px);color: white;font-size: 15px;z-index: 10;}\r\n._9wvPtfcb9JLPyijmCyLPN{display: none;}\r\n._2043cGn_NiPTcDlkzJf42p > img:first-child{margin: 17px 15px 0px 15px;}\r\n._2043cGn_NiPTcDlkzJf42p>span{line-height: 45px;}\r\n._27chBrqR5ZNj98uZ_sO256{width: 220px;height: 100%; position: absolute;top: 0px;left: 100px;}\r\n._27chBrqR5ZNj98uZ_sO256 p{position: absolute;left: 90px;top:28px;font-size: 12px;}\r\n._3-hBa7kT2lD_BFt-CaNacv{float: right;margin-right: 20px}\r\n/*1：去除默认样式*/\r\ninput[type=range] {\r\n    -webkit-appearance: none;\r\n    width: 200px;\r\n    border-radius: 10px; /*这个属性设置使填充进度条时的图形为圆角*/\r\n    margin-top: 19px;\r\n}\r\ninput[type=range]::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n}\r\n/*给滑动轨道定义样式*/\r\ninput[type=range]::-webkit-slider-runnable-track {\r\n    height: 5px;\r\n    /*轨道内置阴影效果*/\r\n    box-shadow: 0 1px 1px #def3f8, inset 0 5px 1px #9E9DA1; \r\n}\r\ninput[type=range]:focus {\r\n    outline: none;\r\n}\r\n/*给滑块(thumb)添加样式*/\r\ninput[type=range]::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: 15px;\r\n    width: 15px;\r\n    margin-top: -5px; /*使滑块超出轨道部分的偏移量相等*/\r\n    background: #009999; \r\n    border-radius: 50%; /*外观设置为圆形*/\r\n}", ""]);

	// exports
	exports.locals = {
		"time-line": "_2043cGn_NiPTcDlkzJf42p",
		"time-unvisible": "_9wvPtfcb9JLPyijmCyLPN",
		"center-main": "_27chBrqR5ZNj98uZ_sO256",
		"fr": "_3-hBa7kT2lD_BFt-CaNacv"
	};

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _hangxian = __webpack_require__(253);

	var _hangxian2 = _interopRequireDefault(_hangxian);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GeoVis = window.GeoVis;
	var Engine = window.Engine;

	var GlobalPolyline = function (_Component) {
	    _inherits(GlobalPolyline, _Component);

	    function GlobalPolyline(props) {
	        _classCallCheck(this, GlobalPolyline);

	        var _this = _possibleConstructorReturn(this, (GlobalPolyline.__proto__ || Object.getPrototypeOf(GlobalPolyline)).call(this, props));

	        _this.state = {
	            currentObj: []
	        };

	        return _this;
	    }

	    _createClass(GlobalPolyline, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(116.16, 40.11, 40000000.0)
	            });
	            // 初始时加Collection
	            this.billboards = window.earth.scene.primitives.add(new Engine.BillboardCollection());
	            this.billboards._rs = Engine.RenderState.fromCache({
	                depthTest: {
	                    enabled: true
	                },
	                depthMask: false,
	                blending: Engine.BlendingState.ADDITIVE_BLEND
	            });

	            var re = this;
	            for (var j = 0; j < 6700; j++) {
	                if (_hangxian2.default[0][j]) {
	                    re.addPloyline(0, j, '#66FEFF');
	                }
	                if (_hangxian2.default[1][j]) {
	                    re.addPloyline(1, j, '#EA8036');
	                }
	                if (_hangxian2.default[2][j]) {
	                    re.addPloyline(2, j, '#7ADC46');
	                }
	                if (_hangxian2.default[3][j]) {
	                    re.addPloyline(3, j, '#66FEFF');
	                }
	            }
	            this.inv = window.setInterval(function () {
	                _this2.state.currentObj.map(function (val, index) {
	                    var billboard = val.bill_texture;
	                    // let billboard_index = val.bill_index;
	                    // console.log(val.bill_index < val.positions.length - 1);
	                    val.bill_index = val.bill_index < val._positions.length - 1 ? val.bill_index + 1 : 0;
	                    billboard.position = Engine.Cartesian3.fromDegrees(val._positions[val.bill_index][0], val._positions[val.bill_index][1], val._positions[val.bill_index][2]);
	                });
	            }, 80);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            window.earth.scene.mode = Engine.SceneMode.SCENE2D;
	            this.billboards.removeAll();
	            this.state.currentObj.map(function (val, index) {
	                val.removeFrom(window.earth.features);
	            });
	            window.clearInterval(this.inv);
	        }
	    }, {
	        key: 'addPloyline',
	        value: function addPloyline(index, max, lineColor) {
	            var beser = new GeoVis.BezierCurve({
	                start: [_hangxian2.default[index][max].D_lon, _hangxian2.default[index][max].D_lat, 0],
	                end: [_hangxian2.default[index][max].S_lon, _hangxian2.default[index][max].S_lat, 0.0],
	                width: 0.8
	            });
	            var line = new GeoVis.Polyline(beser.positions, {
	                colors: [GeoVis.Color.fromCssString(lineColor).withAlpha(0.6)],
	                vertexColor: true,
	                followSurface: true,
	                width: 2.0
	            }).addTo(window.earth.features);
	            this.state.currentObj.push(line);
	            line.bill_texture = this.billboards.add({
	                position: Engine.Cartesian3.fromDegrees(beser.positions[0][0], beser.positions[0][1], beser.positions[0][2]),
	                image: './src/assets/line_texture.png',
	                scale: 0.2
	            });
	            line.bill_index = 0;
	            // return line;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return GlobalPolyline;
	}(_react.Component);

	exports.default = GlobalPolyline;

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var data1 = { "60": { "D_lat": 2.0144400596618652, "D_lon": 45.3046989440918, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 9.016120910644531, "geoq_featureid": "8e1d671b-bf88-4662-bef3-9d7da414e4a7" }, "161": { "D_lat": -0.0861390009522438, "D_lon": 34.7288932800293, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 2.5207607746124268, "geoq_featureid": "c2b2645d-8d8a-493f-ac8f-be542a0402b9" }, "164": { "D_lat": -3.2293100357055664, "D_lon": 40.10169982910156, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 3.7046189308166504, "geoq_featureid": "617fe773-9ad2-4d53-8d62-e0c7600d30ca" }, "165": { "D_lat": -4.034832954406738, "D_lon": 39.5942497253418, "S_lat": -6.222024917602539, "S_lon": 39.22488784790039, "Shape_Leng": 2.218161106109619, "geoq_featureid": "9a8757d2-6449-4859-967e-091bc6417f89" }, "227": { "D_lat": -26.1391658782959, "D_lon": 28.246000289916992, "S_lat": -30.85740852355957, "S_lon": 30.343019485473633, "Shape_Leng": 5.163540840148926, "geoq_featureid": "8cb683dd-ae35-4b16-94ad-672db2376cf7" }, "598": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": -26.1391658782959, "S_lon": 28.246000289916992, "Shape_Leng": 63.592315673828125, "geoq_featureid": "b471e4d3-6e08-492c-8b07-0acb8b550c07" }, "656": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": -26.1391658782959, "S_lon": 28.246000289916992, "Shape_Leng": 83.16584014892578, "geoq_featureid": "d9a4063e-c29a-4e35-a0fc-57f535476b9d" }, "670": { "D_lat": -33.964805603027344, "D_lon": 18.601667404174805, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 87.70252990722656, "geoq_featureid": "7a870cb6-4527-49cf-a477-8a291e3760ad" }, "717": { "D_lat": -1.3191670179367065, "D_lon": 36.9275016784668, "S_lat": -3.324018955230713, "S_lon": 29.318519592285156, "Shape_Leng": 7.868684768676758, "geoq_featureid": "973283da-1388-4585-9485-785d28d85ee1" }, "720": { "D_lat": -3.324018955230713, "D_lon": 29.318519592285156, "S_lat": 50.901390075683594, "S_lon": 4.4844441413879395, "Shape_Leng": 60.0697135925293, "geoq_featureid": "3a9d7c8a-a28f-423a-ad9f-d1dcd0447889" }, "725": { "D_lat": -8.85837459564209, "D_lon": 13.231178283691406, "S_lat": 50.901390075683594, "S_lon": 4.4844441413879395, "Shape_Leng": 60.45322036743164, "geoq_featureid": "6d707487-a006-40c2-adbe-8864b60ff2c4" }, "731": { "D_lat": 4.0060811042785645, "D_lon": 9.719481468200684, "S_lat": -4.385749816894531, "S_lon": 15.444568634033203, "Shape_Leng": 10.15871810913086, "geoq_featureid": "c4853e01-4347-4022-bbf4-153c13698dea" }, "736": { "D_lat": -4.385749816894531, "D_lon": 15.444568634033203, "S_lat": -8.85837459564209, "S_lon": 13.231178283691406, "Shape_Leng": 4.990351676940918, "geoq_featureid": "39b2cbab-5954-44a8-bed5-f861a32f01fb" }, "737": { "D_lat": -3.324018955230713, "D_lon": 29.318519592285156, "S_lat": -1.9686280488967896, "S_lon": 30.139450073242188, "Shape_Leng": 1.5846174955368042, "geoq_featureid": "e9609ed6-e4b0-4fac-b194-f274aa3c7246" }, "747": { "D_lat": -17.931806564331055, "D_lon": 31.09284782409668, "S_lat": 52.30861282348633, "S_lon": 4.763888835906982, "Shape_Leng": 75.45833587646484, "geoq_featureid": "dd465340-6438-43ff-a846-7db002b6eb63" }, "749": { "D_lat": -1.9686280488967896, "D_lon": 30.139450073242188, "S_lat": 52.30861282348633, "S_lon": 4.763888835906982, "Shape_Leng": 60.41767883300781, "geoq_featureid": "f5c7f5de-4bcb-4a1e-971f-dc5018f31e10" }, "818": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": -6.878110885620117, "S_lon": 39.2026252746582, "Shape_Leng": 69.29007720947266, "geoq_featureid": "623d410f-b7c4-4ed7-8be8-8e53857c3c33" }, "822": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -4.385749816894531, "S_lon": 15.444568634033203, "Shape_Leng": 55.042747497558594, "geoq_featureid": "fc11de9c-c8be-43f7-87ec-1b74a9d3e660" }, "831": { "D_lat": -1.3191670179367065, "D_lon": 36.9275016784668, "S_lat": -11.533660888671875, "S_lon": 43.2718505859375, "Shape_Leng": 12.024662971496582, "geoq_featureid": "76aa1fed-39ef-46df-ad1c-dd75c52fda61" }, "839": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -26.1391658782959, "S_lon": 28.246000289916992, "Shape_Leng": 79.68731689453125, "geoq_featureid": "70f3c99b-250f-4493-ac1a-4ac4c2600233" }, "842": { "D_lat": 0.042385999113321304, "D_lon": 32.443504333496094, "S_lat": -1.9686280488967896, "S_lon": 30.139450073242188, "Shape_Leng": 3.058241128921509, "geoq_featureid": "6d834019-1cd6-4e8f-ab8d-845183cd7d3b" }, "846": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -8.85837459564209, "S_lon": 13.231178283691406, "Shape_Leng": 58.91999053955078, "geoq_featureid": "63b9e7e3-c5c3-403b-9e4d-cded48d8f49c" }, "854": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": -15.330817222595215, "S_lon": 28.452627182006836, "Shape_Leng": 72.05179595947266, "geoq_featureid": "119ae780-7e7f-45ab-9555-8bec98850e32" }, "855": { "D_lat": -17.931806564331055, "D_lon": 31.09284782409668, "S_lat": -15.330817222595215, "S_lon": 28.452627182006836, "Shape_Leng": 3.7062597274780273, "geoq_featureid": "b4492d06-47b1-4701-afdf-5ac93e283798" }, "860": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -20.430234909057617, "S_lon": 57.68360137939453, "Shape_Leng": 89.81599426269531, "geoq_featureid": "de689a85-1c21-4f26-a40b-8c870be247bc" }, "864": { "D_lat": -12.80472183227539, "D_lon": 45.28111267089844, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 14.2027006149292, "geoq_featureid": "3ef60be2-bb5f-4fb9-9747-60328b21c90a" }, "865": { "D_lat": -17.931806564331055, "D_lon": 31.09284782409668, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 17.608314514160156, "geoq_featureid": "9abeba86-b2c9-48cd-ac9d-9438d78c3cf3" }, "866": { "D_lat": -1.9686280488967896, "D_lon": 30.139450073242188, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 6.819051742553711, "geoq_featureid": "54b23e03-d45b-4c6c-9508-6c0d02d41c7c" }, "867": { "D_lat": -13.78937816619873, "D_lon": 33.78099822998047, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 12.861165046691895, "geoq_featureid": "e30398f6-e86f-405c-9e00-2e485bb4346d" }, "868": { "D_lat": -15.330817222595215, "D_lon": 28.452627182006836, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 16.37630271911621, "geoq_featureid": "bd3a91c5-60f6-4529-826b-9baeddbaaa7a" }, "869": { "D_lat": -17.82175636291504, "D_lon": 25.82269287109375, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 19.89371681213379, "geoq_featureid": "5f10af47-9ccc-478b-a731-e263c4adada1" }, "887": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -4.816028118133545, "S_lon": 11.8865966796875, "Shape_Leng": 54.69089126586914, "geoq_featureid": "478dc243-a76a-47a0-8214-fdd51bfc38ef" }, "890": { "D_lat": 48.725276947021484, "D_lon": 2.3594439029693604, "S_lat": -20.887100219726562, "S_lon": 55.51030731201172, "Shape_Leng": 88.62300109863281, "geoq_featureid": "8e8ee254-1e92-479a-a9b8-b2bf3bbe641b" }, "897": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -18.79694938659668, "S_lon": 47.47880554199219, "Shape_Leng": 82.17315673828125, "geoq_featureid": "0536d61d-bcb6-42a7-abb1-8330f269cf2d" }, "898": { "D_lat": -20.430234909057617, "D_lon": 57.68360137939453, "S_lat": -21.320039749145508, "S_lon": 55.423580169677734, "Shape_Leng": 2.4289000034332275, "geoq_featureid": "3a565113-7e25-4c84-9000-3b01515e10b3" } };
	var data2 = { "212": { "D_lat": 60.77977752685547, "D_lon": -161.83799743652344, "S_lat": 61.775001525878906, "S_lon": -161.31944274902344, "Shape_Leng": 1.122248888015747, "geoq_featureid": "3e05397a-3692-48c0-b681-19274b0adeab" }, "252": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 25.778488159179688, "S_lon": -100.10688018798828, "Shape_Leng": 18.259082794189453, "geoq_featureid": "39ffcfba-e2db-4023-82e4-e2d84090178c" }, "255": { "D_lat": 41.38240051269531, "D_lon": 123.29010009765625, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 120.6448974609375, "geoq_featureid": "4c18cb41-71f8-4012-ad88-bb5e90481c81" }, "275": { "D_lat": 60.70955276489258, "D_lon": -135.06727600097656, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 22.798595428466797, "geoq_featureid": "878704f7-7653-4d88-b36d-3cf7493b3849" }, "279": { "D_lat": 59.11750030517578, "D_lon": -161.57749938964844, "S_lat": 60.77977752685547, "S_lon": -161.83799743652344, "Shape_Leng": 1.6825826168060303, "geoq_featureid": "8c1a2aec-4bbe-44b3-a482-e552123f364a" }, "282": { "D_lat": 49.956111907958984, "D_lon": -119.37777709960938, "S_lat": 60.70955276489258, "S_lon": -135.06727600097656, "Shape_Leng": 19.11358070373535, "geoq_featureid": "7135971f-299d-40c1-a6d2-5703a9a33bcf" }, "284": { "D_lat": 51.113887786865234, "D_lon": -114.02027893066406, "S_lat": 60.70955276489258, "S_lon": -135.06727600097656, "Shape_Leng": 23.23585319519043, "geoq_featureid": "53f626d7-361c-4b27-9823-78edeeb0142d" }, "288": { "D_lat": 45.3224983215332, "D_lon": -75.6691665649414, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 42.9851188659668, "geoq_featureid": "5f195f36-ffd9-4988-b20f-1a679be719bf" }, "289": { "D_lat": 60.70955276489258, "D_lon": -135.06727600097656, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 20.72338104248047, "geoq_featureid": "e9a462c2-b374-4056-8079-db4e1d4bf33b" }, "325": { "D_lat": 18.504667282104492, "D_lon": -88.32684326171875, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 10.787111282348633, "geoq_featureid": "a612d01e-2f66-4dd9-a800-8e6aca6af393" }, "331": { "D_lat": 14.583271980285645, "D_lon": -90.52747344970703, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 9.827823638916016, "geoq_featureid": "81b3269a-c98c-448f-995e-d2e5135b75d3" }, "332": { "D_lat": 22.989152908325195, "D_lon": -82.40908813476562, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 17.04538917541504, "geoq_featureid": "9bab55a0-4761-4bb8-96a0-28431bc65c65" }, "334": { "D_lat": 15.775317192077637, "D_lon": -96.2625732421875, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 4.61490535736084, "geoq_featureid": "02b2e8d1-f866-4df7-a0d5-6c59964ad12a" }, "336": { "D_lat": 24.072694778442383, "D_lon": -110.36247253417969, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 12.208646774291992, "geoq_featureid": "56f09ede-5839-462e-9440-ff9e72f28bb7" }, "359": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 20.936981201171875, "S_lon": -89.65766906738281, "Shape_Leng": 9.534496307373047, "geoq_featureid": "e25f87ec-a8c3-46dc-bee7-c4462eb1419b" }, "362": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 25.778488159179688, "S_lon": -100.10688018798828, "Shape_Leng": 14.059611320495605, "geoq_featureid": "0940fbcb-a32f-4c83-8594-a69de84a60c7" }, "374": { "D_lat": 20.521799087524414, "D_lon": -103.31116485595703, "S_lat": 23.1518497467041, "S_lon": -109.7210464477539, "Shape_Leng": 6.929087162017822, "geoq_featureid": "118a5fc4-db14-4c60-91b1-8900fc6f72a3" }, "377": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 17.614416122436523, "geoq_featureid": "ab61ca6b-afc9-432e-a5f0-ec7d3c061329" }, "381": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 16.56182289123535, "S_lon": -93.02607727050781, "Shape_Leng": 6.694952964782715, "geoq_featureid": "4e7f6529-2e29-46e4-8189-5cc8ac6295f8" }, "385": { "D_lat": 16.757061004638672, "D_lon": -99.75395202636719, "S_lat": 19.337072372436523, "S_lon": -99.56600952148438, "Shape_Leng": 2.586848020553589, "geoq_featureid": "c62cbc34-3ad0-4932-8027-45829a500611" }, "387": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 19.337072372436523, "S_lon": -99.56600952148438, "Shape_Leng": 22.916461944580078, "geoq_featureid": "6f861efc-d122-435e-92f6-ad89ed31524d" }, "389": { "D_lat": 20.680082321166992, "D_lon": -105.25416564941406, "S_lat": 19.337072372436523, "S_lon": -99.56600952148438, "Shape_Leng": 5.844841957092285, "geoq_featureid": "c735364b-41a1-41d7-b372-ffacfb5e4d07" }, "391": { "D_lat": 23.1518497467041, "D_lon": -109.7210464477539, "S_lat": 19.337072372436523, "S_lon": -99.56600952148438, "Shape_Leng": 10.850133895874023, "geoq_featureid": "756ae990-43d2-4f38-9aec-504a2c82edc2" }, "394": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 25.56827735900879, "S_lon": -103.41058349609375, "Shape_Leng": 7.512378215789795, "geoq_featureid": "1d2f0822-3bbf-4485-b9e5-714d3c499bc2" }, "397": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 17.996999740600586, "S_lon": -92.8173599243164, "Shape_Leng": 6.4185380935668945, "geoq_featureid": "e43cbc53-cd1a-42d3-b07a-d67d68574c2b" }, "399": { "D_lat": 66.36222076416016, "D_lon": -147.4066619873047, "S_lat": 64.81511688232422, "S_lon": -147.85626220703125, "Shape_Leng": 1.6111818552017212, "geoq_featureid": "b74bd293-d1db-400e-8117-e5bb872dc3d6" }, "403": { "D_lat": 19.337072372436523, "D_lon": -99.56600952148438, "S_lat": 17.6015682220459, "S_lon": -101.46053314208984, "Shape_Leng": 2.569307327270508, "geoq_featureid": "50ee59f7-c0f3-4591-99e8-339d7a409554" }, "404": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 19.144777297973633, "S_lon": -104.55863189697266, "Shape_Leng": 5.494482040405273, "geoq_featureid": "8c9706ab-d951-4cfd-9a86-c8e8742c90c6" }, "429": { "D_lat": 64.81511688232422, "D_lon": -147.85626220703125, "S_lat": 65.8277816772461, "S_lon": -144.07611083984375, "Shape_Leng": 3.913743257522583, "geoq_featureid": "dac960b8-a476-4e0f-93c2-474db3756f2b" }, "440": { "D_lat": 60.77977752685547, "D_lon": -161.83799743652344, "S_lat": 60.93916702270508, "S_lon": -164.64111328125, "Shape_Leng": 2.807692050933838, "geoq_featureid": "12311a0f-32e1-4e5c-aa1d-7359f9f516ed" }, "566": { "D_lat": 61.09416580200195, "D_lon": -94.07083129882812, "S_lat": 58.739166259765625, "S_lon": -94.06500244140625, "Shape_Leng": 2.355006217956543, "geoq_featureid": "f5792715-05e1-4fa7-a137-0b25b81c18f9" }, "569": { "D_lat": 55.801109313964844, "D_lon": -97.86416625976562, "S_lat": 58.739166259765625, "S_lon": -94.06500244140625, "Shape_Leng": 4.804543495178223, "geoq_featureid": "dfe430e5-bc90-41d6-8e3e-87020c62a7b1" }, "594": { "D_lat": 60.77977752685547, "D_lon": -161.83799743652344, "S_lat": 30.316659927368164, "S_lon": -97.7666015625, "Shape_Leng": 73.42941284179688, "geoq_featureid": "a6dca3cd-3d21-41b5-9e06-25b434624dc3" }, "643": { "D_lat": 68.30416870117188, "D_lon": -133.48277282714844, "S_lat": 62.349998474121094, "S_lon": -124.33329772949219, "Shape_Leng": 10.944695472717285, "geoq_featureid": "2e8792de-641c-407c-8aab-9e596f123a51" }, "650": { "D_lat": 62.46277618408203, "D_lon": -114.44027709960938, "S_lat": 60.8397216796875, "S_lon": -115.78277587890625, "Shape_Leng": 2.1065990924835205, "geoq_featureid": "38edc78b-8d7d-403d-b8ea-514eb1711fa4" }, "661": { "D_lat": 62.06050109863281, "D_lon": -163.302001953125, "S_lat": 61.17436218261719, "S_lon": -149.99636840820312, "Shape_Leng": 13.340753555297852, "geoq_featureid": "9390e59d-0ce7-4a97-8d55-bfc417385d21" }, "662": { "D_lat": 63.88833236694336, "D_lon": -160.79888916015625, "S_lat": 61.17436218261719, "S_lon": -149.99636840820312, "Shape_Leng": 11.144463539123535, "geoq_featureid": "874abf35-338c-44be-9e59-c6685eef2f60" }, "668": { "D_lat": 63.75638961791992, "D_lon": -68.55583190917969, "S_lat": 62.8113899230957, "S_lon": -92.11582946777344, "Shape_Leng": 23.606739044189453, "geoq_featureid": "9bfb21a8-fcbc-46b7-87c5-93ce652ed429" }, "675": { "D_lat": 62.46277618408203, "D_lon": -114.44027709960938, "S_lat": 62.8113899230957, "S_lon": -92.11582946777344, "Shape_Leng": 22.350994110107422, "geoq_featureid": "2bf97504-d2ee-4393-8ad3-47a8d596c4ea" }, "708": { "D_lat": 64.29888916015625, "D_lon": -96.0777816772461, "S_lat": 62.8113899230957, "S_lon": -92.11582946777344, "Shape_Leng": 4.232585906982422, "geoq_featureid": "fbfb2ff6-2dff-4a96-8d00-a14c9bc0f721" }, "712": { "D_lat": 62.46277618408203, "D_lon": -114.44027709960938, "S_lat": 69.54666900634766, "S_lon": -93.57666778564453, "Shape_Leng": 22.111539840698242, "geoq_featureid": "0a26b6aa-8ac5-4ba9-98a4-5f5a125f3cea" }, "713": { "D_lat": 69.1080551147461, "D_lon": -105.13833618164062, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 11.470471382141113, "geoq_featureid": "b4856cea-27c8-4d34-89d4-27732aa73185" }, "714": { "D_lat": 67.81666564941406, "D_lon": -115.14389038085938, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 5.400547027587891, "geoq_featureid": "97053edf-f7b3-4d13-a3b6-a51c29c06e26" }, "719": { "D_lat": 64.29888916015625, "D_lon": -96.0777816772461, "S_lat": 66.5213851928711, "S_lon": -86.22472381591797, "Shape_Leng": 10.104683876037598, "geoq_featureid": "42bc67c1-c0fc-4a81-bb38-faeab9ee5798" }, "722": { "D_lat": 68.30416870117188, "D_lon": -133.48277282714844, "S_lat": 65.2816162109375, "S_lon": -126.7982177734375, "Shape_Leng": 7.341131687164307, "geoq_featureid": "a85397d8-f4d7-4ed5-a778-1eba932c0e49" }, "723": { "D_lat": 62.46277618408203, "D_lon": -114.44027709960938, "S_lat": 65.2816162109375, "S_lon": -126.7982177734375, "Shape_Leng": 12.683576583862305, "geoq_featureid": "c8e3ce05-bed5-4b40-aa22-95afea3c27d5" }, "724": { "D_lat": 62.8113899230957, "D_lon": -92.11582946777344, "S_lat": 49.9100341796875, "S_lon": -97.23988342285156, "Shape_Leng": 13.915596008300781, "geoq_featureid": "10e66fd1-52b9-44e6-bf58-0ed534e536d6" }, "727": { "D_lat": 68.63555908203125, "D_lon": -95.84972381591797, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 19.640695571899414, "geoq_featureid": "232ca492-ffbd-4e4c-9cdf-8fed4b25f981" }, "737": { "D_lat": 61.581600189208984, "D_lon": -159.54299926757812, "S_lat": 61.17436218261719, "S_lon": -149.99636840820312, "Shape_Leng": 9.55733871459961, "geoq_featureid": "6a77c6aa-cdcc-4ec9-a337-44f712129d8c" }, "743": { "D_lat": 61.52389907836914, "D_lon": -166.14700317382812, "S_lat": 60.77977752685547, "S_lon": -161.83799743652344, "Shape_Leng": 4.373054027557373, "geoq_featureid": "55fb8517-7097-4d1c-af49-362c1b986ff9" }, "744": { "D_lat": 59.96083450317383, "D_lon": -162.881103515625, "S_lat": 60.77977752685547, "S_lon": -161.83799743652344, "Shape_Leng": 1.3262265920639038, "geoq_featureid": "3d9c7523-76af-4143-84f5-bf5c8e61b5f6" }, "750": { "D_lat": 59.93305587768555, "D_lon": -164.0305633544922, "S_lat": 60.149166107177734, "S_lon": -164.28555297851562, "Shape_Leng": 0.33425962924957275, "geoq_featureid": "a181ed5c-555f-4e38-b3a0-2b650ad7468d" }, "753": { "D_lat": 61.17436218261719, "D_lon": -149.99636840820312, "S_lat": 60.49177932739258, "S_lon": -145.47755432128906, "Shape_Leng": 4.57036018371582, "geoq_featureid": "869c35c6-4bde-4665-9dd4-a29ff79b18cd" }, "757": { "D_lat": 61.17436218261719, "D_lon": -149.99636840820312, "S_lat": 64.81511688232422, "S_lon": -147.85626220703125, "Shape_Leng": 4.225409507751465, "geoq_featureid": "421e588b-733d-4acb-979c-f10a2b8cf0c2" }, "762": { "D_lat": 62.786109924316406, "D_lon": -164.49082946777344, "S_lat": 63.030555725097656, "S_lon": -163.53277587890625, "Shape_Leng": 0.9887524843215942, "geoq_featureid": "80ce2018-e8f7-4878-b792-ca4520d27eb1" }, "781": { "D_lat": 30.316659927368164, "D_lon": -97.7666015625, "S_lat": 60.90583419799805, "S_lon": -162.4391632080078, "Shape_Leng": 74.08698272705078, "geoq_featureid": "364ba5ab-d414-44fe-8215-3d386318ff48" }, "815": { "D_lat": 60.77977752685547, "D_lon": -161.83799743652344, "S_lat": 61.845279693603516, "S_lon": -165.57139587402344, "Shape_Leng": 3.8827626705169678, "geoq_featureid": "49d93517-4a25-4f0a-bf2b-3daacd696078" }, "820": { "D_lat": 65.62249755859375, "D_lon": -168.09500122070312, "S_lat": 66.24960327148438, "S_lon": -166.08900451660156, "Shape_Leng": 2.1017935276031494, "geoq_featureid": "e7d35c7a-5de1-4dc9-8e37-cde33d501c2b" }, "825": { "D_lat": 61.581600189208984, "D_lon": -159.54299926757812, "S_lat": 61.700565338134766, "S_lon": -157.16583251953125, "Shape_Leng": 2.3801729679107666, "geoq_featureid": "9306405c-f384-499f-84bf-c4ab1144300b" }, "886": { "D_lat": 57.74996566772461, "D_lon": -152.4938507080078, "S_lat": 57.218055725097656, "S_lon": -153.2697296142578, "Shape_Leng": 0.9407021999359131, "geoq_featureid": "88aab7a6-6d44-407a-b321-f095e2bd4c60" }, "894": { "D_lat": 20.936981201171875, "D_lon": -89.65766906738281, "S_lat": 17.996999740600586, "S_lon": -92.8173599243164, "Shape_Leng": 4.316051006317139, "geoq_featureid": "e9b54013-d93c-4e0c-9efe-7e6362b6cec0" }, "895": { "D_lat": 19.145931243896484, "D_lon": -96.18726348876953, "S_lat": 17.996999740600586, "S_lon": -92.8173599243164, "Shape_Leng": 3.5604405403137207, "geoq_featureid": "6f46654f-4b63-4220-8a14-0319c6f78908" }, "900": { "D_lat": 64.93944549560547, "D_lon": -161.15415954589844, "S_lat": 64.61499786376953, "S_lon": -162.2705535888672, "Shape_Leng": 1.1625869274139404, "geoq_featureid": "12415206-14cb-4f21-be15-609df733f46e" }, "923": { "D_lat": 61.53630065917969, "D_lon": -160.34100341796875, "S_lat": 61.581600189208984, "S_lon": -159.54299926757812, "Shape_Leng": 0.7992859482765198, "geoq_featureid": "6f7bab11-3b3d-403f-8908-6b336f94b948" }, "926": { "D_lat": 62.692222595214844, "D_lon": -159.5691680908203, "S_lat": 62.89444351196289, "S_lon": -160.06500244140625, "Shape_Leng": 0.5354862809181213, "geoq_featureid": "523cbe7a-a92b-442a-8d9c-1970128eccb6" }, "944": { "D_lat": 64.93944549560547, "D_lon": -161.15415954589844, "S_lat": 64.51219940185547, "S_lon": -165.44525146484375, "Shape_Leng": 4.312478065490723, "geoq_featureid": "c7f3b26f-6651-4ec6-8262-4fb699723cb8" }, "948": { "D_lat": 63.76679992675781, "D_lon": -171.73300170898438, "S_lat": 64.51219940185547, "S_lon": -165.44525146484375, "Shape_Leng": 6.33241081237793, "geoq_featureid": "ec038252-bccc-4977-a0e7-162460ab35e5" }, "949": { "D_lat": 64.68916320800781, "D_lon": -163.41278076171875, "S_lat": 64.51219940185547, "S_lon": -165.44525146484375, "Shape_Leng": 2.0401771068573, "geoq_featureid": "7b2be534-d678-4e02-b989-e93570087090" }, "963": { "D_lat": 64.51219940185547, "D_lon": -165.44525146484375, "S_lat": 66.88468170166016, "S_lon": -162.5985565185547, "Shape_Leng": 3.707298755645752, "geoq_featureid": "12059c0c-c3f5-4903-9599-f137f33c85bf" }, "968": { "D_lat": 64.51219940185547, "D_lon": -165.44525146484375, "S_lat": 66.24960327148438, "S_lon": -166.08900451660156, "Shape_Leng": 1.8529738187789917, "geoq_featureid": "2109e625-a164-4cb4-9a20-dcda65102f5f" }, "974": { "D_lat": 64.51219940185547, "D_lon": -165.44525146484375, "S_lat": 63.6864013671875, "S_lon": -170.4929962158203, "Shape_Leng": 5.115255355834961, "geoq_featureid": "5d46ee48-3265-47fc-9786-b7165289baee" }, "977": { "D_lat": 64.51219940185547, "D_lon": -165.44525146484375, "S_lat": 65.62249755859375, "S_lon": -168.09500122070312, "Shape_Leng": 2.873208999633789, "geoq_featureid": "4da0fb69-225f-4ace-83ca-969d99f177d2" }, "978": { "D_lat": 64.51219940185547, "D_lon": -165.44525146484375, "S_lat": 63.88833236694336, "S_lon": -160.79888916015625, "Shape_Leng": 4.688324928283691, "geoq_featureid": "b13113a4-5114-42e0-8ed8-9bee5dc0e941" }, "981": { "D_lat": 64.51219940185547, "D_lon": -165.44525146484375, "S_lat": 63.51583480834961, "S_lon": -162.27806091308594, "Shape_Leng": 3.3204431533813477, "geoq_featureid": "3a3b6810-3334-4a10-bb17-8068c2ecd40d" }, "996": { "D_lat": 64.72944641113281, "D_lon": -158.0741729736328, "S_lat": 64.73617553710938, "S_lon": -156.9374237060547, "Shape_Leng": 1.1367727518081665, "geoq_featureid": "6be83600-f95f-41f1-a116-8761a661f3c2" }, "1005": { "D_lat": 66.03916931152344, "D_lon": -154.2647247314453, "S_lat": 65.6977767944336, "S_lon": -156.3513946533203, "Shape_Leng": 2.114435911178589, "geoq_featureid": "3e95fb9d-9ac9-4d29-99d2-39c61192344d" }, "1007": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 52.45249938964844, "S_lon": -125.3030014038086, "Shape_Leng": 3.8875279426574707, "geoq_featureid": "62d08fe6-761c-4fc1-a77d-0b9672f852f9" }, "1010": { "D_lat": 64.72720336914062, "D_lon": -155.47000122070312, "S_lat": 65.6977767944336, "S_lon": -156.3513946533203, "Shape_Leng": 1.3111400604248047, "geoq_featureid": "7ba17f18-b303-43bc-ae0e-0dcf3cb15d4c" }, "1031": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 54.02750015258789, "S_lon": -132.125, "Shape_Leng": 10.172836303710938, "geoq_featureid": "af4d4912-c96f-4be0-9577-17f18a57a0df" }, "1049": { "D_lat": 63.13169860839844, "D_lon": -117.24600219726562, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 2.8844618797302246, "geoq_featureid": "96b83e41-9b80-4bb3-9967-02ebe128f074" }, "1056": { "D_lat": 61.760154724121094, "D_lon": -121.23652648925781, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 6.83328104019165, "geoq_featureid": "2148a1f2-f94f-494b-bc56-8369de22e5c5" }, "1058": { "D_lat": 64.11609649658203, "D_lon": -117.30999755859375, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 3.3124935626983643, "geoq_featureid": "603adeb5-29ac-4152-a4b1-7cf993fdb488" }, "1064": { "D_lat": 66.03916931152344, "D_lon": -154.2647247314453, "S_lat": 66.5519027709961, "S_lon": -152.6221923828125, "Shape_Leng": 1.7207221984863281, "geoq_featureid": "dafb5b23-7ad5-4838-939e-cc7df1aaf690" }, "1069": { "D_lat": 66.5519027709961, "D_lon": -152.6221923828125, "S_lat": 64.81511688232422, "S_lon": -147.85626220703125, "Shape_Leng": 5.073587417602539, "geoq_featureid": "f302073e-7652-45dc-95f4-f7a6da78c540" }, "1070": { "D_lat": 65.6977767944336, "D_lon": -156.3513946533203, "S_lat": 64.31909942626953, "S_lon": -158.74099731445312, "Shape_Leng": 2.7591726779937744, "geoq_featureid": "f653f81c-484a-4eaa-8737-7320cf310038" }, "1071": { "D_lat": 68.13359832763672, "D_lon": -151.7429962158203, "S_lat": 64.81511688232422, "S_lon": -147.85626220703125, "Shape_Leng": 5.115213871002197, "geoq_featureid": "0df0d152-5492-45c9-a755-a952ff2e1dc1" }, "1073": { "D_lat": 66.9139404296875, "D_lon": -151.529052734375, "S_lat": 64.81511688232422, "S_lon": -147.85626220703125, "Shape_Leng": 4.231566905975342, "geoq_featureid": "f2b85b62-269c-4c5d-8b10-4d12c6b5c39b" }, "1076": { "D_lat": 64.81511688232422, "D_lon": -147.85626220703125, "S_lat": 66.57149505615234, "S_lon": -145.2504119873047, "Shape_Leng": 3.143232583999634, "geoq_featureid": "c8e1dad3-378f-4d1a-9fa4-3b43396d0b62" }, "1077": { "D_lat": 64.73617553710938, "D_lon": -156.9374237060547, "S_lat": 64.81511688232422, "S_lon": -147.85626220703125, "Shape_Leng": 9.08291244506836, "geoq_featureid": "77f9d57d-227c-45c3-87dd-f7ca526cb1ae" }, "1082": { "D_lat": 64.81511688232422, "D_lon": -147.85626220703125, "S_lat": 66.03916931152344, "S_lon": -154.2647247314453, "Shape_Leng": 6.52522611618042, "geoq_featureid": "86bbe592-075a-4342-9c1d-3ebade69035a" }, "1086": { "D_lat": 64.81511688232422, "D_lon": -147.85626220703125, "S_lat": 64.72720336914062, "S_lon": -155.47000122070312, "Shape_Leng": 7.615077972412109, "geoq_featureid": "1132ce2b-918e-4be8-801a-92db7e042f13" }, "1088": { "D_lat": 65.6977767944336, "D_lon": -156.3513946533203, "S_lat": 65.17955780029297, "S_lon": -152.07583618164062, "Shape_Leng": 4.307037353515625, "geoq_featureid": "d5ba9b2c-a248-4c04-bf06-80370fcbc055" }, "1193": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 58.491390228271484, "S_lon": -119.40777587890625, "Shape_Leng": 7.806709289550781, "geoq_featureid": "c67a9e8c-a841-43ef-8640-dae5710ccc2f" }, "1197": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 58.62138748168945, "S_lon": -117.16471862792969, "Shape_Leng": 6.413273811340332, "geoq_featureid": "c57c2349-9d69-48fe-a62d-b800a0ae614e" }, "1200": { "D_lat": 55.742332458496094, "D_lon": -120.18299865722656, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 7.207681655883789, "geoq_featureid": "e645f12f-8e75-4f2a-88ad-62f56a4637c2" }, "1206": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 56.23805618286133, "S_lon": -120.74028015136719, "Shape_Leng": 7.739506721496582, "geoq_featureid": "e161822c-e900-414b-ad83-285a63d99c9e" }, "1212": { "D_lat": 49.956111907958984, "D_lon": -119.37777709960938, "S_lat": 53.889442443847656, "S_lon": -122.67888641357422, "Shape_Leng": 5.137078285217285, "geoq_featureid": "8f4f24fa-e89a-4ef0-a913-c07ba46a995d" }, "1213": { "D_lat": 56.23805618286133, "D_lon": -120.74028015136719, "S_lat": 53.889442443847656, "S_lon": -122.67888641357422, "Shape_Leng": 3.045877695083618, "geoq_featureid": "f9985cde-f171-41f9-8601-4d7f57b1f54d" }, "1221": { "D_lat": 53.889442443847656, "D_lon": -122.67888641357422, "S_lat": 54.468509674072266, "S_lon": -128.5762176513672, "Shape_Leng": 5.926339149475098, "geoq_featureid": "9dbe5261-d0d5-48a1-86d4-74e5ac85bf0b" }, "1226": { "D_lat": 53.889442443847656, "D_lon": -122.67888641357422, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 9.096625328063965, "geoq_featureid": "afa8d1cf-a016-4532-b828-07a8c392e5fe" }, "1234": { "D_lat": 56.23805618286133, "D_lon": -120.74028015136719, "S_lat": 58.836387634277344, "S_lon": -122.5969467163086, "Shape_Leng": 3.1942152976989746, "geoq_featureid": "6acaab61-06d0-441b-88f3-fd5e2cfa979e" }, "1317": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 107.07286071777344, "geoq_featureid": "f789b1a4-04a6-4b8d-ad58-45c1f1aa4976" }, "1442": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 132.2237091064453, "geoq_featureid": "82823d60-8021-43c9-9976-009a38ea51d0" }, "1454": { "D_lat": -33.946109771728516, "D_lon": 151.17721557617188, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 113.63782501220703, "geoq_featureid": "09a74d51-3805-4dc2-b647-81463b63df45" }, "1637": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 42.36434555053711, "S_lon": -71.00518035888672, "Shape_Leng": 171.4988555908203, "geoq_featureid": "2cd67b52-d222-488f-a043-0c7ab005c2d2" }, "1799": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 24.080881118774414, "geoq_featureid": "295f0e2d-8d7d-45ed-8b08-0177698a7494" }, "1997": { "D_lat": 21.70555877685547, "D_lon": -102.31785583496094, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 12.378000259399414, "geoq_featureid": "ff0af08a-cbee-4a0d-8e6a-24700a729f78" }, "2005": { "D_lat": -27.384166717529297, "D_lon": 153.11749267578125, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 126.08439636230469, "geoq_featureid": "0d6f3c13-2b1e-4667-a1b9-9bc868b00405" }, "2028": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 15.629670143127441, "geoq_featureid": "4c3e45bb-e9fe-4548-8362-473c470cc83b" }, "2066": { "D_lat": 37.46907424926758, "D_lon": 126.45051574707031, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 152.22279357910156, "geoq_featureid": "1ffdd811-ccb2-4413-983a-3b8966c21157" }, "2213": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 14.583271980285645, "S_lon": -90.52747344970703, "Shape_Leng": 19.443828582763672, "geoq_featureid": "87f0adcb-5a53-433b-9aa5-0710b486168a" }, "2223": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 20.521799087524414, "S_lon": -103.31116485595703, "Shape_Leng": 13.879755020141602, "geoq_featureid": "794ba0e1-061f-4675-8e74-e9c9ddc19039" }, "2228": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 21.318681716918945, "S_lon": -157.92242431640625, "Shape_Leng": 62.61444854736328, "geoq_featureid": "575a0603-b388-48a6-8eed-5cdabe4c3408" }, "2232": { "D_lat": 34.85841369628906, "D_lon": 136.80540466308594, "S_lat": 21.318681716918945, "S_lon": -157.92242431640625, "Shape_Leng": 67.52567291259766, "geoq_featureid": "35dd2e53-8915-4b2d-b6ad-e1869c22599a" }, "2233": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 21.318681716918945, "S_lon": -157.92242431640625, "Shape_Leng": 64.11558532714844, "geoq_featureid": "01f6d25d-8e47-4455-ba6b-80aca1601961" }, "2235": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 21.318681716918945, "S_lon": -157.92242431640625, "Shape_Leng": 47.76715087890625, "geoq_featureid": "0d624e1e-25a3-42a6-ad58-8d6e40be1964" }, "2237": { "D_lat": -33.946109771728516, "D_lon": 151.17721557617188, "S_lat": 21.318681716918945, "S_lon": -157.92242431640625, "Shape_Leng": 75.33102416992188, "geoq_featureid": "692547a9-fe2e-41c7-9223-ee734cf01129" }, "2331": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 19.738767623901367, "S_lon": -156.04562377929688, "Shape_Leng": 46.37194061279297, "geoq_featureid": "ecc60b86-bb22-4734-a9be-6c4b2d43ae7f" }, "2353": { "D_lat": 61.17436218261719, "D_lon": -149.99636840820312, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 42.53495407104492, "geoq_featureid": "5d491b95-67ed-4ab5-862b-a73fa41e84d0" }, "2357": { "D_lat": -27.384166717529297, "D_lon": 153.11749267578125, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 108.16246795654297, "geoq_featureid": "57051387-aab3-4bdb-9227-a3c52616a231" }, "2410": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 166.85260009765625, "geoq_featureid": "14d1c576-0eea-4988-8c8f-d2c1d58469c6" }, "2420": { "D_lat": 58.35497283935547, "D_lon": -134.57627868652344, "S_lat": 55.35555648803711, "S_lon": -131.7137451171875, "Shape_Leng": 4.147584915161133, "geoq_featureid": "893a3a12-ae77-4154-93fd-ae6755c1bbeb" }, "2438": { "D_lat": 20.521799087524414, "D_lon": -103.31116485595703, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 20.227733612060547, "geoq_featureid": "e918f99a-16ae-47da-9730-43212ed44f0b" }, "2439": { "D_lat": -23.43207550048828, "D_lon": -46.46950912475586, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 92.38048553466797, "geoq_featureid": "76dd9f6b-2369-47de-add9-025934d3de4c" }, "2440": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 139.106689453125, "geoq_featureid": "1f642973-bed4-4e0b-94fd-a24688b437be" }, "2443": { "D_lat": 29.984432220458984, "D_lon": -95.34143829345703, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 23.440067291259766, "geoq_featureid": "3e7db7e0-3ae4-427c-9be3-49c4a6c3d8b7" }, "2446": { "D_lat": 19.738767623901367, "D_lon": -156.04562377929688, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 40.4070930480957, "geoq_featureid": "e113b1fc-026a-468b-a3bc-bf8f861b08f1" }, "2448": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 128.01385498046875, "geoq_featureid": "58d5df83-e71b-4a39-92f2-4f7d7a653767" }, "2453": { "D_lat": -37.67333221435547, "D_lon": 144.8433380126953, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 121.21003723144531, "geoq_featureid": "fad1019a-92bf-4fc2-86f1-0dff3ac8187e" }, "2454": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 24.217975616455078, "geoq_featureid": "024cb711-d6c6-4f9a-b804-bb36817db34a" }, "2459": { "D_lat": -17.75539207458496, "D_lon": 177.44337463378906, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 82.74365234375, "geoq_featureid": "39a553e6-82d5-497e-9c59-0ce71eefb6ce" }, "2460": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 105.64275360107422, "geoq_featureid": "9413ebff-ad1f-4a42-85bb-7ab7fe8e6065" }, "2470": { "D_lat": 31.14337730407715, "D_lon": 121.80521392822266, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 128.38671875, "geoq_featureid": "a5c8c7ac-5846-4c53-a9a6-e8f525afe1e6" }, "2508": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 51.14805603027344, "S_lon": -0.19027799367904663, "Shape_Leng": 123.69226837158203, "geoq_featureid": "27083e5a-da61-408d-a768-b1ae4aca067b" }, "2527": { "D_lat": 31.14337730407715, "D_lon": 121.80521392822266, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 175.60293579101562, "geoq_featureid": "654f815f-6077-487d-90e5-3d1a4df4d54d" }, "2533": { "D_lat": 32.73355484008789, "D_lon": -117.18966674804688, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 126.80851745605469, "geoq_featureid": "47d18695-59f7-42bf-9abb-8c9eb4c61f5a" }, "2540": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 21.975982666015625, "S_lon": -159.33895874023438, "Shape_Leng": 42.85749435424805, "geoq_featureid": "4dfac150-429e-4fc0-8e1f-4e165c639795" }, "2544": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": -12.021888732910156, "S_lon": -77.11431884765625, "Shape_Leng": 49.18290328979492, "geoq_featureid": "07a3b41b-ac48-4802-8b06-be2e135d51f8" }, "2546": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": -12.021888732910156, "S_lon": -77.11431884765625, "Shape_Leng": 61.973602294921875, "geoq_featureid": "1d701a62-39d3-40d1-adf3-05b549cc551f" }, "2557": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 40.49355697631836, "S_lon": -3.5667641162872314, "Shape_Leng": 122.50343322753906, "geoq_featureid": "7c2a0d3f-cf51-42da-9292-e2d9853ac36f" }, "2621": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 19.84309959411621, "geoq_featureid": "00e4770b-9293-4f1d-b710-6b95f3725324" }, "2694": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 19.849943161010742, "S_lon": -101.02549743652344, "Shape_Leng": 13.645137786865234, "geoq_featureid": "768176cf-4187-4ce0-a732-ec59b1b6c5df" }, "2710": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 25.778488159179688, "S_lon": -100.10688018798828, "Shape_Leng": 7.752661228179932, "geoq_featureid": "59f24c1d-b5eb-4fb2-a0ff-81b60a473fe0" }, "2737": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 23.16135597229004, "S_lon": -106.26607513427734, "Shape_Leng": 13.422506332397461, "geoq_featureid": "22080522-e78c-4def-9b4a-18e3382d0244" }, "2747": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 29.313411712646484, "geoq_featureid": "6622954d-1cd9-4229-973a-27fe6a7128b4" }, "2755": { "D_lat": 28.429393768310547, "D_lon": -81.30899047851562, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 45.663326263427734, "geoq_featureid": "dc5eee0f-b2ed-4f38-95bd-4ca2b46842e4" }, "2760": { "D_lat": 40.08011245727539, "D_lon": 116.58455657958984, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 130.23509216308594, "geoq_featureid": "bd728e0f-9ff3-46b6-88d1-68cac1d34d2e" }, "2778": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 23.1518497467041, "S_lon": -109.7210464477539, "Shape_Leng": 16.00882339477539, "geoq_featureid": "a2d7bd7f-aa0e-4423-9f92-02739b1641d0" }, "2779": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 23.1518497467041, "S_lon": -109.7210464477539, "Shape_Leng": 13.86213207244873, "geoq_featureid": "9aa17eee-d6b8-4f79-81c9-a81e98ac0517" }, "2781": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 23.1518497467041, "S_lon": -109.7210464477539, "Shape_Leng": 10.53524398803711, "geoq_featureid": "28edee5a-2cf3-4786-b0c7-1ae4ed2b047f" }, "2783": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 26.27865219116211, "geoq_featureid": "8d3b33f2-c1ec-4d18-9490-67fb1c5d648d" }, "2794": { "D_lat": 19.738767623901367, "D_lon": -156.04562377929688, "S_lat": 37.72127914428711, "S_lon": -122.22071838378906, "Shape_Leng": 38.50042724609375, "geoq_featureid": "4f219dc1-0bd1-4a08-9f92-5fb2044cbbb5" }, "2795": { "D_lat": 21.975982666015625, "D_lon": -159.33895874023438, "S_lat": 37.72127914428711, "S_lon": -122.22071838378906, "Shape_Leng": 40.5401611328125, "geoq_featureid": "51434a5a-8b8d-4eea-be46-dfda7db29f9f" }, "2796": { "D_lat": 20.898649215698242, "D_lon": -156.43045043945312, "S_lat": 37.72127914428711, "S_lon": -122.22071838378906, "Shape_Leng": 38.312564849853516, "geoq_featureid": "32d33853-07ca-4b4a-bed7-248962a17f31" }, "2800": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 20.898649215698242, "S_lon": -156.43045043945312, "Shape_Leng": 61.182456970214844, "geoq_featureid": "3a7ab3fc-1999-4e9c-b3eb-8e5545fd3ae8" }, "2803": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 35.393089294433594, "S_lon": -97.6007308959961, "Shape_Leng": 20.884071350097656, "geoq_featureid": "ffee7531-fd5b-431f-a417-831bf8ba477f" }, "2883": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 193.964599609375, "geoq_featureid": "cc32d956-d198-431f-903a-6853ba0dbb16" }, "2894": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 31.663007736206055, "geoq_featureid": "0970f5a0-8634-474d-945f-329919aae484" }, "2913": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 25.202852249145508, "geoq_featureid": "fe125d3f-e176-4de8-b99a-19bb8ba5dc84" }, "2920": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 144.98216247558594, "geoq_featureid": "1eb63c2a-4d1f-4aab-956d-a804b4ed313d" }, "2925": { "D_lat": 40.08011245727539, "D_lon": 116.58455657958984, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 183.14303588867188, "geoq_featureid": "0ef4429b-8729-4f90-83f9-b6b8f6fdb884" }, "2942": { "D_lat": 47.44900131225586, "D_lon": -122.3093032836914, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 34.992984771728516, "geoq_featureid": "12af28ec-ab7a-48c0-a204-1babbbb6979e" }, "2946": { "D_lat": 23.1518497467041, "D_lon": -109.7210464477539, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 28.934219360351562, "geoq_featureid": "b4f3458e-bdd7-4a20-b261-08135e2a45ef" }, "2977": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 19.158143997192383, "S_lon": -98.37144470214844, "Shape_Leng": 13.803546905517578, "geoq_featureid": "8f252456-521e-453f-bde3-b29e72cae646" }, "2985": { "D_lat": 42.36434555053711, "D_lon": -71.00518035888672, "S_lat": 45.588722229003906, "S_lon": -122.59750366210938, "Shape_Leng": 52.17713165283203, "geoq_featureid": "185ed552-59b8-4260-99e4-242fb86d4ec0" }, "2989": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 45.588722229003906, "S_lon": -122.59750366210938, "Shape_Leng": 28.661785125732422, "geoq_featureid": "75eb3e5e-eafa-4aa3-b91c-efc3beba0f2e" }, "2994": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 45.588722229003906, "S_lon": -122.59750366210938, "Shape_Leng": 35.027008056640625, "geoq_featureid": "3521f3d0-3574-4f94-abf5-c81f0679fddd" }, "3059": { "D_lat": 47.44900131225586, "D_lon": -122.3093032836914, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 48.08435821533203, "geoq_featureid": "54c783dd-e77c-4dc8-9fd5-fe33786e7165" }, "3081": { "D_lat": 45.588722229003906, "D_lon": -122.59750366210938, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 48.091365814208984, "geoq_featureid": "87a6396f-b971-460e-9220-dc7d36c322e4" }, "3090": { "D_lat": 42.21244430541992, "D_lon": -83.35338592529297, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 30.07961082458496, "geoq_featureid": "bab250af-4b8e-487a-ac6c-26b966983b17" }, "3119": { "D_lat": 61.17436218261719, "D_lon": -149.99636840820312, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 48.09467315673828, "geoq_featureid": "5a40c03f-16cb-4991-a74b-5f6d02bba4e5" }, "3121": { "D_lat": 30.194528579711914, "D_lon": -97.66989135742188, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 14.712307929992676, "geoq_featureid": "23ca6bb4-7440-4c40-8382-a30324719a7f" }, "3123": { "D_lat": 43.564361572265625, "D_lon": -116.22286224365234, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 10.975699424743652, "geoq_featureid": "b799456a-6411-4c58-b865-0345614aab4d" }, "3129": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 28.091156005859375, "geoq_featureid": "d282beea-c5aa-4055-9b54-c94a6a59e6ba" }, "3134": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 120.24166870117188, "geoq_featureid": "f84e216b-0bf8-4951-a10d-572468a49188" }, "3135": { "D_lat": 21.975982666015625, "D_lon": -159.33895874023438, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 49.00352096557617, "geoq_featureid": "7071b5c9-757b-4207-bf3f-d8922e2df5fe" }, "3138": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 19.083972930908203, "geoq_featureid": "944d9130-083a-4af4-b017-dd51d2b0c147" }, "3139": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 32.724639892578125, "geoq_featureid": "7f32b444-4e8b-497a-8cc4-f819389310fa" }, "3142": { "D_lat": 44.881954193115234, "D_lon": -93.22176361083984, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 22.066375732421875, "geoq_featureid": "03457b05-479f-4bc4-80ce-c43d33b6f10c" }, "3145": { "D_lat": 20.898649215698242, "D_lon": -156.43045043945312, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 46.41447830200195, "geoq_featureid": "53b34663-b899-4361-83d9-fe39dea1c6d0" }, "3146": { "D_lat": 41.303165435791016, "D_lon": -95.8940658569336, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 17.9638729095459, "geoq_featureid": "13015763-58c9-44cd-a018-daa6ec833425" }, "3174": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 40.788387298583984, "S_lon": -111.97777557373047, "Shape_Leng": 16.91990089416504, "geoq_featureid": "3bf84ce9-f340-4a1d-8c00-ab675dcfd11d" }, "3179": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 22.254302978515625, "S_lon": -100.9308090209961, "Shape_Leng": 11.334226608276367, "geoq_featureid": "331b8044-f308-420f-9503-2fbc9fb7cfc9" }, "3195": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 9.071364402770996, "S_lon": -79.38345336914062, "Shape_Leng": 29.701486587524414, "geoq_featureid": "17f0dec0-89a7-47ba-aa3a-fe2a56fc440b" }, "3203": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 38.69541549682617, "S_lon": -121.59077453613281, "Shape_Leng": 25.283103942871094, "geoq_featureid": "6228dd36-8014-43ab-a461-38e31237bf4f" }, "3206": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 20.680082321166992, "S_lon": -105.25416564941406, "Shape_Leng": 14.73127555847168, "geoq_featureid": "7716d78b-2836-419b-b523-98396ba5c061" }, "3207": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 20.680082321166992, "S_lon": -105.25416564941406, "Shape_Leng": 27.56194496154785, "geoq_featureid": "bfba0e51-c01e-493e-92da-64991e3c7aa4" }, "3211": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 20.61728858947754, "S_lon": -100.18566131591797, "Shape_Leng": 12.678089141845703, "geoq_featureid": "541e4f2c-e64a-4812-8a61-af9f5f2af948" }, "3214": { "D_lat": 20.898649215698242, "D_lon": -156.43045043945312, "S_lat": 38.69541549682617, "S_lon": -121.59077453613281, "Shape_Leng": 39.33702850341797, "geoq_featureid": "cae268a2-a3ec-4a48-a461-283cdbc45ba7" }, "3218": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 33.67566680908203, "S_lon": -117.86822509765625, "Shape_Leng": 31.207914352416992, "geoq_featureid": "a93e98aa-721e-4e5f-b413-f88359ef8094" }, "3240": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 39.499107360839844, "S_lon": -119.76810455322266, "Shape_Leng": 23.71830177307129, "geoq_featureid": "8e3a37d6-6408-47bc-b213-bf8f3c881ae5" }, "3242": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 39.499107360839844, "S_lon": -119.76810455322266, "Shape_Leng": 32.067543029785156, "geoq_featureid": "96c1a74d-55cb-44d2-8c2a-b2164cb8bebc" }, "3262": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 16.316814422607422, "S_lon": -86.52296447753906, "Shape_Leng": 19.649850845336914, "geoq_featureid": "e40dc59c-7b7c-4ad6-8be0-bafb91fbf1a7" }, "3268": { "D_lat": 42.36434555053711, "D_lon": -71.00518035888672, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 47.56193542480469, "geoq_featureid": "96b006b5-6192-4f8d-ac7d-72be43784895" }, "3269": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 36.472068786621094, "geoq_featureid": "897a8f10-3b8a-4569-903f-1ac0458deabd" }, "3270": { "D_lat": 38.852081298828125, "D_lon": -77.0377197265625, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 40.83442306518555, "geoq_featureid": "3af2f49b-3a4b-4bc6-a081-f765459e9080" }, "3271": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 20.17445182800293, "geoq_featureid": "108461b2-880f-4e3f-a850-681d2ed2decf" }, "3272": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 44.422149658203125, "geoq_featureid": "913490c1-dadc-42e4-a8fe-41ca0c2fd61c" }, "3275": { "D_lat": 20.680082321166992, "D_lon": -105.25416564941406, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 16.978654861450195, "geoq_featureid": "2059201b-2064-46d7-a519-9d9963a61bee" }, "3276": { "D_lat": 47.44900131225586, "D_lon": -122.3093032836914, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 15.593574523925781, "geoq_featureid": "07b67304-1648-42ea-ad60-8948e13ca278" }, "3278": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 29.533693313598633, "S_lon": -98.46977996826172, "Shape_Leng": 16.34994888305664, "geoq_featureid": "a89e816e-9668-47cc-b573-29372de9e844" }, "3280": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 29.533693313598633, "S_lon": -98.46977996826172, "Shape_Leng": 14.100878715515137, "geoq_featureid": "d587743b-c97e-4e52-b21a-b7f5415d5f1b" }, "3286": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 35.23680114746094, "S_lon": -120.64199829101562, "Shape_Leng": 8.818778991699219, "geoq_featureid": "14b044d7-2c8e-4f6e-b428-a6a7ed68f5b9" }, "3289": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": -33.392974853515625, "S_lon": -70.78580474853516, "Shape_Leng": 71.35543823242188, "geoq_featureid": "936aefea-15b1-45ff-b63c-bf49f6d59533" }, "3296": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 38.17408752441406, "S_lon": -85.73649597167969, "Shape_Leng": 12.4813871383667, "geoq_featureid": "867dd0de-ec71-46bd-806f-b67053d4fe3b" }, "3304": { "D_lat": 42.36434555053711, "D_lon": -71.00518035888672, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 52.04810333251953, "geoq_featureid": "19bc0df7-7275-4439-8380-9e8f94f74089" }, "3306": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 43.490264892578125, "geoq_featureid": "23b51183-6fec-4e0c-bc7a-efd816c6944c" }, "3311": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 134.55862426757812, "geoq_featureid": "9ae1d7e3-9baa-448b-a19c-be4eed4376f5" }, "3312": { "D_lat": 35.5522575378418, "D_lon": 139.77969360351562, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 101.82786560058594, "geoq_featureid": "0ab0a957-7f32-47e4-a9e4-3f424cd95159" }, "3315": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 132.1105194091797, "geoq_featureid": "7bd9a864-fc8b-4956-acdd-c81a97225e3c" }, "3317": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 34.88748550415039, "geoq_featureid": "73e8ecec-a6d1-49d9-a05e-5fb0772413ea" }, "3320": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 11.181976318359375, "geoq_featureid": "bb7280b5-98d8-4087-8e4c-2c56464e27a8" }, "3322": { "D_lat": 20.680082321166992, "D_lon": -105.25416564941406, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 24.138803482055664, "geoq_featureid": "1a22ffaa-8a47-45a8-acbe-c32be249ad7e" }, "3323": { "D_lat": 47.44900131225586, "D_lon": -122.3093032836914, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 9.830248832702637, "geoq_featureid": "17d96266-fd2c-4a73-9e76-82bc6662204c" }, "3333": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 38.748695373535156, "S_lon": -90.37002563476562, "Shape_Leng": 28.522254943847656, "geoq_featureid": "76c43c11-c540-49a0-a369-7fc9956fe881" }, "3339": { "D_lat": 20.521799087524414, "D_lon": -103.31116485595703, "S_lat": 37.36259841918945, "S_lon": -121.92902374267578, "Shape_Leng": 25.165740966796875, "geoq_featureid": "88021e9b-2509-4be6-bc1a-6cc7f24c2649" }, "3340": { "D_lat": 21.318681716918945, "D_lon": -157.92242431640625, "S_lat": 37.36259841918945, "S_lon": -121.92902374267578, "Shape_Leng": 39.6108512878418, "geoq_featureid": "14a12442-42cd-4c4b-a841-95710fa81f86" }, "3341": { "D_lat": 19.738767623901367, "D_lon": -156.04562377929688, "S_lat": 37.36259841918945, "S_lon": -121.92902374267578, "Shape_Leng": 38.58965301513672, "geoq_featureid": "ef1b0a65-a4f4-4517-af03-2f26ea8555ee" }, "3344": { "D_lat": 21.975982666015625, "D_lon": -159.33895874023438, "S_lat": 37.36259841918945, "S_lon": -121.92902374267578, "Shape_Leng": 40.668792724609375, "geoq_featureid": "06899566-df21-4efb-bdd1-a86f2bc944f7" }, "3345": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 31.357749938964844, "S_lon": -100.49630737304688, "Shape_Leng": 3.7855193614959717, "geoq_featureid": "f235a753-4b52-4110-acb8-31224bc022e6" }, "3351": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 38.748695373535156, "S_lon": -90.37002563476562, "Shape_Leng": 22.322912216186523, "geoq_featureid": "03247630-f336-49e2-b88a-22e0b42b7b35" }, "3353": { "D_lat": 47.44900131225586, "D_lon": -122.3093032836914, "S_lat": 38.748695373535156, "S_lon": -90.37002563476562, "Shape_Leng": 33.25909423828125, "geoq_featureid": "847bd54a-c31d-4f24-a36f-7f3ac0c95b2e" }, "3355": { "D_lat": 32.73355484008789, "D_lon": -117.18966674804688, "S_lat": 38.50897979736328, "S_lon": -122.81288146972656, "Shape_Leng": 8.06381607055664, "geoq_featureid": "4929764a-12a3-4ab7-928e-62caff132e04" }, "3387": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 27.97547149658203, "S_lon": -82.53324890136719, "Shape_Leng": 30.053970336914062, "geoq_featureid": "c6de3d77-85e1-4d40-b6dd-559d64d93a50" }, "3388": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 25.56827735900879, "S_lon": -103.41058349609375, "Shape_Leng": 9.715133666992188, "geoq_featureid": "a8927a71-b258-4432-8b6a-bc85fde84fa1" }, "3391": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 36.198387145996094, "S_lon": -95.88810729980469, "Shape_Leng": 9.8623628616333, "geoq_featureid": "78ee803a-2e11-4493-b0f2-e8b4a07c6c0a" }, "3392": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 32.11608123779297, "S_lon": -110.94102478027344, "Shape_Leng": 13.932157516479492, "geoq_featureid": "12a4d599-705d-40bc-af46-2893dc729219" }, "3394": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 32.11608123779297, "S_lon": -110.94102478027344, "Shape_Leng": 25.129501342773438, "geoq_featureid": "67c64b56-7e55-4b1c-8c23-63882d17dc53" }, "3434": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 36.28186798095703, "S_lon": -94.30680847167969, "Shape_Leng": 24.25681495666504, "geoq_featureid": "cecd801b-3931-40dc-b4c8-57de6c69d16d" }, "3439": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 19.980947494506836, "geoq_featureid": "79781e21-fe48-46a5-85ed-abb7de4014d0" }, "3440": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 19.939579010009766, "geoq_featureid": "826495ca-61ab-4356-9000-e84fba6ab671" }, "3442": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 32.656578063964844, "S_lon": -114.6059799194336, "Shape_Leng": 2.708516836166382, "geoq_featureid": "835285fc-3202-4906-98aa-d3fb89211f31" }, "3443": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 31.005489349365234, "geoq_featureid": "141ddabb-d5d4-4921-93ba-de6f5d56bb22" }, "3450": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 19.374635696411133, "geoq_featureid": "8d139f16-2936-4a4d-b15a-6b5960c40ed6" }, "3459": { "D_lat": 32.73355484008789, "D_lon": -117.18966674804688, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 18.659387588500977, "geoq_featureid": "459c1cd2-7a5c-4e5e-abae-41f90b58b18a" }, "3472": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 22.897111892700195, "S_lon": -102.6868896484375, "Shape_Leng": 11.488819122314453, "geoq_featureid": "c7f2cff7-6f3f-44bf-8b27-9f9a9440a035" }, "3473": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 17.6015682220459, "S_lon": -101.46053314208984, "Shape_Leng": 19.04326820373535, "geoq_featureid": "7ab07b79-e275-4de3-b40f-73937cbd42e0" }, "3480": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 51.289451599121094, "S_lon": 6.766775131225586, "Shape_Leng": 137.296630859375, "geoq_featureid": "b8967dfc-e5ff-4c0b-93eb-58abb945c51f" }, "3610": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 29.993389129638672, "S_lon": -90.25802612304688, "Shape_Leng": 17.496810913085938, "geoq_featureid": "cace7f72-266b-413a-9e0e-132e22152ac8" }, "3682": { "D_lat": 40.692501068115234, "D_lon": -74.16867065429688, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 41.74092102050781, "geoq_featureid": "80a370a5-6709-4c79-8720-a08a00aafb84" }, "3683": { "D_lat": 29.984432220458984, "D_lon": -95.34143829345703, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 29.830324172973633, "geoq_featureid": "f83469cd-53e5-4b80-9b03-091a83c1a131" }, "3684": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 118.77963256835938, "geoq_featureid": "2b327e74-d1b8-439d-89ad-3fb476b92554" }, "3685": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 28.20735740661621, "geoq_featureid": "6653f167-7e73-4cc7-8d48-d05f393cee8b" }, "3686": { "D_lat": 37.61897277832031, "D_lon": -122.37488555908203, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 18.038379669189453, "geoq_featureid": "9d673b11-19c5-46bd-8dc7-b21331f7805c" }, "3710": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 45.3224983215332, "S_lon": -75.6691665649414, "Shape_Leng": 38.98215103149414, "geoq_featureid": "a5f7bac3-da50-46bf-a9cf-60936c5bc971" }, "3729": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 50.43194580078125, "S_lon": -104.66583251953125, "Shape_Leng": 18.817691802978516, "geoq_featureid": "76984293-1c14-4748-9255-9896f3fd03f6" }, "3730": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 50.43194580078125, "S_lon": -104.66583251953125, "Shape_Leng": 9.371308326721191, "geoq_featureid": "bf33e23d-237d-4626-91eb-88363ca879dd" }, "3746": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 56.6533317565918, "S_lon": -111.2219467163086, "Shape_Leng": 18.065153121948242, "geoq_featureid": "054ed098-bc87-4564-af32-077e9e22872c" }, "3761": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 55.17972183227539, "S_lon": -118.88500213623047, "Shape_Leng": 5.6262712478637695, "geoq_featureid": "d7b9a331-639f-430c-bfdb-f3bf432a919c" }, "3774": { "D_lat": 37.61897277832031, "D_lon": -122.37488555908203, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 49.71034622192383, "geoq_featureid": "8b3acb29-fe09-4d4a-8e8a-0de4659972a9" }, "3792": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 31.55236053466797, "geoq_featureid": "c2be335d-df16-49cb-8f61-19adf2e22a2c" }, "3801": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 42.763816833496094, "geoq_featureid": "3fedcbcd-9821-4a16-8651-eb9d795a7165" }, "3803": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 40.87156677246094, "geoq_featureid": "f6eb5073-44fe-4d4e-8321-e180229a8b69" }, "3807": { "D_lat": -37.008056640625, "D_lon": 174.7916717529297, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 107.2042465209961, "geoq_featureid": "3f31c548-8135-4fd3-9b67-4528e31bec94" }, "3808": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 20.788679122924805, "geoq_featureid": "9d38543e-7d4a-4ea4-b75a-7cf9fe533970" }, "3813": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 142.5618133544922, "geoq_featureid": "23ad42de-e249-4fa1-8fc3-897ec8e9d684" }, "3814": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 137.03268432617188, "geoq_featureid": "9d4a1107-b1d0-4f1c-accd-563e8bac5bc2" }, "3815": { "D_lat": 35.5522575378418, "D_lon": 139.77969360351562, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 102.24029541015625, "geoq_featureid": "244e0b10-be98-4985-bb6c-3a28f890eadf" }, "3816": { "D_lat": 21.318681716918945, "D_lon": -157.92242431640625, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 45.06039047241211, "geoq_featureid": "191e7c4d-ce37-46cc-b0ce-bc28a178b1c4" }, "3817": { "D_lat": 37.46907424926758, "D_lon": 126.45051574707031, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 117.48279571533203, "geoq_featureid": "2620c865-15e7-4ece-9510-f72ba0d9a75d" }, "3818": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 15.406251907348633, "geoq_featureid": "d3214010-5ec0-4033-83f3-dc9115a11149" }, "3819": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 15.995033264160156, "geoq_featureid": "c6cae963-1587-4336-a2a3-9b0c4dcc14b3" }, "3820": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 130.82669067382812, "geoq_featureid": "79ab1e3e-f37d-4c3a-9df7-da83f0fb381c" }, "3821": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 38.61638259887695, "geoq_featureid": "de53eb89-9de1-4ee0-997d-0afb9cfb61c8" }, "3822": { "D_lat": 48.353782653808594, "D_lon": 11.786086082458496, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 147.19314575195312, "geoq_featureid": "b74f3ddb-e031-4e42-8c7c-a7e05acec46c" }, "3823": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 101.50914764404297, "geoq_featureid": "eb772d94-167c-49fd-a95b-6271d8ed23fb" }, "3824": { "D_lat": 20.898649215698242, "D_lon": -156.43045043945312, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 44.1496467590332, "geoq_featureid": "11e7fb99-65a0-4c2b-aaa9-e2ad6951e96e" }, "3825": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 36.19596481323242, "geoq_featureid": "92f52355-74fb-436c-b32e-d2327cc4c3c6" }, "3843": { "D_lat": 40.08011245727539, "D_lon": 116.58455657958984, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 129.20962524414062, "geoq_featureid": "cdc3454d-12b1-4dc4-b2f3-4b7ccfa6b59e" }, "3844": { "D_lat": 31.14337730407715, "D_lon": 121.80521392822266, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 124.54131317138672, "geoq_featureid": "af28294c-9bcf-4303-bf63-4cab8ae23afe" }, "3845": { "D_lat": 20.680082321166992, "D_lon": -105.25416564941406, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 33.877349853515625, "geoq_featureid": "ebc95a19-bccb-4928-9ab5-ba7f0d8d5fa7" }, "3848": { "D_lat": -33.946109771728516, "D_lon": 151.17721557617188, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 121.30891418457031, "geoq_featureid": "a3d237ec-fd7f-4a13-967e-0961da87386d" }, "3849": { "D_lat": 49.95083236694336, "D_lon": -125.27083587646484, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 2.219517230987549, "geoq_featureid": "a7bcfe52-29e1-4dab-939d-f90c1f388a2f" }, "3853": { "D_lat": 50.70222091674805, "D_lon": -120.44444274902344, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 3.1279852390289307, "geoq_featureid": "d0c94c74-10a7-4145-b87a-103819142044" }, "3855": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 52.170833587646484, "S_lon": -106.69972229003906, "Shape_Leng": 12.477649688720703, "geoq_featureid": "b132c5f6-d0e4-4562-8fed-0b185475769a" }, "3857": { "D_lat": 56.6533317565918, "D_lon": -111.2219467163086, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 14.128153800964355, "geoq_featureid": "4554dfa8-0c43-48ed-8a2a-7fbf53c75424" }, "3858": { "D_lat": 45.3224983215332, "D_lon": -75.6691665649414, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 48.0497932434082, "geoq_featureid": "5982349a-92f0-40b4-aea3-1f5a613ffb55" }, "3859": { "D_lat": 54.286109924316406, "D_lon": -130.44471740722656, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 8.876104354858398, "geoq_featureid": "0a61f34b-44dd-4667-9b28-5bde7278efc7" }, "3881": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 49.9100341796875, "S_lon": -97.23988342285156, "Shape_Leng": 12.51801586151123, "geoq_featureid": "1110a25c-3ff0-43da-94c3-db35c65d395f" }, "3886": { "D_lat": 48.371944427490234, "D_lon": -89.32389068603516, "S_lat": 49.9100341796875, "S_lon": -97.23988342285156, "Shape_Leng": 8.066070556640625, "geoq_featureid": "c0cdcb86-230a-49e9-b01d-2f07c6f57a1a" }, "3888": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 49.9100341796875, "S_lon": -97.23988342285156, "Shape_Leng": 26.009946823120117, "geoq_featureid": "20f1067b-9475-4a8d-b159-e436128ab771" }, "3893": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 52.18305587768555, "S_lon": -122.05416870117188, "Shape_Leng": 3.195974588394165, "geoq_featureid": "ea1eb0b7-79db-4769-ad38-1da1ab5588d8" }, "3896": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 52.170833587646484, "S_lon": -106.69972229003906, "Shape_Leng": 6.974851131439209, "geoq_featureid": "6f644c50-f827-4157-8973-23d57829ce29" }, "3898": { "D_lat": 49.9100341796875, "D_lon": -97.23988342285156, "S_lat": 52.170833587646484, "S_lon": -106.69972229003906, "Shape_Leng": 9.730189323425293, "geoq_featureid": "26d91a3a-0caa-4366-ac0f-1b084314909d" }, "3901": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 56.23805618286133, "S_lon": -120.74028015136719, "Shape_Leng": 7.459440231323242, "geoq_featureid": "7b3e0da6-a0fe-4898-90a9-230dbb707107" }, "3903": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 54.468509674072266, "S_lon": -128.5762176513672, "Shape_Leng": 7.548966407775879, "geoq_featureid": "6d65b6ec-bd0f-441e-88c6-385957d05086" }, "3907": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 60.70955276489258, "S_lon": -135.06727600097656, "Shape_Leng": 16.626428604125977, "geoq_featureid": "90e5c498-97be-4b91-8fd2-8d1e8d148f23" }, "3909": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 40.94303512573242, "geoq_featureid": "8e3e8373-bc63-4588-9bc6-d5d05cc51f97" }, "3910": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 14.660750389099121, "geoq_featureid": "a1716371-fbfa-49fd-aa01-885ea2008246" }, "3911": { "D_lat": 40.692501068115234, "D_lon": -74.16867065429688, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 41.5030632019043, "geoq_featureid": "a90a9dca-2aef-4a40-a6f8-125dc853594d" }, "3912": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 130.5465850830078, "geoq_featureid": "4d62df7c-8f7c-4f2c-b251-a49788348525" }, "3913": { "D_lat": 29.984432220458984, "D_lon": -95.34143829345703, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 28.383136749267578, "geoq_featureid": "de0f0400-fe6d-47cc-b405-d4c939c8f930" }, "3914": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 15.077308654785156, "geoq_featureid": "0c2cf95e-8315-4f4a-af38-24cb30133111" }, "3915": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 17.737085342407227, "geoq_featureid": "3c85f69f-ad51-4a99-a168-0d2442935327" }, "3916": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 119.45720672607422, "geoq_featureid": "720fc8d0-e7b2-4f3e-9d35-f07d340e824e" }, "3917": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 112.47463989257812, "geoq_featureid": "a50fc72e-16cc-4570-8753-329d13a5f31c" }, "3918": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 27.778345108032227, "geoq_featureid": "acf1e8c0-653f-429b-b71e-cf684f5624e8" }, "3919": { "D_lat": 45.588722229003906, "D_lon": -122.59750366210938, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 10.212539672851562, "geoq_featureid": "4caf2552-0d41-4b8c-8e82-24bf123cb5af" }, "3920": { "D_lat": 20.680082321166992, "D_lon": -105.25416564941406, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 31.737781524658203, "geoq_featureid": "7a043313-5857-467d-b06c-223a048dbc25" }, "3921": { "D_lat": 37.61897277832031, "D_lon": -122.37488555908203, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 15.906503677368164, "geoq_featureid": "e68ae18b-745d-442f-9cbc-f897f2c943df" }, "3922": { "D_lat": 23.1518497467041, "D_lon": -109.7210464477539, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 28.30729866027832, "geoq_featureid": "c629d70e-3763-4a85-9b47-00e29d1a67b2" }, "3923": { "D_lat": 23.03444480895996, "D_lon": -81.4352798461914, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 43.54305648803711, "geoq_featureid": "d465f5f2-cefb-464a-a523-5dd4d9daa937" }, "3924": { "D_lat": 49.296390533447266, "D_lon": -117.63249969482422, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 4.044210433959961, "geoq_featureid": "e2c35597-249b-4002-ad51-828cdf5bbac1" }, "3925": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 2.239628553390503, "geoq_featureid": "3a2c3f1f-2248-4802-9f8b-38438af192f4" }, "3926": { "D_lat": 49.630279541015625, "D_lon": -112.79972076416016, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 1.9212578535079956, "geoq_featureid": "68f3c6a0-d3ed-4d20-9e42-26f2bd7164e9" }, "3927": { "D_lat": 50.43194580078125, "D_lon": -104.66583251953125, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 9.381895065307617, "geoq_featureid": "127fee1a-2364-4d1a-a3aa-e9d3c2aa7ee3" }, "3928": { "D_lat": 55.17972183227539, "D_lon": -118.88500213623047, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 6.343713760375977, "geoq_featureid": "b3d06109-950a-45cd-bb29-21aba191cfa4" }, "3929": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 40.91856384277344, "geoq_featureid": "918688e2-83c2-4e50-9628-49410365230f" }, "3930": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 9.366424560546875, "geoq_featureid": "5605883d-d718-4c10-ab82-a1e0d69a1482" }, "3931": { "D_lat": 49.9100341796875, "D_lon": -97.23988342285156, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 16.83876609802246, "geoq_featureid": "588dae28-aecb-4638-8075-2369e3708d5c" }, "3933": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 54.82472229003906, "S_lon": -127.18277740478516, "Shape_Leng": 6.910913944244385, "geoq_featureid": "b611c9ad-7c8b-4bc6-819a-73510e373bc7" }, "3935": { "D_lat": 56.6533317565918, "D_lon": -111.2219467163086, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 6.209367752075195, "geoq_featureid": "3be0b93a-07ec-4cda-a64f-cc6f231027b1" }, "3936": { "D_lat": 45.3224983215332, "D_lon": -75.6691665649414, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 39.00184631347656, "geoq_featureid": "9f439568-061c-4289-ace9-7a509415367a" }, "3937": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 48.646942138671875, "S_lon": -123.42583465576172, "Shape_Leng": 0.5978457927703857, "geoq_featureid": "cec18f32-0c2d-40ed-b6a9-43a4f7934be4" }, "3941": { "D_lat": 52.170833587646484, "D_lon": -106.69972229003906, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 7.397876262664795, "geoq_featureid": "81a6ffea-c436-4073-a460-9ba37d0d9b31" }, "3942": { "D_lat": 50.018890380859375, "D_lon": -110.72083282470703, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 3.476625442504883, "geoq_featureid": "70223c69-9320-4209-ba88-8fdc2fa72cec" }, "3943": { "D_lat": 48.646942138671875, "D_lon": -123.42583465576172, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 9.727837562561035, "geoq_featureid": "3e6d6649-65ce-4a20-bedb-c0003b91471b" }, "3956": { "D_lat": 40.08011245727539, "D_lon": 116.58455657958984, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 200.10794067382812, "geoq_featureid": "7a08038a-04cb-4c06-b192-9b38314a58f3" }, "3958": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 34.12495803833008, "geoq_featureid": "e6665acc-9ad1-41d4-89d7-c5329233b6a9" }, "3996": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 214.7707061767578, "geoq_featureid": "0f599fb5-072f-4c6a-a1d8-0088d44de671" }, "3999": { "D_lat": 29.984432220458984, "D_lon": -95.34143829345703, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 20.896883010864258, "geoq_featureid": "1fe18eed-229e-4ecd-b96f-7aeeef47aefc" }, "4004": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 36.50495910644531, "geoq_featureid": "9271a8e6-5f78-4b86-bd2f-99a40e0fb0b1" }, "4005": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 40.228599548339844, "geoq_featureid": "862497f5-5606-4cca-bb56-ef7976b55a7f" }, "4011": { "D_lat": 39.297607421875, "D_lon": -94.71390533447266, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 15.7225923538208, "geoq_featureid": "ae0b73f8-f8af-41d3-8453-6a61abde6d80" }, "4014": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 31.20963478088379, "geoq_featureid": "5ffbaefb-df56-47e6-80b8-122e13f75f43" }, "4017": { "D_lat": 44.881954193115234, "D_lon": -93.22176361083984, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 13.652958869934082, "geoq_featureid": "9a78b217-6a91-43c7-abfb-db9e412a63ff" }, "4021": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 157.29808044433594, "geoq_featureid": "c0d9831f-d97f-4528-9234-fab6b365a6cf" }, "4026": { "D_lat": 31.14337730407715, "D_lon": 121.80521392822266, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 191.86729431152344, "geoq_featureid": "a810d28b-72ef-48de-b375-62a76f4bd695" }, "4028": { "D_lat": 32.73355484008789, "D_lon": -117.18966674804688, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 39.36144256591797, "geoq_featureid": "fddccf35-5afe-458a-aea9-feff436910a8" }, "4030": { "D_lat": 47.44900131225586, "D_lon": -122.3093032836914, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 43.11909866333008, "geoq_featureid": "e7fd1622-7101-47df-a0c4-19671e1f111f" }, "4031": { "D_lat": 37.61897277832031, "D_lon": -122.37488555908203, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 43.45824432373047, "geoq_featureid": "3e3c83fa-886e-4b1d-ae77-a8a8a4c6e1fb" }, "4042": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 35.498252868652344, "geoq_featureid": "7ac8d522-d32a-419c-b0b3-87ad03eb84a6" }, "4048": { "D_lat": 56.6533317565918, "D_lon": -111.2219467163086, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 34.41238784790039, "geoq_featureid": "12471d06-9243-48bb-a667-94370869b927" }, "4054": { "D_lat": 50.43194580078125, "D_lon": -104.66583251953125, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 26.008888244628906, "geoq_featureid": "4739cfcc-4611-425d-b75a-d4341a901f79" }, "4061": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 44.20872116088867, "geoq_featureid": "95c54f52-e9c6-4c72-9ae3-491682aef8f4" }, "4062": { "D_lat": 49.9100341796875, "D_lon": -97.23988342285156, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 18.71428108215332, "geoq_featureid": "04ffc0c6-3994-4c6a-b6a7-47c0917c2e39" }, "4063": { "D_lat": 52.170833587646484, "D_lon": -106.69972229003906, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 28.484556198120117, "geoq_featureid": "2ec2eb3c-ab00-4413-b156-45acdf2b7e59" }, "4065": { "D_lat": 51.113887786865234, "D_lon": -114.02027893066406, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 35.363624572753906, "geoq_featureid": "be182126-6879-4b26-b454-d7873e1e9731" }, "4067": { "D_lat": 48.646942138671875, "D_lon": -123.42583465576172, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 44.382469177246094, "geoq_featureid": "dde33a40-5b87-4fe6-abff-a5284ab30dbe" }, "4071": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 9.194307327270508, "geoq_featureid": "bce9a692-3070-4d3b-af08-ac9aa69a7980" }, "4073": { "D_lat": 49.19388961791992, "D_lon": -123.18444061279297, "S_lat": 53.25433349609375, "S_lon": -131.81382751464844, "Shape_Leng": 9.543519973754883, "geoq_featureid": "263f057f-c64a-4146-9e65-a23be8bdd5c3" }, "4135": { "D_lat": 38.80580520629883, "D_lon": -104.70077514648438, "S_lat": 33.63671875, "S_lon": -84.42807006835938, "Shape_Leng": 20.953508377075195, "geoq_featureid": "7347265c-82a5-416a-835f-032a7e7eb9b2" }, "4246": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 30.194528579711914, "S_lon": -97.66989135742188, "Shape_Leng": 13.689613342285156, "geoq_featureid": "f48ef614-429b-4bb8-9877-295e4618c1da" }, "4297": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.847110748291016, "S_lon": -96.85177612304688, "Shape_Leng": 12.454062461853027, "geoq_featureid": "2957d379-51ce-436a-b486-e4feacc0d12b" }, "4300": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 39.861656188964844, "S_lon": -104.67317962646484, "Shape_Leng": 21.216691970825195, "geoq_featureid": "a67c852b-8c77-4984-b9ca-766adc2258d0" }, "4301": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 12.63713550567627, "geoq_featureid": "13f9c14e-66dc-4062-af60-611ce6c6cafa" }, "4303": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.533973693847656, "S_lon": -93.6630859375, "Shape_Leng": 12.162707328796387, "geoq_featureid": "c250077b-ae18-4ddf-81b2-229ac929eb01" }, "4318": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 31.067249298095703, "S_lon": -97.82891845703125, "Shape_Leng": 13.65227222442627, "geoq_featureid": "9a779d73-c727-421c-8801-d7437a00bd06" }, "4321": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 31.807249069213867, "S_lon": -106.3775863647461, "Shape_Leng": 22.05502700805664, "geoq_featureid": "5f882a61-0e15-4990-9afa-4455eeccad50" }, "4333": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 20.521799087524414, "S_lon": -103.31116485595703, "Shape_Leng": 23.030115127563477, "geoq_featureid": "c477a4f7-d446-4e92-bebe-a1032779eecd" }, "4344": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 37.64994430541992, "S_lon": -97.43305969238281, "Shape_Leng": 13.619324684143066, "geoq_featureid": "e4c21b0d-7cf6-4419-af91-80f0d872e71d" }, "4349": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 21.318681716918945, "S_lon": -157.92242431640625, "Shape_Leng": 41.67816925048828, "geoq_featureid": "9d738ad5-84e4-4cdf-ac48-24c9e9cf73b4" }, "4363": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 36.080055236816406, "S_lon": -115.15225219726562, "Shape_Leng": 30.908273696899414, "geoq_featureid": "0fed7717-a09c-41fc-af89-17dd2b65adf7" }, "4364": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 34.093868255615234, "geoq_featureid": "436c0fb0-4a91-4667-9a7c-6a039e906500" }, "4365": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 131.39625549316406, "geoq_featureid": "d0b357fb-03b9-4964-9ed7-60d364de384d" }, "4367": { "D_lat": 20.898649215698242, "D_lon": -156.43045043945312, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 40.376766204833984, "geoq_featureid": "bb811d9c-680e-4940-ab45-60dd77c47c9e" }, "4384": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 44.881954193115234, "S_lon": -93.22176361083984, "Shape_Leng": 14.295848846435547, "geoq_featureid": "2a081016-9a04-4399-b477-dfde693cbec7" }, "4386": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 44.881954193115234, "S_lon": -93.22176361083984, "Shape_Leng": 27.562257766723633, "geoq_featureid": "9370ba2d-68ee-4319-9a12-ddc28f57aaa9" }, "4387": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 44.881954193115234, "S_lon": -93.22176361083984, "Shape_Leng": 96.20330047607422, "geoq_featureid": "0874a293-daa1-40f9-a5a1-1cb3d3df2a54" }, "4389": { "D_lat": 47.44900131225586, "D_lon": -122.3093032836914, "S_lat": 44.881954193115234, "S_lon": -93.22176361083984, "Shape_Leng": 29.285076141357422, "geoq_featureid": "85544615-2fd5-4839-b922-7b5db1d2c119" }, "4390": { "D_lat": 37.61897277832031, "D_lon": -122.37488555908203, "S_lat": 44.881954193115234, "S_lon": -93.22176361083984, "Shape_Leng": 30.15252113342285, "geoq_featureid": "c4b9e841-2cf6-4276-b51c-b8df5865cc80" }, "4394": { "D_lat": 44.881954193115234, "D_lon": -93.22176361083984, "S_lat": 29.993389129638672, "S_lon": -90.25802612304688, "Shape_Leng": 15.184590339660645, "geoq_featureid": "83827e18-c5bb-4076-8a64-6d73ae73fe1b" }, "4395": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 25.778488159179688, "S_lon": -100.10688018798828, "Shape_Leng": 17.556190490722656, "geoq_featureid": "47f0d94e-0616-4045-84b9-d53fba57a8ee" }, "4407": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 111.65895080566406, "geoq_featureid": "f15be45d-3cb7-4593-855a-886d33d617a0" }, "4422": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 20.680082321166992, "S_lon": -105.25416564941406, "Shape_Leng": 24.57432746887207, "geoq_featureid": "b8453056-e7e2-418a-bd70-22b9c80874a3" }, "4426": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 35.393089294433594, "S_lon": -97.6007308959961, "Shape_Leng": 13.29616928100586, "geoq_featureid": "039db6cc-f70f-401e-b7e0-cb33023a402a" }, "4427": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.303165435791016, "S_lon": -95.8940658569336, "Shape_Leng": 13.808056831359863, "geoq_featureid": "7e55d303-de46-4a12-bf64-076c7a06e58e" }, "4435": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 45.588722229003906, "S_lon": -122.59750366210938, "Shape_Leng": 40.272071838378906, "geoq_featureid": "736baddc-7354-4569-878a-323d069180b0" }, "4444": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": -17.55666732788086, "S_lon": -149.61138916015625, "Shape_Leng": 60.3075065612793, "geoq_featureid": "f9142db6-7e5b-4d48-9330-c5bf18cac82d" }, "4448": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.73355484008789, "S_lon": -117.18966674804688, "Shape_Leng": 32.873104095458984, "geoq_featureid": "7faee3ee-3ed7-4afa-8e4f-c282daf7edc3" }, "4449": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 29.533693313598633, "S_lon": -98.46977996826172, "Shape_Leng": 14.638489723205566, "geoq_featureid": "28cd45ce-08ef-4cca-8ec1-0070b7dd580b" }, "4457": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 40.632442474365234, "geoq_featureid": "55f8fec9-b0e9-4998-914a-ce46a04c5fbc" }, "4458": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 133.96034240722656, "geoq_featureid": "eb6ee34d-50c0-4e3d-b081-3ba05fca2fc7" }, "4459": { "D_lat": 21.318681716918945, "D_lon": -157.92242431640625, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 44.63908004760742, "geoq_featureid": "18d8ef0b-940e-4789-83fb-c99b8a6ec6e4" }, "4460": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 129.99644470214844, "geoq_featureid": "7ebf5cd0-4f54-4962-b7b9-fb0f923d5d31" }, "4461": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 38.32902145385742, "geoq_featureid": "abf7c73c-3b11-4ee1-8271-966d25a7e25f" }, "4462": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 135.75814819335938, "geoq_featureid": "4711b484-a65e-465d-9079-8c7c8ec28dc1" }, "4463": { "D_lat": 21.318681716918945, "D_lon": -157.92242431640625, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 39.30892562866211, "geoq_featureid": "49da1f11-fed3-452a-910f-3b45423a5a56" }, "4464": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 37.24566650390625, "S_lon": -93.38864135742188, "Shape_Leng": 9.663681030273438, "geoq_featureid": "eaf297a9-1af7-4281-b97d-61e84672fb00" }, "4465": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.44662857055664, "S_lon": -93.82559967041016, "Shape_Leng": 9.474967956542969, "geoq_featureid": "9ab984ec-035f-4aa8-887f-51f7f4d89859" }, "4466": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 23.1518497467041, "S_lon": -109.7210464477539, "Shape_Leng": 27.441362380981445, "geoq_featureid": "50829d91-8e0f-4288-bb6d-18058cd64bef" }, "4469": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 40.788387298583984, "S_lon": -111.97777557373047, "Shape_Leng": 28.54762077331543, "geoq_featureid": "d9380a35-a8f6-4b42-9c59-0be6436f3eb9" }, "4470": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 40.788387298583984, "S_lon": -111.97777557373047, "Shape_Leng": 121.95470428466797, "geoq_featureid": "32c3e331-7a10-42a4-bc61-3cb526c17b61" }, "4471": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 38.69541549682617, "S_lon": -121.59077453613281, "Shape_Leng": 37.67576217651367, "geoq_featureid": "406790f2-8cc8-4ade-a6fb-f1b8b1678c94" }, "4472": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 33.67566680908203, "S_lon": -117.86822509765625, "Shape_Leng": 33.54679870605469, "geoq_featureid": "e20271c0-b162-4400-8d4f-8cfd7049eba2" }, "4481": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 36.198387145996094, "S_lon": -95.88810729980469, "Shape_Leng": 11.748088836669922, "geoq_featureid": "b15125d2-2eb6-4ed5-84aa-70aabe5762a6" }, "4482": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.11608123779297, "S_lon": -110.94102478027344, "Shape_Leng": 26.608301162719727, "geoq_featureid": "ed998d61-d283-4f9b-965f-3657ca80cb31" } };
	var data3 = { "12": { "D_lat": 50.643798828125, "D_lon": 36.5900993347168, "S_lat": 54.89004898071289, "S_lon": 20.592632293701172, "Shape_Leng": 16.572479248046875, "geoq_featureid": "7dc613af-90e0-41d0-b803-5dfdcc5e0235" }, "15": { "D_lat": 55.30583572387695, "D_lon": 61.503334045410156, "S_lat": 55.60618591308594, "S_lon": 49.27872848510742, "Shape_Leng": 12.233421325683594, "geoq_featureid": "a9f7c68a-2d1b-4aaf-be89-29c2c522c23c" }, "16": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 55.60618591308594, "S_lon": 49.27872848510742, "Shape_Leng": 11.378439903259277, "geoq_featureid": "282ffc49-044a-43fe-ae7a-60deeb7bcb72" }, "17": { "D_lat": 50.643798828125, "D_lon": 36.5900993347168, "S_lat": 55.60618591308594, "S_lon": 49.27872848510742, "Shape_Leng": 13.641093254089355, "geoq_featureid": "bd1dcfb7-1853-4f74-9e21-2d1c8aa80fcf" }, "23": { "D_lat": 55.60618591308594, "D_lon": 49.27872848510742, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 11.584599494934082, "geoq_featureid": "be198c68-ee80-41d2-b9c4-b1ba6a054809" }, "28": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 54.63999938964844, "S_lon": 52.801700592041016, "Shape_Leng": 14.925003051757812, "geoq_featureid": "44265fca-297b-494e-b2a1-a9157e068478" }, "40": { "D_lat": 52.268028259277344, "D_lon": 104.38897705078125, "S_lat": 55.01262283325195, "S_lon": 82.6506576538086, "Shape_Leng": 21.945865631103516, "geoq_featureid": "aebc64cf-884c-4730-89c3-b87e16891da7" }, "45": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 55.34000015258789, "S_lon": 52.060001373291016, "Shape_Leng": 14.161986351013184, "geoq_featureid": "04a3edc3-594f-46fa-99be-db204f2c4f2e" }, "46": { "D_lat": 40.467498779296875, "D_lon": 50.04666519165039, "S_lat": 55.34000015258789, "S_lon": 52.060001373291016, "Shape_Leng": 15.012009620666504, "geoq_featureid": "4bc49c0b-e1af-4c1c-a00d-ca2ac22a7fc7" }, "47": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 55.34000015258789, "S_lon": 52.060001373291016, "Shape_Leng": 22.291786193847656, "geoq_featureid": "3f691e00-c1a2-4a9d-8e8c-c32da3f73a2a" }, "49": { "D_lat": 56.743106842041016, "D_lon": 60.80272674560547, "S_lat": 60.94927215576172, "S_lon": 76.4836196899414, "Shape_Leng": 16.255767822265625, "geoq_featureid": "8ceb430b-d82e-4a98-b52e-f2d9ca0981af" }, "50": { "D_lat": 54.63999938964844, "D_lon": 52.801700592041016, "S_lat": 60.94927215576172, "S_lon": 76.4836196899414, "Shape_Leng": 24.578235626220703, "geoq_featureid": "54ffe7b8-788d-468d-bf8c-3b8ebf3da9be" }, "55": { "D_lat": 55.01262283325195, "D_lon": 82.6506576538086, "S_lat": 56.37055587768555, "S_lon": 101.69833374023438, "Shape_Leng": 19.11631965637207, "geoq_featureid": "41940132-6073-462f-a478-ec66bbf81af3" }, "56": { "D_lat": 55.01262283325195, "D_lon": 82.6506576538086, "S_lat": 55.30583572387695, "S_lon": 61.503334045410156, "Shape_Leng": 21.176122665405273, "geoq_featureid": "3fa42edb-4038-4152-b2af-a6d6ee93fb29" }, "90": { "D_lat": 6.357227802276611, "D_lon": 2.384352922439575, "S_lat": 12.353194236755371, "S_lon": -1.512416958808899, "Shape_Leng": 7.151082992553711, "geoq_featureid": "9aacb741-1dee-420a-a3bb-c693cb8a6939" }, "115": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 67.13240814208984, "S_lon": 20.81463623046875, "Shape_Leng": 8.032286643981934, "geoq_featureid": "593aa7ca-cbe4-431d-a468-af30eee5a523" }, "122": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 64.57908630371094, "S_lon": 16.833574295043945, "Shape_Leng": 5.0461955070495605, "geoq_featureid": "23ce47aa-e4a3-458c-bbdb-d6ee90378811" }, "124": { "D_lat": 67.13240814208984, "D_lon": 20.81463623046875, "S_lat": 63.0485954284668, "S_lon": 17.768856048583984, "Shape_Leng": 5.099614143371582, "geoq_featureid": "0bed211d-6c11-4947-a065-71cdfa8c5ea7" }, "127": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 64.54832458496094, "S_lon": 18.716218948364258, "Shape_Leng": 4.961467742919922, "geoq_featureid": "d129926b-c48b-49d8-8945-90e3aa8f74b8" }, "128": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 63.40834045410156, "S_lon": 18.990039825439453, "Shape_Leng": 3.906886339187622, "geoq_featureid": "6e78c6aa-8652-461c-bf5b-c2d79d1154c2" }, "131": { "D_lat": 65.80611419677734, "D_lon": 15.082777976989746, "S_lat": 64.57908630371094, "S_lon": 16.833574295043945, "Shape_Leng": 2.1381988525390625, "geoq_featureid": "204811f3-8a87-4727-b64e-4bea5e2c8e51" }, "132": { "D_lat": 63.72117233276367, "D_lon": 23.143131256103516, "S_lat": 61.46168518066406, "S_lon": 21.79998207092285, "Shape_Leng": 2.62908673286438, "geoq_featureid": "76ec66af-775d-4eab-b487-bf5b4a546479" }, "133": { "D_lat": 60.1222038269043, "D_lon": 19.898155212402344, "S_lat": 60.51414108276367, "S_lon": 22.262807846069336, "Shape_Leng": 2.396958589553833, "geoq_featureid": "763e14ad-47b2-4035-b850-fac3177cabfb" }, "134": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 59.186702728271484, "S_lon": 10.258627891540527, "Shape_Leng": 7.675254821777344, "geoq_featureid": "9e557850-316b-4fb0-87b9-f8fab6590712" }, "136": { "D_lat": 60.19391632080078, "D_lon": 11.100360870361328, "S_lat": 56.92914581298828, "S_lon": 14.727993965148926, "Shape_Leng": 4.882806777954102, "geoq_featureid": "7219283a-906a-4328-b378-5dbdc028588b" }, "158": { "D_lat": 14.739707946777344, "D_lon": -17.490224838256836, "S_lat": 4.0060811042785645, "S_lon": 9.719481468200684, "Shape_Leng": 29.260255813598633, "geoq_featureid": "b14e0509-3ce7-4d56-a1ac-4a77be692908" }, "166": { "D_lat": 14.739707946777344, "D_lon": -17.490224838256836, "S_lat": 6.577369213104248, "S_lon": 3.3211560249328613, "Shape_Leng": 22.360355377197266, "geoq_featureid": "ee8997c6-3207-4c00-a80b-a36536bd475d" }, "167": { "D_lat": 4.0060811042785645, "D_lon": 9.719481468200684, "S_lat": 6.577369213104248, "S_lon": 3.3211560249328613, "Shape_Leng": 6.895697116851807, "geoq_featureid": "cd0a34bf-6705-49e9-8e9a-2b1bb3d7b8af" }, "176": { "D_lat": 25.252777099609375, "D_lon": 55.364444732666016, "S_lat": 11.547200202941895, "S_lon": 43.159400939941406, "Shape_Leng": 18.36138153076172, "geoq_featureid": "524cd228-f1c6-4467-85d6-9968165efef3" }, "177": { "D_lat": 21.679563522338867, "D_lon": 39.15653610229492, "S_lat": 11.547200202941895, "S_lon": 43.159400939941406, "Shape_Leng": 10.8950834274292, "geoq_featureid": "8b740f2f-3a9c-4b41-b172-2b8ca0dc32ec" }, "178": { "D_lat": 2.0144400596618652, "D_lon": 45.3046989440918, "S_lat": 11.547200202941895, "S_lon": 43.159400939941406, "Shape_Leng": 9.771204948425293, "geoq_featureid": "aad787cb-65ed-43f7-bc36-03d47c9f666d" }, "180": { "D_lat": 2.0144400596618652, "D_lon": 45.3046989440918, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 9.016120910644531, "geoq_featureid": "8e1d671b-bf88-4662-bef3-9d7da414e4a7" }, "273": { "D_lat": 34.988800048828125, "D_lon": -3.028209924697876, "S_lat": 39.553611755371094, "S_lon": 2.7277779579162598, "Shape_Leng": 7.348781585693359, "geoq_featureid": "0dd9a4d8-ced8-4586-a33d-33cc2b1ef07f" }, "274": { "D_lat": 33.36746597290039, "D_lon": -7.589966773986816, "S_lat": 40.89855194091797, "S_lon": 29.309219360351562, "Shape_Leng": 37.84748458862305, "geoq_featureid": "f2ada1ca-99e6-4c46-a4e3-39c9c541e86e" }, "290": { "D_lat": 39.775001525878906, "D_lon": 64.48332977294922, "S_lat": 55.40861129760742, "S_lon": 37.90611267089844, "Shape_Leng": 31.08006477355957, "geoq_featureid": "cc5bd4ad-7ee9-4031-91c2-69ca4058f7df" }, "299": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 40.35879898071289, "S_lon": 71.74500274658203, "Shape_Leng": 37.371421813964844, "geoq_featureid": "add50903-ed5f-4d58-b774-e60e1e5dd054" }, "300": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 38.83359909057617, "S_lon": 65.92150115966797, "Shape_Leng": 32.83718490600586, "geoq_featureid": "6a1c251e-0288-4918-b013-0468822f8f70" }, "301": { "D_lat": 46.28333282470703, "D_lon": 48.00627899169922, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 22.453983306884766, "geoq_featureid": "0a3d4bd0-57c7-4341-a92a-8c8e6f03bd13" }, "302": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 40.98460006713867, "S_lon": 71.55670166015625, "Shape_Leng": 36.929168701171875, "geoq_featureid": "fce6fc56-421f-4eca-a5d3-801576e7b68e" }, "303": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 40.1171989440918, "S_lon": 65.1707992553711, "Shape_Leng": 31.507099151611328, "geoq_featureid": "848a0ca9-5d17-4341-b4dc-026fca704afd" }, "304": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 39.70054626464844, "S_lon": 66.98382568359375, "Shape_Leng": 33.32997131347656, "geoq_featureid": "b9d2b7f5-e92d-435a-a0f9-0180ac857125" }, "474": { "D_lat": 65.48090362548828, "D_lon": 72.69889831542969, "S_lat": 61.31999969482422, "S_lon": 63.604400634765625, "Shape_Leng": 10.012162208557129, "geoq_featureid": "7fb5e0e5-c929-46d8-9943-361d90bda84f" }, "477": { "D_lat": 61.31999969482422, "D_lon": 63.604400634765625, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 5.3697919845581055, "geoq_featureid": "98dbdab9-314f-4171-83d0-3143dc93d204" }, "478": { "D_lat": 66.04180908203125, "D_lon": 76.31393432617188, "S_lat": 57.18956756591797, "S_lon": 65.32430267333984, "Shape_Leng": 14.175252914428711, "geoq_featureid": "7433594c-7895-4135-9f8d-d98b1c9aa3ea" }, "480": { "D_lat": 66.04180908203125, "D_lon": 76.31393432617188, "S_lat": 54.55751037597656, "S_lon": 55.87441635131836, "Shape_Leng": 23.61643409729004, "geoq_featureid": "2f4bf768-69b0-404f-808c-32494996d20c" }, "484": { "D_lat": 63.68305587768555, "D_lon": 66.68305969238281, "S_lat": 55.591529846191406, "S_lon": 37.2614860534668, "Shape_Leng": 30.655458450317383, "geoq_featureid": "6e76fda0-1d14-4477-95b2-f1b6ee38a07e" }, "485": { "D_lat": 42.488399505615234, "D_lon": 59.62329864501953, "S_lat": 55.591529846191406, "S_lon": 37.2614860534668, "Shape_Leng": 26.071096420288086, "geoq_featureid": "60b17a9b-b7b4-41bb-a527-d40ca78601dd" }, "486": { "D_lat": 66.04180908203125, "D_lon": 76.31393432617188, "S_lat": 55.591529846191406, "S_lon": 37.2614860534668, "Shape_Leng": 40.74988555908203, "geoq_featureid": "70b1847a-fe60-4ed2-a949-be6e8ac0fa02" }, "487": { "D_lat": 65.48090362548828, "D_lon": 72.69889831542969, "S_lat": 55.591529846191406, "S_lon": 37.2614860534668, "Shape_Leng": 37.045814514160156, "geoq_featureid": "4dedb5d2-4f90-4455-96fb-e25ce100f767" }, "488": { "D_lat": 61.31999969482422, "D_lon": 63.604400634765625, "S_lat": 55.591529846191406, "S_lon": 37.2614860534668, "Shape_Leng": 27.037403106689453, "geoq_featureid": "fa9d1443-0834-47f9-aa6e-c9c4960e1673" }, "498": { "D_lat": 63.34029769897461, "D_lon": 53.48259353637695, "S_lat": 55.591529846191406, "S_lon": 37.2614860534668, "Shape_Leng": 18.035640716552734, "geoq_featureid": "4974a5ab-4c7c-4f5e-9885-77047fabc266" }, "604": { "D_lat": 30.578527450561523, "D_lon": 103.94708251953125, "S_lat": 43.9071044921875, "S_lon": 87.4742431640625, "Shape_Leng": 21.249177932739258, "geoq_featureid": "92889bbd-cdfa-4154-8f76-ea3c56ee24c5" }, "605": { "D_lat": 39.54292297363281, "D_lon": 76.01995849609375, "S_lat": 43.9071044921875, "S_lon": 87.4742431640625, "Shape_Leng": 12.266493797302246, "geoq_featureid": "cf9716ca-3949-400b-8279-b79bd5211c26" }, "775": { "D_lat": 23.593278884887695, "D_lon": 58.28444290161133, "S_lat": 23.843332290649414, "S_lon": 90.39778137207031, "Shape_Leng": 32.17504119873047, "geoq_featureid": "78a3732d-4342-453c-8b84-b4407228ca39" }, "778": { "D_lat": 23.843332290649414, "D_lon": 90.39778137207031, "S_lat": 25.252777099609375, "S_lon": 55.364444732666016, "Shape_Leng": 35.1458740234375, "geoq_featureid": "c7e330f7-87f9-4c3c-80cf-c14df286506f" }, "779": { "D_lat": 23.843332290649414, "D_lon": 90.39778137207031, "S_lat": 21.679563522338867, "S_lon": 39.15653610229492, "Shape_Leng": 51.540313720703125, "geoq_featureid": "e7789ac1-26eb-4ebb-a0ac-75870f2776a7" }, "785": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 34.210018157958984, "S_lon": 62.22829818725586, "Shape_Leng": 15.922749519348145, "geoq_featureid": "af79efa7-3774-4a93-87d8-6347fcfb6630" }, "788": { "D_lat": 34.210018157958984, "D_lon": 62.22829818725586, "S_lat": 33.61665344238281, "S_lon": 73.09923553466797, "Shape_Leng": 10.890705108642578, "geoq_featureid": "06f8937b-fc90-4da5-9cdf-ff59d76a447c" }, "791": { "D_lat": 25.252777099609375, "D_lon": 55.364444732666016, "S_lat": 34.565853118896484, "S_lon": 69.21232604980469, "Shape_Leng": 16.706029891967773, "geoq_featureid": "43ff61f9-9f72-41d2-91bd-3830400d2b29" }, "792": { "D_lat": 34.210018157958984, "D_lon": 62.22829818725586, "S_lat": 34.565853118896484, "S_lon": 69.21232604980469, "Shape_Leng": 6.99404764175415, "geoq_featureid": "a6903b65-3251-4bfb-9251-fe7159db1890" }, "795": { "D_lat": 34.565853118896484, "D_lon": 69.21232604980469, "S_lat": 36.706912994384766, "S_lon": 67.20967864990234, "Shape_Leng": 2.931826114654541, "geoq_featureid": "453a20f0-21e3-4bfe-9d39-264e93de471b" }, "806": { "D_lat": 25.557111740112305, "D_lon": 34.583709716796875, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 34.271095275878906, "geoq_featureid": "b4a17907-2350-4d54-9ba8-c35592985294" }, "926": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 51.289451599121094, "S_lon": 6.766775131225586, "Shape_Leng": 13.979048728942871, "geoq_featureid": "5d198d73-fc80-40e9-a796-3b359e5a4edf" }, "990": { "D_lat": 60.29338455200195, "D_lon": 5.218142032623291, "S_lat": 53.63039016723633, "S_lon": 9.988227844238281, "Shape_Leng": 8.205883026123047, "geoq_featureid": "05d4f0ee-cc4a-4434-8be3-cd368652d93c" }, "1172": { "D_lat": 4.872005939483643, "D_lon": 31.601116180419922, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 8.167075157165527, "geoq_featureid": "70f57542-547a-48e0-b7ba-3ad01484b5cc" }, "1189": { "D_lat": 25.252777099609375, "D_lon": 55.364444732666016, "S_lat": 14.508646965026855, "S_lon": 121.01958465576172, "Shape_Leng": 67.03839111328125, "geoq_featureid": "2f0aa499-7f10-4bbf-8fa2-a6e8733ee83f" }, "1208": { "D_lat": 64.36028289794922, "D_lon": 40.43016815185547, "S_lat": 65.02999877929688, "S_lon": 35.733299255371094, "Shape_Leng": 4.744659423828125, "geoq_featureid": "4b33a586-f2a6-4a5f-a050-b3cff1aa8979" }, "1209": { "D_lat": 64.36028289794922, "D_lon": 40.43016815185547, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 11.157371520996094, "geoq_featureid": "a72ff086-2c08-4432-b24c-c926adc24812" }, "1212": { "D_lat": 64.36028289794922, "D_lon": 40.43016815185547, "S_lat": 68.78166961669922, "S_lon": 32.75082015991211, "Shape_Leng": 8.874687194824219, "geoq_featureid": "0acb27c3-8177-47cd-aee8-e886833a9f59" }, "1213": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 68.78166961669922, "S_lon": 32.75082015991211, "Shape_Leng": 9.331109046936035, "geoq_featureid": "0c189100-7764-41f7-ab23-ad078f5dafde" }, "1216": { "D_lat": 64.36028289794922, "D_lon": 40.43016815185547, "S_lat": 67.38053894042969, "S_lon": 53.05101776123047, "Shape_Leng": 12.986515045166016, "geoq_featureid": "a11c717a-152d-4756-b306-affabca79934" }, "1217": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 61.64704895019531, "S_lon": 50.84505081176758, "Shape_Leng": 20.68808364868164, "geoq_featureid": "f85ff323-17cb-4b72-8b5b-b2b3f6b43d43" }, "1219": { "D_lat": 64.36028289794922, "D_lon": 40.43016815185547, "S_lat": 55.97264099121094, "S_lon": 37.414588928222656, "Shape_Leng": 8.923589706420898, "geoq_featureid": "e120e354-15ca-4183-aca6-4a17b044977f" }, "1220": { "D_lat": 68.78166961669922, "D_lon": 32.75082015991211, "S_lat": 55.97264099121094, "S_lon": 37.414588928222656, "Shape_Leng": 13.677943229675293, "geoq_featureid": "f014d6cc-51b8-49b3-8f36-954258b59290" }, "1221": { "D_lat": 61.64704895019531, "D_lon": 50.84505081176758, "S_lat": 55.97264099121094, "S_lon": 37.414588928222656, "Shape_Leng": 14.605754852294922, "geoq_featureid": "a70f1190-51e7-4ada-a68c-201fd70daa97" }, "1223": { "D_lat": 64.36028289794922, "D_lon": 40.43016815185547, "S_lat": 66.00077056884766, "S_lon": 57.22111129760742, "Shape_Leng": 16.881507873535156, "geoq_featureid": "ad13fabb-3d3d-46f5-af08-083b917fa18a" }, "1248": { "D_lat": 12.133688926696777, "D_lon": 15.034019470214844, "S_lat": 21.679563522338867, "S_lon": 39.15653610229492, "Shape_Leng": 25.963542938232422, "geoq_featureid": "13833e47-7905-4ed8-88da-68a303a26f9b" }, "1264": { "D_lat": 27.48390007019043, "D_lon": 95.01689910888672, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 17.959535598754883, "geoq_featureid": "c95ed798-f301-469f-ab37-bbe61c972a22" }, "1350": { "D_lat": 23.077241897583008, "D_lon": 72.63465118408203, "S_lat": 22.654739379882812, "S_lon": 88.44672393798828, "Shape_Leng": 15.824319839477539, "geoq_featureid": "6508c794-3eb6-48c8-9c33-b91461a4c9b6" }, "1368": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 8.823683738708496, "geoq_featureid": "b8f9130b-30fc-4257-aab2-6fd58a16ec07" }, "1371": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 62.534690856933594, "S_lon": 114.03892517089844, "Shape_Leng": 77.79714965820312, "geoq_featureid": "c8673168-166e-490f-883a-b21f9a87e7d5" }, "1421": { "D_lat": 20.24436378479004, "D_lon": 85.81777954101562, "S_lat": 17.45311737060547, "S_lon": 78.46758270263672, "Shape_Leng": 7.8630242347717285, "geoq_featureid": "3b3f7d43-35e6-4268-89c5-bea32955b79a" }, "1424": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 17.45311737060547, "S_lon": 78.46758270263672, "Shape_Leng": 11.255866050720215, "geoq_featureid": "113bd5a0-f926-4369-be73-d7995fc10d41" }, "1427": { "D_lat": 25.252777099609375, "D_lon": 55.364444732666016, "S_lat": 17.45311737060547, "S_lon": 78.46758270263672, "Shape_Leng": 24.409582138061523, "geoq_featureid": "53da2c43-41cd-42b2-81c5-b89d52f0d866" }, "1449": { "D_lat": 33.98714065551758, "D_lon": 74.77424621582031, "S_lat": 32.68914031982422, "S_lon": 74.83738708496094, "Shape_Leng": 1.2995318174362183, "geoq_featureid": "113becc2-0f13-4fc8-9429-967404bf913a" }, "1461": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 26.76059341430664, "S_lon": 80.88933563232422, "Shape_Leng": 14.18222713470459, "geoq_featureid": "2617a460-7e59-4fa1-b0aa-74af7b89f21a" }, "1469": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 12.716999053955078, "geoq_featureid": "6e199970-ad86-4d2c-96ac-26db95fddde9" }, "1477": { "D_lat": 8.482122421264648, "D_lon": 76.92011260986328, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 5.567030906677246, "geoq_featureid": "68497728-f33a-4838-b91e-14d7bb0d9137" }, "1483": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 21.092191696166992, "S_lon": 79.04718017578125, "Shape_Leng": 7.723301410675049, "geoq_featureid": "46917254-d56e-44e1-80ba-ebf70f9021b7" }, "1492": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 18.582111358642578, "S_lon": 73.9197006225586, "Shape_Leng": 15.0924711227417, "geoq_featureid": "1ebb2088-c440-4402-96d9-b753c08c19a3" }, "1499": { "D_lat": 12.994414329528809, "D_lon": 80.1805191040039, "S_lat": 17.721166610717773, "S_lon": 83.22447967529297, "Shape_Leng": 5.6222357749938965, "geoq_featureid": "2e790e82-ca59-4b19-a01a-3d5408e50a4d" }, "1514": { "D_lat": 45.034690856933594, "D_lon": 39.17053985595703, "S_lat": 55.01262283325195, "S_lon": 82.6506576538086, "Shape_Leng": 44.994354248046875, "geoq_featureid": "33e66554-a368-4caa-bb54-79f8bc9c4a9d" }, "1515": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 55.01262283325195, "S_lon": 82.6506576538086, "Shape_Leng": 53.040443420410156, "geoq_featureid": "75547d53-05f5-4a90-98d1-5fe3dc05dc9d" }, "1516": { "D_lat": 62.534690856933594, "D_lon": 114.03892517089844, "S_lat": 55.01262283325195, "S_lon": 82.6506576538086, "Shape_Leng": 32.4236946105957, "geoq_featureid": "3093537e-0ced-4f6c-8bea-79855c79bbd3" }, "1518": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 66.40042877197266, "S_lon": 112.03032684326172, "Shape_Leng": 76.2938232421875, "geoq_featureid": "2b5c1dc6-610c-4890-9ee1-99765cc33d80" }, "1520": { "D_lat": 55.01262283325195, "D_lon": 82.6506576538086, "S_lat": 66.40042877197266, "S_lon": 112.03032684326172, "Shape_Leng": 31.754413604736328, "geoq_featureid": "b7774617-ffb1-47a9-9c97-086e5490cffb" }, "1544": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 51.33436584472656, "S_lon": 46.022953033447266, "Shape_Leng": 9.088502883911133, "geoq_featureid": "494c6aee-7806-44d3-841f-89598a9e6c13" }, "1547": { "D_lat": 50.100833892822266, "D_lon": 14.260000228881836, "S_lat": 51.33436584472656, "S_lon": 46.022953033447266, "Shape_Leng": 31.88854217529297, "geoq_featureid": "ea90576e-01cc-4f25-84be-f1d39bb2e1a3" }, "1549": { "D_lat": 51.33436584472656, "D_lon": 46.022953033447266, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 15.762734413146973, "geoq_featureid": "d06d7c2f-82cf-4383-9574-c7d871a62eb4" }, "1551": { "D_lat": 56.92361068725586, "D_lon": 23.971111297607422, "S_lat": 28.044475555419922, "S_lon": -16.57248878479004, "Shape_Leng": 50.774051666259766, "geoq_featureid": "8489f2c6-55fb-4662-a071-f0ff049a6edc" }, "1561": { "D_lat": 43.449928283691406, "D_lon": 39.95658874511719, "S_lat": 38.543331146240234, "S_lon": 68.82499694824219, "Shape_Leng": 29.37228012084961, "geoq_featureid": "16a4b456-4e89-407e-ada6-fcfdcea87271" }, "1562": { "D_lat": 43.352073669433594, "D_lon": 77.0405044555664, "S_lat": 38.543331146240234, "S_lon": 68.82499694824219, "Shape_Leng": 9.524789810180664, "geoq_featureid": "f4da8a8e-e459-4b52-b5b5-c5bfa454dba7" }, "1563": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 38.543331146240234, "S_lon": 68.82499694824219, "Shape_Leng": 12.97480297088623, "geoq_featureid": "1e4f22c5-9652-4dd4-b81e-87e941cee3cc" }, "1564": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 38.543331146240234, "S_lon": 68.82499694824219, "Shape_Leng": 35.55594253540039, "geoq_featureid": "aeb130f7-ca66-4f96-811f-6474dc1da89a" }, "1574": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 43.06130599975586, "S_lon": 74.47755432128906, "Shape_Leng": 7.239068031311035, "geoq_featureid": "d7270fb7-ad92-4e16-b433-eb1754958a45" }, "1575": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 35.41611099243164, "S_lon": 51.1522216796875, "Shape_Leng": 17.966310501098633, "geoq_featureid": "1294c903-d0ce-4ce6-b037-deabc8851e0d" }, "1576": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 40.97692108154297, "S_lon": 28.814605712890625, "Shape_Leng": 40.29725646972656, "geoq_featureid": "4be78698-3f74-4700-b47a-d291ed5b5888" }, "1577": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 40.21540069580078, "S_lon": 69.6947021484375, "Shape_Leng": 35.540611267089844, "geoq_featureid": "6e9b60ff-a3b7-4f91-bbe0-e161bc581d4f" }, "1581": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 44.75948715209961, "geoq_featureid": "0915ee29-68d7-4d7a-b1b7-40016189150e" }, "1582": { "D_lat": 40.21540069580078, "D_lon": 69.6947021484375, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 44.70183181762695, "geoq_featureid": "bed83556-2426-4bcd-b217-6c238557eb14" }, "1583": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 55.01262283325195, "S_lon": 82.6506576538086, "Shape_Leng": 21.616798400878906, "geoq_featureid": "38c525a9-f4b4-4f7d-ba06-0605095b0d62" }, "1584": { "D_lat": 40.21540069580078, "D_lon": 69.6947021484375, "S_lat": 55.01262283325195, "S_lon": 82.6506576538086, "Shape_Leng": 19.75857925415039, "geoq_featureid": "415430ad-632b-4545-9060-5b3ae3cdfe60" }, "1585": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 61.343692779541016, "S_lon": 73.40184020996094, "Shape_Leng": 23.291826248168945, "geoq_featureid": "d47937fc-b13b-4b35-94d4-99d8be3ef813" }, "1586": { "D_lat": 40.21540069580078, "D_lon": 69.6947021484375, "S_lat": 61.343692779541016, "S_lon": 73.40184020996094, "Shape_Leng": 21.474651336669922, "geoq_featureid": "59d18274-29a6-461b-9299-4c212282f295" }, "1587": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 25.328575134277344, "S_lon": 55.51715087890625, "Shape_Leng": 18.785255432128906, "geoq_featureid": "8a99a093-f9de-405c-b407-43c7c0e16d8e" }, "1588": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 19.952402114868164, "geoq_featureid": "2f3d66e0-436d-4bba-a864-b68b54b398bf" }, "1589": { "D_lat": 38.543331146240234, "D_lon": 68.82499694824219, "S_lat": 43.9071044921875, "S_lon": 87.4742431640625, "Shape_Leng": 19.435747146606445, "geoq_featureid": "d95e4742-2366-47cf-9044-d425450b8e31" }, "1596": { "D_lat": 50.24583435058594, "D_lon": 57.206668853759766, "S_lat": 55.40861129760742, "S_lon": 37.90611267089844, "Shape_Leng": 20.016454696655273, "geoq_featureid": "ba60697d-48b2-486b-851e-42b80acf58bf" }, "1613": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 43.298099517822266, "S_lon": 45.78409957885742, "Shape_Leng": 14.484363555908203, "geoq_featureid": "3e186751-d24d-4579-ad7d-e740a10f8297" }, "1615": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 56.82809829711914, "S_lon": 53.45750045776367, "Shape_Leng": 15.627337455749512, "geoq_featureid": "5bf3dcb9-fd2f-4f15-8a3e-265e8dee46ca" }, "1619": { "D_lat": 50.643798828125, "D_lon": 36.5900993347168, "S_lat": 53.5, "S_lon": 50.150001525878906, "Shape_Leng": 13.868155479431152, "geoq_featureid": "ba856f31-ae37-4fee-b066-edbe303920fb" }, "1622": { "D_lat": 56.090301513671875, "D_lon": 47.3473014831543, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 17.504417419433594, "geoq_featureid": "295f85e7-1d50-4ca7-9965-d32556bfe0f2" }, "1623": { "D_lat": 57.560665130615234, "D_lon": 40.15736770629883, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 10.149459838867188, "geoq_featureid": "b7078f96-401f-4bb7-b7a8-a6da6eb73204" }, "1624": { "D_lat": 58.503299713134766, "D_lon": 49.34830093383789, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 19.14816665649414, "geoq_featureid": "db4ff261-a2ca-4d9e-b33c-212df99ccedf" }, "1629": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 42.81682205200195, "S_lon": 47.65229415893555, "Shape_Leng": 15.974973678588867, "geoq_featureid": "71ec44ff-2171-4be7-8b3a-3950c66ab39c" }, "1630": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 42.81682205200195, "S_lon": 47.65229415893555, "Shape_Leng": 24.513704299926758, "geoq_featureid": "0a479134-0d9b-426a-99f9-762b6899040b" }, "1635": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 61.88520050048828, "S_lon": 34.154701232910156, "Shape_Leng": 7.4935102462768555, "geoq_featureid": "652ed4ab-9a33-4a5a-8709-ff167cc8b23c" }, "1636": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 53.110599517822266, "S_lon": 45.02109909057617, "Shape_Leng": 7.4792022705078125, "geoq_featureid": "f8192c07-70b2-4dcf-bc7e-8ff083ece68c" }, "1637": { "D_lat": 50.643798828125, "D_lon": 36.5900993347168, "S_lat": 47.258209228515625, "S_lon": 39.81808853149414, "Shape_Leng": 4.679121971130371, "geoq_featureid": "a2973daa-d7ac-4745-81f8-d21dea842385" }, "1639": { "D_lat": 44.22507095336914, "D_lon": 43.08189010620117, "S_lat": 40.89855194091797, "S_lon": 29.309219360351562, "Shape_Leng": 14.179994583129883, "geoq_featureid": "07cc1323-5d2d-4a39-af7e-1c595ad3e978" }, "1641": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 54.125099182128906, "S_lon": 45.21229934692383, "Shape_Leng": 7.4195556640625, "geoq_featureid": "d98ffa10-869e-429f-94cb-6381a1088aed" }, "1642": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 54.125099182128906, "S_lon": 45.21229934692383, "Shape_Leng": 16.01900291442871, "geoq_featureid": "2b805a79-7f72-4a5d-966b-6e9b9851fb8a" }, "1643": { "D_lat": 55.47529983520508, "D_lon": 65.41560363769531, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 4.784453868865967, "geoq_featureid": "e02d7fb9-0a28-434a-a4c0-d2a673f0c99c" }, "1644": { "D_lat": 53.5, "D_lon": 50.150001525878906, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 11.14275074005127, "geoq_featureid": "fb1ad96f-6ce0-462d-8893-2093f5a26c25" }, "1653": { "D_lat": 53.393131256103516, "D_lon": 58.75566101074219, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 3.9269440174102783, "geoq_featureid": "893d1c91-e706-4f18-ac9b-d95b0bdb07d5" }, "1654": { "D_lat": 66.04180908203125, "D_lon": 76.31393432617188, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 18.1759033203125, "geoq_featureid": "1775d161-0c50-4dcc-9b3f-9777a07f9c30" }, "1655": { "D_lat": 55.01262283325195, "D_lon": 82.6506576538086, "S_lat": 56.743106842041016, "S_lon": 60.80272674560547, "Shape_Leng": 21.947296142578125, "geoq_featureid": "4e665a11-d22d-4286-b003-fc6b2aa07a99" }, "1664": { "D_lat": 56.743106842041016, "D_lon": 60.80272674560547, "S_lat": 54.55751037597656, "S_lon": 55.87441635131836, "Shape_Leng": 5.392467021942139, "geoq_featureid": "06218ba3-7a65-4c00-864f-885c37955412" }, "1666": { "D_lat": 56.743106842041016, "D_lon": 60.80272674560547, "S_lat": 54.2682991027832, "S_lon": 48.22669982910156, "Shape_Leng": 12.825278282165527, "geoq_featureid": "5d7d59e2-123a-44fe-90ad-a18ba31f4351" }, "1667": { "D_lat": 56.743106842041016, "D_lon": 60.80272674560547, "S_lat": 60.099998474121094, "S_lon": 64.83000183105469, "Shape_Leng": 5.245626926422119, "geoq_featureid": "1abd7fb7-9473-4cd7-b566-68b784b1f525" }, "1668": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 67.48860168457031, "S_lon": 63.993099212646484, "Shape_Leng": 28.997127532958984, "geoq_featureid": "13abac13-6ba9-4a90-a219-f11ddcb3576f" }, "1671": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 48.782527923583984, "S_lon": 44.345542907714844, "Shape_Leng": 17.963743209838867, "geoq_featureid": "db2584e7-462e-472d-b225-9d86e65e2f27" }, "1675": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 51.814212799072266, "S_lon": 39.22958755493164, "Shape_Leng": 12.037837028503418, "geoq_featureid": "031f4139-a52c-460c-a065-8be12a7df294" }, "1761": { "D_lat": 36.947181701660156, "D_lon": 37.47868347167969, "S_lat": 40.97692108154297, "S_lon": 28.814605712890625, "Shape_Leng": 9.559734344482422, "geoq_featureid": "85fee3e0-c5a1-457a-8b08-c58d817df96e" }, "1801": { "D_lat": 43.9071044921875, "D_lon": 87.4742431640625, "S_lat": 36.52750015258789, "S_lon": 102.04299926757812, "Shape_Leng": 16.355411529541016, "geoq_featureid": "dc935f0d-82b7-47d3-afa3-8b232d3f37af" }, "1816": { "D_lat": 55.60618591308594, "D_lon": 49.27872848510742, "S_lat": 36.89873123168945, "S_lon": 30.800460815429688, "Shape_Leng": 26.494977951049805, "geoq_featureid": "da45316e-5dbc-44d8-bab7-8881be70685a" }, "1817": { "D_lat": 55.97264099121094, "D_lon": 37.414588928222656, "S_lat": 36.89873123168945, "S_lon": 30.800460815429688, "Shape_Leng": 20.232585906982422, "geoq_featureid": "42d6cd23-440a-4331-a782-98dac2a57512" }, "1843": { "D_lat": 32.663543701171875, "D_lon": 13.159010887145996, "S_lat": 25.252777099609375, "S_lon": 55.364444732666016, "Shape_Leng": 43.059776306152344, "geoq_featureid": "069db6d5-7e38-4377-9a69-c279897d9eb3" }, "1855": { "D_lat": 31.72255516052246, "D_lon": 35.99321365356445, "S_lat": 32.09678649902344, "S_lon": 20.269472122192383, "Shape_Leng": 15.73835277557373, "geoq_featureid": "58aa179b-53d8-4c44-a472-11cf89234422" }, "1859": { "D_lat": 21.679563522338867, "D_lon": 39.15653610229492, "S_lat": 32.09678649902344, "S_lon": 20.269472122192383, "Shape_Leng": 21.599302291870117, "geoq_featureid": "a1ef1e47-c6ed-43f6-8bd6-552edcc0c346" }, "1863": { "D_lat": 40.97692108154297, "D_lon": 28.814605712890625, "S_lat": 32.32500076293945, "S_lon": 15.060999870300293, "Shape_Leng": 16.27176856994629, "geoq_featureid": "9d13b54f-312f-4f0e-b321-4bc7d426db95" }, "1868": { "D_lat": 31.72255516052246, "D_lon": 35.99321365356445, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 22.885494232177734, "geoq_featureid": "1adff3c9-c29f-47d3-94e8-7fb6620b84db" }, "1870": { "D_lat": 30.121944427490234, "D_lon": 31.405555725097656, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 18.439525604248047, "geoq_featureid": "7dfc451d-b893-463a-aa6c-0d7705ce8bcf" }, "1871": { "D_lat": 33.36746597290039, "D_lon": -7.589966773986816, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 20.78534507751465, "geoq_featureid": "251896af-e430-4fc0-ad82-d20d9dbc6685" }, "1872": { "D_lat": 41.804473876953125, "D_lon": 12.250797271728516, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 9.186161994934082, "geoq_featureid": "5ef2ca6f-2c03-44b8-8129-527b9327ac8f" }, "1873": { "D_lat": 30.91766929626465, "D_lon": 29.696407318115234, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 16.641582489013672, "geoq_featureid": "cbebbfe5-f2bd-41ad-8d2b-254eac7f7982" }, "1874": { "D_lat": 40.97692108154297, "D_lon": 28.814605712890625, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 17.753681182861328, "geoq_featureid": "5130ee0d-c75d-45ed-83db-7ec8d7142d2a" }, "1875": { "D_lat": 21.679563522338867, "D_lon": 39.15653610229492, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 28.285728454589844, "geoq_featureid": "a73ef443-b6c1-4d5e-9c47-b86706a3904f" }, "1876": { "D_lat": 34.717952728271484, "D_lon": 10.690972328186035, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 3.2113685607910156, "geoq_featureid": "8830b978-a0c2-4469-b7dd-8cb86852a226" }, "1877": { "D_lat": 31.861000061035156, "D_lon": 23.906999588012695, "S_lat": 32.663543701171875, "S_lon": 13.159010887145996, "Shape_Leng": 10.781241416931152, "geoq_featureid": "7ea322bf-6b63-43b6-be71-5a6151eea542" }, "1879": { "D_lat": 32.09678649902344, "D_lon": 20.269472122192383, "S_lat": 36.85103225708008, "S_lon": 10.227216720581055, "Shape_Leng": 11.116548538208008, "geoq_featureid": "4aebe0d1-5220-4da7-8244-ade16dde87c0" }, "1880": { "D_lat": 32.32500076293945, "D_lon": 15.060999870300293, "S_lat": 36.85103225708008, "S_lon": 10.227216720581055, "Shape_Leng": 6.623545169830322, "geoq_featureid": "4b5ac8c9-8ba1-4a33-b92d-47a62565b9d4" }, "1881": { "D_lat": 32.663543701171875, "D_lon": 13.159010887145996, "S_lat": 36.85103225708008, "S_lon": 10.227216720581055, "Shape_Leng": 5.112459659576416, "geoq_featureid": "7e671cb3-b60a-424a-a400-bfab59b64a10" }, "1953": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 46.9277458190918, "S_lon": 28.930978775024414, "Shape_Leng": 12.374242782592773, "geoq_featureid": "5361fe08-1580-43fc-8df1-574e477eb075" }, "1968": { "D_lat": 46.9277458190918, "D_lon": 28.930978775024414, "S_lat": 34.875118255615234, "S_lon": 33.62485122680664, "Shape_Leng": 12.943511009216309, "geoq_featureid": "def0f931-a17a-41ae-bce5-0dc6cd0bdc5a" }, "1973": { "D_lat": 46.9277458190918, "D_lon": 28.930978775024414, "S_lat": 61.343692779541016, "S_lon": 73.40184020996094, "Shape_Leng": 47.32970428466797, "geoq_featureid": "43b4c2ef-dac0-45ec-94d6-f9d752aec03e" }, "1994": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 26.471160888671875, "S_lon": 49.797889709472656, "Shape_Leng": 27.431814193725586, "geoq_featureid": "5fcb2ee4-34d0-4e19-96fc-0b887b564fb3" }, "1998": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 25.261125564575195, "S_lon": 51.56505584716797, "Shape_Leng": 25.789047241210938, "geoq_featureid": "631107ff-c4ff-4f67-b1ee-829dfe778b85" }, "2009": { "D_lat": 23.077241897583008, "D_lon": 72.63465118408203, "S_lat": 24.432971954345703, "S_lon": 54.65113830566406, "Shape_Leng": 18.045045852661133, "geoq_featureid": "78c437ea-08f5-43ac-bdf9-8332bf354372" }, "2028": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 12.949986457824707, "S_lon": 77.66820526123047, "Shape_Leng": 25.748254776000977, "geoq_featureid": "c58606ff-8c13-4f94-b250-deae20ba1f45" }, "2050": { "D_lat": 13.681108474731445, "D_lon": 100.74728393554688, "S_lat": 19.088685989379883, "S_lon": 72.867919921875, "Shape_Leng": 28.422544479370117, "geoq_featureid": "38f79e80-5908-413a-b8df-b939d2b00e40" }, "2062": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 19.088685989379883, "S_lon": 72.867919921875, "Shape_Leng": 22.19870948791504, "geoq_featureid": "cd2c969e-1b22-4af4-b1dc-4b6f229b57ef" }, "2063": { "D_lat": 25.252777099609375, "D_lon": 55.364444732666016, "S_lat": 19.088685989379883, "S_lon": 72.867919921875, "Shape_Leng": 18.569046020507812, "geoq_featureid": "9a9fd38c-cfd9-4a4a-8b61-31135f90fdb8" }, "2106": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 22.654739379882812, "S_lon": 88.44672393798828, "Shape_Leng": 15.988061904907227, "geoq_featureid": "df25f449-adc7-43d5-ae08-ecb483f385e4" }, "2110": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 11.030031204223633, "S_lon": 77.04338073730469, "Shape_Leng": 9.076611518859863, "geoq_featureid": "b08f77d7-37e3-44a3-9647-e1fb84712416" }, "2126": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 30.18968963623047, "S_lon": 78.18025970458984, "Shape_Leng": 1.9481085538864136, "geoq_featureid": "8c1456c7-27e8-4d4a-a8e8-ccd0f7920f2c" }, "2127": { "D_lat": 23.077241897583008, "D_lon": 72.63465118408203, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 7.079044818878174, "geoq_featureid": "cce473ff-d91e-4156-a91d-e2a31baba4c1" }, "2138": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 23.843332290649414, "S_lon": 90.39778137207031, "Shape_Leng": 18.17324447631836, "geoq_featureid": "4cbf8e12-b77f-42ca-b5f4-4a82e4d2506d" }, "2139": { "D_lat": 31.7095947265625, "D_lon": 74.7972640991211, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 3.898405075073242, "geoq_featureid": "61408d0a-154f-45a0-a7a3-1855e442a754" }, "2140": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 22.855791091918945, "geoq_featureid": "cbac116a-9d58-4eb8-a3cc-e7efdf45f84a" }, "2143": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 15.626773834228516, "geoq_featureid": "8c47f6cd-cfba-4a3c-8872-93584a7787c8" }, "2144": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 10.382553100585938, "geoq_featureid": "eac77165-957e-4904-b4bc-69eccfb8948e" }, "2146": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 12.797222137451172, "geoq_featureid": "df975b08-0824-4952-a994-330a42e728bd" }, "2147": { "D_lat": 23.843332290649414, "D_lon": 90.39778137207031, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 14.115641593933105, "geoq_featureid": "9799219a-65b9-4f7c-bf7f-aea58cdd9793" }, "2171": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 26.82419204711914, "S_lon": 75.81216430664062, "Shape_Leng": 2.168470859527588, "geoq_featureid": "c596471b-e0b0-424b-87a9-de823e06c256" }, "2177": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 2.7455780506134033, "S_lon": 101.70991516113281, "Shape_Leng": 26.12274742126465, "geoq_featureid": "1ad3e69f-4e01-4c1b-aad4-73d40ffc0b99" }, "2183": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 29.226566314697266, "S_lon": 47.968929290771484, "Shape_Leng": 26.927949905395508, "geoq_featureid": "ac3c2d21-0275-49b7-b9c6-b616b4432c1e" }, "2189": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 15.38083267211914, "S_lon": 73.8314208984375, "Shape_Leng": 4.542102813720703, "geoq_featureid": "3ed2cc49-d728-495c-b1fc-9cd9178e7e78" }, "2192": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 26.739707946777344, "S_lon": 83.44970703125, "Shape_Leng": 6.605020046234131, "geoq_featureid": "856d5374-7c07-4c07-948a-2c9ccfd3081f" }, "2193": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 22.30891990661621, "S_lon": 113.91460418701172, "Shape_Leng": 41.281005859375, "geoq_featureid": "17baf6c8-a062-49ad-bb7e-662bf7f2a594" }, "2194": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 22.30891990661621, "S_lon": 113.91460418701172, "Shape_Leng": 37.452449798583984, "geoq_featureid": "5d222657-6803-4365-a910-4a18163b8aad" }, "2195": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 17.45311737060547, "S_lon": 78.46758270263672, "Shape_Leng": 24.84336280822754, "geoq_featureid": "e0a3d6b6-8a84-4788-b6f7-1c82cc409c8e" }, "2198": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 17.45311737060547, "S_lon": 78.46758270263672, "Shape_Leng": 11.197028160095215, "geoq_featureid": "9473e0e4-5bc4-4d76-ac99-2901e811e031" }, "2199": { "D_lat": 2.7455780506134033, "D_lon": 101.70991516113281, "S_lat": 17.45311737060547, "S_lon": 78.46758270263672, "Shape_Leng": 27.515207290649414, "geoq_featureid": "ab01ea5e-ba57-4df8-82a7-f58e3053b8c6" }, "2203": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 22.721786499023438, "S_lon": 75.80108642578125, "Shape_Leng": 9.94875717163086, "geoq_featureid": "44099f76-bc89-4e76-9abc-c8e8247c81f5" }, "2205": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 22.721786499023438, "S_lon": 75.80108642578125, "Shape_Leng": 5.988092422485352, "geoq_featureid": "dbd53bb1-14c3-4bac-8a7e-a365fb60234c" }, "2209": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 18.582111358642578, "S_lon": 73.9197006225586, "Shape_Leng": 10.480537414550781, "geoq_featureid": "e7ca976f-327c-48e7-8ee5-ee6cb6145b82" }, "2211": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 8.482122421264648, "S_lon": 76.92011260986328, "Shape_Leng": 11.354781150817871, "geoq_featureid": "47f49ef3-88dd-4da2-af9f-fb075fdca7f7" }, "2212": { "D_lat": 26.471160888671875, "D_lon": 49.797889709472656, "S_lat": 8.482122421264648, "S_lon": 76.92011260986328, "Shape_Leng": 32.595619201660156, "geoq_featureid": "8cbb069f-c1f9-4f75-b83a-742ffc48455c" }, "2218": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 12.961267471313477, "S_lon": 74.89006805419922, "Shape_Leng": 6.452569007873535, "geoq_featureid": "351252cf-87a3-4c3e-95b6-3ad03447f7fe" }, "2219": { "D_lat": 25.252777099609375, "D_lon": 55.364444732666016, "S_lat": 12.961267471313477, "S_lon": 74.89006805419922, "Shape_Leng": 23.09257698059082, "geoq_featureid": "c914f5dd-d909-4a94-af2e-95a918b1adfb" }, "2221": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 34.13587188720703, "S_lon": 77.54651641845703, "Shape_Leng": 5.58701753616333, "geoq_featureid": "c130a46c-8b22-4479-971c-308a33f4883c" }, "2226": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 23.314250946044922, "S_lon": 85.3216781616211, "Shape_Leng": 3.1939384937286377, "geoq_featureid": "a77f777e-2de8-45d9-9597-800cbc2bdd8c" }, "2228": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 24.912927627563477, "S_lon": 92.97874450683594, "Shape_Leng": 5.063755512237549, "geoq_featureid": "5577f979-a5b9-4cca-9894-d306d3a4e7a2" }, "2230": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 11.64116096496582, "S_lon": 92.72974395751953, "Shape_Leng": 11.817997932434082, "geoq_featureid": "b9127963-03ab-43e0-bb49-c7d8e2a80e61" }, "2232": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 26.82419204711914, "S_lon": 75.81216430664062, "Shape_Leng": 8.27744197845459, "geoq_featureid": "66ed68ae-d915-4fd5-8e01-a9ee5b7beb68" }, "2236": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 26.2510929107666, "S_lon": 73.04886627197266, "Shape_Leng": 4.669123649597168, "geoq_featureid": "bf656ee8-47c4-45fd-9602-dec1d6b70d02" }, "2237": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 21.679563522338867, "S_lon": 39.15653610229492, "Shape_Leng": 33.867515563964844, "geoq_featureid": "390cf2bc-353c-42c9-af63-7f04b4e17f86" }, "2238": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": -26.1391658782959, "S_lon": 28.246000289916992, "Shape_Leng": 63.592315673828125, "geoq_featureid": "b471e4d3-6e08-492c-8b07-0acb8b550c07" }, "2239": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 27.696582794189453, "S_lon": 85.35910034179688, "Shape_Leng": 15.178350448608398, "geoq_featureid": "25a99775-2843-4039-a1dd-78e549ee9804" }, "2240": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 27.696582794189453, "S_lon": 85.35910034179688, "Shape_Leng": 8.303018569946289, "geoq_featureid": "72e2ff59-492f-43ee-b081-900934ebed45" }, "2242": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 28.007444381713867, "geoq_featureid": "42410fa9-9b5e-4276-907f-2b7f032567a2" }, "2244": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 9.520161628723145, "geoq_featureid": "23a76650-14af-4c01-b73e-1e39330a3f0f" }, "2247": { "D_lat": 10.155555725097656, "D_lon": 76.39138793945312, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 4.734683036804199, "geoq_featureid": "a438d736-2c0a-44d0-be27-e1e47264f48c" }, "2248": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 15.874359130859375, "geoq_featureid": "0288f2ea-9e62-4cc8-9347-6ccab3de9bf5" }, "2249": { "D_lat": 15.38083267211914, "D_lon": 73.8314208984375, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 6.7830305099487305, "geoq_featureid": "f1f2aa70-0b2f-4270-a22d-cee05283d39a" }, "2250": { "D_lat": 17.45311737060547, "D_lon": 78.46758270263672, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 4.776463985443115, "geoq_featureid": "6e9d25c5-7d10-4d15-b1c9-8a7b1063d4d4" }, "2252": { "D_lat": 11.64116096496582, "D_lon": 92.72974395751953, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 12.623128890991211, "geoq_featureid": "909cab27-61e5-404f-8d9f-fecc81184dbf" }, "2260": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 41.35979461669922, "geoq_featureid": "8e2e5996-378c-4677-abfb-6f893ef7d17b" }, "2261": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 35.76472091674805, "S_lon": 140.38638305664062, "Shape_Leng": 70.53914642333984, "geoq_featureid": "e6b73052-5c34-4189-91ea-1e07393d8f28" }, "2264": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 25.59131622314453, "S_lon": 85.0879898071289, "Shape_Leng": 8.522786140441895, "geoq_featureid": "a0d8f941-24bb-4bd6-bdce-37a427584613" }, "2266": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 18.582111358642578, "S_lon": 73.9197006225586, "Shape_Leng": 6.765783786773682, "geoq_featureid": "995eb702-cec2-4b84-816e-e198fb509ff6" }, "2267": { "D_lat": 17.45311737060547, "D_lon": 78.46758270263672, "S_lat": 18.582111358642578, "S_lon": 73.9197006225586, "Shape_Leng": 4.686051368713379, "geoq_featureid": "b5cd1617-28e6-4fa9-823b-f9c78bb499a3" }, "2268": { "D_lat": 22.721786499023438, "D_lon": 75.80108642578125, "S_lat": 18.582111358642578, "S_lon": 73.9197006225586, "Shape_Leng": 4.5472412109375, "geoq_featureid": "7da87700-60cc-4393-bdf3-b68385ba97c9" }, "2271": { "D_lat": 23.287466049194336, "D_lon": 77.33737182617188, "S_lat": 21.18040657043457, "S_lon": 81.73875427246094, "Shape_Leng": 4.879969120025635, "geoq_featureid": "09c86463-40a9-42a8-a73f-aad0764a22ae" }, "2272": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 21.18040657043457, "S_lon": 81.73875427246094, "Shape_Leng": 9.115208625793457, "geoq_featureid": "6299cd92-3448-4d65-a150-464b677f9e48" }, "2273": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 21.18040657043457, "S_lon": 81.73875427246094, "Shape_Leng": 8.721748352050781, "geoq_featureid": "aac5f4a8-af33-4e5f-8e35-83e311f6e6f7" }, "2274": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 24.957639694213867, "S_lon": 46.69877624511719, "Shape_Leng": 26.852540969848633, "geoq_featureid": "fa1b6fc3-0e54-4f98-987e-a17a673175a8" }, "2275": { "D_lat": 10.155555725097656, "D_lon": 76.39138793945312, "S_lat": 25.328575134277344, "S_lon": 55.51715087890625, "Shape_Leng": 25.831430435180664, "geoq_featureid": "96354892-a5c8-42e3-acfd-66c143cf3357" }, "2276": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 1.350188970565796, "S_lon": 103.99443054199219, "Shape_Leng": 35.85016632080078, "geoq_featureid": "1e08f3ac-39df-4703-a9c9-a916b799320b" }, "2278": { "D_lat": 12.994414329528809, "D_lon": 80.1805191040039, "S_lat": 1.350188970565796, "S_lon": 103.99443054199219, "Shape_Leng": 26.512903213500977, "geoq_featureid": "c626ae19-bd3f-488f-be5c-092c6216541b" }, "2279": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 33.98714065551758, "S_lon": 74.77424621582031, "Shape_Leng": 5.90022087097168, "geoq_featureid": "ef9b1d03-d5d7-4df1-b94f-727797b5982d" }, "2280": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 8.482122421264648, "S_lon": 76.92011260986328, "Shape_Leng": 27.418617248535156, "geoq_featureid": "1135dee7-b292-4790-9be2-4ab4046cdcb4" }, "2281": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 8.482122421264648, "S_lon": 76.92011260986328, "Shape_Leng": 4.530065059661865, "geoq_featureid": "6e2771b2-b1ea-4812-ad9f-761b2a906dc4" }, "2282": { "D_lat": 12.994414329528809, "D_lon": 80.1805191040039, "S_lat": 10.765363693237305, "S_lon": 78.70972442626953, "Shape_Leng": 2.6705713272094727, "geoq_featureid": "13ebbcc9-5b65-441b-be4f-1920fd7236da" }, "2283": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 24.61769676208496, "S_lon": 73.89610290527344, "Shape_Leng": 5.623846530914307, "geoq_featureid": "8a23f0f8-db59-4b9f-b06b-b4b991164142" }, "2284": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 24.61769676208496, "S_lon": 73.89610290527344, "Shape_Leng": 5.087413311004639, "geoq_featureid": "4f1133da-a114-4aaf-aca0-6e8570fe2b4b" }, "2285": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 25.45235824584961, "S_lon": 82.85934448242188, "Shape_Leng": 6.249207019805908, "geoq_featureid": "db786b6d-4ba3-4558-9063-b34085550537" }, "2286": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 25.45235824584961, "S_lon": 82.85934448242188, "Shape_Leng": 6.545464515686035, "geoq_featureid": "00b3d462-0653-4090-a5e5-ddd10cbe1e71" }, "2287": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 17.721166610717773, "S_lon": 83.22447967529297, "Shape_Leng": 7.324105262756348, "geoq_featureid": "a751cbbd-0742-42b6-97bb-6f0117c6b5c5" }, "2288": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 17.721166610717773, "S_lon": 83.22447967529297, "Shape_Leng": 10.447813987731934, "geoq_featureid": "1b9fee9a-ec8b-493e-bafb-77478522b33d" }, "2289": { "D_lat": 22.654739379882812, "D_lon": 88.44672393798828, "S_lat": 17.721166610717773, "S_lon": 83.22447967529297, "Shape_Leng": 7.184817790985107, "geoq_featureid": "ef2e31a5-2d33-48b6-a3cc-fd5a1a46a801" }, "2371": { "D_lat": 37.93635940551758, "D_lon": 23.944467544555664, "S_lat": 24.432971954345703, "S_lon": 54.65113830566406, "Shape_Leng": 33.679969787597656, "geoq_featureid": "33d6af72-f656-4818-8d4a-7fea8584fd6b" }, "2392": { "D_lat": 39.60194396972656, "D_lon": 19.911666870117188, "S_lat": 55.40861129760742, "S_lon": 37.90611267089844, "Shape_Leng": 24.10369300842285, "geoq_featureid": "b603c36c-1e21-4930-8744-2660f5dca5f7" }, "2431": { "D_lat": 35.339717864990234, "D_lon": 25.1802978515625, "S_lat": 43.43555450439453, "S_lon": 5.213611125946045, "Shape_Leng": 21.5929012298584, "geoq_featureid": "83420633-a42b-4444-9cda-59e51f7e4fbc" }, "2441": { "D_lat": 37.93635940551758, "D_lon": 23.944467544555664, "S_lat": 60.19391632080078, "S_lon": 11.100360870361328, "Shape_Leng": 25.89548110961914, "geoq_featureid": "76c8520f-7871-44f8-881e-19d44d6f235e" }, "2450": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 36.7933349609375, "S_lon": 27.09166717529297, "Shape_Leng": 21.623083114624023, "geoq_featureid": "8fa8cacd-27ac-4816-bd64-6c4be8047671" }, "2458": { "D_lat": 35.339717864990234, "D_lon": 25.1802978515625, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 25.024202346801758, "geoq_featureid": "f8d9a5a8-9f95-413b-9549-5f615e3b776c" }, "2469": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 36.405418395996094, "S_lon": 28.086191177368164, "Shape_Leng": 23.50364112854004, "geoq_featureid": "9325fa2c-acde-4777-8f6a-6feaa794f7dd" }, "2471": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 40.51972579956055, "S_lon": 22.970949172973633, "Shape_Leng": 19.823530197143555, "geoq_featureid": "25a64f15-1ec4-4df6-af48-6039018eda09" }, "2476": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 36.405418395996094, "S_lon": 28.086191177368164, "Shape_Leng": 21.47340202331543, "geoq_featureid": "66e32512-5493-44c4-9b90-5fc431ee2a94" }, "2483": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 40.51972579956055, "S_lon": 22.970949172973633, "Shape_Leng": 21.200815200805664, "geoq_featureid": "35e10a47-ed7b-48c6-85fd-e0abe10114a0" }, "2489": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 40.51972579956055, "S_lon": 22.970949172973633, "Shape_Leng": 20.68256187438965, "geoq_featureid": "59bc0a36-ea46-414e-b9b7-4f1a3de23839" }, "2498": { "D_lat": 37.93635940551758, "D_lon": 23.944467544555664, "S_lat": 41.669166564941406, "S_lon": 44.9547233581543, "Shape_Leng": 21.373291015625, "geoq_featureid": "e233dac1-6151-452e-a468-47835ce90146" }, "2500": { "D_lat": 37.93635940551758, "D_lon": 23.944467544555664, "S_lat": 32.011390686035156, "S_lon": 34.88666534423828, "Shape_Leng": 12.452207565307617, "geoq_featureid": "7e4bcccb-3511-4e42-bfe0-7f37b838ac23" }, "2501": { "D_lat": 35.339717864990234, "D_lon": 25.1802978515625, "S_lat": 32.011390686035156, "S_lon": 34.88666534423828, "Shape_Leng": 10.264957427978516, "geoq_featureid": "57f77841-0ad9-4c05-a698-d9718854aae8" }, "2695": { "D_lat": 41.61027908325195, "D_lon": 41.599693298339844, "S_lat": 55.40861129760742, "S_lon": 37.90611267089844, "Shape_Leng": 14.295934677124023, "geoq_featureid": "85564685-4372-4748-9b03-9794d3441453" }, "2704": { "D_lat": 56.92361068725586, "D_lon": 23.971111297607422, "S_lat": 41.669166564941406, "S_lon": 44.9547233581543, "Shape_Leng": 26.13010597229004, "geoq_featureid": "e0f44b4c-2a64-418f-98c1-9ec848c586e8" }, "2708": { "D_lat": 41.669166564941406, "D_lon": 44.9547233581543, "S_lat": 32.011390686035156, "S_lon": 34.88666534423828, "Shape_Leng": 13.968339920043945, "geoq_featureid": "2c8263aa-bb96-43e3-9d02-d37ca11ba142" }, "2709": { "D_lat": 41.669166564941406, "D_lon": 44.9547233581543, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 29.206933975219727, "geoq_featureid": "0123986b-ae91-4077-9eae-197225229dc7" }, "2710": { "D_lat": 42.17665481567383, "D_lon": 42.482582092285156, "S_lat": 55.591529846191406, "S_lon": 37.2614860534668, "Shape_Leng": 14.416824340820312, "geoq_featureid": "de931af9-4f7c-4d01-8b3f-75d2f8fe4be0" }, "2711": { "D_lat": 41.669166564941406, "D_lon": 44.9547233581543, "S_lat": 55.591529846191406, "S_lon": 37.2614860534668, "Shape_Leng": 15.948906898498535, "geoq_featureid": "7faa31f6-8a79-4894-a17f-dcadc2ede692" }, "2763": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 7.180756092071533, "S_lon": 79.88411712646484, "Shape_Leng": 30.60111427307129, "geoq_featureid": "02d2abac-e61c-4a27-97ba-c0816f3bd6e8" }, "2798": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 33.61665344238281, "S_lon": 73.09923553466797, "Shape_Leng": 20.63620376586914, "geoq_featureid": "886d1333-c421-4ddb-adcb-a08c29c9b338" }, "2806": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 60.317222595214844, "S_lon": 24.963333129882812, "Shape_Leng": 27.037559509277344, "geoq_featureid": "7a458b69-d151-44ba-92d9-e352fb6983fd" }, "2807": { "D_lat": 53.35374450683594, "D_lon": -2.2749500274658203, "S_lat": 60.317222595214844, "S_lon": 24.963333129882812, "Shape_Leng": 28.216596603393555, "geoq_featureid": "cf934718-42b9-4c4a-a624-dcae8f488e99" }, "2810": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": -26.1391658782959, "S_lon": 28.246000289916992, "Shape_Leng": 83.16584014892578, "geoq_featureid": "d9a4063e-c29a-4e35-a0fc-57f535476b9d" }, "2811": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 17.45311737060547, "S_lon": 78.46758270263672, "Shape_Leng": 89.10211181640625, "geoq_featureid": "a25a7a7e-4cb8-473a-a073-60ae0ddb8bbc" }, "2812": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 38.94453430175781, "S_lon": -77.455810546875, "Shape_Leng": 146.51943969726562, "geoq_featureid": "965f2a19-155d-466a-bfc6-b35a36b045df" }, "2813": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 38.94453430175781, "S_lon": -77.455810546875, "Shape_Leng": 141.96885681152344, "geoq_featureid": "6edecc98-5a57-4700-b8c4-88d643931eeb" }, "2815": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 29.984432220458984, "S_lon": -95.34143829345703, "Shape_Leng": 169.15377807617188, "geoq_featureid": "e920b7ca-cb3e-44cd-8585-883fd50be9fd" }, "2824": { "D_lat": 60.317222595214844, "D_lon": 24.963333129882812, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 105.46175384521484, "geoq_featureid": "18efea17-93a4-436f-ae7a-cfe74b472687" }, "2833": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 2.7455780506134033, "S_lon": 101.70991516113281, "Shape_Leng": 109.28527069091797, "geoq_featureid": "fd823fd3-f120-4c64-b46a-393d610c837c" }, "2835": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 2.7455780506134033, "S_lon": 101.70991516113281, "Shape_Leng": 119.88346862792969, "geoq_featureid": "79c2c78f-e278-49db-8bd2-801acf0b11f2" }, "2850": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 31.521564483642578, "S_lon": 74.40359497070312, "Shape_Leng": 21.01132583618164, "geoq_featureid": "e5cdabe2-20d4-4377-9278-3c533366d75f" }, "2855": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 20.18177604675293, "geoq_featureid": "c6b993b3-50e1-4ea4-907a-6bf5c3baa2a7" }, "2860": { "D_lat": 26.27083396911621, "D_lon": 50.633609771728516, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 58.00654220581055, "geoq_featureid": "33be64f7-f35f-4f57-b453-ff1a6afd16a1" }, "2862": { "D_lat": 60.29338455200195, "D_lon": 5.218142032623291, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 10.508476257324219, "geoq_featureid": "b36fc1e5-5528-4e2a-be90-289191aa9f47" }, "2865": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 90.3221435546875, "geoq_featureid": "49e816a2-d711-4446-8ef8-831b6ed98c75" }, "2866": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 82.75163269042969, "geoq_featureid": "501d9c9d-b467-48db-ae48-8ce820a41119" }, "2874": { "D_lat": 55.617916107177734, "D_lon": 12.65597152709961, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 13.76927375793457, "geoq_featureid": "e9327904-3e07-4fca-8165-d54039e577ef" }, "2876": { "D_lat": 28.566499710083008, "D_lon": 77.10308837890625, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 83.42335510253906, "geoq_featureid": "39e4c03b-c6da-4283-acea-ec860af53f7b" }, "2881": { "D_lat": 25.252777099609375, "D_lon": 55.364444732666016, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 62.944766998291016, "geoq_featureid": "0be8c4f5-be4a-46f7-87d9-56532e232604" }, "2882": { "D_lat": 0.042385999113321304, "D_lon": 32.443504333496094, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 61.790321350097656, "geoq_featureid": "cd773fd4-2cfa-4dcd-8c09-070f09000af3" }, "2933": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 12.994414329528809, "S_lon": 80.1805191040039, "Shape_Leng": 92.81529235839844, "geoq_featureid": "9802323e-1229-4bbd-964e-47dd9e69c535" }, "2989": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 65.59085845947266, "geoq_featureid": "c3edef51-ae7e-4a62-b4fb-8cc90456b2d8" }, "3002": { "D_lat": 40.97692108154297, "D_lon": 28.814605712890625, "S_lat": 21.679563522338867, "S_lon": 39.15653610229492, "Shape_Leng": 21.928014755249023, "geoq_featureid": "4f946287-2c88-4757-9878-6817a4061347" }, "3020": { "D_lat": 39.251468658447266, "D_lon": 9.054283142089844, "S_lat": 51.289451599121094, "S_lon": 6.766775131225586, "Shape_Leng": 12.256634712219238, "geoq_featureid": "5375fe2b-59af-49b9-9105-e22c3e1ff6c0" }, "3028": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 163.50576782226562, "geoq_featureid": "3354a02b-4d66-49c7-b46a-c3960d24a05b" }, "3031": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 158.31907653808594, "geoq_featureid": "f2f6c9c7-4281-4650-9ed8-ae7ed5ff52f9" }, "3041": { "D_lat": 50.901390075683594, "D_lon": 4.4844441413879395, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 62.15755081176758, "geoq_featureid": "4806ec76-3d2d-481a-baf4-0d4b61448866" }, "3091": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 60.317222595214844, "S_lon": 24.963333129882812, "Shape_Leng": 19.466495513916016, "geoq_featureid": "31db59b8-d255-44de-b428-3ea0ffec8343" }, "3134": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 60.19391632080078, "S_lon": 11.100360870361328, "Shape_Leng": 14.525344848632812, "geoq_featureid": "edc12587-6ff6-4748-89de-f17452cd3acc" }, "3141": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 139.052978515625, "geoq_featureid": "c7c6c9af-5642-49f7-9779-b20fd51875d5" }, "3226": { "D_lat": 60.317222595214844, "D_lon": 24.963333129882812, "S_lat": 48.353782653808594, "S_lon": 11.786086082458496, "Shape_Leng": 17.88953399658203, "geoq_featureid": "d5650ffa-8490-45d9-9094-7508bc38ecd9" }, "3243": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 58.87677764892578, "S_lon": 5.6378560066223145, "Shape_Leng": 9.60556697845459, "geoq_featureid": "6ca0afb6-524a-420c-b5db-30777702642a" }, "3325": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 24.432971954345703, "S_lon": 54.65113830566406, "Shape_Leng": 55.855281829833984, "geoq_featureid": "24c3deea-af36-4e9a-9503-2b90e1effa6a" }, "3326": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 24.432971954345703, "S_lon": 54.65113830566406, "Shape_Leng": 53.54828643798828, "geoq_featureid": "3a7aeedc-2882-4c27-aedc-e0f0bf2a3999" }, "3327": { "D_lat": 8.113200187683105, "D_lon": 98.3168716430664, "S_lat": 24.432971954345703, "S_lon": 54.65113830566406, "Shape_Leng": 46.73716354370117, "geoq_featureid": "f07d3ed0-810c-4455-a9fc-385d72598e63" }, "3328": { "D_lat": 48.353782653808594, "D_lon": 11.786086082458496, "S_lat": 24.432971954345703, "S_lon": 54.65113830566406, "Shape_Leng": 49.716346740722656, "geoq_featureid": "5684eed7-aa60-4eb0-bf0a-9e1d59b31360" }, "3329": { "D_lat": 40.08011245727539, "D_lon": 116.58455657958984, "S_lat": 24.432971954345703, "S_lon": 54.65113830566406, "Shape_Leng": 64.79145050048828, "geoq_featureid": "d8bc90a0-e636-4a9a-b883-c25241b1e6d1" }, "3369": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 55.40861129760742, "S_lon": 37.90611267089844, "Shape_Leng": 31.51615333557129, "geoq_featureid": "7b819caa-f406-4587-91c0-0a2c644df261" }, "3370": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 55.40861129760742, "S_lon": 37.90611267089844, "Shape_Leng": 29.95355987548828, "geoq_featureid": "24ab10f5-5ac7-40ea-9bbc-839b454f307c" }, "3483": { "D_lat": 60.317222595214844, "D_lon": 24.963333129882812, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 14.87033748626709, "geoq_featureid": "6fd12246-bbef-49f8-a141-0fa9ae8a8fc4" }, "3486": { "D_lat": 36.399169921875, "D_lon": 25.479333877563477, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 14.741836547851562, "geoq_featureid": "07569e29-b75a-4ca3-8127-9fa1ff60be91" }, "3503": { "D_lat": 60.317222595214844, "D_lon": 24.963333129882812, "S_lat": 53.63039016723633, "S_lon": 9.988227844238281, "Shape_Leng": 16.437631607055664, "geoq_featureid": "1daf8e08-70f3-4714-89d9-ec7435fb7ea3" }, "3553": { "D_lat": 55.40861129760742, "D_lon": 37.90611267089844, "S_lat": 48.353782653808594, "S_lon": 11.786086082458496, "Shape_Leng": 27.149211883544922, "geoq_featureid": "9b380595-74a2-4fbd-b699-cade530aad51" }, "3581": { "D_lat": 35.339717864990234, "D_lon": 25.1802978515625, "S_lat": 49.49869918823242, "S_lon": 11.06689739227295, "Shape_Leng": 20.061681747436523, "geoq_featureid": "e86fcb0b-3c88-4e76-b8a2-a2a553270126" }, "3582": { "D_lat": 27.178316116333008, "D_lon": 33.799434661865234, "S_lat": 49.49869918823242, "S_lon": 11.06689739227295, "Shape_Leng": 32.0887565612793, "geoq_featureid": "86d7d1eb-d75a-4fee-b5e4-47633965c634" }, "3598": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 98.73995208740234, "geoq_featureid": "285d814e-9267-437f-863b-563d7a3f2e33" }, "3633": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 38.92546844482422, "S_lon": 20.765310287475586, "Shape_Leng": 18.740482330322266, "geoq_featureid": "702f7f04-0864-4076-8553-0ee902209117" }, "3634": { "D_lat": 48.353782653808594, "D_lon": 11.786086082458496, "S_lat": 38.92546844482422, "S_lon": 20.765310287475586, "Shape_Leng": 13.04062271118164, "geoq_featureid": "9b45ed9e-b718-4931-ab1f-38dada0219bb" }, "3642": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 56.92361068725586, "S_lon": 23.971111297607422, "Shape_Leng": 18.136659622192383, "geoq_featureid": "33dbf741-6fa5-49fe-81bd-23ee032e6f6a" }, "3647": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 25.557111740112305, "S_lon": 34.583709716796875, "Shape_Leng": 38.28504943847656, "geoq_featureid": "b116232b-0bd5-458c-bb40-005fc22a9fe4" }, "3657": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 1.350188970565796, "S_lon": 103.99443054199219, "Shape_Leng": 54.61477279663086, "geoq_featureid": "e88502a1-4689-4c4f-b19e-72dceee51221" }, "3676": { "D_lat": 50.901390075683594, "D_lon": 4.4844441413879395, "S_lat": 5.261385917663574, "S_lon": -3.9262940883636475, "Shape_Leng": 46.46975326538086, "geoq_featureid": "11162163-d692-45de-a3af-ae3120f180f2" }, "3725": { "D_lat": 31.72255516052246, "D_lon": 35.99321365356445, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 31.070281982421875, "geoq_featureid": "a6083689-dbd6-4b7b-84a2-8b714e05a17e" }, "3726": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 8.481786727905273, "geoq_featureid": "466e4925-d9f9-4d09-9733-77190f155f7a" }, "3727": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 50.83964157104492, "geoq_featureid": "4b7a543d-f87a-4da4-91e7-9e460c7c3a25" }, "3748": { "D_lat": 46.991065979003906, "D_lon": 15.439627647399902, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 5.971538543701172, "geoq_featureid": "353d7a52-9231-4dde-99ab-d6e43cd966ad" }, "3752": { "D_lat": 27.178316116333008, "D_lon": 33.799434661865234, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 32.90396499633789, "geoq_featureid": "8bff98f3-7c69-43e9-9dd4-e324ddb26d8c" }, "3754": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 90.73908996582031, "geoq_featureid": "9095d348-656b-402f-8dbc-680628911f6d" }, "3757": { "D_lat": 50.07773208618164, "D_lon": 19.784835815429688, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 6.957122802734375, "geoq_featureid": "9a3de2f6-819e-4a44-bfdb-f10b6be7cb02" }, "3758": { "D_lat": 59.80029296875, "D_lon": 30.262502670288086, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 18.50373077392578, "geoq_featureid": "55386974-9c20-4339-833b-078d4dd4ea97" }, "3759": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 13.799897193908691, "geoq_featureid": "812824d5-cb4a-4701-a6e0-e207049be272" }, "3766": { "D_lat": 40.88603210449219, "D_lon": 14.290781021118164, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 11.717355728149414, "geoq_featureid": "64b99a6c-366f-4168-9b43-3dc0d51a65fb" }, "3770": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 106.29562377929688, "geoq_featureid": "34e07016-e450-4a48-84f1-67529079bd19" }, "3772": { "D_lat": 60.19391632080078, "D_lon": 11.100360870361328, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 7.9452900886535645, "geoq_featureid": "3d167b0f-6a45-4e8e-9921-1086749e3aa0" }, "3773": { "D_lat": 44.57216262817383, "D_lon": 26.1021785736084, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 15.131217956542969, "geoq_featureid": "6af27239-0025-4bc2-b405-cec2399afa4c" }, "3774": { "D_lat": 40.08011245727539, "D_lon": 116.58455657958984, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 109.09921264648438, "geoq_featureid": "b2a2d391-3f64-40cb-9fe9-637d1e8c1e10" }, "3784": { "D_lat": 28.044475555419922, "D_lon": -16.57248878479004, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 39.075496673583984, "geoq_featureid": "62061ad6-f04a-4a4c-ad79-fd8de21908ae" }, "3785": { "D_lat": 32.011390686035156, "D_lon": 34.88666534423828, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 30.044347763061523, "geoq_featureid": "bf64bbbd-1497-44b8-8beb-030f7872188e" }, "3795": { "D_lat": 31.72255516052246, "D_lon": 35.99321365356445, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 25.53409767150879, "geoq_featureid": "a471b492-9b93-42fc-85f3-e8394a2d39e2" }, "3796": { "D_lat": 59.65194320678711, "D_lon": 17.918611526489258, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 11.622262954711914, "geoq_featureid": "e3d72207-c833-4368-b37a-1b164ecf912b" }, "3800": { "D_lat": 35.53174591064453, "D_lon": 24.149677276611328, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 14.708759307861328, "geoq_featureid": "5c981676-321c-407d-b2b9-cf5ad8a2d7d7" }, "3812": { "D_lat": 36.405418395996094, "D_lon": 28.086191177368164, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 16.458833694458008, "geoq_featureid": "d2415795-3a0e-4a1d-85d7-df30640741a3" }, "3825": { "D_lat": 48.11027908325195, "D_lon": 16.569721221923828, "S_lat": 39.21961975097656, "S_lon": 22.79433822631836, "Shape_Leng": 10.86438274383545, "geoq_featureid": "877a387b-c01c-42a8-adcd-a636c059f699" }, "3827": { "D_lat": 52.55968475341797, "D_lon": 13.287711143493652, "S_lat": 52.165748596191406, "S_lon": 20.967121124267578, "Shape_Leng": 7.690893650054932, "geoq_featureid": "db2665f3-7c9f-4f61-a118-60f8d98abdc4" }, "3832": { "D_lat": 37.46678161621094, "D_lon": 15.066399574279785, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 11.947952270507812, "geoq_featureid": "cbb5b84b-f23c-43e8-b7af-57f0cfd13dfb" }, "3833": { "D_lat": 60.19391632080078, "D_lon": 11.100360870361328, "S_lat": 55.617916107177734, "S_lon": 12.65597152709961, "Shape_Leng": 4.834449291229248, "geoq_featureid": "275dcf8e-0022-4195-b118-01d43ce1c3f3" }, "3837": { "D_lat": 50.901390075683594, "D_lon": 4.4844441413879395, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 78.06636047363281, "geoq_featureid": "820a9689-4605-4cfd-b11a-cdda467517f6" }, "3846": { "D_lat": 60.317222595214844, "D_lon": 24.963333129882812, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 20.97651481628418, "geoq_featureid": "49960b31-9ae9-4568-8056-46db84778760" }, "3856": { "D_lat": -3.324018955230713, "D_lon": 29.318519592285156, "S_lat": 50.901390075683594, "S_lon": 4.4844441413879395, "Shape_Leng": 60.0697135925293, "geoq_featureid": "3a9d7c8a-a28f-423a-ad9f-d1dcd0447889" }, "3859": { "D_lat": 4.0060811042785645, "D_lon": 9.719481468200684, "S_lat": 50.901390075683594, "S_lon": 4.4844441413879395, "Shape_Leng": 47.21057891845703, "geoq_featureid": "43f491d4-535c-424d-a22b-6b391916d7fc" }, "3860": { "D_lat": -1.9686280488967896, "D_lon": 30.139450073242188, "S_lat": 50.901390075683594, "S_lon": 4.4844441413879395, "Shape_Leng": 59.22267532348633, "geoq_featureid": "1b58f321-b672-4a28-b4b5-33f39774f16e" }, "3861": { "D_lat": -8.85837459564209, "D_lon": 13.231178283691406, "S_lat": 50.901390075683594, "S_lon": 4.4844441413879395, "Shape_Leng": 60.45322036743164, "geoq_featureid": "6d707487-a006-40c2-adbe-8864b60ff2c4" }, "3862": { "D_lat": 12.353194236755371, "D_lon": -1.512416958808899, "S_lat": 50.901390075683594, "S_lon": 4.4844441413879395, "Shape_Leng": 39.04445266723633, "geoq_featureid": "f1070fd5-b5c7-451f-bdb7-cfb479f42bf0" }, "3873": { "D_lat": 50.901390075683594, "D_lon": 4.4844441413879395, "S_lat": 0.042385999113321304, "S_lon": 32.443504333496094, "Shape_Leng": 58.57107162475586, "geoq_featureid": "3f74e1a1-2a13-4e4f-b1bc-42cfe17658a3" }, "3875": { "D_lat": 50.901390075683594, "D_lon": 4.4844441413879395, "S_lat": -4.385749816894531, "S_lon": 15.444568634033203, "Shape_Leng": 56.456607818603516, "geoq_featureid": "08a7b3da-67c0-49e4-a1c3-883b66f8840a" }, "3876": { "D_lat": 4.0060811042785645, "D_lon": 9.719481468200684, "S_lat": -4.385749816894531, "S_lon": 15.444568634033203, "Shape_Leng": 10.15871810913086, "geoq_featureid": "c4853e01-4347-4022-bbf4-153c13698dea" }, "3877": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 50.02642059326172, "S_lon": 8.54312515258789, "Shape_Leng": 50.340171813964844, "geoq_featureid": "ba43205a-7587-4795-a0c2-6c71fb9d00bf" }, "3878": { "D_lat": 21.679563522338867, "D_lon": 39.15653610229492, "S_lat": 50.02642059326172, "S_lon": 8.54312515258789, "Shape_Leng": 42.17909240722656, "geoq_featureid": "f215e6b3-24a9-4633-8149-b9454ba8a134" }, "3880": { "D_lat": 40.88603210449219, "D_lon": 14.290781021118164, "S_lat": 50.02642059326172, "S_lon": 8.54312515258789, "Shape_Leng": 10.809041023254395, "geoq_featureid": "b6a833b7-a993-476a-9a30-3dc677b64594" }, "3894": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 34.875118255615234, "S_lon": 33.62485122680664, "Shape_Leng": 29.477693557739258, "geoq_featureid": "8220560d-83e0-4ce4-b990-e2a145eb078b" }, "3905": { "D_lat": 55.617916107177734, "D_lon": 12.65597152709961, "S_lat": 63.457557678222656, "S_lon": 10.924249649047852, "Shape_Leng": 8.031941413879395, "geoq_featureid": "c266221b-50d8-4a83-8424-519e1d546e12" }, "3907": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 39.489315032958984, "S_lon": -0.4816249907016754, "Shape_Leng": 13.900327682495117, "geoq_featureid": "8dde5aea-7f47-424e-91df-0505adc9310a" }, "3908": { "D_lat": 55.617916107177734, "D_lon": 12.65597152709961, "S_lat": 54.634132385253906, "S_lon": 25.2857666015625, "Shape_Leng": 12.674092292785645, "geoq_featureid": "cb319f6f-8e0c-4730-af9a-33f5ee659038" }, "3909": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 54.634132385253906, "S_lon": 25.2857666015625, "Shape_Leng": 17.3900089263916, "geoq_featureid": "26a88168-f92b-4d55-bfa8-b5bceca7b88c" }, "3910": { "D_lat": 55.617916107177734, "D_lon": 12.65597152709961, "S_lat": 52.165748596191406, "S_lon": 20.967121124267578, "Shape_Leng": 9.004786491394043, "geoq_featureid": "b5a56aa8-21d6-45d9-ab57-c800d3bc5350" }, "3924": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 142.5618133544922, "geoq_featureid": "23ad42de-e249-4fa1-8fc3-897ec8e9d684" }, "3926": { "D_lat": 48.353782653808594, "D_lon": 11.786086082458496, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 147.19314575195312, "geoq_featureid": "b74f3ddb-e031-4e42-8c7c-a7e05acec46c" }, "3935": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 130.5465850830078, "geoq_featureid": "4d62df7c-8f7c-4f2c-b251-a49788348525" }, "3938": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 150.8361358642578, "geoq_featureid": "ef49b182-8eab-4194-87c2-3be0cdbb457f" }, "3941": { "D_lat": 55.617916107177734, "D_lon": 12.65597152709961, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 96.3837661743164, "geoq_featureid": "2c884350-5952-4765-9ff6-79a3a9a48915" }, "3945": { "D_lat": 40.97692108154297, "D_lon": 28.814605712890625, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 114.32343292236328, "geoq_featureid": "67e37611-0fff-4435-9b8f-cacb0cb70a05" }, "3948": { "D_lat": 32.011390686035156, "D_lon": 34.88666534423828, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 122.69566345214844, "geoq_featureid": "479be522-5f4d-4c93-8b30-5db0c558b375" }, "3949": { "D_lat": 48.11027908325195, "D_lon": 16.569721221923828, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 99.99101257324219, "geoq_featureid": "1952a0e9-371f-4a17-956d-e9efde270ecf" }, "3950": { "D_lat": 52.165748596191406, "D_lon": 20.967121124267578, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 105.27399444580078, "geoq_featureid": "5427a4b3-c879-4070-bc63-40dbe9831e7e" }, "3985": { "D_lat": -17.931806564331055, "D_lon": 31.09284782409668, "S_lat": 52.30861282348633, "S_lon": 4.763888835906982, "Shape_Leng": 75.45833587646484, "geoq_featureid": "dd465340-6438-43ff-a846-7db002b6eb63" }, "3986": { "D_lat": -3.429405927658081, "D_lon": 37.074462890625, "S_lat": 52.30861282348633, "S_lon": 4.763888835906982, "Shape_Leng": 65.17329406738281, "geoq_featureid": "ef9dc2ed-6bb2-4cab-8681-dd85b88d5b74" }, "3987": { "D_lat": -1.9686280488967896, "D_lon": 30.139450073242188, "S_lat": 52.30861282348633, "S_lon": 4.763888835906982, "Shape_Leng": 60.41767883300781, "geoq_featureid": "f5c7f5de-4bcb-4a1e-971f-dc5018f31e10" }, "4035": { "D_lat": 55.74032211303711, "D_lon": 9.151778221130371, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 9.438430786132812, "geoq_featureid": "6408b299-3b91-4efa-af8a-c62183306811" }, "4037": { "D_lat": 12.949986457824707, "D_lon": 77.66820526123047, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 85.91051483154297, "geoq_featureid": "9865ea1d-7c3d-4fab-b56c-e99c967cf83b" }, "4040": { "D_lat": 19.088685989379883, "D_lon": 72.867919921875, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 78.49634552001953, "geoq_featureid": "e4ac377f-0370-46b5-b41a-7edd9d953343" }, "4053": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": 24.432971954345703, "S_lon": 54.65113830566406, "Shape_Leng": 58.24974822998047, "geoq_featureid": "5ae2f2ce-769a-44ca-8eaf-da2deb05c9d1" }, "4078": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 26.27083396911621, "S_lon": 50.633609771728516, "Shape_Leng": 4.4181623458862305, "geoq_featureid": "9fe45d38-e42e-4fe9-b3f2-ebf31ea0f471" }, "4088": { "D_lat": 3.7225561141967773, "D_lon": 11.553269386291504, "S_lat": 4.398475170135498, "S_lon": 18.51878547668457, "Shape_Leng": 6.998257160186768, "geoq_featureid": "313aaef9-dfed-401a-aaba-6b143998e6eb" }, "4123": { "D_lat": 5.261385917663574, "D_lon": -3.9262940883636475, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 44.25981521606445, "geoq_featureid": "a24a609e-66c3-4478-bc7d-924b2fd947ef" }, "4124": { "D_lat": 9.006792068481445, "D_lon": 7.263172149658203, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 40.299991607666016, "geoq_featureid": "f4a6ec78-3863-4748-b87f-3395e9178bdf" }, "4125": { "D_lat": 57.201942443847656, "D_lon": -2.1977779865264893, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 9.478191375732422, "geoq_featureid": "61a7bf6a-bc97-4966-a532-f5b71cdd9eb9" }, "4127": { "D_lat": 36.69101333618164, "D_lon": 3.2154080867767334, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 12.339963912963867, "geoq_featureid": "d957a11c-0fa8-4156-8ebf-e0a66f23d89f" }, "4128": { "D_lat": 31.72255516052246, "D_lon": 35.99321365356445, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 37.95921325683594, "geoq_featureid": "50a0a9bd-f3f5-485d-80e6-0bbf12fab43b" }, "4131": { "D_lat": 37.93635940551758, "D_lon": 23.944467544555664, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 24.181589126586914, "geoq_featureid": "508f5350-4a43-467c-8783-9e946cddfa7a" }, "4133": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 58.5703125, "geoq_featureid": "f502867a-49e2-47f9-b7d1-71cea51a4a26" }, "4135": { "D_lat": 44.818443298339844, "D_lon": 20.309139251708984, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 18.273082733154297, "geoq_featureid": "0935e42b-ec41-4425-8469-f9d81c3d8334" }, "4137": { "D_lat": 33.82093048095703, "D_lon": 35.48838806152344, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 36.54002380371094, "geoq_featureid": "532a0921-aa80-4ccc-8281-db63b4cc28f0" }, "4138": { "D_lat": 4.398475170135498, "D_lon": 18.51878547668457, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 47.561676025390625, "geoq_featureid": "e9794f9f-d0d3-416e-92f6-12bd66e05bff" }, "4141": { "D_lat": 13.681108474731445, "D_lon": 100.74728393554688, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 109.72199249267578, "geoq_featureid": "2d276633-dd83-4bc9-92e9-0bd731ded5ff" }, "4144": { "D_lat": -4.251699924468994, "D_lon": 15.253030776977539, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 54.864803314208984, "geoq_featureid": "744a8318-4262-478a-b038-eb3492b8d4f6" }, "4146": { "D_lat": 23.39243507385254, "D_lon": 113.29878234863281, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 121.258544921875, "geoq_featureid": "f42cb142-627f-467f-af87-b2bc4749a4fb" }, "4263": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": -6.878110885620117, "S_lon": 39.2026252746582, "Shape_Leng": 69.29007720947266, "geoq_featureid": "623d410f-b7c4-4ed7-8be8-8e53857c3c33" }, "4264": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 28.566499710083008, "S_lon": 77.10308837890625, "Shape_Leng": 79.39344787597656, "geoq_featureid": "a634fb6c-8267-4015-9da6-70a910ec39a1" }, "4266": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 4.0060811042785645, "S_lon": 9.719481468200684, "Shape_Leng": 45.61248016357422, "geoq_featureid": "1f2076f5-c638-4052-a065-e1e36cad2cf4" }, "4268": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": 26.471160888671875, "S_lon": 49.797889709472656, "Shape_Leng": 52.783668518066406, "geoq_featureid": "95066470-f486-4710-b7ac-354f5c45b5de" }, "4281": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 51.289451599121094, "S_lon": 6.766775131225586, "Shape_Leng": 96.59033203125, "geoq_featureid": "def8e250-dfff-492b-a7fa-96b146742426" }, "4282": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -4.385749816894531, "S_lon": 15.444568634033203, "Shape_Leng": 55.042747497558594, "geoq_featureid": "fc11de9c-c8be-43f7-87ec-1b74a9d3e660" }, "4285": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 25.252777099609375, "S_lon": 55.364444732666016, "Shape_Leng": 58.88139343261719, "geoq_featureid": "9d17678d-c4a6-48eb-b434-fc8f05098d8a" }, "4292": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": 0.042385999113321304, "S_lon": 32.443504333496094, "Shape_Leng": 59.72951126098633, "geoq_featureid": "9c3d038d-7ee6-4efc-aaac-3eb37a6a9cea" }, "4300": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 40.147274017333984, "S_lon": 44.39588165283203, "Shape_Leng": 43.09158706665039, "geoq_featureid": "250df0a5-26b2-49a9-a03c-854b8c1ead4d" }, "4318": { "D_lat": 42.21244430541992, "D_lon": -83.35338592529297, "S_lat": 50.02642059326172, "S_lon": 8.54312515258789, "Shape_Leng": 95.45982360839844, "geoq_featureid": "16c71854-53be-426e-a23a-6455a5447218" }, "4325": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 57.66283416748047, "S_lon": 12.279818534851074, "Shape_Leng": 13.052268028259277, "geoq_featureid": "492c4886-7041-4304-8be0-36cd1fbf4215" }, "4327": { "D_lat": 43.46841812133789, "D_lon": -1.523324966430664, "S_lat": 46.23806381225586, "S_lon": 6.108950138092041, "Shape_Leng": 8.122011184692383, "geoq_featureid": "7cefe71d-3802-405f-bd49-e667673eee5b" }, "4330": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 37.46907424926758, "S_lon": 126.45051574707031, "Shape_Leng": 134.44479370117188, "geoq_featureid": "affb68d1-2ad1-4e70-a15b-2072222c7497" }, "4331": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 40.97692108154297, "S_lon": 28.814605712890625, "Shape_Leng": 27.563432693481445, "geoq_featureid": "9624559e-6940-49de-8462-b162d522691f" }, "4334": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 40.467498779296875, "S_lon": 50.04666519165039, "Shape_Leng": 48.69900131225586, "geoq_featureid": "a3f9f0ae-d42c-47b5-ba93-22a3408c0e36" }, "4340": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 21.22119140625, "S_lon": 105.80717468261719, "Shape_Leng": 112.9946517944336, "geoq_featureid": "a09f4a8c-f054-4c48-b4ae-e4a011778f63" }, "4343": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 60.317222595214844, "S_lon": 24.963333129882812, "Shape_Leng": 25.24826431274414, "geoq_featureid": "ba57de83-db04-4975-b35b-6955fbce74f3" }, "4344": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 22.30891990661621, "S_lon": 113.91460418701172, "Shape_Leng": 122.31536102294922, "geoq_featureid": "d5ddaa0d-66a4-449c-b510-0294676528fd" }, "4346": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 35.5522575378418, "S_lon": 139.77969360351562, "Shape_Leng": 153.3432159423828, "geoq_featureid": "d0361122-79ec-4fa5-8e40-90dbcd85675b" }, "4349": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 21.679563522338867, "S_lon": 39.15653610229492, "Shape_Leng": 46.23677062988281, "geoq_featureid": "3c46722b-2081-4c4a-9c9b-c18cf471b9e9" }, "4359": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 11.547200202941895, "S_lon": 43.159400939941406, "Shape_Leng": 56.052494049072266, "geoq_featureid": "aa65b12d-dc9c-4866-84a9-d8822fa17fdb" }, "4360": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -26.1391658782959, "S_lon": 28.246000289916992, "Shape_Leng": 79.68731689453125, "geoq_featureid": "70f3c99b-250f-4493-ac1a-4ac4c2600233" }, "4362": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 50.345001220703125, "S_lon": 30.89472198486328, "Shape_Leng": 28.449329376220703, "geoq_featureid": "47588e21-e26b-485f-bdb1-acd3c5aa049a" }, "4365": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 34.434722900390625, "S_lon": 135.24417114257812, "Shape_Leng": 147.10609436035156, "geoq_featureid": "43a0e9ff-3dd4-4153-929e-efa9245181ff" }, "4368": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": 2.7455780506134033, "S_lon": 101.70991516113281, "Shape_Leng": 114.8434066772461, "geoq_featureid": "178d9e6f-087a-4190-af22-5a1c38e20eea" }, "4369": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 2.7455780506134033, "S_lon": 101.70991516113281, "Shape_Leng": 114.91792297363281, "geoq_featureid": "7cabc417-8b5e-4a13-bdcc-53581a35a759" }, "4371": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": 29.226566314697266, "S_lon": 47.968929290771484, "Shape_Leng": 49.71047592163086, "geoq_featureid": "efe410e1-6efd-465c-9792-3939f89b7cd8" }, "4372": { "D_lat": 26.471160888671875, "D_lon": 49.797889709472656, "S_lat": 29.226566314697266, "S_lon": 47.968929290771484, "Shape_Leng": 3.3072731494903564, "geoq_featureid": "72641a24-2db4-4ed6-ae3b-77b1d11ee295" }, "4373": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -8.85837459564209, "S_lon": 13.231178283691406, "Shape_Leng": 58.91999053955078, "geoq_featureid": "63b9e7e3-c5c3-403b-9e4d-cded48d8f49c" }, "4375": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 0.4586000144481659, "S_lon": 9.412282943725586, "Shape_Leng": 49.070762634277344, "geoq_featureid": "d331788d-4eb5-42c6-aa80-4fb68c19ef51" }, "4376": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 34.875118255615234, "S_lon": 33.62485122680664, "Shape_Leng": 34.363487243652344, "geoq_featureid": "1affda08-7ea7-4e0b-b8ac-67e5052c181d" }, "4382": { "D_lat": 51.13276672363281, "D_lon": 13.76716136932373, "S_lat": 51.505279541015625, "S_lon": 0.055277999490499496, "Shape_Leng": 13.724853515625, "geoq_featureid": "61cee95d-7879-460d-afb1-f9815912e1ab" }, "4395": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 59.80029296875, "S_lon": 30.262502670288086, "Shape_Leng": 29.91632080078125, "geoq_featureid": "1a8fdd6b-164b-4ceb-8fd9-c0a7392cc565" }, "4397": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 6.1656107902526855, "S_lon": 1.2545109987258911, "Shape_Leng": 42.86804962158203, "geoq_featureid": "221a94ac-ecb5-4ece-96d2-2a98d5d22752" }, "4417": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 6.577369213104248, "S_lon": 3.3211560249328613, "Shape_Leng": 42.44287872314453, "geoq_featureid": "f4149d9d-52c4-43fd-9fbc-2a4ca3d61999" }, "4421": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": -15.330817222595215, "S_lon": 28.452627182006836, "Shape_Leng": 72.05179595947266, "geoq_featureid": "119ae780-7e7f-45ab-9555-8bec98850e32" }, "4437": { "D_lat": 57.66283416748047, "D_lon": 12.279818534851074, "S_lat": 45.72638702392578, "S_lon": 5.0908331871032715, "Shape_Leng": 13.971039772033691, "geoq_featureid": "f768eade-a53a-4805-a72e-c959278dd85b" }, "4438": { "D_lat": 35.85749816894531, "D_lon": 14.477499961853027, "S_lat": 45.72638702392578, "S_lon": 5.0908331871032715, "Shape_Leng": 13.640100479125977, "geoq_featureid": "611be396-c77a-4871-9606-4148561846b9" }, "4454": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 23.593278884887695, "S_lon": 58.28444290161133, "Shape_Leng": 6.923952579498291, "geoq_featureid": "6442e3d3-5b34-47ba-bc82-023ede1ff6db" }, "4461": { "D_lat": 36.69101333618164, "D_lon": 3.2154080867767334, "S_lat": 43.43555450439453, "S_lon": 5.213611125946045, "Shape_Leng": 7.035225868225098, "geoq_featureid": "9531856d-a87b-4c2c-bac4-a0f62a456fae" }, "4471": { "D_lat": 40.97692108154297, "D_lon": 28.814605712890625, "S_lat": 43.43555450439453, "S_lon": 5.213611125946045, "Shape_Leng": 23.773706436157227, "geoq_featureid": "34ad2599-3bdf-4c04-9840-ea12bca14b54" }, "4484": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -20.430234909057617, "S_lon": 57.68360137939453, "Shape_Leng": 89.81599426269531, "geoq_featureid": "de689a85-1c21-4f26-a40b-8c870be247bc" }, "4497": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -1.3191670179367065, "S_lon": 36.9275016784668, "Shape_Leng": 61.595115661621094, "geoq_featureid": "cf208627-42c1-400a-8475-e9136bc28d75" }, "4526": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 55.037498474121094, "S_lon": -1.6916669607162476, "Shape_Leng": 7.374056339263916, "geoq_featureid": "923381f4-8d90-4cfa-b16d-2d60d6f40d59" }, "4527": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 12.133688926696777, "S_lon": 15.034019470214844, "Shape_Leng": 39.04785919189453, "geoq_featureid": "98fbe6ca-db83-4afa-adad-2fc3bc872b95" }, "4532": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 35.76472091674805, "S_lon": 140.38638305664062, "Shape_Leng": 154.17884826660156, "geoq_featureid": "adcd09b8-d583-4cf5-b3f9-80d75a124a9d" }, "4533": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 3.7225561141967773, "S_lon": 11.553269386291504, "Shape_Leng": 46.23596954345703, "geoq_featureid": "e9107413-c3f0-46f9-a716-dad2b0ef4f13" }, "4538": { "D_lat": 50.901390075683594, "D_lon": 4.4844441413879395, "S_lat": 47.15319061279297, "S_lon": -1.6107250452041626, "Shape_Leng": 7.158754348754883, "geoq_featureid": "d1b27443-2864-462b-a8d7-a46495a4204a" }, "4539": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 31.14337730407715, "S_lon": 121.80521392822266, "Shape_Leng": 129.86465454101562, "geoq_featureid": "01f1c9ff-a3a8-4004-9564-a1a0dd252c4e" }, "4540": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 31.60688591003418, "S_lon": -8.036299705505371, "Shape_Leng": 17.79804801940918, "geoq_featureid": "9c659156-016c-4f86-a1e4-8835b12d9710" }, "4544": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 56.92361068725586, "S_lon": 23.971111297607422, "Shape_Leng": 22.909019470214844, "geoq_featureid": "9a33c214-1ed0-435b-b091-60df3183de42" }, "4547": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 55.97264099121094, "S_lon": 37.414588928222656, "Shape_Leng": 35.73164749145508, "geoq_featureid": "42f91bd2-ad5a-4e90-9fce-8835fd058048" }, "4548": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 55.97264099121094, "S_lon": 37.414588928222656, "Shape_Leng": 34.80925369262695, "geoq_featureid": "f0d36841-4b01-4772-b73f-5f5f9bacdfef" }, "4566": { "D_lat": 40.49355697631836, "D_lon": -3.5667641162872314, "S_lat": 48.725276947021484, "S_lon": 2.3594439029693604, "Shape_Leng": 10.152915000915527, "geoq_featureid": "bc544d22-9d73-4689-bc30-ccf2d0ea19eb" }, "4567": { "D_lat": 35.85749816894531, "D_lon": 14.477499961853027, "S_lat": 48.725276947021484, "S_lon": 2.3594439029693604, "Shape_Leng": 17.72380256652832, "geoq_featureid": "bb275a3c-d868-4832-b885-2d9b36214eb9" }, "4575": { "D_lat": 43.380001068115234, "D_lon": -0.41861099004745483, "S_lat": 48.725276947021484, "S_lon": 2.3594439029693604, "Shape_Leng": 6.025883197784424, "geoq_featureid": "20328120-4031-4c42-af1e-9a33725ad641" }, "4581": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 60.19391632080078, "S_lon": 11.100360870361328, "Shape_Leng": 14.126241683959961, "geoq_featureid": "74587ec6-1819-47a0-ac0b-10257094f542" }, "4582": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 44.57216262817383, "S_lon": 26.1021785736084, "Shape_Leng": 24.020099639892578, "geoq_featureid": "8edde607-16a3-4892-9d38-16d635853666" }, "4583": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 12.353194236755371, "S_lon": -1.512416958808899, "Shape_Leng": 36.89704132080078, "geoq_featureid": "97a4b386-216a-4b8c-8b97-085536835f62" }, "4585": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 40.08011245727539, "S_lon": 116.58455657958984, "Shape_Leng": 121.4658203125, "geoq_featureid": "a79d5baa-1f9d-4986-af87-533225fb5bee" }, "4586": { "D_lat": 9.006792068481445, "D_lon": 7.263172149658203, "S_lat": 5.015493869781494, "S_lon": 6.949594020843506, "Shape_Leng": 4.003597736358643, "geoq_featureid": "71fb2b8a-e89b-4b19-8475-69d245fca09e" }, "4591": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -4.816028118133545, "S_lon": 11.8865966796875, "Shape_Leng": 54.69089126586914, "geoq_featureid": "478dc243-a76a-47a0-8214-fdd51bfc38ef" }, "4592": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 50.100833892822266, "S_lon": 14.260000228881836, "Shape_Leng": 11.765800476074219, "geoq_featureid": "50e875ca-eddb-44ec-abf2-1d50371e5510" }, "4594": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 50.100833892822266, "S_lon": 14.260000228881836, "Shape_Leng": 11.25019359588623, "geoq_featureid": "312b9978-a99e-40b3-9a96-2a3899f5ecb4" }, "4597": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 48.06950759887695, "S_lon": -1.734794020652771, "Shape_Leng": 8.356801986694336, "geoq_featureid": "ed447dbc-137f-4775-a5e7-b1b9a8d59778" }, "4600": { "D_lat": 51.505279541015625, "D_lon": 0.055277999490499496, "S_lat": 51.95694351196289, "S_lon": 4.437222003936768, "Shape_Leng": 4.405438423156738, "geoq_featureid": "fd1cf819-0d48-462e-a0c1-e6c74ead8c9e" }, "4601": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 24.957639694213867, "S_lon": 46.69877624511719, "Shape_Leng": 50.96258544921875, "geoq_featureid": "44f0fde0-0cec-4e89-8957-a72c07bcb2af" }, "4603": { "D_lat": 48.725276947021484, "D_lon": 2.3594439029693604, "S_lat": -20.887100219726562, "S_lon": 55.51030731201172, "Shape_Leng": 88.62300109863281, "geoq_featureid": "8e8ee254-1e92-479a-a9b8-b2bf3bbe641b" }, "4609": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 10.81879711151123, "S_lon": 106.65185546875, "Shape_Leng": 117.3735580444336, "geoq_featureid": "e87ddb51-908b-4123-840a-272117fc1e21" }, "4610": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 1.350188970565796, "S_lon": 103.99443054199219, "Shape_Leng": 117.93541717529297, "geoq_featureid": "d29d5107-8989-4294-8b42-d743660eacab" }, "4611": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 40.788387298583984, "S_lon": -111.97777557373047, "Shape_Leng": 121.95470428466797, "geoq_featureid": "32c3e331-7a10-42a4-bc61-3cb526c17b61" }, "4612": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 42.695194244384766, "S_lon": 23.406166076660156, "Shape_Leng": 21.84063148498535, "geoq_featureid": "d9121207-e4e0-4ed7-81ce-3e3272b53108" }, "4614": { "D_lat": 44.825279235839844, "D_lon": 0.5186110138893127, "S_lat": 50.950260162353516, "S_lon": -1.356803059577942, "Shape_Leng": 6.406899452209473, "geoq_featureid": "beef9fcf-ca10-4241-ba63-04c6384ddad6" }, "4617": { "D_lat": 43.658409118652344, "D_lon": 7.215871810913086, "S_lat": 50.950260162353516, "S_lon": -1.356803059577942, "Shape_Leng": 11.269624710083008, "geoq_featureid": "b96c11f6-5a96-4808-9761-efee01df0fa0" }, "4623": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 48.689876556396484, "S_lon": 9.221963882446289, "Shape_Leng": 6.680721759796143, "geoq_featureid": "75fe8359-bf25-47aa-9403-5f26ccffeb79" }, "4624": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 58.87677764892578, "S_lon": 5.6378560066223145, "Shape_Leng": 10.344305038452148, "geoq_featureid": "7eee2937-8032-4104-8d61-144ad05038f3" }, "4626": { "D_lat": 41.804473876953125, "D_lon": 12.250797271728516, "S_lat": 48.5383186340332, "S_lon": 7.628232955932617, "Shape_Leng": 8.173002243041992, "geoq_featureid": "22249d61-07db-4282-acfd-cfb877c3ac84" }, "4627": { "D_lat": 43.658409118652344, "D_lon": 7.215871810913086, "S_lat": 48.5383186340332, "S_lon": 7.628232955932617, "Shape_Leng": 4.897345066070557, "geoq_featureid": "ad5142e2-3160-4b7e-ac2f-1b518283d447" }, "4630": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 18.040952682495117, "S_lon": -63.1088981628418, "Shape_Leng": 74.3907241821289, "geoq_featureid": "9f540920-a320-48b3-89a9-588b9459595c" }, "4631": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 41.669166564941406, "S_lon": 44.9547233581543, "Shape_Leng": 43.34218215942383, "geoq_featureid": "5ff67dbb-09af-47d8-a5b2-6e9e589e3d9c" }, "4633": { "D_lat": 41.92363739013672, "D_lon": 8.802916526794434, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 7.633814811706543, "geoq_featureid": "03c8f72b-1cda-4eb2-b36e-fc2577219a37" }, "4634": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 9.327239036560059, "geoq_featureid": "e6af3222-5be4-4309-9e10-21a24012efd9" }, "4635": { "D_lat": 37.93635940551758, "D_lon": 23.944467544555664, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 23.336881637573242, "geoq_featureid": "50dcbb00-6633-4579-a508-d94c7a93c77a" }, "4639": { "D_lat": 53.63039016723633, "D_lon": 9.988227844238281, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 13.235249519348145, "geoq_featureid": "c957f11a-3aa3-4fbe-9a9c-f49a5bb0bbc8" }, "4641": { "D_lat": 35.85749816894531, "D_lon": 14.477499961853027, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 15.26488971710205, "geoq_featureid": "d6e41572-90e0-46a3-86cd-f95774be641b" }, "4642": { "D_lat": 48.725276947021484, "D_lon": 2.3594439029693604, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 5.1928181648254395, "geoq_featureid": "b0a5f61a-0809-49f6-aa52-3f3f6718dfb4" }, "4644": { "D_lat": 37.417999267578125, "D_lon": -5.893105983734131, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 9.558524131774902, "geoq_featureid": "43b666e6-94d6-49f6-9201-4eff8c6e8a0e" }, "4645": { "D_lat": 48.5383186340332, "D_lon": 7.628232955932617, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 7.963690280914307, "geoq_featureid": "6b06c102-ea2d-4bce-b8eb-b85c7fa65c5e" }, "4647": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 32.011390686035156, "S_lon": 34.88666534423828, "Shape_Leng": 36.8218879699707, "geoq_featureid": "102ab134-2012-4bf6-928b-fc71a7431cd4" }, "4648": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 32.011390686035156, "S_lon": 34.88666534423828, "Shape_Leng": 31.938156127929688, "geoq_featureid": "1ed88c59-980e-4521-9a0f-94a6f8c9b4b7" }, "4649": { "D_lat": 43.658409118652344, "D_lon": 7.215871810913086, "S_lat": 32.011390686035156, "S_lon": 34.88666534423828, "Shape_Leng": 30.14735984802246, "geoq_featureid": "064385d3-1a96-42ad-83cf-940b1ba9a331" }, "4650": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -18.79694938659668, "S_lon": 47.47880554199219, "Shape_Leng": 82.17315673828125, "geoq_featureid": "0536d61d-bcb6-42a7-abb1-8330f269cf2d" }, "4651": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": 25.077730178833008, "S_lon": 121.23281860351562, "Shape_Leng": 129.03176879882812, "geoq_featureid": "f855a256-e6fd-4012-add2-decd69009976" }, "4652": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 45.20075988769531, "S_lon": 7.649631023406982, "Shape_Leng": 6.36944055557251, "geoq_featureid": "92ce889c-c3f0-43c7-8f78-71e49e6c2f1a" }, "4653": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 36.85103225708008, "S_lon": 10.227216720581055, "Shape_Leng": 14.406022071838379, "geoq_featureid": "cbbb2148-da1b-4457-983f-e042b634349f" }, "4654": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 36.85103225708008, "S_lon": 10.227216720581055, "Shape_Leng": 8.280153274536133, "geoq_featureid": "6b231616-9c3a-4fb8-a1c5-eb20a6bc431f" }, "4655": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 11.316123008728027, "geoq_featureid": "8ad484a6-2f31-467a-82f6-cf27ceb9c99f" }, "4656": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 12.205474853515625, "geoq_featureid": "1ee90dc0-ae5e-4b6f-acea-3ea733369036" }, "4657": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 45.505279541015625, "S_lon": 12.351943969726562, "Shape_Leng": 10.416646957397461, "geoq_featureid": "c2cea487-d914-446e-b997-6c0bcfe2228e" }, "4659": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 45.505279541015625, "S_lon": 12.351943969726562, "Shape_Leng": 7.434153079986572, "geoq_featureid": "0a2253ea-17b0-4a31-b427-80304ba3e93b" }, "4661": { "D_lat": 43.62907409667969, "D_lon": 1.3638190031051636, "S_lat": 45.505279541015625, "S_lon": 12.351943969726562, "Shape_Leng": 11.152212142944336, "geoq_featureid": "eb90a7b0-f776-4d19-9cba-d1ae8fe71893" }, "4662": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 42.2318000793457, "S_lon": -8.626774787902832, "Shape_Leng": 13.090453147888184, "geoq_featureid": "afe7caa2-28a8-4d61-8ba9-e1846f08d1dc" }, "4663": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 14.057717323303223, "geoq_featureid": "fe166265-1508-4531-b7f7-dd760b8217d2" }, "4664": { "D_lat": 45.72638702392578, "D_lon": 5.0908331871032715, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 11.7301664352417, "geoq_featureid": "858b482c-1699-447a-bf07-1cb312240921" }, "4665": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 39.489315032958984, "S_lon": -0.4816249907016754, "Shape_Leng": 9.998265266418457, "geoq_featureid": "6f4a7980-fcc8-48dd-b5c8-dbe6753b8e33" }, "4666": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 45.39570617675781, "S_lon": 10.888532638549805, "Shape_Leng": 9.093925476074219, "geoq_featureid": "b8ee71bd-b25b-4909-a162-d1b982001c44" }, "4667": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 52.165748596191406, "S_lon": 20.967121124267578, "Shape_Leng": 18.709314346313477, "geoq_featureid": "48dd3a9b-3258-401d-81ba-26f55a5d9fdd" }, "4668": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 30.78375816345215, "S_lon": 114.20809936523438, "Shape_Leng": 120.44637298583984, "geoq_featureid": "4808a42c-cefe-498d-b2aa-5f03defced53" }, "4671": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 84.52117919921875, "geoq_featureid": "0e6b2a52-b0d3-4424-b7b0-7dfc37ef7f1d" }, "4672": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 45.7429313659668, "S_lon": 16.068777084350586, "Shape_Leng": 13.919974327087402, "geoq_featureid": "ad7d6211-e19f-448d-bcff-af069bbead48" }, "4673": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 6.196727275848389, "geoq_featureid": "fd7e8c01-d074-4166-a913-faa3db2c046f" }, "4677": { "D_lat": 40.97692108154297, "D_lon": 28.814605712890625, "S_lat": 36.82222366333008, "S_lon": 7.80916690826416, "Shape_Leng": 21.44693946838379, "geoq_featureid": "aca1b6ff-176e-4e79-95c1-68a7c6ff1bef" }, "4678": { "D_lat": 45.72638702392578, "D_lon": 5.0908331871032715, "S_lat": 36.82222366333008, "S_lon": 7.80916690826416, "Shape_Leng": 9.31226634979248, "geoq_featureid": "6e11479d-e8d7-427c-8ba1-860917d9f6f2" }, "4680": { "D_lat": 35.62385940551758, "D_lon": -0.6211829781532288, "S_lat": 36.82222366333008, "S_lon": 7.80916690826416, "Shape_Leng": 8.517010688781738, "geoq_featureid": "eb45c4c0-7727-4362-b7d8-24c825df154a" }, "4681": { "D_lat": 48.725276947021484, "D_lon": 2.3594439029693604, "S_lat": 36.82222366333008, "S_lon": 7.80916690826416, "Shape_Leng": 13.104487419128418, "geoq_featureid": "4b95d78a-4b49-4dec-91d3-2b80f724a373" }, "4686": { "D_lat": 5.261385917663574, "D_lon": -3.9262940883636475, "S_lat": 36.69101333618164, "S_lon": 3.2154080867767334, "Shape_Leng": 32.24424743652344, "geoq_featureid": "6c911821-2b6d-49ef-812b-d6c97956c096" }, "4687": { "D_lat": 38.282169342041016, "D_lon": -0.5581560134887695, "S_lat": 36.69101333618164, "S_lon": 3.2154080867767334, "Shape_Leng": 4.095616340637207, "geoq_featureid": "696d4a91-be7a-4a5e-8727-4f6664cd67b9" }, "4688": { "D_lat": 31.72255516052246, "D_lon": 35.99321365356445, "S_lat": 36.69101333618164, "S_lon": 3.2154080867767334, "Shape_Leng": 33.26401138305664, "geoq_featureid": "136464ac-cac1-4617-91d8-05ac68735c37" }, "4689": { "D_lat": 27.837589263916016, "D_lon": -0.18641400337219238, "S_lat": 36.69101333618164, "S_lon": 3.2154080867767334, "Shape_Leng": 9.4863862991333, "geoq_featureid": "0af51f10-4091-4dbb-b581-5691b0e302ec" }, "4690": { "D_lat": 41.29707717895508, "D_lon": 2.0784640312194824, "S_lat": 36.69101333618164, "S_lon": 3.2154080867767334, "Shape_Leng": 4.744498252868652, "geoq_featureid": "03230a4b-713e-4ba9-bf14-1aea27e9271f" } };
	var data4 = { "39": { "D_lat": 5.261385917663574, "D_lon": -3.9262940883636475, "S_lat": 11.160056114196777, "S_lon": -4.330968856811523, "Shape_Leng": 5.912536144256592, "geoq_featureid": "b337908d-2b95-481a-bc23-ca272eea2d39" }, "44": { "D_lat": 12.533543586730957, "D_lon": -7.949944019317627, "S_lat": 14.739707946777344, "S_lon": -17.490224838256836, "Shape_Leng": 9.792718887329102, "geoq_featureid": "1212e349-0985-48f0-bada-c47373d8a9f6" }, "49": { "D_lat": 5.6051859855651855, "D_lon": -0.16678600013256073, "S_lat": 12.353194236755371, "S_lon": -1.512416958808899, "Shape_Leng": 6.880882740020752, "geoq_featureid": "7e60f549-6b58-46a2-bf3a-377249f7fb16" }, "50": { "D_lat": 12.533543586730957, "D_lon": -7.949944019317627, "S_lat": 12.353194236755371, "S_lon": -1.512416958808899, "Shape_Leng": 6.440205097198486, "geoq_featureid": "a3e69406-54d0-496c-85e2-680401b44f69" }, "51": { "D_lat": 11.160056114196777, "D_lon": -4.330968856811523, "S_lat": 12.353194236755371, "S_lon": -1.512416958808899, "Shape_Leng": 3.0607051849365234, "geoq_featureid": "29517d09-761d-42db-8ccc-0850862718b0" }, "53": { "D_lat": 14.739707946777344, "D_lon": -17.490224838256836, "S_lat": 12.353194236755371, "S_lon": -1.512416958808899, "Shape_Leng": 16.157981872558594, "geoq_featureid": "6236f8c4-b4b0-4096-afbb-9da2104eb131" }, "61": { "D_lat": 3.543221950531006, "D_lon": -76.38158416748047, "S_lat": -2.157418966293335, "S_lon": -79.88356018066406, "Shape_Leng": 6.690377235412598, "geoq_featureid": "9899608e-cf3a-4367-b800-348e49be0a18" }, "177": { "D_lat": 41.29707717895508, "D_lon": 2.0784640312194824, "S_lat": 13.337961196899414, "S_lon": -16.652206420898438, "Shape_Leng": 33.769630432128906, "geoq_featureid": "31a08156-f0da-4488-a57f-0875938f5a21" }, "185": { "D_lat": 5.6051859855651855, "D_lon": -0.16678600013256073, "S_lat": 14.739707946777344, "S_lon": -17.490224838256836, "Shape_Leng": 19.5877685546875, "geoq_featureid": "ddc55d2a-46a3-4fde-85aa-dcca3225306e" }, "187": { "D_lat": 14.739707946777344, "D_lon": -17.490224838256836, "S_lat": 4.0060811042785645, "S_lon": 9.719481468200684, "Shape_Leng": 29.260255813598633, "geoq_featureid": "b14e0509-3ce7-4d56-a1ac-4a77be692908" }, "193": { "D_lat": 8.616443634033203, "D_lon": -13.195488929748535, "S_lat": 51.14805603027344, "S_lon": -0.19027799367904663, "Shape_Leng": 44.62016677856445, "geoq_featureid": "13718e55-37f2-4684-8c0e-d6e33c88c190" }, "195": { "D_lat": 14.739707946777344, "D_lon": -17.490224838256836, "S_lat": 6.577369213104248, "S_lon": 3.3211560249328613, "Shape_Leng": 22.360355377197266, "geoq_featureid": "ee8997c6-3207-4c00-a80b-a36536bd475d" }, "207": { "D_lat": 60.05059814453125, "D_lon": -77.28690338134766, "S_lat": 53.62527847290039, "S_lon": -77.70417022705078, "Shape_Leng": 6.438990592956543, "geoq_featureid": "77da7f1c-74fd-4f15-a2fe-142f269063a3" }, "211": { "D_lat": 61.0463981628418, "D_lon": -69.6177978515625, "S_lat": 61.5886116027832, "S_lon": -71.929443359375, "Shape_Leng": 2.3744382858276367, "geoq_featureid": "c9a57578-0a8c-4b16-a359-71682a77bdb3" }, "231": { "D_lat": 58.09611129760742, "D_lon": -68.42694091796875, "S_lat": 60.05059814453125, "S_lon": -77.28690338134766, "Shape_Leng": 9.075977325439453, "geoq_featureid": "1b200912-afe0-4cfb-b59b-3af43bad75d5" }, "236": { "D_lat": 59.29669952392578, "D_lon": -69.59970092773438, "S_lat": 58.66780090332031, "S_lon": -69.95580291748047, "Shape_Leng": 0.7227268218994141, "geoq_featureid": "2d04c8d7-583e-4903-ba89-91c25e96ece9" }, "238": { "D_lat": 58.471900939941406, "D_lon": -78.07689666748047, "S_lat": 56.53609848022461, "S_lon": -76.51830291748047, "Shape_Leng": 2.4856011867523193, "geoq_featureid": "3df4dcd2-e30f-4d91-b19d-3637a71555dc" }, "239": { "D_lat": 56.53779983520508, "D_lon": -79.24669647216797, "S_lat": 56.53609848022461, "S_lon": -76.51830291748047, "Shape_Leng": 2.7284553050994873, "geoq_featureid": "8ca360da-87d3-4a06-a9df-eb757091cc60" }, "244": { "D_lat": 55.281898498535156, "D_lon": -77.76529693603516, "S_lat": 48.206111907958984, "S_lon": -78.83555603027344, "Shape_Leng": 7.15692663192749, "geoq_featureid": "4046b256-aad3-4f67-ac9a-30a26415269e" }, "246": { "D_lat": 58.71139907836914, "D_lon": -65.9927978515625, "S_lat": 58.09611129760742, "S_lon": -68.42694091796875, "Shape_Leng": 2.5107762813568115, "geoq_featureid": "693d5890-94e2-4085-9794-a7329d4d6b03" }, "248": { "D_lat": 60.027198791503906, "D_lon": -69.99919891357422, "S_lat": 58.09611129760742, "S_lon": -68.42694091796875, "Shape_Leng": 2.490572452545166, "geoq_featureid": "e384abe7-cfb3-4749-a298-9aef82d48ffe" }, "256": { "D_lat": 61.5886116027832, "D_lon": -71.929443359375, "S_lat": 62.17940139770508, "S_lon": -75.66719818115234, "Shape_Leng": 3.7843239307403564, "geoq_featureid": "363d086b-eda2-49f6-a248-925e6c811ccf" }, "394": { "D_lat": 33.92726135253906, "D_lon": -4.9779582023620605, "S_lat": 43.576194763183594, "S_lon": 3.9630138874053955, "Shape_Leng": 13.170626640319824, "geoq_featureid": "daec346d-66ba-4cb1-acdc-fde32258fc18" }, "402": { "D_lat": 34.988800048828125, "D_lon": -3.028209924697876, "S_lat": 39.553611755371094, "S_lon": 2.7277779579162598, "Shape_Leng": 7.348781585693359, "geoq_featureid": "0dd9a4d8-ced8-4586-a33d-33cc2b1ef07f" }, "578": { "D_lat": 45.3224983215332, "D_lon": -75.6691665649414, "S_lat": 62.46277618408203, "S_lon": -114.44027709960938, "Shape_Leng": 42.9851188659668, "geoq_featureid": "5f195f36-ffd9-4988-b20f-1a679be719bf" }, "604": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 28.971574783325195, "geoq_featureid": "dba5b105-0a06-46dd-9c84-6230ccb496c9" }, "613": { "D_lat": 20.522403717041016, "D_lon": -86.92564392089844, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 12.19736385345459, "geoq_featureid": "9b2a7a1d-9508-4932-873b-8838377c9853" }, "658": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 17.614416122436523, "geoq_featureid": "ab61ca6b-afc9-432e-a5f0-ec7d3c061329" }, "839": { "D_lat": 50.86591720581055, "D_lon": 7.142744064331055, "S_lat": 55.95000076293945, "S_lon": -3.372499942779541, "Shape_Leng": 11.693119049072266, "geoq_featureid": "9aab080a-46ce-4d80-98b1-ef5702adc0ed" }, "1048": { "D_lat": 9.340852737426758, "D_lon": -82.25083923339844, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 2.063990354537964, "geoq_featureid": "130dc3ef-e504-4645-9969-4ceaab1197a0" }, "1112": { "D_lat": 66.5213851928711, "D_lon": -86.22472381591797, "S_lat": 62.8113899230957, "S_lon": -92.11582946777344, "Shape_Leng": 6.968692779541016, "geoq_featureid": "635d153b-f620-4b75-b25f-ba9b4bbfc861" }, "1134": { "D_lat": 62.8113899230957, "D_lon": -92.11582946777344, "S_lat": 64.1933364868164, "S_lon": -83.35944366455078, "Shape_Leng": 8.8668212890625, "geoq_featureid": "6c95e35c-1a5f-4b84-9d06-2f2a37c9399c" }, "1135": { "D_lat": 66.5213851928711, "D_lon": -86.22472381591797, "S_lat": 64.1933364868164, "S_lon": -83.35944366455078, "Shape_Leng": 3.6933207511901855, "geoq_featureid": "192328d0-259a-443b-ba37-dcbaf0717eaa" }, "1174": { "D_lat": 63.75638961791992, "D_lon": -68.55583190917969, "S_lat": 45.3224983215332, "S_lon": -75.6691665649414, "Shape_Leng": 19.844072341918945, "geoq_featureid": "d6936ca0-adf5-4709-9e82-14bfd9878b69" }, "1184": { "D_lat": 63.75638961791992, "D_lon": -68.55583190917969, "S_lat": 62.8113899230957, "S_lon": -92.11582946777344, "Shape_Leng": 23.606739044189453, "geoq_featureid": "9bfb21a8-fcbc-46b7-87c5-93ce652ed429" }, "1196": { "D_lat": 73.00638580322266, "D_lon": -85.0472183227539, "S_lat": 63.75638961791992, "S_lon": -68.55583190917969, "Shape_Leng": 19.050989151000977, "geoq_featureid": "43aad92e-5513-46ad-95de-11591205a162" }, "1197": { "D_lat": 70.48611450195312, "D_lon": -68.51667022705078, "S_lat": 63.75638961791992, "S_lon": -68.55583190917969, "Shape_Leng": 6.729837894439697, "geoq_featureid": "60cbdfde-0f67-4d20-a700-9e452aab85d3" }, "1205": { "D_lat": 63.75638961791992, "D_lon": -68.55583190917969, "S_lat": 58.09611129760742, "S_lon": -68.42694091796875, "Shape_Leng": 5.66176176071167, "geoq_featureid": "bcf0a433-e33c-4c6a-93eb-9b9dff90a64e" }, "1218": { "D_lat": 63.75638961791992, "D_lon": -68.55583190917969, "S_lat": 64.2300033569336, "S_lon": -76.52666473388672, "Shape_Leng": 7.985963821411133, "geoq_featureid": "bf90352f-9a84-458b-be90-3ab69836606e" }, "1223": { "D_lat": 58.09611129760742, "D_lon": -68.42694091796875, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 13.723424911499023, "geoq_featureid": "e26e00cd-55c1-4c42-9913-0cbddc9e3a23" }, "1224": { "D_lat": 64.29888916015625, "D_lon": -96.0777816772461, "S_lat": 66.5213851928711, "S_lon": -86.22472381591797, "Shape_Leng": 10.104683876037598, "geoq_featureid": "42bc67c1-c0fc-4a81-bb38-faeab9ee5798" }, "1225": { "D_lat": 63.75638961791992, "D_lon": -68.55583190917969, "S_lat": 68.77610778808594, "S_lon": -81.24361419677734, "Shape_Leng": 13.6691312789917, "geoq_featureid": "582725db-128d-4f49-ae60-68f7b6760a68" }, "1228": { "D_lat": 63.75638961791992, "D_lon": -68.55583190917969, "S_lat": 66.1449966430664, "S_lon": -65.71360778808594, "Shape_Leng": 3.7141573429107666, "geoq_featureid": "5c726b10-bd45-4789-8a74-65322de75c0d" }, "1231": { "D_lat": 63.346900939941406, "D_lon": -90.7311019897461, "S_lat": 64.1933364868164, "S_lon": -83.35944366455078, "Shape_Leng": 7.421104431152344, "geoq_featureid": "f033b913-69a0-4ad5-9422-3527268a6bbb" }, "1250": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 12.18885326385498, "S_lon": -68.95980072021484, "Shape_Leng": 25.986988067626953, "geoq_featureid": "6836dd20-5d4a-413c-aea8-7462415effd3" }, "1265": { "D_lat": 12.18885326385498, "D_lon": -68.95980072021484, "S_lat": 5.452830791473389, "S_lon": -55.187782287597656, "Shape_Leng": 15.332361221313477, "geoq_featureid": "43ba85b6-ae7b-4acc-8539-3997aba70746" }, "1267": { "D_lat": 12.18885326385498, "D_lon": -68.95980072021484, "S_lat": 10.595369338989258, "S_lon": -61.337242126464844, "Shape_Leng": 7.787576675415039, "geoq_featureid": "cee53d51-871b-4464-9b45-9858d481281a" }, "1268": { "D_lat": 5.452830791473389, "D_lon": -55.187782287597656, "S_lat": 10.595369338989258, "S_lon": -61.337242126464844, "Shape_Leng": 8.01648235321045, "geoq_featureid": "b0f06982-daea-492a-b722-c6e55ffa73a9" }, "1292": { "D_lat": 42.01580047607422, "D_lon": 35.06639862060547, "S_lat": 8.62876033782959, "S_lon": -79.03469848632812, "Shape_Leng": 126.02513885498047, "geoq_featureid": "59fff576-c482-4ff6-add0-48196a912d1d" }, "1305": { "D_lat": 8.973339080810547, "D_lon": -79.55558013916016, "S_lat": 42.01580047607422, "S_lon": 35.06639862060547, "Shape_Leng": 126.58210754394531, "geoq_featureid": "2b333a46-3028-480e-a528-e1f7464b294c" }, "1306": { "D_lat": 8.391002655029297, "D_lon": -82.43498992919922, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 2.3907310962677, "geoq_featureid": "8c2ce9d2-f31e-4c3b-81ce-cccecb6f0a6d" }, "1552": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 3.8196280002593994, "S_lon": -76.9897689819336, "Shape_Leng": 2.9764914512634277, "geoq_featureid": "e9de203e-265d-4b23-b5fc-f929d649b9fc" }, "1569": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 6.184717178344727, "S_lon": -67.4931640625, "Shape_Leng": 6.817111015319824, "geoq_featureid": "eaa27878-deac-494a-b78d-9e8ea02ee603" }, "1581": { "D_lat": 3.8499999046325684, "D_lon": -67.91000366210938, "S_lat": 4.167874813079834, "S_lon": -73.61376190185547, "Shape_Leng": 5.712623596191406, "geoq_featureid": "f32ab5d6-37d6-4e91-8a64-80078046b382" }, "1601": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 2.5796940326690674, "S_lon": -72.63935852050781, "Shape_Leng": 2.602938413619995, "geoq_featureid": "adde4794-b5ad-477b-991c-a172395c2bc1" }, "1615": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 5.690758228302002, "S_lon": -76.64118194580078, "Shape_Leng": 2.683218479156494, "geoq_featureid": "eb1198a9-4fa6-4972-afcc-b3922eb1a466" }, "1629": { "D_lat": -16.513338088989258, "D_lon": -68.19225311279297, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 44.007816314697266, "geoq_featureid": "0ec66df0-93d4-4a7f-ba74-8eac5c6df410" }, "1635": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 0.978888988494873, "S_lon": -76.60555267333984, "Shape_Leng": 4.461312770843506, "geoq_featureid": "0bb9cc5a-2daf-485f-8fba-63d06bd5993f" }, "1640": { "D_lat": 6.184717178344727, "D_lon": -67.4931640625, "S_lat": 4.167874813079834, "S_lon": -73.61376190185547, "Shape_Leng": 6.444357872009277, "geoq_featureid": "49a2ccc1-6393-4975-bf2b-8b802d74f20f" }, "1663": { "D_lat": 26.072582244873047, "D_lon": -80.15274810791016, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 32.79509353637695, "geoq_featureid": "0233fc3b-8661-44fd-ad63-e1dab8e3255e" }, "1688": { "D_lat": 12.501388549804688, "D_lon": -70.01522064208984, "S_lat": 10.558208465576172, "S_lon": -71.72785949707031, "Shape_Leng": 2.5901970863342285, "geoq_featureid": "666eed7b-b8c8-41d7-a529-c854188e2717" }, "1696": { "D_lat": 10.603116989135742, "D_lon": -66.99058532714844, "S_lat": 10.912925720214844, "S_lon": -63.96758270263672, "Shape_Leng": 3.0388479232788086, "geoq_featureid": "63b9125d-3cee-4e00-8c3c-8c37ed623010" }, "1699": { "D_lat": 10.603116989135742, "D_lon": -66.99058532714844, "S_lat": 8.288528442382812, "S_lon": -62.76036071777344, "Shape_Leng": 4.822088241577148, "geoq_featureid": "70050306-3e02-4203-9e09-660b44164f31" }, "2093": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 10.593289375305176, "S_lon": -85.5444107055664, "Shape_Leng": 25.113161087036133, "geoq_featureid": "548bff3c-6f1e-4211-b9d0-a033970d4ef2" }, "2094": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 10.593289375305176, "S_lon": -85.5444107055664, "Shape_Leng": 16.084590911865234, "geoq_featureid": "9a3efd6f-c959-4fe7-99d9-01102140da3c" }, "2123": { "D_lat": 27.931886672973633, "D_lon": -15.38658618927002, "S_lat": 14.739707946777344, "S_lon": -17.490224838256836, "Shape_Leng": 13.359308242797852, "geoq_featureid": "ffb0e65f-d66d-48e7-8017-b6117886e65b" }, "2244": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 42.36434555053711, "S_lon": -71.00518035888672, "Shape_Leng": 171.4988555908203, "geoq_featureid": "2cd67b52-d222-488f-a043-0c7ab005c2d2" }, "2438": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 21.9713191986084, "geoq_featureid": "815bb283-a890-48c0-a550-f0aea91720b8" }, "2440": { "D_lat": -15.871100425720215, "D_lon": -47.91862487792969, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 52.796142578125, "geoq_featureid": "0792bf3d-86a9-4e61-98c7-6116aded9610" }, "2442": { "D_lat": 17.53914451599121, "D_lon": -88.3082046508789, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 11.510241508483887, "geoq_featureid": "d5517829-504f-4328-9a89-b96d82345b7e" }, "2443": { "D_lat": 10.603116989135742, "D_lon": -66.99058532714844, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 20.201684951782227, "geoq_featureid": "54cb4504-8312-4d17-bc40-f7b5723698de" }, "2447": { "D_lat": 3.543221950531006, "D_lon": -76.38158416748047, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 22.59206771850586, "geoq_featureid": "50b21243-cdb8-480c-8398-cbb0a9ed408e" }, "2501": { "D_lat": -19.633750915527344, "D_lon": -43.96885681152344, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 58.19972229003906, "geoq_featureid": "cf79cc25-1901-4660-978f-3d49856c9dba" }, "2505": { "D_lat": -25.528474807739258, "D_lon": -49.17577362060547, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 60.04929733276367, "geoq_featureid": "c4e5a39b-c292-4c30-99c5-9cf75ffa73bb" }, "2522": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 20.522403717041016, "S_lon": -86.92564392089844, "Shape_Leng": 8.47531795501709, "geoq_featureid": "383b4aca-85bb-47c4-94b2-e9254aba7c5d" }, "2621": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 36.39437484741211, "geoq_featureid": "230a7969-343f-43ef-af38-b5187e3a416a" }, "2627": { "D_lat": 17.53914451599121, "D_lon": -88.3082046508789, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 17.676939010620117, "geoq_featureid": "b59a6e93-eb88-4af8-930c-eea8b4d21109" }, "2643": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 15.629670143127441, "geoq_featureid": "4c3e45bb-e9fe-4548-8362-473c470cc83b" }, "2656": { "D_lat": -34.82222366333008, "D_lon": -58.535831451416016, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 78.02325439453125, "geoq_featureid": "3599f0e7-8809-40cb-bb24-a2ce0f7ebe37" }, "2810": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 40.692501068115234, "S_lon": -74.16867065429688, "Shape_Leng": 233.30316162109375, "geoq_featureid": "970d10a0-0ec4-4764-95d3-efcbe95f6fc7" }, "2818": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 41.804473876953125, "S_lon": 12.250797271728516, "Shape_Leng": 96.84496307373047, "geoq_featureid": "172e6cca-2c6a-4b36-9111-6b9c26b33329" }, "2854": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": -22.808902740478516, "S_lon": -43.243648529052734, "Shape_Leng": 69.32317352294922, "geoq_featureid": "676ce034-f4d3-4dd9-a0ec-322eb56d7a6a" }, "2855": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": -22.808902740478516, "S_lon": -43.243648529052734, "Shape_Leng": 77.62342834472656, "geoq_featureid": "fc7d6e01-6f52-4c8a-aaaa-89ec496c650b" }, "2879": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": -23.43207550048828, "S_lon": -46.46950912475586, "Shape_Leng": 68.13551330566406, "geoq_featureid": "be578142-67e5-4f68-a1da-39fef81b0325" }, "2880": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": -23.43207550048828, "S_lon": -46.46950912475586, "Shape_Leng": 75.85845947265625, "geoq_featureid": "2234a7dd-5fae-4eeb-9110-f6d8467fefec" }, "2895": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 141.6072540283203, "geoq_featureid": "3c89fde4-24d6-4c3b-b19a-da582db5b2a4" }, "2898": { "D_lat": 32.36404037475586, "D_lon": -64.67870330810547, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 12.311819076538086, "geoq_featureid": "ef0771d9-0122-4d01-950f-6fe50c845540" }, "2931": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 38.94453430175781, "S_lon": -77.455810546875, "Shape_Leng": 146.51943969726562, "geoq_featureid": "965f2a19-155d-466a-bfc6-b35a36b045df" }, "2934": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 38.94453430175781, "S_lon": -77.455810546875, "Shape_Leng": 141.96885681152344, "geoq_featureid": "6edecc98-5a57-4700-b8c4-88d643931eeb" }, "2941": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 29.984432220458984, "S_lon": -95.34143829345703, "Shape_Leng": 169.15377807617188, "geoq_featureid": "e920b7ca-cb3e-44cd-8585-883fd50be9fd" }, "3008": { "D_lat": -34.82222366333008, "D_lon": -58.535831451416016, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 77.02185821533203, "geoq_featureid": "6eb3991b-bb09-4afa-b5a4-b079c963b34f" }, "3010": { "D_lat": -22.808902740478516, "D_lon": -43.243648529052734, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 70.5793228149414, "geoq_featureid": "81586ec3-2f58-4362-b3fa-cf80e8220582" }, "3011": { "D_lat": -23.43207550048828, "D_lon": -46.46950912475586, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 69.78169250488281, "geoq_featureid": "21b9f920-f5bb-43a3-9a36-53c9e0e99835" }, "3013": { "D_lat": 60.317222595214844, "D_lon": 24.963333129882812, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 105.46175384521484, "geoq_featureid": "18efea17-93a4-436f-ae7a-cfe74b472687" }, "3014": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 234.84144592285156, "geoq_featureid": "c26fb702-8871-4729-8298-5d766fa935a0" }, "3026": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 166.85260009765625, "geoq_featureid": "14d1c576-0eea-4988-8c8f-d2c1d58469c6" }, "3044": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 36.080055236816406, "S_lon": -115.15225219726562, "Shape_Leng": 123.41615295410156, "geoq_featureid": "197a36e9-3683-4d5d-bf5f-ac5765bdc5b8" }, "3051": { "D_lat": -23.43207550048828, "D_lon": -46.46950912475586, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 92.38048553466797, "geoq_featureid": "76dd9f6b-2369-47de-add9-025934d3de4c" }, "3056": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 128.01385498046875, "geoq_featureid": "58d5df83-e71b-4a39-92f2-4f7d7a653767" }, "3071": { "D_lat": -34.82222366333008, "D_lon": -58.535831451416016, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 64.44303131103516, "geoq_featureid": "707f9a23-c941-4269-9e89-42162531ce62" }, "3095": { "D_lat": -22.808902740478516, "D_lon": -43.243648529052734, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 61.1507453918457, "geoq_featureid": "5372834a-849c-4a05-9e20-41e4dc662d61" }, "3096": { "D_lat": 12.004246711730957, "D_lon": -61.78619384765625, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 23.097347259521484, "geoq_featureid": "0448796b-7b48-4285-a264-c82bead12c05" }, "3106": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 51.14805603027344, "S_lon": -0.19027799367904663, "Shape_Leng": 123.69226837158203, "geoq_featureid": "27083e5a-da61-408d-a768-b1ae4aca067b" }, "3109": { "D_lat": 57.201942443847656, "D_lon": -2.1977779865264893, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 5.983551502227783, "geoq_featureid": "a2f8d8bb-5209-4a21-8334-6f65dcf0dd43" }, "3131": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 84.57838439941406, "geoq_featureid": "62fd9e04-8972-4588-9cc1-2f2c17bca0b2" }, "3135": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 110.04619598388672, "geoq_featureid": "bee2dca1-dfab-48f4-bd99-06529d2f08cc" }, "3136": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 102.85633850097656, "geoq_featureid": "5c2c5e95-dc67-4c2f-9cc7-0c1b289f70a9" }, "3146": { "D_lat": 55.871944427490234, "D_lon": -4.433055877685547, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 5.926772594451904, "geoq_featureid": "771a8292-6d26-40b7-af83-d7de7cdbd90f" }, "3150": { "D_lat": 38.78131103515625, "D_lon": -9.135918617248535, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 15.411693572998047, "geoq_featureid": "176337db-db51-409d-bace-f4093ec59b99" }, "3156": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 86.74903869628906, "geoq_featureid": "c01c15b2-0f05-47ea-9c5b-8cade9538ae1" }, "3182": { "D_lat": 32.73355484008789, "D_lon": -117.18966674804688, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 126.80851745605469, "geoq_featureid": "47d18695-59f7-42bf-9abb-8c9eb4c61f5a" }, "3200": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": -12.021888732910156, "S_lon": -77.11431884765625, "Shape_Leng": 49.18290328979492, "geoq_featureid": "07a3b41b-ac48-4802-8b06-be2e135d51f8" }, "3201": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": -12.021888732910156, "S_lon": -77.11431884765625, "Shape_Leng": 52.77027130126953, "geoq_featureid": "020b4108-bca8-49c3-ba02-e3edd69d07fa" }, "3202": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": -12.021888732910156, "S_lon": -77.11431884765625, "Shape_Leng": 61.973602294921875, "geoq_featureid": "1d701a62-39d3-40d1-adf3-05b549cc551f" }, "3203": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -12.021888732910156, "S_lon": -77.11431884765625, "Shape_Leng": 37.94877243041992, "geoq_featureid": "8760d07a-3ccc-4d2d-afb5-80d9123b6888" }, "3215": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 40.49355697631836, "S_lon": -3.5667641162872314, "Shape_Leng": 97.20597076416016, "geoq_featureid": "ce838e1a-0868-4a27-a76d-0a7b7f9c52fa" }, "3217": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 40.49355697631836, "S_lon": -3.5667641162872314, "Shape_Leng": 122.50343322753906, "geoq_featureid": "7c2a0d3f-cf51-42da-9292-e2d9853ac36f" }, "3218": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 40.49355697631836, "S_lon": -3.5667641162872314, "Shape_Leng": 79.8877182006836, "geoq_featureid": "3805803d-5453-417a-9ce8-c31e6a4fff8a" }, "3225": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -3.0386109352111816, "S_lon": -60.049720764160156, "Shape_Leng": 35.251834869384766, "geoq_featureid": "eee61897-b639-4add-b14f-649a5379a64b" }, "3228": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 18.50371742248535, "S_lon": -77.91336059570312, "Shape_Leng": 23.976673126220703, "geoq_featureid": "aa872e1f-ffb1-41a7-b4cf-ba7decce7429" }, "3242": { "D_lat": -23.43207550048828, "D_lon": -46.46950912475586, "S_lat": 28.429393768310547, "S_lon": -81.30899047851562, "Shape_Leng": 62.524871826171875, "geoq_featureid": "7684e76d-8492-4419-bfd0-06b851c0c9cc" }, "3245": { "D_lat": 51.14805603027344, "D_lon": -0.19027799367904663, "S_lat": 28.429393768310547, "S_lon": -81.30899047851562, "Shape_Leng": 87.0929183959961, "geoq_featureid": "5c0dc44f-2924-46b5-a363-c25cb3176eeb" }, "3267": { "D_lat": -25.239849090576172, "D_lon": -57.519134521484375, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 55.90102005004883, "geoq_featureid": "e0e5dded-623d-4676-aba8-a13640cea29c" }, "3270": { "D_lat": 41.29707717895508, "D_lon": 2.0784640312194824, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 86.09770965576172, "geoq_featureid": "5fa5ca22-a705-491c-aead-ea474a4d695b" }, "3271": { "D_lat": 32.36404037475586, "D_lon": -64.67870330810547, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 16.95318031311035, "geoq_featureid": "a4e509e8-7b0a-4a57-8f4f-1c71d5ae97bb" }, "3275": { "D_lat": -23.43207550048828, "D_lon": -46.46950912475586, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 59.75813293457031, "geoq_featureid": "8a50e037-1365-4933-93a7-94140bbb976d" }, "3278": { "D_lat": -2.157418966293335, "D_lon": -79.88356018066406, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 27.953643798828125, "geoq_featureid": "1d356572-dcec-4408-a170-8d773d47a3b4" }, "3281": { "D_lat": 6.164535999298096, "D_lon": -75.4231185913086, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 20.225221633911133, "geoq_featureid": "f50fa788-5fae-4898-aad4-6378be300734" }, "3345": { "D_lat": 32.73355484008789, "D_lon": -117.18966674804688, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 37.68698501586914, "geoq_featureid": "a751bf78-e8fa-41cc-94eb-fda300208d0e" }, "3395": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -34.838417053222656, "S_lon": -56.03080749511719, "Shape_Leng": 65.35639953613281, "geoq_featureid": "c9dbdc80-9743-4abf-9afa-d0899115e204" }, "3396": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 45.63060760498047, "S_lon": 8.728111267089844, "Shape_Leng": 84.89130401611328, "geoq_featureid": "da352d42-ced1-4282-914b-0431cbb5a08d" }, "3400": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 45.63060760498047, "S_lon": 8.728111267089844, "Shape_Leng": 94.51272583007812, "geoq_featureid": "18984e87-a0cf-4a93-bb58-d042d6aa221d" }, "3401": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -29.994428634643555, "S_lon": -51.17142868041992, "Shape_Leng": 62.971920013427734, "geoq_featureid": "41ed0a17-427e-4a16-92ad-e6c3de155557" }, "3403": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 10.595369338989258, "S_lon": -61.337242126464844, "Shape_Leng": 24.316333770751953, "geoq_featureid": "191a2742-76eb-4b9e-962f-afea1ebd216c" }, "3441": { "D_lat": 40.692501068115234, "D_lon": -74.16867065429688, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 49.038883209228516, "geoq_featureid": "d26749e7-175d-4df4-8ac4-c2eda23f516d" }, "3442": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 49.44298553466797, "geoq_featureid": "8bc2eb73-db5d-4e73-8b8a-6ab819f01e9a" }, "3466": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 25.43326759338379, "geoq_featureid": "adc2c616-33ba-4c3e-a995-9d31bf77d844" }, "3467": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 26.27865219116211, "geoq_featureid": "8d3b33f2-c1ec-4d18-9490-67fb1c5d648d" }, "3468": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 32.4122428894043, "geoq_featureid": "5f733e4c-90a8-4463-b77d-6cbc55871358" }, "3469": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 16.279298782348633, "geoq_featureid": "3328bb88-be6e-4680-93ab-d12ca97766b9" }, "3518": { "D_lat": 31.72255516052246, "D_lon": 35.99321365356445, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 134.65428161621094, "geoq_featureid": "7ead7edc-5979-40b3-bf83-50b21d98fdd5" }, "3521": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 163.50576782226562, "geoq_featureid": "3354a02b-4d66-49c7-b46a-c3960d24a05b" }, "3539": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 20.967729568481445, "geoq_featureid": "bd2f7b8d-a495-4a77-8e1d-0e88e2dc6846" }, "3544": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 158.31907653808594, "geoq_featureid": "f2f6c9c7-4281-4650-9ed8-ae7ed5ff52f9" }, "3601": { "D_lat": 53.42133331298828, "D_lon": -6.270074844360352, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 84.73358917236328, "geoq_featureid": "42ef7ab8-b03f-463d-9ca9-fb64566a677d" }, "3617": { "D_lat": 41.804473876953125, "D_lon": 12.250797271728516, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 104.51058959960938, "geoq_featureid": "0247c416-5ca6-419b-bd9f-03af9d2676f5" }, "3625": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 193.964599609375, "geoq_featureid": "cc32d956-d198-431f-903a-6853ba0dbb16" }, "3642": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 90.74296569824219, "geoq_featureid": "9af42aa2-7cc8-47ae-a7bf-da3cd6b949a6" }, "3645": { "D_lat": 40.49355697631836, "D_lon": -3.5667641162872314, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 73.03497314453125, "geoq_featureid": "22cc129a-f004-4563-8202-4b577fa53f63" }, "3655": { "D_lat": 40.49355697631836, "D_lon": -3.5667641162872314, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 86.72346496582031, "geoq_featureid": "e822e9da-ceaa-4bbb-b0ad-58d9cd397c06" }, "3656": { "D_lat": 53.35374450683594, "D_lon": -2.2749500274658203, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 89.04695129394531, "geoq_featureid": "ca7e7328-82d3-4a5f-b611-a6c949dac30c" }, "3689": { "D_lat": 40.08011245727539, "D_lon": 116.58455657958984, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 183.14303588867188, "geoq_featureid": "0ef4429b-8729-4f90-83f9-b6b8f6fdb884" }, "3776": { "D_lat": 41.29707717895508, "D_lon": 2.0784640312194824, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 79.09154510498047, "geoq_featureid": "ac00b817-affb-4ad2-8aff-ba841e5679c1" }, "3777": { "D_lat": 32.36404037475586, "D_lon": -64.67870330810547, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 12.970986366271973, "geoq_featureid": "6668ba53-df17-4840-9dae-496bebca6364" }, "3786": { "D_lat": 37.93635940551758, "D_lon": 23.944467544555664, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 103.42524719238281, "geoq_featureid": "2b4f01de-f4b3-4f8b-8fc6-3372255e7377" }, "3800": { "D_lat": 39.861656188964844, "D_lon": -104.67317962646484, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 29.513296127319336, "geoq_featureid": "6b3b962e-7562-4b55-8d62-3ef4a5502711" }, "3802": { "D_lat": 25.261125564575195, "D_lon": 51.56505584716797, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 139.052978515625, "geoq_featureid": "c7c6c9af-5642-49f7-9779-b20fd51875d5" }, "3814": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 22.177377700805664, "geoq_featureid": "37013e3b-f52b-49a7-bce4-08043bff8a51" }, "3819": { "D_lat": 41.804473876953125, "D_lon": 12.250797271728516, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 90.21074676513672, "geoq_featureid": "b7a0e2e9-b667-4388-a0a7-31d0d5398574" }, "3823": { "D_lat": 55.871944427490234, "D_lon": -4.433055877685547, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 74.33061218261719, "geoq_featureid": "4afe098d-7ded-4d4f-aad2-b39df0965fdb" }, "3834": { "D_lat": 18.439416885375977, "D_lon": -66.0018310546875, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 23.36654281616211, "geoq_featureid": "edc13383-e710-43ba-b86e-30f447797466" }, "3844": { "D_lat": 38.78131103515625, "D_lon": -9.135918617248535, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 67.14667510986328, "geoq_featureid": "95b18671-f1f4-468f-940b-3d1cf1adc592" }, "3903": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 28.091156005859375, "geoq_featureid": "d282beea-c5aa-4055-9b54-c94a6a59e6ba" }, "3908": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 120.24166870117188, "geoq_featureid": "f84e216b-0bf8-4951-a10d-572468a49188" }, "3913": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 33.43427658081055, "S_lon": -112.01158142089844, "Shape_Leng": 32.724639892578125, "geoq_featureid": "7f32b444-4e8b-497a-8cc4-f819389310fa" }, "3970": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 9.071364402770996, "S_lon": -79.38345336914062, "Shape_Leng": 29.701486587524414, "geoq_featureid": "17f0dec0-89a7-47ba-aa3a-fe2a56fc440b" }, "3971": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 9.071364402770996, "S_lon": -79.38345336914062, "Shape_Leng": 16.746543884277344, "geoq_featureid": "c2cc719a-2a1d-4af9-b828-6cd2ed8556cb" }, "3974": { "D_lat": 39.871944427490234, "D_lon": -75.24114227294922, "S_lat": 18.567367553710938, "S_lon": -68.36343383789062, "Shape_Leng": 22.403141021728516, "geoq_featureid": "85b394bf-e272-4041-89fe-18b14d9eb021" }, "3997": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 35.87763977050781, "S_lon": -78.7874755859375, "Shape_Leng": 82.11209106445312, "geoq_featureid": "224b736b-63c9-4b40-b7d2-eb1c5c00cf67" }, "4002": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -8.12679386138916, "S_lon": -34.923038482666016, "Shape_Leng": 56.73848342895508, "geoq_featureid": "afaf5d83-a413-4530-9f3c-e5c391cb6a36" }, "4019": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 15.452638626098633, "S_lon": -87.92355346679688, "Shape_Leng": 12.856197357177734, "geoq_featureid": "81bde837-6939-4c68-a8fb-e63d1278e367" }, "4043": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 16.316814422607422, "S_lon": -86.52296447753906, "Shape_Leng": 19.649850845336914, "geoq_featureid": "e40dc59c-7b7c-4ad6-8be0-bafb91fbf1a7" }, "4044": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 16.316814422607422, "S_lon": -86.52296447753906, "Shape_Leng": 11.34453296661377, "geoq_featureid": "811aaf3f-063e-488f-ab91-f969c9e47b78" }, "4053": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 13.440946578979492, "S_lon": -89.05572509765625, "Shape_Leng": 15.151317596435547, "geoq_featureid": "1f7a72d2-ba86-41a5-b311-057283c1f730" }, "4097": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": -33.392974853515625, "S_lon": -70.78580474853516, "Shape_Leng": 71.35543823242188, "geoq_featureid": "936aefea-15b1-45ff-b63c-bf49f6d59533" }, "4100": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -33.392974853515625, "S_lon": -70.78580474853516, "Shape_Leng": 59.95174789428711, "geoq_featureid": "cb38b2a7-aab4-44a6-9927-c1893f78a8eb" }, "4118": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 132.1105194091797, "geoq_featureid": "7bd9a864-fc8b-4956-acdd-c81a97225e3c" }, "4119": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 43.98517990112305, "geoq_featureid": "68e9e275-5161-4059-a9dc-0f8560202ec5" }, "4128": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -12.910993576049805, "S_lon": -38.3310432434082, "Shape_Leng": 57.14686584472656, "geoq_featureid": "870b43af-59bd-4c84-a8ab-a879b3e5d419" }, "4129": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 19.406091690063477, "S_lon": -70.60469055175781, "Shape_Leng": 11.605732917785645, "geoq_featureid": "46211260-813a-49ef-a8d8-c921cdf296ca" }, "4157": { "D_lat": 10.603116989135742, "D_lon": -66.99058532714844, "S_lat": 18.439416885375977, "S_lon": -66.0018310546875, "Shape_Leng": 7.898458003997803, "geoq_featureid": "a73b3786-5ca3-4953-afc9-ad9c01a6ca58" }, "4158": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 18.439416885375977, "S_lon": -66.0018310546875, "Shape_Leng": 22.500383377075195, "geoq_featureid": "1e55cb31-7894-4c3c-aafd-8942dfd34d73" }, "4159": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 18.439416885375977, "S_lon": -66.0018310546875, "Shape_Leng": 34.345611572265625, "geoq_featureid": "d0a6fc46-0547-443a-ae67-eb85b4a6f99a" }, "4187": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 18.337305068969727, "S_lon": -64.97335815429688, "Shape_Leng": 24.004993438720703, "geoq_featureid": "4ec1ee9b-0df0-4795-b2a5-feddc5e041ec" }, "4189": { "D_lat": 39.871944427490234, "D_lon": -75.24114227294922, "S_lat": 18.337305068969727, "S_lon": -64.97335815429688, "Shape_Leng": 23.890277862548828, "geoq_featureid": "76d05e04-8ac4-4f42-9e16-d5a3678e673f" }, "4190": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 17.701889038085938, "S_lon": -64.79855346679688, "Shape_Leng": 17.48838233947754, "geoq_featureid": "d865dad1-b084-46dd-86e0-275d32c08e0a" }, "4195": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 18.040952682495117, "S_lon": -63.1088981628418, "Shape_Leng": 24.80790901184082, "geoq_featureid": "620f8e7c-fb74-48c9-a1f7-2a8c0efc4997" }, "4196": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 18.040952682495117, "S_lon": -63.1088981628418, "Shape_Leng": 25.029552459716797, "geoq_featureid": "1201c0de-55c7-4106-a63f-008584a30d8f" }, "4197": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 18.040952682495117, "S_lon": -63.1088981628418, "Shape_Leng": 18.862619400024414, "geoq_featureid": "9a62a393-555e-4055-8f0f-ebdc1e89ce55" }, "4198": { "D_lat": 39.871944427490234, "D_lon": -75.24114227294922, "S_lat": 18.040952682495117, "S_lon": -63.1088981628418, "Shape_Leng": 25.02005386352539, "geoq_featureid": "4ff3b2e8-0a0f-4f1c-bba7-2d1deaa19628" }, "4213": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 14.060882568359375, "S_lon": -87.21719360351562, "Shape_Leng": 13.627769470214844, "geoq_featureid": "a0c8e6a5-2c12-4c00-8eb7-0c4f50fdb308" }, "4219": { "D_lat": 39.871944427490234, "D_lon": -75.24114227294922, "S_lat": 32.011390686035156, "S_lon": 34.88666534423828, "Shape_Leng": 116.73230743408203, "geoq_featureid": "4412c693-dedc-4fdb-b5f0-6d6bd0294216" }, "4228": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 27.97547149658203, "S_lon": -82.53324890136719, "Shape_Leng": 15.327851295471191, "geoq_featureid": "37c6f9b7-71ae-419e-af47-ae46090fa88d" }, "4230": { "D_lat": 51.14805603027344, "D_lon": -0.19027799367904663, "S_lat": 27.97547149658203, "S_lon": -82.53324890136719, "Shape_Leng": 88.53971862792969, "geoq_featureid": "7f73f378-8e25-42b4-800f-8a27e41abd85" }, "4234": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 27.97547149658203, "S_lon": -82.53324890136719, "Shape_Leng": 30.053970336914062, "geoq_featureid": "c6de3d77-85e1-4d40-b6dd-559d64d93a50" }, "4243": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -17.644756317138672, "S_lon": -63.1353645324707, "Shape_Leng": 46.71287536621094, "geoq_featureid": "c1717969-2c51-4d38-918b-1a3d057caad9" }, "4276": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": -0.1411440074443817, "S_lon": -78.48821258544922, "Shape_Leng": 25.99720001220703, "geoq_featureid": "07c219d8-bd66-4421-9dce-4cd68030efcd" }, "4277": { "D_lat": 35.2140007019043, "D_lon": -80.9431381225586, "S_lat": 13.733194351196289, "S_lon": -60.952598571777344, "Shape_Leng": 29.41315269470215, "geoq_featureid": "c2eb62f5-c82d-492d-a1f1-0a2c22145115" }, "4278": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 13.733194351196289, "S_lon": -60.952598571777344, "Shape_Leng": 22.811153411865234, "geoq_featureid": "d8cf28e8-e500-499e-b88b-2bae012c15cd" }, "4305": { "D_lat": 36.843936920166016, "D_lon": -2.3700969219207764, "S_lat": 39.553611755371094, "S_lon": 2.7277779579162598, "Shape_Leng": 5.7742815017700195, "geoq_featureid": "851ce1a1-451f-4c85-8ab4-3c3926aafa5d" }, "4335": { "D_lat": 39.871944427490234, "D_lon": -75.24114227294922, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 86.5409164428711, "geoq_featureid": "9c681a25-c42e-4923-8c2a-f0d58f1417bc" }, "4401": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 21.036527633666992, "S_lon": -86.87708282470703, "Shape_Leng": 103.18251037597656, "geoq_featureid": "dd61df4e-f001-4586-82b1-6694f5808470" }, "4402": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 12.18885326385498, "S_lon": -68.95980072021484, "Shape_Leng": 88.19905853271484, "geoq_featureid": "f3638296-9387-49c7-95be-a10109a97559" }, "4403": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 32.896827697753906, "S_lon": -97.03799438476562, "Shape_Leng": 112.89087677001953, "geoq_featureid": "d57b93a6-3cf6-49ec-8e80-cf35a3c9947c" }, "4427": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 51.289451599121094, "S_lon": 6.766775131225586, "Shape_Leng": 137.296630859375, "geoq_featureid": "b8967dfc-e5ff-4c0b-93eb-58abb945c51f" }, "4431": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 51.289451599121094, "S_lon": 6.766775131225586, "Shape_Leng": 94.36212921142578, "geoq_featureid": "bb10164c-348c-4632-ade6-f16a72d477c9" }, "4636": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 98.73995208740234, "geoq_featureid": "285d814e-9267-437f-863b-563d7a3f2e33" }, "4645": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 37.74118423461914, "S_lon": -25.6978702545166, "Shape_Leng": 35.427608489990234, "geoq_featureid": "d431b445-632b-42a3-90a8-c28102668aed" }, "4647": { "D_lat": 36.67490005493164, "D_lon": -4.499105930328369, "S_lat": 39.553611755371094, "S_lon": 2.7277779579162598, "Shape_Leng": 7.7812180519104, "geoq_featureid": "87c94452-9a87-43c0-870a-5ad953c208ad" }, "4668": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 19.75790023803711, "S_lon": -70.57003021240234, "Shape_Leng": 86.40850830078125, "geoq_featureid": "9562fe62-4826-4258-86fb-e70eeba6a682" }, "4669": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 18.567367553710938, "S_lon": -68.36343383789062, "Shape_Leng": 84.68226623535156, "geoq_featureid": "5d854a44-bd72-41cb-b8b9-65a679966801" }, "4670": { "D_lat": 48.353782653808594, "D_lon": 11.786086082458496, "S_lat": 18.567367553710938, "S_lon": -68.36343383789062, "Shape_Leng": 88.33576202392578, "geoq_featureid": "25f81bd1-e1f2-4979-85db-48910633d31c" }, "4686": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 26.53616714477539, "S_lon": -81.75516510009766, "Shape_Leng": 95.70484924316406, "geoq_featureid": "3e4fce22-fb0a-48b7-ad7a-c6ea84b6febf" }, "4714": { "D_lat": 50.901390075683594, "D_lon": 4.4844441413879395, "S_lat": 5.261385917663574, "S_lon": -3.9262940883636475, "Shape_Leng": 46.46975326538086, "geoq_featureid": "11162163-d692-45de-a3af-ae3120f180f2" }, "4715": { "D_lat": 12.353194236755371, "D_lon": -1.512416958808899, "S_lat": 5.261385917663574, "S_lon": -3.9262940883636475, "Shape_Leng": 7.491413116455078, "geoq_featureid": "e20b9dd1-8269-4839-8c98-965f1a0467a7" }, "4748": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 28.044475555419922, "S_lon": -16.57248878479004, "Shape_Leng": 33.21601104736328, "geoq_featureid": "4a0c50eb-f921-4201-ba26-17eb7836b33a" }, "4751": { "D_lat": 51.43244552612305, "D_lon": 12.241633415222168, "S_lat": 28.044475555419922, "S_lon": -16.57248878479004, "Shape_Leng": 37.487709045410156, "geoq_featureid": "aaf43ffb-d7cf-4b10-a0e3-4d3938f674da" }, "4753": { "D_lat": 49.49869918823242, "D_lon": 11.06689739227295, "S_lat": 28.044475555419922, "S_lon": -16.57248878479004, "Shape_Leng": 35.28172302246094, "geoq_featureid": "f25ff83f-4259-46c8-8459-3edef02ad492" }, "4761": { "D_lat": 28.945463180541992, "D_lon": -13.605224609375, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 36.155269622802734, "geoq_featureid": "6fa5d694-5e3d-435c-aca9-3de9d0503984" }, "4797": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 90.73908996582031, "geoq_featureid": "9095d348-656b-402f-8dbc-680628911f6d" }, "4803": { "D_lat": 27.931886672973633, "D_lon": -15.38658618927002, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 38.217323303222656, "geoq_featureid": "862cd0d2-92e5-4bdd-8be5-c370b15e9a44" }, "4806": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 102.00251007080078, "geoq_featureid": "4b72827b-b367-486b-b039-3cfd5c0b8bfa" }, "4813": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 106.29562377929688, "geoq_featureid": "34e07016-e450-4a48-84f1-67529079bd19" }, "4827": { "D_lat": 28.044475555419922, "D_lon": -16.57248878479004, "S_lat": 52.55968475341797, "S_lon": 13.287711143493652, "Shape_Leng": 39.075496673583984, "geoq_featureid": "62061ad6-f04a-4a4c-ad79-fd8de21908ae" }, "4858": { "D_lat": 28.044475555419922, "D_lon": -16.57248878479004, "S_lat": 48.11027908325195, "S_lon": 16.569721221923828, "Shape_Leng": 39.083595275878906, "geoq_featureid": "1b721408-7b6b-46a3-b494-85b5f2d1b4b0" }, "4869": { "D_lat": 51.289451599121094, "D_lon": 6.766775131225586, "S_lat": 23.03444480895996, "S_lon": -81.4352798461914, "Shape_Leng": 96.54584503173828, "geoq_featureid": "ce9ee6ab-42c6-48fd-8149-ffc4e23f7a88" }, "4872": { "D_lat": 28.945463180541992, "D_lon": -13.605224609375, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 29.03762435913086, "geoq_featureid": "a1dd6311-1150-4430-8c27-81e0f02795a5" }, "4906": { "D_lat": 32.6978874206543, "D_lon": -16.774452209472656, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 29.469369888305664, "geoq_featureid": "7c6e10d0-54bd-4fca-9968-e25403ab6da4" }, "4907": { "D_lat": 28.452716827392578, "D_lon": -13.863760948181152, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 29.560344696044922, "geoq_featureid": "d12b1a97-4380-4fd0-a60f-a6ccfb8e6ff8" }, "4914": { "D_lat": 27.931886672973633, "D_lon": -15.38658618927002, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 31.0869083404541, "geoq_featureid": "1bbb9085-aa1d-45fa-b84d-e012b9d5f20b" }, "4938": { "D_lat": 14.739707946777344, "D_lon": -17.490224838256836, "S_lat": 9.576889038085938, "S_lon": -13.611961364746094, "Shape_Leng": 6.45736837387085, "geoq_featureid": "3f9ce03d-c2d3-49e3-a050-7ee8992e3456" }, "4943": { "D_lat": 5.261385917663574, "D_lon": -3.9262940883636475, "S_lat": 6.357227802276611, "S_lon": 2.384352922439575, "Shape_Leng": 6.40512228012085, "geoq_featureid": "04257cdf-4c6b-4e76-a6f7-a9b4818a3ed7" }, "5009": { "D_lat": 44.88083267211914, "D_lon": -63.508609771728516, "S_lat": 18.50371742248535, "S_lon": -77.91336059570312, "Shape_Leng": 30.150033950805664, "geoq_featureid": "d3658df4-5d89-47c6-b64c-e152de9ae311" }, "5014": { "D_lat": 14.583271980285645, "D_lon": -90.52747344970703, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 15.187067985534668, "geoq_featureid": "d19f0884-2ae1-4a1d-b3a3-faaea2433295" }, "5026": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 21.773624420166016, "S_lon": -72.26588439941406, "Shape_Leng": 23.744047164916992, "geoq_featureid": "a10fcbde-694b-4ecf-aa9e-3846122dee4e" }, "5028": { "D_lat": 44.88083267211914, "D_lon": -63.508609771728516, "S_lat": 19.75790023803711, "S_lon": -70.57003021240234, "Shape_Leng": 26.122756958007812, "geoq_featureid": "f3537d80-8713-4254-8f49-7d4dc65f84c8" }, "5041": { "D_lat": 44.88083267211914, "D_lon": -63.508609771728516, "S_lat": 22.492191314697266, "S_lon": -79.94361114501953, "Shape_Leng": 27.880041122436523, "geoq_featureid": "3371c0bd-aba0-410d-b44f-884309c44e97" }, "5090": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 53.309722900390625, "S_lon": -113.57971954345703, "Shape_Leng": 118.77963256835938, "geoq_featureid": "2b327e74-d1b8-439d-89ad-3fb476b92554" }, "5114": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 45.3224983215332, "S_lon": -75.6691665649414, "Shape_Leng": 77.06559753417969, "geoq_featureid": "ba9eea9f-3a5b-4fee-87ec-33c326a9dedb" }, "5116": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 45.3224983215332, "S_lon": -75.6691665649414, "Shape_Leng": 38.98215103149414, "geoq_featureid": "a5f7bac3-da50-46bf-a9cf-60936c5bc971" }, "5127": { "D_lat": 48.77527618408203, "D_lon": -64.4786148071289, "S_lat": 47.424720764160156, "S_lon": -61.77805709838867, "Shape_Leng": 3.019637107849121, "geoq_featureid": "839c1756-f0b8-422a-9a7e-3d6e60a8b19b" }, "5129": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 44.88083267211914, "S_lon": -63.508609771728516, "Shape_Leng": 64.32990264892578, "geoq_featureid": "10ffecd5-8940-468a-b654-1df23cc44ea0" }, "5173": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 75.00013732910156, "geoq_featureid": "5f2c5bdc-3f9f-4100-a499-8fee382e778c" }, "5178": { "D_lat": 18.580049514770508, "D_lon": -72.29254150390625, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 26.930727005004883, "geoq_featureid": "0ea87b0a-4cfa-4d96-b54c-c80718c8828f" }, "5180": { "D_lat": 18.567367553710938, "D_lon": -68.36343383789062, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 27.452011108398438, "geoq_featureid": "b03ddef1-ecdb-4327-82c6-a96c0a70ee43" }, "5182": { "D_lat": 22.492191314697266, "D_lon": -79.94361114501953, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 23.82167625427246, "geoq_featureid": "b38b7270-b2dc-44b7-9285-666f78fee588" }, "5188": { "D_lat": 19.267000198364258, "D_lon": -69.74199676513672, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 26.51622772216797, "geoq_featureid": "d10c5d49-0b7d-4da9-b9f3-e8c139eabbb3" }, "5189": { "D_lat": 41.93888854980469, "D_lon": -72.68321990966797, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 3.686795949935913, "geoq_featureid": "f99785a4-80ce-41ec-8ae4-0a9004c12d78" }, "5192": { "D_lat": 50.901390075683594, "D_lon": 4.4844441413879395, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 80.2230224609375, "geoq_featureid": "c477e74d-685f-491a-a8c1-05675b957989" }, "5196": { "D_lat": 20.522403717041016, "D_lon": -86.92564392089844, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 28.301651000976562, "geoq_featureid": "edf42019-1768-4714-a562-d1dd2971d964" }, "5200": { "D_lat": 14.591032981872559, "D_lon": -61.003173828125, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 33.489681243896484, "geoq_featureid": "6d092b93-af60-42f1-8dbb-7f6b472aad04" }, "5201": { "D_lat": 26.072582244873047, "D_lon": -80.15274810791016, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 20.450639724731445, "geoq_featureid": "211ae324-c263-4dfd-8782-cf07acd3f34a" }, "5202": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 84.53694915771484, "geoq_featureid": "789c57b6-4372-440a-96ef-9ce70c010d8c" }, "5203": { "D_lat": 46.23806381225586, "D_lon": 6.108950138092041, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 81.7822036743164, "geoq_featureid": "4ae0161f-16a6-42bd-95d7-a3cf4d639942" }, "5204": { "D_lat": 20.78558921813965, "D_lon": -76.31510925292969, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 24.822683334350586, "geoq_featureid": "8c68d67e-b84d-4928-81be-a5c8f122c856" }, "5209": { "D_lat": 53.309722900390625, "D_lon": -113.57971954345703, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 40.87156677246094, "geoq_featureid": "f6eb5073-44fe-4d4e-8321-e180229a8b69" }, "5217": { "D_lat": 40.692501068115234, "D_lon": -74.16867065429688, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 50.22715759277344, "geoq_featureid": "4d7be1ec-7992-42ee-9356-17b6eb25d2be" }, "5218": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 142.5618133544922, "geoq_featureid": "23ad42de-e249-4fa1-8fc3-897ec8e9d684" }, "5219": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 130.82669067382812, "geoq_featureid": "79ab1e3e-f37d-4c3a-9df7-da83f0fb381c" }, "5221": { "D_lat": 48.353782653808594, "D_lon": 11.786086082458496, "S_lat": 49.19388961791992, "S_lon": -123.18444061279297, "Shape_Leng": 147.19314575195312, "geoq_featureid": "b74f3ddb-e031-4e42-8c7c-a7e05acec46c" }, "5238": { "D_lat": 24.063274383544922, "D_lon": -74.52396392822266, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 21.421945571899414, "geoq_featureid": "554e7483-0bfb-4172-989a-819b512add65" }, "5239": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 48.206111907958984, "S_lon": -78.83555603027344, "Shape_Leng": 5.784117698669434, "geoq_featureid": "dbc0e5c9-e39b-4d3d-8e82-4f1591f587c4" }, "5259": { "D_lat": 41.97860336303711, "D_lon": -87.90483856201172, "S_lat": 49.9100341796875, "S_lon": -97.23988342285156, "Shape_Leng": 12.267806053161621, "geoq_featureid": "c32d853d-d3fc-4909-8153-2df7b7d2dd18" }, "5261": { "D_lat": 45.3224983215332, "D_lon": -75.6691665649414, "S_lat": 49.9100341796875, "S_lon": -97.23988342285156, "Shape_Leng": 22.0963134765625, "geoq_featureid": "9b321345-acbe-48e4-bdeb-92f79067934e" }, "5264": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 49.9100341796875, "S_lon": -97.23988342285156, "Shape_Leng": 23.967552185058594, "geoq_featureid": "ffd11af3-7dbd-4ab7-83cb-7b7159671f3f" }, "5280": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 40.94303512573242, "geoq_featureid": "8e3e8373-bc63-4588-9bc6-d5d05cc51f97" }, "5283": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 130.5465850830078, "geoq_featureid": "4d62df7c-8f7c-4f2c-b251-a49788348525" }, "5285": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 119.45720672607422, "geoq_featureid": "720fc8d0-e7b2-4f3e-9d35-f07d340e824e" }, "5291": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 40.91856384277344, "geoq_featureid": "918688e2-83c2-4e50-9628-49410365230f" }, "5294": { "D_lat": 45.3224983215332, "D_lon": -75.6691665649414, "S_lat": 51.113887786865234, "S_lon": -114.02027893066406, "Shape_Leng": 39.00184631347656, "geoq_featureid": "9f439568-061c-4289-ace9-7a509415367a" }, "5296": { "D_lat": 49.21083450317383, "D_lon": -57.391387939453125, "S_lat": 53.31916809082031, "S_lon": -60.42583465576172, "Shape_Leng": 5.109384059906006, "geoq_featureid": "3a494be3-02f5-4306-a42b-cf782fa5095b" }, "5303": { "D_lat": 44.88083267211914, "D_lon": -63.508609771728516, "S_lat": 53.31916809082031, "S_lon": -60.42583465576172, "Shape_Leng": 8.988648414611816, "geoq_featureid": "7d3ac3ac-8ea6-4ef6-af02-edecdf1336bd" }, "5305": { "D_lat": 52.92194366455078, "D_lon": -66.86444091796875, "S_lat": 53.31916809082031, "S_lon": -60.42583465576172, "Shape_Leng": 6.451666355133057, "geoq_featureid": "87e8d52d-5e56-4ed0-92cf-c70c0b6567c8" }, "5307": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 47.61861038208008, "S_lon": -52.75194549560547, "Shape_Leng": 52.92629623413086, "geoq_featureid": "4cd8a624-8c2c-47c5-a87c-a32d53e7c618" }, "5311": { "D_lat": 32.896827697753906, "D_lon": -97.03799438476562, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 20.525156021118164, "geoq_featureid": "a6836ea5-eeb0-4499-aa6c-ac97293e8619" }, "5314": { "D_lat": 45.3224983215332, "D_lon": -75.6691665649414, "S_lat": 47.61861038208008, "S_lon": -52.75194549560547, "Shape_Leng": 23.073530197143555, "geoq_featureid": "c090f4c2-3f4c-49a8-a704-ae4087774066" }, "5316": { "D_lat": 40.08011245727539, "D_lon": 116.58455657958984, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 200.10794067382812, "geoq_featureid": "7a08038a-04cb-4c06-b192-9b38314a58f3" }, "5318": { "D_lat": 33.43427658081055, "D_lon": -112.01158142089844, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 34.12495803833008, "geoq_featureid": "e6665acc-9ad1-41d4-89d7-c5329233b6a9" }, "5320": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 47.61861038208008, "S_lon": -52.75194549560547, "Shape_Leng": 21.130474090576172, "geoq_featureid": "79bdfca4-5ac2-4694-a339-ecce77b5b89c" }, "5321": { "D_lat": 53.31916809082031, "D_lon": -60.42583465576172, "S_lat": 47.61861038208008, "S_lon": -52.75194549560547, "Shape_Leng": 9.569518089294434, "geoq_featureid": "7937d7c9-67aa-4ee1-ad22-b8b37fe805c2" }, "5325": { "D_lat": 17.136749267578125, "D_lon": -61.792667388916016, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 32.103214263916016, "geoq_featureid": "11fc6a09-5c16-4f85-ae52-8ec6c7f63ef4" }, "5327": { "D_lat": 12.501388549804688, "D_lon": -70.01522064208984, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 32.6696891784668, "geoq_featureid": "f6df2c55-1d27-4c94-bf4d-7a246ab7d1a3" }, "5328": { "D_lat": 24.432971954345703, "D_lon": 54.65113830566406, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 150.8361358642578, "geoq_featureid": "ef49b182-8eab-4194-87c2-3be0cdbb457f" }, "5329": { "D_lat": 19.267000198364258, "D_lon": -69.74199676513672, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 26.381118774414062, "geoq_featureid": "ad03abfb-0c83-42fe-ab31-919ffb048670" }, "5330": { "D_lat": 41.29707717895508, "D_lon": 2.0784640312194824, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 83.87583923339844, "geoq_featureid": "3fc3fdaf-8147-4ed2-8a96-7e69c28151ab" }, "5333": { "D_lat": 13.074603080749512, "D_lon": -59.492454528808594, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 36.7977294921875, "geoq_featureid": "65faf0c1-8e0e-4e80-9d53-53106e02b4fb" }, "5335": { "D_lat": 4.70159387588501, "D_lon": -74.1469497680664, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 39.37424087524414, "geoq_featureid": "f2a4390b-1173-4a92-99f7-60692ded0092" }, "5336": { "D_lat": 42.36434555053711, "D_lon": -71.00518035888672, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 8.727052688598633, "geoq_featureid": "2bc046bb-de19-4266-afd0-f95f6f4f238d" }, "5345": { "D_lat": 55.617916107177734, "D_lon": 12.65597152709961, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 96.3837661743164, "geoq_featureid": "2c884350-5952-4765-9ff6-79a3a9a48915" }, "5346": { "D_lat": 21.036527633666992, "D_lon": -86.87708282470703, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 23.79631233215332, "geoq_featureid": "a68a1167-9c13-4207-a154-df8d8587ab73" }, "5350": { "D_lat": 41.804473876953125, "D_lon": 12.250797271728516, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 95.09257507324219, "geoq_featureid": "814275be-6081-4c37-bec8-420d135302ea" }, "5352": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 91.15215301513672, "geoq_featureid": "f1ad0a96-8083-4bc4-8488-c11e39ff2773" }, "5353": { "D_lat": 19.29277801513672, "D_lon": -81.35774993896484, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 24.447050094604492, "geoq_featureid": "8138f9d3-f57f-403f-954e-ee3a9a2b6dde" }, "5354": { "D_lat": 23.562631607055664, "D_lon": -75.87796020507812, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 20.46822738647461, "geoq_featureid": "b9677813-d0df-492d-b687-d63ba0f6bac8" }, "5356": { "D_lat": -23.43207550048828, "D_lon": -46.46950912475586, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 75.1163558959961, "geoq_featureid": "2f39f5ff-0d30-4562-85f5-ab75cd240f2b" }, "5357": { "D_lat": 22.989152908325195, "D_lon": -82.40908813476562, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 20.877517700195312, "geoq_featureid": "c29d883e-de63-45a5-a8e2-fb891a3a84f1" }, "5358": { "D_lat": 22.30891990661621, "D_lon": 113.91460418701172, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 214.7707061767578, "geoq_featureid": "0f599fb5-072f-4c6a-a1d8-0088d44de671" }, "5359": { "D_lat": 20.78558921813965, "D_lon": -76.31510925292969, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 23.13589096069336, "geoq_featureid": "adf2df61-3a2a-4a7a-bd77-d8051ad7780c" }, "5362": { "D_lat": 39.71733093261719, "D_lon": -86.29438018798828, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 7.754647254943848, "geoq_featureid": "541f0ee4-ba36-43cf-8513-d8d430991c3c" }, "5363": { "D_lat": 40.97692108154297, "D_lon": 28.814605712890625, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 114.32343292236328, "geoq_featureid": "67e37611-0fff-4435-9b8f-cacb0cb70a05" }, "5365": { "D_lat": 17.935667037963867, "D_lon": -76.7874984741211, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 25.902193069458008, "geoq_featureid": "dd6598ab-f8bc-4bc4-90f6-0119fac75a08" }, "5366": { "D_lat": 36.080055236816406, "D_lon": -115.15225219726562, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 36.50495910644531, "geoq_featureid": "9271a8e6-5f78-4b86-bd2f-99a40e0fb0b1" }, "5367": { "D_lat": 33.942535400390625, "D_lon": -118.40807342529297, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 40.228599548339844, "geoq_featureid": "862497f5-5606-4cca-bb56-ef7976b55a7f" }, "5368": { "D_lat": 40.777244567871094, "D_lon": -73.87260437011719, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 6.448596954345703, "geoq_featureid": "1460295d-55e3-4f28-8ff6-a4c2670e3ee3" }, "5369": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 81.5094223022461, "geoq_featureid": "8b9592e1-e62d-4fec-8f1a-8e227fe25336" }, "5370": { "D_lat": -12.021888732910156, "D_lon": -77.11431884765625, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 55.75829315185547, "geoq_featureid": "4f49451f-7e15-46db-a9ec-2fecacdb7a4c" }, "5372": { "D_lat": 18.50371742248535, "D_lon": -77.91336059570312, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 25.233509063720703, "geoq_featureid": "df91cdf1-b859-4806-832c-2d8fe049f87e" }, "5373": { "D_lat": 39.297607421875, "D_lon": -94.71390533447266, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 15.7225923538208, "geoq_featureid": "ae0b73f8-f8af-41d3-8453-6a61abde6d80" }, "5376": { "D_lat": 19.436302185058594, "D_lon": -99.07209777832031, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 31.20963478088379, "geoq_featureid": "5ffbaefb-df56-47e6-80b8-122e13f75f43" }, "5378": { "D_lat": 42.94722366333008, "D_lon": -87.8965835571289, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 8.300086975097656, "geoq_featureid": "87053f39-b190-4da7-9f9f-a80d3b076a6a" }, "5379": { "D_lat": 44.881954193115234, "D_lon": -93.22176361083984, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 13.652958869934082, "geoq_featureid": "9a78b217-6a91-43c7-abfb-db9e412a63ff" }, "5380": { "D_lat": 29.993389129638672, "D_lon": -90.25802612304688, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 17.357635498046875, "geoq_featureid": "b8f466c0-a409-4551-90bc-3a9ea0af89ac" }, "5381": { "D_lat": 48.353782653808594, "D_lon": 11.786086082458496, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 94.6301498413086, "geoq_featureid": "b1af74e9-2361-48b4-867c-eca42ba76df9" }, "5382": { "D_lat": 25.038957595825195, "D_lon": -77.46623229980469, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 18.765674591064453, "geoq_featureid": "703ea409-257d-45c6-93fe-5383eb56a955" }, "5383": { "D_lat": 35.76472091674805, "D_lon": 140.38638305664062, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 157.29808044433594, "geoq_featureid": "c0d9831f-d97f-4528-9234-fab6b365a6cf" }, "5385": { "D_lat": 21.773624420166016, "D_lon": -72.26588439941406, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 23.133140563964844, "geoq_featureid": "bf28eb1c-fe35-4a61-9c25-e1322e46c4b8" }, "5386": { "D_lat": 19.75790023803711, "D_lon": -70.57003021240234, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 25.615156173706055, "geoq_featureid": "f684cdbb-d945-446c-9c01-2150334e60d5" }, "5387": { "D_lat": 18.567367553710938, "D_lon": -68.36343383789062, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 27.578033447265625, "geoq_featureid": "def1f621-0a63-4e62-b80c-ffb2806d77c7" }, "5388": { "D_lat": 31.14337730407715, "D_lon": 121.80521392822266, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 191.86729431152344, "geoq_featureid": "a810d28b-72ef-48de-b375-62a76f4bd695" }, "5391": { "D_lat": -33.392974853515625, "D_lon": -70.78580474853516, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 77.59249114990234, "geoq_featureid": "7e8c7de0-fd39-42e6-8961-b5a5c10103d9" }, "5392": { "D_lat": 47.44900131225586, "D_lon": -122.3093032836914, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 43.11909866333008, "geoq_featureid": "e7fd1622-7101-47df-a0c4-19671e1f111f" }, "5393": { "D_lat": 37.61897277832031, "D_lon": -122.37488555908203, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 43.45824432373047, "geoq_featureid": "3e3c83fa-886e-4b1d-ae77-a8a8a4c6e1fb" }, "5394": { "D_lat": 9.993861198425293, "D_lon": -84.20880889892578, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 34.003746032714844, "geoq_featureid": "7c59d696-30f9-4b7c-b8fb-789a322f20a9" }, "5395": { "D_lat": 22.492191314697266, "D_lon": -79.94361114501953, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 21.18739128112793, "geoq_featureid": "1ba02d99-90c9-49ab-b982-a5e8cc59768e" }, "5396": { "D_lat": 38.748695373535156, "D_lon": -90.37002563476562, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 11.825273513793945, "geoq_featureid": "a5ccdcba-74a7-4842-8827-6890090d43d8" }, "5398": { "D_lat": 32.011390686035156, "D_lon": 34.88666534423828, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 122.69566345214844, "geoq_featureid": "479be522-5f4d-4c93-8b30-5db0c558b375" }, "5400": { "D_lat": 13.733194351196289, "D_lon": -60.952598571777344, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 35.43501281738281, "geoq_featureid": "466de405-293a-4de8-a854-1340223eea08" }, "5401": { "D_lat": 48.11027908325195, "D_lon": 16.569721221923828, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 99.99101257324219, "geoq_featureid": "1952a0e9-371f-4a17-956d-e9efde270ecf" }, "5402": { "D_lat": 23.03444480895996, "D_lon": -81.4352798461914, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 20.72308921813965, "geoq_featureid": "cd7cded5-e441-49a2-8a84-05c11b8d5dca" }, "5403": { "D_lat": 52.165748596191406, "D_lon": 20.967121124267578, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 105.27399444580078, "geoq_featureid": "5427a4b3-c879-4070-bc63-40dbe9831e7e" }, "5407": { "D_lat": 49.21083450317383, "D_lon": -57.391387939453125, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 22.968692779541016, "geoq_featureid": "6a277ea9-ed33-49e3-af11-0f4bf3545758" }, "5410": { "D_lat": 56.6533317565918, "D_lon": -111.2219467163086, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 34.41238784790039, "geoq_featureid": "12471d06-9243-48bb-a667-94370869b927" }, "5413": { "D_lat": 46.79111099243164, "D_lon": -71.3933334350586, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 8.809773445129395, "geoq_featureid": "fb821bb8-c32b-4c79-b41f-0e3a766101f3" }, "5414": { "D_lat": 42.27555465698242, "D_lon": -82.95555877685547, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 3.6086175441741943, "geoq_featureid": "97cd1b6b-f833-4cd0-815b-fac53d329aa7" }, "5417": { "D_lat": 48.371944427490234, "D_lon": -89.32389068603516, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 10.778629302978516, "geoq_featureid": "f4e199b9-21f6-44f5-8cc4-2baad01d2485" }, "5420": { "D_lat": 45.31611251831055, "D_lon": -65.8902816772461, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 13.846761703491211, "geoq_featureid": "a8fa89ae-133a-470e-8b76-baceadeefdda" }, "5421": { "D_lat": 48.56972122192383, "D_lon": -81.37666320800781, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 5.195483207702637, "geoq_featureid": "b6f168b4-6a5b-40e3-b370-e396e128c1fe" }, "5422": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 6.157759189605713, "geoq_featureid": "4e9fe9f2-bfeb-4126-a9a2-d8dd2b727f3c" }, "5425": { "D_lat": 52.170833587646484, "D_lon": -106.69972229003906, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 28.484556198120117, "geoq_featureid": "2ec2eb3c-ab00-4413-b156-45acdf2b7e59" }, "5427": { "D_lat": 51.113887786865234, "D_lon": -114.02027893066406, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 35.363624572753906, "geoq_featureid": "be182126-6879-4b26-b454-d7873e1e9731" }, "5428": { "D_lat": 46.290000915527344, "D_lon": -63.12111282348633, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 16.73179054260254, "geoq_featureid": "30717557-5a72-47ab-965d-cb0d480eaa74" }, "5429": { "D_lat": 48.646942138671875, "D_lon": -123.42583465576172, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 44.382469177246094, "geoq_featureid": "dde33a40-5b87-4fe6-abff-a5284ab30dbe" }, "5430": { "D_lat": 47.61861038208008, "D_lon": -52.75194549560547, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 27.238412857055664, "geoq_featureid": "ef34a144-a1a2-4b28-81ba-bfa04d998ff3" }, "5435": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 50.223331451416016, "S_lon": -66.26555633544922, "Shape_Leng": 8.864449501037598, "geoq_featureid": "29a23762-6531-4f07-8e9c-17a10909e87b" }, "5438": { "D_lat": 45.47055435180664, "D_lon": -73.74082946777344, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 84.44087982177734, "geoq_featureid": "ee37c183-8af6-440b-b589-000d99b14e30" }, "5439": { "D_lat": 43.677223205566406, "D_lon": -79.63055419921875, "S_lat": 47.4647216796875, "S_lon": 8.549166679382324, "Shape_Leng": 90.99482727050781, "geoq_featureid": "f4178da4-fbb7-43d5-bffe-7ac18c4a9591" }, "5592": { "D_lat": 2.846311092376709, "D_lon": -60.690067291259766, "S_lat": -3.0386109352111816, "S_lon": -60.049720764160156, "Shape_Leng": 5.919658184051514, "geoq_featureid": "118e344e-87ef-4b46-86b6-e88fea4f33e3" }, "5608": { "D_lat": -15.652931213378906, "D_lon": -56.11671829223633, "S_lat": 47.779998779296875, "S_lon": 10.626999855041504, "Shape_Leng": 93.68138885498047, "geoq_featureid": "6f00089f-2c3f-4709-a830-40d855d7e9a5" }, "5788": { "D_lat": -0.1411440074443817, "D_lon": -78.48821258544922, "S_lat": 52.30861282348633, "S_lon": 4.763888835906982, "Shape_Leng": 102.4369125366211, "geoq_featureid": "4d49035e-3260-4a1a-a301-4fe3bd99f9f0" }, "5811": { "D_lat": 44.47186279296875, "D_lon": -73.15327453613281, "S_lat": 33.63671875, "S_lon": -84.42807006835938, "Shape_Leng": 15.664535522460938, "geoq_featureid": "eaf161b9-b93c-4f3e-be2e-32af7d917156" }, "5930": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 40.47711181640625, "S_lon": -88.9159164428711, "Shape_Leng": 8.184226989746094, "geoq_featureid": "4cafe50a-4a17-4a8d-a6cc-fbcbf7e9a10e" }, "5939": { "D_lat": 12.533543586730957, "D_lon": -7.949944019317627, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 38.04237365722656, "geoq_featureid": "5debe856-5a14-4af5-acb7-27e70ff27e90" }, "5963": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 44.25752639770508, "S_lon": -88.50757598876953, "Shape_Leng": 11.382650375366211, "geoq_featureid": "0c9887fa-b158-40c4-b6f3-b905c968d97e" }, "6016": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 4.70159387588501, "S_lon": -74.1469497680664, "Shape_Leng": 91.36798095703125, "geoq_featureid": "ca1bf2f6-de35-4bb2-8c5e-fbc50df8f370" }, "6023": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -15.871100425720215, "S_lon": -47.91862487792969, "Shape_Leng": 83.26615142822266, "geoq_featureid": "5b04be34-891a-4502-8b04-efad25ef13cc" }, "6045": { "D_lat": 5.261385917663574, "D_lon": -3.9262940883636475, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 44.25981521606445, "geoq_featureid": "a24a609e-66c3-4478-bc7d-924b2fd947ef" }, "6047": { "D_lat": 57.201942443847656, "D_lon": -2.1977779865264893, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 9.478191375732422, "geoq_featureid": "61a7bf6a-bc97-4966-a532-f5b71cdd9eb9" }, "6048": { "D_lat": 36.67490005493164, "D_lon": -4.499105930328369, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 14.230817794799805, "geoq_featureid": "0756b49c-4bc4-4f92-8b79-96cc7c403c54" }, "6062": { "D_lat": 43.30109786987305, "D_lon": -2.9106080532073975, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 7.907294273376465, "geoq_featureid": "0aa4b5c8-7a1b-4374-9821-4d07b3cf8ba3" }, "6069": { "D_lat": 10.603116989135742, "D_lon": -66.99058532714844, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 81.63673400878906, "geoq_featureid": "c6134dad-8321-460c-a02a-1a923db896fa" }, "6073": { "D_lat": 33.36746597290039, "D_lon": -7.589966773986816, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 18.6916446685791, "geoq_featureid": "c3d88e61-3de8-408a-b934-37c641a0085d" }, "6124": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 39.04883575439453, "S_lon": -84.6678237915039, "Shape_Leng": 90.61273956298828, "geoq_featureid": "0dc6f723-2560-4bd3-a294-baa2c2782802" }, "6162": { "D_lat": 6.233788967132568, "D_lon": -10.362311363220215, "S_lat": 49.012779235839844, "S_lon": 2.549999952316284, "Shape_Leng": 44.80497741699219, "geoq_featureid": "15175d26-8ce7-4dca-87c4-7695bebd5039" }, "6178": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.89864730834961, "S_lon": -80.04052734375, "Shape_Leng": 4.4494404792785645, "geoq_featureid": "d3070b08-ba18-4be2-ac84-bfc126754efd" }, "6179": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.88469314575195, "S_lon": -91.71080780029297, "Shape_Leng": 11.01184368133545, "geoq_featureid": "2f9e1290-f1b1-47ed-83bd-956c9c0ecc2e" }, "6180": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 9.576889038085938, "S_lon": -13.611961364746094, "Shape_Leng": 42.799930572509766, "geoq_featureid": "d3935f6a-11a6-461e-add8-07e0a1d1e688" }, "6182": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.41168975830078, "S_lon": -81.84979248046875, "Shape_Leng": 8.192749977111816, "geoq_featureid": "738bb2ea-087d-48c8-a9e0-100a8c43d4de" }, "6190": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 20.522403717041016, "S_lon": -86.92564392089844, "Shape_Leng": 13.351115226745605, "geoq_featureid": "85ac4496-9ad1-4adf-bdf8-fd96edd4208a" }, "6200": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 14.739707946777344, "S_lon": -17.490224838256836, "Shape_Leng": 39.954410552978516, "geoq_featureid": "a0f65e02-77df-4bd1-a6e7-083a48f8ee43" }, "6207": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.533973693847656, "S_lon": -93.6630859375, "Shape_Leng": 12.162707328796387, "geoq_featureid": "c250077b-ae18-4ddf-81b2-229ac929eb01" }, "6209": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 42.21244430541992, "S_lon": -83.35338592529297, "Shape_Leng": 88.7363052368164, "geoq_featureid": "4154eecc-210c-4a94-965e-2b206a8bd713" }, "6218": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 51.289451599121094, "S_lon": 6.766775131225586, "Shape_Leng": 96.59033203125, "geoq_featureid": "def8e250-dfff-492b-a7fa-96b146742426" }, "6219": { "D_lat": 18.429664611816406, "D_lon": -69.6689224243164, "S_lat": 14.591032981872559, "S_lon": -61.003173828125, "Shape_Leng": 9.478854179382324, "geoq_featureid": "b6659321-a3c2-428b-9ac2-15ecf3466c8b" }, "6228": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 8.616443634033203, "S_lon": -13.195488929748535, "Shape_Leng": 43.52914047241211, "geoq_featureid": "3e345195-93eb-4e0c-b8dd-f8e689d0bb2f" }, "6229": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 42.965423583984375, "S_lon": -83.7436294555664, "Shape_Leng": 9.353919982910156, "geoq_featureid": "bf7dc06e-65fb-45bc-ae45-c0edb3907c12" }, "6230": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 50.02642059326172, "S_lon": 8.54312515258789, "Shape_Leng": 98.24669647216797, "geoq_featureid": "4e8bde94-6d29-49a3-97e6-081365d11300" }, "6234": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 44.48507308959961, "S_lon": -88.12958526611328, "Shape_Leng": 11.467070579528809, "geoq_featureid": "1badd227-344c-40ae-b16d-9d1e19b9ee35" }, "6236": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 42.88083267211914, "S_lon": -85.5228042602539, "Shape_Leng": 9.309062004089355, "geoq_featureid": "b4370c95-4a36-41f2-921c-ace33daac8e6" }, "6237": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -23.43207550048828, "S_lon": -46.46950912475586, "Shape_Leng": 88.3508529663086, "geoq_featureid": "6c89d017-ff5f-449a-acee-ea66ea8b1e5e" }, "6239": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 55.95000076293945, "S_lon": -3.372499942779541, "Shape_Leng": 9.13342571258545, "geoq_featureid": "29d808ea-0fb3-49c7-a83f-a679648be43f" }, "6253": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -34.82222366333008, "S_lon": -58.535831451416016, "Shape_Leng": 104.73265838623047, "geoq_featureid": "0b161bb8-7b74-45a4-b1aa-4f56462ec5fb" }, "6255": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.804473876953125, "S_lon": 12.250797271728516, "Shape_Leng": 100.94596862792969, "geoq_featureid": "69fba557-7103-4af6-8f3d-7e73f352c50d" }, "6265": { "D_lat": 4.819808006286621, "D_lon": -52.36044692993164, "S_lat": 14.591032981872559, "S_lon": -61.003173828125, "Shape_Leng": 13.045957565307617, "geoq_featureid": "153976ff-1e52-420f-b215-916c8fe2d93b" }, "6268": { "D_lat": 42.21244430541992, "D_lon": -83.35338592529297, "S_lat": 50.02642059326172, "S_lon": 8.54312515258789, "Shape_Leng": 95.45982360839844, "geoq_featureid": "16c71854-53be-426e-a23a-6455a5447218" }, "6275": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -22.808902740478516, "S_lon": -43.243648529052734, "Shape_Leng": 85.9712142944336, "geoq_featureid": "8ae44511-61d7-4644-ba79-dd2ad86b2114" }, "6276": { "D_lat": 51.39666748046875, "D_lon": -3.3433330059051514, "S_lat": 55.871944427490234, "S_lon": -4.433055877685547, "Shape_Leng": 4.606508731842041, "geoq_featureid": "4100589c-2945-4c00-b268-3a177e0cb8ce" }, "6285": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 14.583271980285645, "S_lon": -90.52747344970703, "Shape_Leng": 20.013065338134766, "geoq_featureid": "372b1fb1-b31c-4e93-b56d-d10c61742c88" }, "6288": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 38.94453430175781, "S_lon": -77.455810546875, "Shape_Leng": 82.7790298461914, "geoq_featureid": "7b9c3969-fc00-466e-bd87-a6af9ca541ee" }, "6290": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 29.984432220458984, "S_lon": -95.34143829345703, "Shape_Leng": 104.40737915039062, "geoq_featureid": "ff537f66-2b32-4ca3-83f0-b7bb4e64e2ae" }, "6293": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 34.27061462402344, "S_lon": -77.90257263183594, "Shape_Leng": 6.557011127471924, "geoq_featureid": "0a012fc5-e154-4d31-aea7-7973282b4011" }, "6299": { "D_lat": 52.30861282348633, "D_lon": 4.763888835906982, "S_lat": -2.157418966293335, "S_lon": -79.88356018066406, "Shape_Leng": 104.83448028564453, "geoq_featureid": "c22f1aa1-da1d-48d7-8fc2-f964ef944a48" }, "6304": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 22.989152908325195, "S_lon": -82.40908813476562, "Shape_Leng": 92.12347412109375, "geoq_featureid": "ab76ab7d-e207-4330-9fdf-1487f56c8ecc" }, "6313": { "D_lat": 41.29707717895508, "D_lon": 2.0784640312194824, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 77.50887298583984, "geoq_featureid": "ee39920f-26b0-424d-b6cc-b8f92f4ac475" }, "6317": { "D_lat": 50.02642059326172, "D_lon": 8.54312515258789, "S_lat": 40.63975143432617, "S_lon": -73.77892303466797, "Shape_Leng": 85.1670150756836, "geoq_featureid": "386fd686-23e5-427b-ab83-a26462c842fe" }, "6333": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 33.942535400390625, "S_lon": -118.40807342529297, "Shape_Leng": 131.39625549316406, "geoq_featureid": "d0b357fb-03b9-4964-9ed7-60d364de384d" }, "6344": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 8.86976432800293, "geoq_featureid": "2dbbd299-6018-4790-b78c-2244db1bed89" }, "6345": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 25.793249130249023, "S_lon": -80.29055786132812, "Shape_Leng": 88.96986389160156, "geoq_featureid": "98fc6ea8-5e86-4590-a705-debba7bafd8c" }, "6353": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 42.94722366333008, "S_lon": -87.8965835571289, "Shape_Leng": 9.93881893157959, "geoq_featureid": "72ea45de-cc9a-4553-a7ed-2f5e6b403cb8" }, "6358": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 28.102752685546875, "S_lon": -80.64525604248047, "Shape_Leng": 6.704434871673584, "geoq_featureid": "830bd119-f8e3-47f1-9d7d-4bb114fac283" }, "6366": { "D_lat": 42.21244430541992, "D_lon": -83.35338592529297, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 85.7427749633789, "geoq_featureid": "72b45113-f4ab-43f0-b8a0-46b57ece3b0e" }, "6367": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 51.477500915527344, "S_lon": -0.4613890051841736, "Shape_Leng": 75.7662353515625, "geoq_featureid": "70220a54-4af4-4c52-a7d5-0660c2d913f6" }, "6373": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -12.021888732910156, "S_lon": -77.11431884765625, "Shape_Leng": 103.06396484375, "geoq_featureid": "bded2b2a-a959-431c-84f0-79b23417f7c9" }, "6377": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 10.593289375305176, "S_lon": -85.5444107055664, "Shape_Leng": 23.070714950561523, "geoq_featureid": "2fe11882-c1e1-4b75-be70-ac2fccba2f2c" }, "6378": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 38.78131103515625, "S_lon": -9.135918617248535, "Shape_Leng": 15.566084861755371, "geoq_featureid": "962e74f6-319c-4997-92f2-3acae834828c" }, "6381": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 44.881954193115234, "S_lon": -93.22176361083984, "Shape_Leng": 99.43733215332031, "geoq_featureid": "5dcf4448-ae00-4cf7-9ded-30d339919f3d" }, "6383": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 44.881954193115234, "S_lon": -93.22176361083984, "Shape_Leng": 96.20330047607422, "geoq_featureid": "0874a293-daa1-40f9-a5a1-1cb3d3df2a54" }, "6388": { "D_lat": 42.21244430541992, "D_lon": -83.35338592529297, "S_lat": 29.993389129638672, "S_lon": -90.25802612304688, "Shape_Leng": 14.047874450683594, "geoq_featureid": "90101736-d323-48d2-a3c8-01cc15d9f27a" }, "6397": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 48.353782653808594, "S_lon": 11.786086082458496, "Shape_Leng": 101.51820373535156, "geoq_featureid": "e632dd06-e136-4536-99c0-895238882fdd" }, "6417": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 40.49355697631836, "S_lon": -3.5667641162872314, "Shape_Leng": 83.20701599121094, "geoq_featureid": "4e56a96d-563a-4b1c-82dd-0e8ca63ddf86" }, "6419": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 40.49355697631836, "S_lon": -3.5667641162872314, "Shape_Leng": 71.48212432861328, "geoq_featureid": "8850ccc9-f024-4545-ba16-b1aa138f2784" }, "6421": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 53.35374450683594, "S_lon": -2.2749500274658203, "Shape_Leng": 87.34339904785156, "geoq_featureid": "bdff0644-bb4a-401c-80a6-14b80c460ad4" }, "6425": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 18.50371742248535, "S_lon": -77.91336059570312, "Shape_Leng": 16.48295021057129, "geoq_featureid": "09ddff3f-ef4b-4eb7-a906-622d099b2b6a" }, "6427": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 28.429393768310547, "S_lon": -81.30899047851562, "Shape_Leng": 6.070755481719971, "geoq_featureid": "baea2822-fca1-402d-b6c8-ca1131cddec4" }, "6428": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 40.1934928894043, "S_lon": -76.7634048461914, "Shape_Leng": 10.092862129211426, "geoq_featureid": "728caa56-4f1b-414f-a0c4-7f41ab945fd5" }, "6432": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 19.436302185058594, "S_lon": -99.07209777832031, "Shape_Leng": 111.65895080566406, "geoq_featureid": "f15be45d-3cb7-4593-855a-886d33d617a0" }, "6434": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.44852828979492, "S_lon": -90.50753784179688, "Shape_Leng": 9.904800415039062, "geoq_featureid": "6083d3a2-bc3b-4dca-bf1c-38110046f4b9" }, "6435": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.5108642578125, "S_lon": -92.03768920898438, "Shape_Leng": 7.69374942779541, "geoq_featureid": "daabd064-986e-40f9-bd03-28deb4a46f86" }, "6436": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 30.69123077392578, "S_lon": -88.24281311035156, "Shape_Leng": 4.820071220397949, "geoq_featureid": "7f3a0334-dd0b-4aaf-9534-02dc88e6063b" }, "6465": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 43.13985824584961, "S_lon": -89.33751678466797, "Shape_Leng": 10.702455520629883, "geoq_featureid": "776c6dcb-0600-4105-a52a-56e2ece4a072" }, "6477": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 25.038957595825195, "S_lon": -77.46623229980469, "Shape_Leng": 11.06790542602539, "geoq_featureid": "5ccc2d86-94c1-4830-b9fd-ebe384b92428" }, "6487": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 43.658409118652344, "S_lon": 7.215871810913086, "Shape_Leng": 83.12680053710938, "geoq_featureid": "e8549b5b-4ba9-44c5-92c6-95a2468111f9" }, "6499": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 9.071364402770996, "S_lon": -79.38345336914062, "Shape_Leng": 25.083158493041992, "geoq_featureid": "6f33b36f-d017-4a5d-8719-78591a8798c7" }, "6500": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 9.071364402770996, "S_lon": -79.38345336914062, "Shape_Leng": 94.41267395019531, "geoq_featureid": "fd35717e-c1d2-4c55-88dd-26ec98d57593" }, "6503": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 18.567367553710938, "S_lon": -68.36343383789062, "Shape_Leng": 79.30542755126953, "geoq_featureid": "c9393de4-d1f4-43de-991f-231f25d21341" }, "6509": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 18.097856521606445, "S_lon": -15.947956085205078, "Shape_Leng": 36.237911224365234, "geoq_featureid": "38816a2f-c98c-4cd2-a1b0-637a624e9845" }, "6510": { "D_lat": 9.576889038085938, "D_lon": -13.611961364746094, "S_lat": 18.097856521606445, "S_lon": -15.947956085205078, "Shape_Leng": 8.83551025390625, "geoq_featureid": "c9f5157f-574b-494e-8c9a-f1ade5042a4e" }, "6516": { "D_lat": 44.82833480834961, "D_lon": -0.7155560255050659, "S_lat": 47.15319061279297, "S_lon": -1.6107250452041626, "Shape_Leng": 2.491328239440918, "geoq_featureid": "2ebd7bb4-129e-4a16-ae82-da64efef9c42" }, "6519": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.732582092285156, "S_lon": -71.42037963867188, "Shape_Leng": 15.341596603393555, "geoq_featureid": "875a2995-be32-4a49-929a-fe0a7821b7b6" }, "6521": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 20.680082321166992, "S_lon": -105.25416564941406, "Shape_Leng": 24.57432746887207, "geoq_featureid": "b8453056-e7e2-418a-bd70-22b9c80874a3" }, "6522": { "D_lat": 43.43555450439453, "D_lon": 5.213611125946045, "S_lat": 31.60688591003418, "S_lon": -8.036299705505371, "Shape_Leng": 17.79804801940918, "geoq_featureid": "9c659156-016c-4f86-a1e4-8835b12d9710" }, "6526": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 37.505165100097656, "S_lon": -77.31966400146484, "Shape_Leng": 8.095356941223145, "geoq_featureid": "574928c5-d83f-44bf-aa37-2577d6e6233c" }, "6537": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 34.82916259765625, "S_lon": -77.61213684082031, "Shape_Leng": 6.920447826385498, "geoq_featureid": "544057d9-ae76-453c-b28c-6ef59320d1c7" }, "6539": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.303165435791016, "S_lon": -95.8940658569336, "Shape_Leng": 13.808056831359863, "geoq_featureid": "7e55d303-de46-4a12-bf64-076c7a06e58e" }, "6540": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 9.040152549743652, "geoq_featureid": "8a35e80a-b48e-48fe-9342-43442ce22e7b" }, "6541": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 41.97860336303711, "S_lon": -87.90483856201172, "Shape_Leng": 93.78602600097656, "geoq_featureid": "41305dbd-2fa0-430c-b55d-8685a6f90327" }, "6542": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 36.89461135864258, "S_lon": -76.20122528076172, "Shape_Leng": 8.85119342803955, "geoq_featureid": "27295320-270f-49c4-b6ae-7ca51dc362a8" }, "6546": { "D_lat": 4.819808006286621, "D_lon": -52.36044692993164, "S_lat": 48.725276947021484, "S_lon": 2.3594439029693604, "Shape_Leng": 71.52910614013672, "geoq_featureid": "8b7c80b0-7a3b-4047-a8fe-c474ddc274f2" }, "6550": { "D_lat": 14.591032981872559, "D_lon": -61.003173828125, "S_lat": 48.725276947021484, "S_lon": 2.3594439029693604, "Shape_Leng": 73.67471313476562, "geoq_featureid": "d4418b79-3c62-4e34-90e1-e90264aa0b80" }, "6554": { "D_lat": 40.49355697631836, "D_lon": -3.5667641162872314, "S_lat": 48.725276947021484, "S_lon": 2.3594439029693604, "Shape_Leng": 10.152915000915527, "geoq_featureid": "bc544d22-9d73-4689-bc30-ccf2d0ea19eb" }, "6562": { "D_lat": 16.26530647277832, "D_lon": -61.53180694580078, "S_lat": 48.725276947021484, "S_lon": 2.3594439029693604, "Shape_Leng": 73.364013671875, "geoq_featureid": "2935189d-7c5a-4c31-8a6c-d06bd75c78a6" }, "6571": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 12.353194236755371, "S_lon": -1.512416958808899, "Shape_Leng": 36.89704132080078, "geoq_featureid": "97a4b386-216a-4b8c-8b97-085536835f62" }, "6572": { "D_lat": 13.481547355651855, "D_lon": 2.1836140155792236, "S_lat": 12.353194236755371, "S_lon": -1.512416958808899, "Shape_Leng": 3.864469289779663, "geoq_featureid": "551664ee-3613-4c4b-b816-3edef504af69" }, "6573": { "D_lat": 40.63975143432617, "D_lon": -73.77892303466797, "S_lat": 18.580049514770508, "S_lon": -72.29254150390625, "Shape_Leng": 22.110578536987305, "geoq_featureid": "9bb829a2-9341-4ad2-ad35-056a7acd595b" }, "6574": { "D_lat": 25.793249130249023, "D_lon": -80.29055786132812, "S_lat": 18.580049514770508, "S_lon": -72.29254150390625, "Shape_Leng": 10.773028373718262, "geoq_featureid": "a9958017-42b5-4dde-8626-02dc368c0536" }, "6575": { "D_lat": 16.26530647277832, "D_lon": -61.53180694580078, "S_lat": 18.580049514770508, "S_lon": -72.29254150390625, "Shape_Leng": 11.008373260498047, "geoq_featureid": "6ff808f2-dc93-4476-a146-35dbaf124355" }, "6576": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 26.68316078186035, "S_lon": -80.09558868408203, "Shape_Leng": 8.194636344909668, "geoq_featureid": "9b3f297f-632d-43bc-a9da-a291ace546f7" }, "6577": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 45.588722229003906, "S_lon": -122.59750366210938, "Shape_Leng": 40.272071838378906, "geoq_featureid": "736baddc-7354-4569-878a-323d069180b0" }, "6580": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 37.131893157958984, "S_lon": -76.49298858642578, "Shape_Leng": 8.673481941223145, "geoq_featureid": "d30d1e3e-c4a0-4a91-8876-bb4a13793beb" }, "6581": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 11.110722541809082, "geoq_featureid": "86a9556d-bc9c-4787-871b-6fdc2aea98ec" }, "6582": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 39.871944427490234, "S_lon": -75.24114227294922, "Shape_Leng": 80.25425720214844, "geoq_featureid": "fd7beae3-61b0-4d3e-91a9-20f8f0be1f87" }, "6584": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 40.66420364379883, "S_lon": -89.6932601928711, "Shape_Leng": 8.785184860229492, "geoq_featureid": "0e35fa50-2cc8-4798-91ee-3bbe12793e78" }, "6587": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 40.4914665222168, "S_lon": -80.23287200927734, "Shape_Leng": 85.55106353759766, "geoq_featureid": "c5b52283-bdf8-4461-b283-e6908afbaf2e" }, "6590": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 30.473424911499023, "S_lon": -87.18660736083984, "Shape_Leng": 4.197475910186768, "geoq_featureid": "2662babe-a704-40cb-94c1-b6f8e1005352" }, "6598": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 37.32547378540039, "S_lon": -79.97541809082031, "Shape_Leng": 5.783212184906006, "geoq_featureid": "00efb288-090d-4b66-81ea-786456c7267d" }, "6599": { "D_lat": 8.616443634033203, "D_lon": -13.195488929748535, "S_lat": 6.233788967132568, "S_lon": -10.362311363220215, "Shape_Leng": 3.7018964290618896, "geoq_featureid": "967f3668-0551-4c79-9fca-29c47ec51993" }, "6600": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 43.118865966796875, "S_lon": -77.6723861694336, "Shape_Leng": 11.65269660949707, "geoq_featureid": "dc6f5744-92f5-4840-a750-67c5c0e61dc7" }, "6607": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 35.810970306396484, "S_lon": -83.99402618408203, "Shape_Leng": 2.2171623706817627, "geoq_featureid": "0ccb3222-4730-4e07-88eb-56a62a2eb7f8" }, "6608": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.12758255004883, "S_lon": -81.20214080810547, "Shape_Leng": 3.5616490840911865, "geoq_featureid": "de5dfcd6-16aa-4bf9-b5ba-4d0574b2480f" }, "6609": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 41.70866012573242, "S_lon": -86.31725311279297, "Shape_Leng": 8.290914535522461, "geoq_featureid": "a79350f4-2949-48bf-9c40-e96a00b279d2" }, "6610": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": -33.392974853515625, "S_lon": -70.78580474853516, "Shape_Leng": 111.74874114990234, "geoq_featureid": "3a0bb47e-26fc-4e90-bd99-10cc588f6536" }, "6611": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 38.17408752441406, "S_lon": -85.73649597167969, "Shape_Leng": 4.722449779510498, "geoq_featureid": "c285d39a-8296-4924-b1eb-34f7e2b00927" }, "6612": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 18.429664611816406, "S_lon": -69.6689224243164, "Shape_Leng": 80.6607437133789, "geoq_featureid": "7ea7bfab-8546-4442-8afb-bf20da820690" }, "6613": { "D_lat": 16.26530647277832, "D_lon": -61.53180694580078, "S_lat": 18.429664611816406, "S_lon": -69.6689224243164, "Shape_Leng": 8.420722007751465, "geoq_featureid": "1d5575d4-8cae-455f-998d-dbc02f553139" }, "6614": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 40.632442474365234, "geoq_featureid": "55f8fec9-b0e9-4998-914a-ce46a04c5fbc" }, "6615": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 133.96034240722656, "geoq_featureid": "eb6ee34d-50c0-4e3d-b081-3ba05fca2fc7" }, "6616": { "D_lat": 51.477500915527344, "D_lon": -0.4613890051841736, "S_lat": 47.44900131225586, "S_lon": -122.3093032836914, "Shape_Leng": 129.99644470214844, "geoq_featureid": "7ebf5cd0-4f54-4962-b7b9-fb0f923d5d31" }, "6618": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 37.61897277832031, "S_lon": -122.37488555908203, "Shape_Leng": 135.75814819335938, "geoq_featureid": "4711b484-a65e-465d-9079-8c7c8ec28dc1" }, "6621": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 32.44662857055664, "S_lon": -93.82559967041016, "Shape_Leng": 9.474967956542969, "geoq_featureid": "9ab984ec-035f-4aa8-887f-51f7f4d89859" }, "6623": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 23.1518497467041, "S_lon": -109.7210464477539, "Shape_Leng": 27.441362380981445, "geoq_featureid": "50829d91-8e0f-4288-bb6d-18058cd64bef" }, "6624": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 9.993861198425293, "S_lon": -84.20880889892578, "Shape_Leng": 23.643884658813477, "geoq_featureid": "25297f8d-212a-4753-b60a-19542b6cef45" }, "6625": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 18.439416885375977, "S_lon": -66.0018310546875, "Shape_Leng": 23.927181243896484, "geoq_featureid": "8d485bb9-7a05-427c-9b26-bb6202a9349b" }, "6626": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 40.788387298583984, "S_lon": -111.97777557373047, "Shape_Leng": 28.54762077331543, "geoq_featureid": "d9380a35-a8f6-4b42-9c59-0be6436f3eb9" }, "6627": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 40.788387298583984, "S_lon": -111.97777557373047, "Shape_Leng": 121.95470428466797, "geoq_featureid": "32c3e331-7a10-42a4-bc61-3cb526c17b61" }, "6630": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 33.67566680908203, "S_lon": -117.86822509765625, "Shape_Leng": 33.54679870605469, "geoq_featureid": "e20271c0-b162-4400-8d4f-8cfd7049eba2" }, "6632": { "D_lat": 48.44791030883789, "D_lon": -4.418539047241211, "S_lat": 50.950260162353516, "S_lon": -1.356803059577942, "Shape_Leng": 3.9549624919891357, "geoq_featureid": "54ee7af1-aa28-4b14-8be2-93f2625fb262" }, "6635": { "D_lat": 46.17919921875, "D_lon": -1.1952799558639526, "S_lat": 50.950260162353516, "S_lon": -1.356803059577942, "Shape_Leng": 4.773802757263184, "geoq_featureid": "27379bff-fb2b-4fbc-acf9-8793a0de1a36" }, "6637": { "D_lat": 47.15319061279297, "D_lon": -1.6107250452041626, "S_lat": 50.950260162353516, "S_lon": -1.356803059577942, "Shape_Leng": 3.8055694103240967, "geoq_featureid": "0758ac42-ae13-4256-a567-3c4d86233eef" }, "6639": { "D_lat": 48.06950759887695, "D_lon": -1.734794020652771, "S_lat": 50.950260162353516, "S_lon": -1.356803059577942, "Shape_Leng": 2.9054739475250244, "geoq_featureid": "73dfca9c-4c17-4fea-a0c4-145be3d91f3a" }, "6644": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 48.689876556396484, "S_lon": 9.221963882446289, "Shape_Leng": 98.69668579101562, "geoq_featureid": "72a0bb2b-592a-4d68-820f-d5fed95c6d03" }, "6646": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 18.337305068969727, "S_lon": -64.97335815429688, "Shape_Leng": 24.796689987182617, "geoq_featureid": "0c646508-d7a1-4f8b-9520-92bc89a5ad72" }, "6653": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 18.040952682495117, "S_lon": -63.1088981628418, "Shape_Leng": 74.3907241821289, "geoq_featureid": "9f540920-a320-48b3-89a9-588b9459595c" }, "6656": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 30.396528244018555, "S_lon": -84.35033416748047, "Shape_Leng": 3.241123676300049, "geoq_featureid": "6a5c334d-c80f-4286-a17c-890d3563eeef" }, "6662": { "D_lat": 33.36746597290039, "D_lon": -7.589966773986816, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 13.63621711730957, "geoq_featureid": "b56d27a7-aca8-4d8e-aeb4-47a06b06fecf" }, "6668": { "D_lat": 31.60688591003418, "D_lon": -8.036299705505371, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 15.283583641052246, "geoq_featureid": "8cee9807-f3b9-459f-ae05-12eeaa96272d" }, "6669": { "D_lat": 37.417999267578125, "D_lon": -5.893105983734131, "S_lat": 43.62907409667969, "S_lon": 1.3638190031051636, "Shape_Leng": 9.558524131774902, "geoq_featureid": "43b666e6-94d6-49f6-9201-4eff8c6e8a0e" }, "6676": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 27.97547149658203, "S_lon": -82.53324890136719, "Shape_Leng": 5.970271110534668, "geoq_featureid": "0d686082-d748-452e-87fc-551d5d5894ae" }, "6680": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 36.198387145996094, "S_lon": -95.88810729980469, "Shape_Leng": 11.748088836669922, "geoq_featureid": "b15125d2-2eb6-4ed5-84aa-70aabe5762a6" }, "6692": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 42.2318000793457, "S_lon": -8.626774787902832, "Shape_Leng": 13.090453147888184, "geoq_featureid": "afe7caa2-28a8-4d61-8ba9-e1846f08d1dc" }, "6696": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 30.782499313354492, "S_lon": -83.27670288085938, "Shape_Leng": 3.0777645111083984, "geoq_featureid": "a650319c-6229-48c3-8f90-c49f7b3d12eb" }, "6697": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 30.48324966430664, "S_lon": -86.52539825439453, "Shape_Leng": 3.7874536514282227, "geoq_featureid": "7e11a161-2d69-40bb-ac4a-d394bade177f" }, "6701": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 36.28186798095703, "S_lon": -94.30680847167969, "Shape_Leng": 10.23037338256836, "geoq_featureid": "cd6da4fa-ee32-4d3c-81b6-df1db861d3fd" }, "6702": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 15.97549057006836, "geoq_featureid": "57a3a966-fb66-4406-81af-417407bc0dae" }, "6703": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 45.47055435180664, "S_lon": -73.74082946777344, "Shape_Leng": 78.02886199951172, "geoq_featureid": "04bde491-a45f-427a-9fee-384e932327dc" }, "6704": { "D_lat": 33.63671875, "D_lon": -84.42807006835938, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 11.1342134475708, "geoq_featureid": "de77a714-0942-434a-bff4-9094d755bbbf" }, "6705": { "D_lat": 49.012779235839844, "D_lon": 2.549999952316284, "S_lat": 43.677223205566406, "S_lon": -79.63055419921875, "Shape_Leng": 84.52117919921875, "geoq_featureid": "0e6b2a52-b0d3-4424-b7b0-7dfc37ef7f1d" }, "6719": { "D_lat": 5.261385917663574, "D_lon": -3.9262940883636475, "S_lat": 36.69101333618164, "S_lon": 3.2154080867767334, "Shape_Leng": 32.24424743652344, "geoq_featureid": "6c911821-2b6d-49ef-812b-d6c97956c096" } };
	var allData = [data1, data2, data3, data4];
	// const dd = "12":{"D_lat":50.643798828125,"D_lon":36.5900993347168,"S_lat":54.89004898071289,"S_lon":20.592632293701172,"Shape_Leng":16.572479248046875,"geoq_featureid":"7dc613af-90e0-41d0-b803-5dfdcc5e0235"},"15":{"D_lat":55.30583572387695,"D_lon":61.503334045410156,"S_lat":55.60618591308594,"S_lon":49.27872848510742,"Shape_Leng":12.233421325683594,"geoq_featureid":"a9f7c68a-2d1b-4aaf-be89-29c2c522c23c"},"16":{"D_lat":55.40861129760742,"D_lon":37.90611267089844,"S_lat":55.60618591308594,"S_lon":49.27872848510742,"Shape_Leng":11.378439903259277,"geoq_featureid":"282ffc49-044a-43fe-ae7a-60deeb7bcb72"},"17":{"D_lat":50.643798828125,"D_lon":36.5900993347168,"S_lat":55.60618591308594,"S_lon":49.27872848510742,"Shape_Leng":13.641093254089355,"geoq_featureid":"bd1dcfb7-1853-4f74-9e21-2d1c8aa80fcf"},"23":{"D_lat":55.60618591308594,"D_lon":49.27872848510742,"S_lat":56.743106842041016,"S_lon":60.80272674560547,"Shape_Leng":11.584599494934082,"geoq_featureid":"be198c68-ee80-41d2-b9c4-b1ba6a054809"},"28":{"D_lat":55.40861129760742,"D_lon":37.90611267089844,"S_lat":54.63999938964844,"S_lon":52.801700592041016,"Shape_Leng":14.925003051757812,"geoq_featureid":"44265fca-297b-494e-b2a1-a9157e068478"},"40":{"D_lat":52.268028259277344,"D_lon":104.38897705078125,"S_lat":55.01262283325195,"S_lon":82.6506576538086,"Shape_Leng":21.945865631103516,"geoq_featureid":"aebc64cf-884c-4730-89c3-b87e16891da7"},"45":{"D_lat":55.40861129760742,"D_lon":37.90611267089844,"S_lat":55.34000015258789,"S_lon":52.060001373291016,"Shape_Leng":14.161986351013184,"geoq_featureid":"04a3edc3-594f-46fa-99be-db204f2c4f2e"},"46":{"D_lat":40.467498779296875,"D_lon":50.04666519165039,"S_lat":55.34000015258789,"S_lon":52.060001373291016,"Shape_Leng":15.012009620666504,"geoq_featureid":"4bc49c0b-e1af-4c1c-a00d-ca2ac22a7fc7"},"47":{"D_lat":59.80029296875,"D_lon":30.262502670288086,"S_lat":55.34000015258789,"S_lon":52.060001373291016,"Shape_Leng":22.291786193847656,"geoq_featureid":"3f691e00-c1a2-4a9d-8e8c-c32da3f73a2a"},"49":{"D_lat":56.743106842041016,"D_lon":60.80272674560547,"S_lat":60.94927215576172,"S_lon":76.4836196899414,"Shape_Leng":16.255767822265625,"geoq_featureid":"8ceb430b-d82e-4a98-b52e-f2d9ca0981af"},"50":{"D_lat":54.63999938964844,"D_lon":52.801700592041016,"S_lat":60.94927215576172,"S_lon":76.4836196899414,"Shape_Leng":24.578235626220703,"geoq_featureid":"54ffe7b8-788d-468d-bf8c-3b8ebf3da9be"},"55":{"D_lat":55.01262283325195,"D_lon":82.6506576538086,"S_lat":56.37055587768555,"S_lon":101.69833374023438,"Shape_Leng":19.11631965637207,"geoq_featureid":"41940132-6073-462f-a478-ec66bbf81af3"},"56":{"D_lat":55.01262283325195,"D_lon":82.6506576538086,"S_lat":55.30583572387695,"S_lon":61.503334045410156,"Shape_Leng":21.176122665405273,"geoq_featureid":"3fa42edb-4038-4152-b2af-a6d6ee93fb29"},"90":{"D_lat":6.357227802276611,"D_lon":2.384352922439575,"S_lat":12.353194236755371,"S_lon":-1.512416958808899,"Shape_Leng":7.151082992553711,"geoq_featureid":"9aacb741-1dee-420a-a3bb-c693cb8a6939"},"115":{"D_lat":59.65194320678711,"D_lon":17.918611526489258,"S_lat":67.13240814208984,"S_lon":20.81463623046875,"Shape_Leng":8.032286643981934,"geoq_featureid":"593aa7ca-cbe4-431d-a468-af30eee5a523"},"122":{"D_lat":59.65194320678711,"D_lon":17.918611526489258,"S_lat":64.57908630371094,"S_lon":16.833574295043945,"Shape_Leng":5.0461955070495605,"geoq_featureid":"23ce47aa-e4a3-458c-bbdb-d6ee90378811"},"124":{"D_lat":67.13240814208984,"D_lon":20.81463623046875,"S_lat":63.0485954284668,"S_lon":17.768856048583984,"Shape_Leng":5.099614143371582,"geoq_featureid":"0bed211d-6c11-4947-a065-71cdfa8c5ea7"},"127":{"D_lat":59.65194320678711,"D_lon":17.918611526489258,"S_lat":64.54832458496094,"S_lon":18.716218948364258,"Shape_Leng":4.961467742919922,"geoq_featureid":"d129926b-c48b-49d8-8945-90e3aa8f74b8"},"128":{"D_lat":59.65194320678711,"D_lon":17.918611526489258,"S_lat":63.40834045410156,"S_lon":18.990039825439453,"Shape_Leng":3.906886339187622,"geoq_featureid":"6e78c6aa-8652-461c-bf5b-c2d79d1154c2"},"131":{"D_lat":65.80611419677734,"D_lon":15.082777976989746,"S_lat":64.57908630371094,"S_lon":16.833574295043945,"Shape_Leng":2.1381988525390625,"geoq_featureid":"204811f3-8a87-4727-b64e-4bea5e2c8e51"},"132":{"D_lat":63.72117233276367,"D_lon":23.143131256103516,"S_lat":61.46168518066406,"S_lon":21.79998207092285,"Shape_Leng":2.62908673286438,"geoq_featureid":"76ec66af-775d-4eab-b487-bf5b4a546479"},"133":{"D_lat":60.1222038269043,"D_lon":19.898155212402344,"S_lat":60.51414108276367,"S_lon":22.262807846069336,"Shape_Leng":2.396958589553833,"geoq_featureid":"763e14ad-47b2-4035-b850-fac3177cabfb"},"134":{"D_lat":59.65194320678711,"D_lon":17.918611526489258,"S_lat":59.186702728271484,"S_lon":10.258627891540527,"Shape_Leng":7.675254821777344,"geoq_featureid":"9e557850-316b-4fb0-87b9-f8fab6590712"},"136":{"D_lat":60.19391632080078,"D_lon":11.100360870361328,"S_lat":56.92914581298828,"S_lon":14.727993965148926,"Shape_Leng":4.882806777954102,"geoq_featureid":"7219283a-906a-4328-b378-5dbdc028588b"},"158":{"D_lat":14.739707946777344,"D_lon":-17.490224838256836,"S_lat":4.0060811042785645,"S_lon":9.719481468200684,"Shape_Leng":29.260255813598633,"geoq_featureid":"b14e0509-3ce7-4d56-a1ac-4a77be692908"},"166":{"D_lat":14.739707946777344,"D_lon":-17.490224838256836,"S_lat":6.577369213104248,"S_lon":3.3211560249328613,"Shape_Leng":22.360355377197266,"geoq_featureid":"ee8997c6-3207-4c00-a80b-a36536bd475d"},"167":{"D_lat":4.0060811042785645,"D_lon":9.719481468200684,"S_lat":6.577369213104248,"S_lon":3.3211560249328613,"Shape_Leng":6.895697116851807,"geoq_featureid":"cd0a34bf-6705-49e9-8e9a-2b1bb3d7b8af"},"176":{"D_lat":25.252777099609375,"D_lon":55.364444732666016,"S_lat":11.547200202941895,"S_lon":43.159400939941406,"Shape_Leng":18.36138153076172,"geoq_featureid":"524cd228-f1c6-4467-85d6-9968165efef3"},"177":{"D_lat":21.679563522338867,"D_lon":39.15653610229492,"S_lat":11.547200202941895,"S_lon":43.159400939941406,"Shape_Leng":10.8950834274292,"geoq_featureid":"8b740f2f-3a9c-4b41-b172-2b8ca0dc32ec"},"178":{"D_lat":2.0144400596618652,"D_lon":45.3046989440918,"S_lat":11.547200202941895,"S_lon":43.159400939941406,"Shape_Leng":9.771204948425293,"geoq_featureid":"aad787cb-65ed-43f7-bc36-03d47c9f666d"},"180":{"D_lat":2.0144400596618652,"D_lon":45.3046989440918,"S_lat":-1.3191670179367065,"S_lon":36.9275016784668,"Shape_Leng":9.016120910644531,"geoq_featureid":"8e1d671b-bf88-4662-bef3-9d7da414e4a7"},"273":{"D_lat":34.988800048828125,"D_lon":-3.028209924697876,"S_lat":39.553611755371094,"S_lon":2.7277779579162598,"Shape_Leng":7.348781585693359,"geoq_featureid":"0dd9a4d8-ced8-4586-a33d-33cc2b1ef07f"},"274":{"D_lat":33.36746597290039,"D_lon":-7.589966773986816,"S_lat":40.89855194091797,"S_lon":29.309219360351562,"Shape_Leng":37.84748458862305,"geoq_featureid":"f2ada1ca-99e6-4c46-a4e3-39c9c541e86e"},"290":{"D_lat":39.775001525878906,"D_lon":64.48332977294922,"S_lat":55.40861129760742,"S_lon":37.90611267089844,"Shape_Leng":31.08006477355957,"geoq_featureid":"cc5bd4ad-7ee9-4031-91c2-69ca4058f7df"},"299":{"D_lat":55.40861129760742,"D_lon":37.90611267089844,"S_lat":40.35879898071289,"S_lon":71.74500274658203,"Shape_Leng":37.371421813964844,"geoq_featureid":"add50903-ed5f-4d58-b774-e60e1e5dd054"},"300":{"D_lat":55.40861129760742,"D_lon":37.90611267089844,"S_lat":38.83359909057617,"S_lon":65.92150115966797,"Shape_Leng":32.83718490600586,"geoq_featureid":"6a1c251e-0288-4918-b013-0468822f8f70"},"301":{"D_lat":46.28333282470703,"D_lon":48.00627899169922,"S_lat":59.80029296875,"S_lon":30.262502670288086,"Shape_Leng":22.453983306884766,"geoq_featureid":"0a3d4bd0-57c7-4341-a92a-8c8e6f03bd13"},"302":{"D_lat":55.40861129760742,"D_lon":37.90611267089844,"S_lat":40.98460006713867,"S_lon":71.55670166015625,"Shape_Leng":36.929168701171875,"geoq_featureid":"fce6fc56-421f-4eca-a5d3-801576e7b68e"},"303":{"D_lat":55.40861129760742,"D_lon":37.90611267089844,"S_lat":40.1171989440918,"S_lon":65.1707992553711,"Shape_Leng":31.507099151611328,"geoq_featureid":"848a0ca9-5d17-4341-b4dc-026fca704afd"},"304":{"D_lat":55.40861129760742,"D_lon":37.90611267089844,"S_lat":39.70054626464844,"S_lon":66.98382568359375,"Shape_Leng":33.32997131347656,"geoq_featureid":"b9d2b7f5-e92d-435a-a0f9-0180ac857125"},"474":{"D_lat":65.48090362548828,"D_lon":72.69889831542969,"S_lat":61.31999969482422,"S_lon":63.604400634765625,"Shape_Leng":10.012162208557129,"geoq_featureid":"7fb5e0e5-c929-46d8-9943-361d90bda84f"},"477":{"D_lat":61.31999969482422,"D_lon":63.604400634765625,"S_lat":56.743106842041016,"S_lon":60.80272674560547,"Shape_Leng":5.3697919845581055,"geoq_featureid":"98dbdab9-314f-4171-83d0-3143dc93d204"},"478":{"D_lat":66.04180908203125,"D_lon":76.31393432617188,"S_lat":57.18956756591797,"S_lon":65.32430267333984,"Shape_Leng":14.175252914428711,"geoq_featureid":"7433594c-7895-4135-9f8d-d98b1c9aa3ea"},"480":{"D_lat":66.04180908203125,"D_lon":76.31393432617188,"S_lat":54.55751037597656,"S_lon":55.87441635131836,"Shape_Leng":23.61643409729004,"geoq_featureid":"2f4bf768-69b0-404f-808c-32494996d20c"},"484":{"D_lat":63.68305587768555,"D_lon":66.68305969238281,"S_lat":55.591529846191406,"S_lon":37.2614860534668,"Shape_Leng":30.655458450317383,"geoq_featureid":"6e76fda0-1d14-4477-95b2-f1b6ee38a07e"},"485":{"D_lat":42.488399505615234,"D_lon":59.62329864501953,"S_lat":55.591529846191406,"S_lon":37.2614860534668,"Shape_Leng":26.071096420288086,"geoq_featureid":"60b17a9b-b7b4-41bb-a527-d40ca78601dd"},"486":{"D_lat":66.04180908203125,"D_lon":76.31393432617188,"S_lat":55.591529846191406,"S_lon":37.2614860534668,"Shape_Leng":40.74988555908203,"geoq_featureid":"70b1847a-fe60-4ed2-a949-be6e8ac0fa02"},"487":{"D_lat":65.48090362548828,"D_lon":72.69889831542969,"S_lat":55.591529846191406,"S_lon":37.2614860534668,"Shape_Leng":37.045814514160156,"geoq_featureid":"4dedb5d2-4f90-4455-96fb-e25ce100f767"},"488":{"D_lat":61.31999969482422,"D_lon":63.604400634765625,"S_lat":55.591529846191406,"S_lon":37.2614860534668,"Shape_Leng":27.037403106689453,"geoq_featureid":"fa9d1443-0834-47f9-aa6e-c9c4960e1673"},"498":{"D_lat":63.34029769897461,"D_lon":53.48259353637695,"S_lat":55.591529846191406,"S_lon":37.2614860534668,"Shape_Leng":18.035640716552734,"geoq_featureid":"4974a5ab-4c7c-4f5e-9885-77047fabc266"},"604":{"D_lat":30.578527450561523,"D_lon":103.94708251953125,"S_lat":43.9071044921875,"S_lon":87.4742431640625,"Shape_Leng":21.249177932739258,"geoq_featureid":"92889bbd-cdfa-4154-8f76-ea3c56ee24c5"},"605":{"D_lat":39.54292297363281,"D_lon":76.01995849609375,"S_lat":43.9071044921875,"S_lon":87.4742431640625,"Shape_Leng":12.266493797302246,"geoq_featureid":"cf9716ca-3949-400b-8279-b79bd5211c26"},"775":{"D_lat":23.593278884887695,"D_lon":58.28444290161133,"S_lat":23.843332290649414,"S_lon":90.39778137207031,"Shape_Leng":32.17504119873047,"geoq_featureid":"78a3732d-4342-453c-8b84-b4407228ca39"},"778":{"D_lat":23.843332290649414,"D_lon":90.39778137207031,"S_lat":25.252777099609375,"S_lon":55.364444732666016,"Shape_Leng":35.1458740234375,"geoq_featureid":"c7e330f7-87f9-4c3c-80cf-c14df286506f"},"779":{"D_lat":23.843332290649414,"D_lon":90.39778137207031,"S_lat":21.679563522338867,"S_lon":39.15653610229492,"Shape_Leng":51.540313720703125,"geoq_featureid":"e7789ac1-26eb-4ebb-a0ac-75870f2776a7"},"785":{"D_lat":28.566499710083008,"D_lon":77.10308837890625,"S_lat":34.210018157958984,"S_lon":62.22829818725586,"Shape_Leng":15.922749519348145,"geoq_featureid":"af79efa7-3774-4a93-87d8-6347fcfb6630"},"788":{"D_lat":34.210018157958984,"D_lon":62.22829818725586,"S_lat":33.61665344238281,"S_lon":73.09923553466797,"Shape_Leng":10.890705108642578,"geoq_featureid":"06f8937b-fc90-4da5-9cdf-ff59d76a447c"},"791":{"D_lat":25.252777099609375,"D_lon":55.364444732666016,"S_lat":34.565853118896484,"S_lon":69.21232604980469,"Shape_Leng":16.706029891967773,"geoq_featureid":"43ff61f9-9f72-41d2-91bd-3830400d2b29"},"792":{"D_lat":34.210018157958984,"D_lon":62.22829818725586,"S_lat":34.565853118896484,"S_lon":69.21232604980469,"Shape_Leng":6.99404764175415,"geoq_featureid":"a6903b65-3251-4bfb-9251-fe7159db1890"},"795":{"D_lat":34.565853118896484,"D_lon":69.21232604980469,"S_lat":36.706912994384766,"S_lon":67.20967864990234,"Shape_Leng":2.931826114654541,"geoq_featureid":"453a20f0-21e3-4bfe-9d39-264e93de471b"},"806":{"D_lat":25.557111740112305,"D_lon":34.583709716796875,"S_lat":47.4647216796875,"S_lon":8.549166679382324,"Shape_Leng":34.271095275878906,"geoq_featureid":"b4a17907-2350-4d54-9ba8-c35592985294"},"926":{"D_lat":59.65194320678711,"D_lon":17.918611526489258,"S_lat":51.289451599121094,"S_lon":6.766775131225586,"Shape_Leng":13.979048728942871,"geoq_featureid":"5d198d73-fc80-40e9-a796-3b359e5a4edf"},"990":{"D_lat":60.29338455200195,"D_lon":5.218142032623291,"S_lat":53.63039016723633,"S_lon":9.988227844238281,"Shape_Leng":8.205883026123047,"geoq_featureid":"05d4f0ee-cc4a-4434-8be3-cd368652d93c"}
	exports.default = allData;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "hangxian.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	    return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () {
	    function defineProperties(target, props) {
	        for (var i = 0; i < props.length; i++) {
	            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	        }
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	}();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	}

	function _possibleConstructorReturn(self, call) {
	    if (!self) {
	        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	    }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	    if (typeof superClass !== "function" && superClass !== null) {
	        throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var GeoVis = window.GeoVis;
	var Engine = window.Engine;

	var ChinaTrain = function (_Component) {
	    _inherits(ChinaTrain, _Component);

	    function ChinaTrain(props) {
	        _classCallCheck(this, ChinaTrain);

	        var _this = _possibleConstructorReturn(this, (ChinaTrain.__proto__ || Object.getPrototypeOf(ChinaTrain)).call(this, props));

	        _this.state = {
	            currentObj: ''
	        };
	        return _this;
	    }

	    _createClass(ChinaTrain, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(113.16, 39.71, 9000000.0)
	            });
	            //切换底图
	            new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	                layer: 'beyondb:linyin_0816_world_black',
	                style: '',
	                format: 'image/png',
	                tileMatrixSetID: 'EPSG:4326',
	                tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	                maximumLevel: 19,
	                projection: 'EPSG:4326'
	            }).addTo(earth.layers);
	            //添加中国火车站数据
	            this.state.currentObj = new GeoVis.GeoJson('http://192.168.4.229:28080/beyonserver/beyondb/wms?service=WMS&version=1.1.0&request=GetMap&layers=beyondb:vt_transportation_train_station_transportation_train_station_v01&styles=&bbox=75.976509,18.295973,134.402496,52.98856&width=768&height=456&srs=EPSG:4326&format=application%2Fjson%3Btype%3Dgeojson', {
	                markerSize: 6,
	                markerColor: GeoVis.Color.ORANGERED.withAlpha(0.8)
	            });
	            this.state.currentObj.addTo(window.earth);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return ChinaTrain;
	}(_react.Component);

	exports.default = ChinaTrain;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "chinaTrain.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _beijingDisasterData = __webpack_require__(256);

	var _beijingDisasterData2 = _interopRequireDefault(_beijingDisasterData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BeijingDisaster = function (_Component) {
	    _inherits(BeijingDisaster, _Component);

	    function BeijingDisaster(props) {
	        _classCallCheck(this, BeijingDisaster);

	        var _this = _possibleConstructorReturn(this, (BeijingDisaster.__proto__ || Object.getPrototypeOf(BeijingDisaster)).call(this, props));

	        _this.state = {
	            currentObj: []
	        };
	        return _this;
	    }

	    _createClass(BeijingDisaster, [{
	        key: 'initImg',
	        value: function initImg(id, callback) {
	            fetch('http://192.168.48.3:8690/remotedatasource/' + id, {
	                method: "POST"
	            }).then(function (res) {
	                if (res.status !== 200) {
	                    console.log(res.status);return;
	                }
	                res.json().then(function (data) {

	                    callback(data);
	                });
	            }).catch(function (err) {
	                console.log(err);
	            });
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var re = this;
	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(116.16, 40.11, 100000.0)
	            });
	            re.initImg(8, function (data) {
	                var a = data.remotedatasource.url;
	                a = a.replace(/&amp;/g, '&');
	                a = a.replace('[1234]', '2');

	                var layer = new GeoVis.TileLayer(a, { projection: 'EPSG:900913' }).addTo(window.earth.layers);
	            });

	            var dataArr = _beijingDisasterData2.default.rows;
	            var i = 1;
	            console.log(dataArr.length);
	            var length = dataArr.length > 1500 ? 1500 : dataArr.length;
	            var addpoint = setInterval(function () {
	                if (i >= length) {
	                    clearInterval(addpoint);
	                }
	                var markerpoint = new GeoVis.PointMarker([dataArr[i].经度, dataArr[i].纬度, 0], { id: 'marker_' + i, color: GeoVis.Color.fromCssString("#02c874") });
	                markerpoint.addTo(earth.features);
	                markerpoint.bindPopup("<b>" + dataArr[i].灾害类型 + "</b><br>" + dataArr[i].隐患点名称 + "", {
	                    maxWidth: 120
	                });
	                // markerpoint.showPopup();
	                re.state.currentObj.push(markerpoint);
	                i++;
	            }, 1);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除        
	            this.state.currentObj.map(function (val, index) {
	                val.removeFrom(window.earth.features);
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return BeijingDisaster;
	}(_react.Component);

	exports.default = BeijingDisaster;

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var disaster = { "fields": ["隐患点名称", "区县名称", "乡镇名称", "村名", "灾害类型", "灾害等级", "RuleID", "经度", "纬度", "Value"], "rows": [{ "隐患点名称": "前白虎涧二道沟泥石流隐患点", "区县名称": "昌平区", "乡镇名称": "阳坊镇", "村名": "前白虎涧村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.085055556", "纬度": "40.1287222244", "Value": "30" }, { "隐患点名称": "下店路崩塌隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "上店村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.082722223999", "纬度": "40.1568888872999", "Value": "30" }, { "隐患点名称": "下店路崩塌隐患点2", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "南流村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.039805558", "纬度": "40.1521111056", "Value": "30" }, { "隐患点名称": "漆园村不稳定斜坡隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "漆园村王淑婷屋后", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.028277777", "纬度": "40.1288333386", "Value": "30" }, { "隐患点名称": "瓦窑村崩塌隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "瓦窑村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.01702778", "纬度": "40.1371666714999", "Value": "30" }, { "隐患点名称": "瓦窑村崩塌隐患点2", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "瓦窑村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.01316667", "纬度": "40.1327222175999", "Value": "30" }, { "隐患点名称": "西峪村不稳定斜坡隐患点", "区县名称": "昌平区", "乡镇名称": "崔村镇", "村名": "西峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.320833337", "纬度": "40.2522222213", "Value": "30" }, { "隐患点名称": "八家村崩塌隐患点", "区县名称": "昌平区", "乡镇名称": "崔村镇", "村名": "八家村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.320611115999", "纬度": "40.2376944459999", "Value": "30" }, { "隐患点名称": "八家村凤山矿区崩塌隐患点1", "区县名称": "昌平区", "乡镇名称": "崔村镇", "村名": "八家村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.302333333", "纬度": "40.2744722217", "Value": "30" }, { "隐患点名称": "蟒山森林公园道路崩塌隐患点1", "区县名称": "昌平区", "乡镇名称": "十三陵镇", "村名": "（莽山森林公园不属于具体村）", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.30336111", "纬度": "40.2395277806", "Value": "30" }, { "隐患点名称": "流村镇北禾路崩塌隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "王家园村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.968416672", "纬度": "40.2402222194", "Value": "30" }, { "隐患点名称": "流村镇北禾路不稳定斜坡隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "王家园村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.971666670999", "纬度": "40.2370555549999", "Value": "30" }, { "隐患点名称": "流村镇北禾路崩塌隐患点2", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "王家园村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.982305557", "纬度": "40.2226944529", "Value": "30" }, { "隐患点名称": "瓦窑村不稳定斜坡隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "瓦窑村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.010027781", "纬度": "40.1400833316", "Value": "30" }, { "隐患点名称": "小水峪村村级道路不稳定斜坡隐患点", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "小水峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.985916667", "纬度": "40.1491111144", "Value": "30" }, { "隐患点名称": "小水峪村崩塌隐患点", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "小水峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.986833334", "纬度": "40.1534166670999", "Value": "30" }, { "隐患点名称": "S219市道南雁路崩塌隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "瓦窑村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.016222224", "纬度": "40.1411944404", "Value": "30" }, { "隐患点名称": "高崖口村不稳定斜坡隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "高崖口村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.985277779", "纬度": "40.1346944459", "Value": "30" }, { "隐患点名称": "水活路崩塌隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "狼儿峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.989722226", "纬度": "40.1130555645", "Value": "30" }, { "隐患点名称": "狼儿峪村不稳定斜坡隐患点", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "狼儿峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.995722227", "纬度": "40.1072500049999", "Value": "30" }, { "隐患点名称": "狼儿峪村不稳定斜坡隐患点1", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "狼儿峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.996472225", "纬度": "40.1027500070999", "Value": "30" }, { "隐患点名称": "狼儿峪村崩塌隐患点", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "狼儿峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.9945", "纬度": "40.1031944491", "Value": "30" }, { "隐患点名称": "狼儿峪村不稳定斜坡隐患点2", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "狼儿峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.99436111", "纬度": "40.1052500083999", "Value": "30" }, { "隐患点名称": "狼儿峪村泥石流隐患点", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "狼儿峪村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.000722221999", "纬度": "40.1034444459", "Value": "30" }, { "隐患点名称": "北照台村崩塌隐患点", "区县名称": "昌平区", "乡镇名称": "流村镇", "村名": "北照台村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.018972222", "纬度": "40.1072500049999", "Value": "30" }, { "隐患点名称": "拉拉湖村泥石流沟灾害隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "拉拉湖村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.020333339", "纬度": "39.9283333384", "Value": "30" }, { "隐患点名称": "天桥浮村公路崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "天桥浮村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.024361115", "纬度": "39.9272777772999", "Value": "30" }, { "隐患点名称": "天桥浮村公路崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "天桥浮村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.02588889", "纬度": "39.9277222342999", "Value": "30" }, { "隐患点名称": "延寿镇桃下路不稳定斜坡隐患点7", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "天桥浮村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.027555555", "纬度": "39.9284722320999", "Value": "30" }, { "隐患点名称": "天桥浮村崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "天桥浮村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.035583332", "纬度": "39.9287499972", "Value": "30" }, { "隐患点名称": "三店村崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "三店村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.041472223", "纬度": "39.9283611140999", "Value": "30" }, { "隐患点名称": "三店村东崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "三店村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.046999998", "纬度": "39.9268333316", "Value": "30" }, { "隐患点名称": "门头口村崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "门头口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.045305554", "纬度": "39.9291944428999", "Value": "30" }, { "隐患点名称": "赵家洼村公路崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "赵家洼村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.056472227", "纬度": "39.9177222288999", "Value": "30" }, { "隐患点名称": "中门寺村不稳定斜坡隐患", "区县名称": "门头沟区", "乡镇名称": "龙泉地区", "村名": "中门寺村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.065166667", "纬度": "39.9214166701", "Value": "30" }, { "隐患点名称": "滑石道社区地面塌陷灾害隐患", "区县名称": "门头沟区", "乡镇名称": "东辛房街道", "村名": "滑石道社区", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "116.052972227", "纬度": "39.9284444450999", "Value": "30" }, { "隐患点名称": "西辛房村小学地面塌陷隐患", "区县名称": "门头沟区", "乡镇名称": "东辛房街道", "村名": "滑石道社区", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "116.062249999", "纬度": "39.9284444450999", "Value": "30" }, { "隐患点名称": "东辛房小学地面塌陷隐患", "区县名称": "门头沟区", "乡镇名称": "东辛房街道", "村名": "滑石道社区", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "116.069805555", "纬度": "39.9325555599999", "Value": "30" }, { "隐患点名称": "圈门小学地面塌陷隐患", "区县名称": "门头沟区", "乡镇名称": "东辛房街道", "村名": "圈门社区", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "116.052277777", "纬度": "39.9288888872", "Value": "30" }, { "隐患点名称": "黑山小学地面塌陷隐患", "区县名称": "门头沟区", "乡镇名称": "大峪街道", "村名": "黑山西街社区", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "116.086611111", "纬度": "39.9404166751", "Value": "30" }, { "隐患点名称": "圈门不稳定斜坡隐患", "区县名称": "门头沟区", "乡镇名称": "东辛房街道", "村名": "圈门社区", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.04575", "纬度": "39.925416667", "Value": "30" }, { "隐患点名称": "东辛房街道平洞社区地面塌陷隐患1", "区县名称": "门头沟区", "乡镇名称": "东辛房街道", "村名": "平洞社区", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "116.053611115", "纬度": "39.9308333397", "Value": "30" }, { "隐患点名称": "东辛房街道平洞社区地面塌陷隐患2", "区县名称": "门头沟区", "乡镇名称": "东辛房街道", "村名": "平洞社区", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "116.053333335", "纬度": "39.9298611096999", "Value": "30" }, { "隐患点名称": "千军台村刘桂标家崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "千军台社区", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.848888888999", "纬度": "39.9349444433999", "Value": "30" }, { "隐患点名称": "千军台20排1号房顶崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "千军台社区", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.850000005", "纬度": "39.9358888901999", "Value": "30" }, { "隐患点名称": "千军台马志龙家不稳定斜坡隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "千军台社区", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.851555559999", "纬度": "39.9343055635999", "Value": "30" }, { "隐患点名称": "千军台庄户北坡崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "千军台社区", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.855722226", "纬度": "39.9363888911999", "Value": "30" }, { "隐患点名称": "清千路K12向后230至470崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.868916674999", "纬度": "39.9398611112999", "Value": "30" }, { "隐患点名称": "清千路K11向后400至K11向后600崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.876916669", "纬度": "39.9428055584", "Value": "30" }, { "隐患点名称": "清千路K10向后480至K10向后530崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.889555559", "纬度": "39.9450277760999", "Value": "30" }, { "隐患点名称": "清千路K10向后0至K10向后180崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.892638891999", "纬度": "39.9464722275999", "Value": "30" }, { "隐患点名称": "清千路K9向后0至K9向后50崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.90288889", "纬度": "39.9505000077", "Value": "30" }, { "隐患点名称": "清千路K8向后750至K8向后800崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.905583337", "纬度": "39.9511944464999", "Value": "30" }, { "隐患点名称": "板桥村后山顶地面塌陷灾害隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "玉皇庙社区", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.900777783", "纬度": "39.9530555568999", "Value": "30" }, { "隐患点名称": "大台玉皇庙社区玉东15排崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "玉皇庙社区", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.911277782", "纬度": "39.9544444456999", "Value": "30" }, { "隐患点名称": "清千路K7向后260至K7向后500崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.918083331999", "纬度": "39.9553333335", "Value": "30" }, { "隐患点名称": "清千路K7向后40至K7向后200崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.919805557", "纬度": "39.9573333338", "Value": "30" }, { "隐患点名称": "清千路K6向后550至K6向后720崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "大台街道", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.923750002", "纬度": "39.9595833384", "Value": "30" }, { "隐患点名称": "大台街道北面黄土台铁道崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "黄土台社区", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.931000002", "纬度": "39.9631666653", "Value": "30" }, { "隐患点名称": "大台黄土台北侧铁道K50向后430至K50向后460崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "大台街道", "村名": "黄土台社区", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.932333335", "纬度": "39.9651944487999", "Value": "30" }, { "隐患点名称": "双石头村西侧山坡崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "双石头村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.648055557", "纬度": "39.9791944473999", "Value": "30" }, { "隐患点名称": "黄草梁景区道路崩塌灾害隐患1", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "柏峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.604055557", "纬度": "40.0334444455999", "Value": "30" }, { "隐患点名称": "黄草梁景区道路崩塌灾害隐患2", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "柏峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.595722225", "纬度": "40.0257777794999", "Value": "30" }, { "隐患点名称": "柏峪村东崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "柏峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.604249999", "纬度": "40.0140277854999", "Value": "30" }, { "隐患点名称": "川底下西沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "川底下村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.634166665", "纬度": "39.9979999996999", "Value": "30" }, { "隐患点名称": "双石头村东崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "双石头村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.648916665", "纬度": "39.9781111105999", "Value": "30" }, { "隐患点名称": "马栏村宋孟江家地面塌陷灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.688333333", "纬度": "39.9350555576", "Value": "30" }, { "隐患点名称": "马栏村委会西侧山坡地面塌陷灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.686500005", "纬度": "39.9357222244", "Value": "30" }, { "隐患点名称": "马栏村张义明家地面塌陷灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.689916667", "纬度": "39.9374722279999", "Value": "30" }, { "隐患点名称": "斋马路东侧山坡地面塌陷灾害隐患1", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.695361111", "纬度": "39.9475000054", "Value": "30" }, { "隐患点名称": "斋马路东侧山坡地面塌陷灾害隐患2", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.695111111", "纬度": "39.9543611146999", "Value": "30" }, { "隐患点名称": "沿河口村北崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "沿河口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.702083337999", "纬度": "40.0646111108", "Value": "30" }, { "隐患点名称": "龙门口村西崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "龙门口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.675972223", "纬度": "40.0530277825999", "Value": "30" }, { "隐患点名称": "龙门口村东崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "龙门口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.679250002", "纬度": "40.0539444572999", "Value": "30" }, { "隐患点名称": "向阳口村东不稳定斜坡", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "向阳口村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.754083335", "纬度": "40.094805561", "Value": "30" }, { "隐患点名称": "向阳口村龙庙沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "向阳口村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.751194444", "纬度": "40.0958888978", "Value": "30" }, { "隐患点名称": "王龙口村西崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "王龙口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.701722227", "纬度": "40.0520555638", "Value": "30" }, { "隐患点名称": "王龙口村东不稳定斜坡", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "王龙口村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.703222225999", "纬度": "40.051888898", "Value": "30" }, { "隐患点名称": "王龙口村北崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "王龙口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.704472221", "纬度": "40.0532777756", "Value": "30" }, { "隐患点名称": "王龙口王龙沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "王龙口村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.705944445", "纬度": "40.0512222312", "Value": "30" }, { "隐患点名称": "林字台村东崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "林字台村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.708583336", "纬度": "40.0411666705999", "Value": "30" }, { "隐患点名称": "牛战村东不稳定斜坡", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "牛战村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.705583338", "纬度": "40.0119722299", "Value": "30" }, { "隐患点名称": "火村南崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "火村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.71394445", "纬度": "39.9663888887", "Value": "30" }, { "隐患点名称": "火村土井沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "火村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.708527777", "纬度": "39.9675000012", "Value": "30" }, { "隐患点名称": "火村北后头地沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "火村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.718750004", "纬度": "39.9703055546", "Value": "30" }, { "隐患点名称": "高铺村(新)公路北崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "高铺村（新）", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.718138888", "纬度": "39.9829722233", "Value": "30" }, { "隐患点名称": "桑峪村东不稳定斜坡", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "桑峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.760944445", "纬度": "40.0035833381", "Value": "30" }, { "隐患点名称": "桑峪村西不稳定斜坡", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "桑峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.758527782", "纬度": "40.0042777768999", "Value": "30" }, { "隐患点名称": "桑峪村北不稳定斜坡", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "桑峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.75955556", "纬度": "40.0055833346999", "Value": "30" }, { "隐患点名称": "吕家村南坡地面塌陷灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "吕家村", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.796083335", "纬度": "39.9326666743", "Value": "30" }, { "隐患点名称": "杨家峪桃树洼沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "杨家峪村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.804416668", "纬度": "39.9518333413", "Value": "30" }, { "隐患点名称": "杨家峪梨树台村北路南崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "杨家峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.805055555", "纬度": "39.9426388927", "Value": "30" }, { "隐患点名称": "法城村范子涧沟路西崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "法城村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.797555558", "纬度": "39.9876944422999", "Value": "30" }, { "隐患点名称": "法城村范子涧沟沟口西崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "法城村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.800416670999", "纬度": "39.9912500083", "Value": "30" }, { "隐患点名称": "杨家峪梨树台村北侧山坡崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "杨家峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.804722227", "纬度": "39.9422222227", "Value": "30" }, { "隐患点名称": "军响村北崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "军响村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.758361112", "纬度": "39.9939166716999", "Value": "30" }, { "隐患点名称": "东胡林村北崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "东胡林村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.745666672", "纬度": "39.9866388924", "Value": "30" }, { "隐患点名称": "西斋堂村北沟公路北崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "西斋堂村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.677916671999", "纬度": "39.9760277792999", "Value": "30" }, { "隐患点名称": "黄岭西村东崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "黄岭西村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.639972224999", "纬度": "39.9705833346", "Value": "30" }, { "隐患点名称": "黄岭西村西崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "黄岭西村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.638250001", "纬度": "39.9696388878", "Value": "30" }, { "隐患点名称": "黄岭西村南崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "黄岭西村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.641277779", "纬度": "39.9670000114", "Value": "30" }, { "隐患点名称": "黄岭西东沟东坡崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "黄岭西村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.646583334", "纬度": "39.9669444524", "Value": "30" }, { "隐患点名称": "斋堂镇马栏村马栏林场路(斋马路)崩塌隐患1", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.684222225", "纬度": "39.9226944446999", "Value": "30" }, { "隐患点名称": "斋堂镇马栏村马栏林场路(斋马路)崩塌隐患2", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.685805559", "纬度": "39.9273055605999", "Value": "30" }, { "隐患点名称": "斋堂镇马栏村马栏林场路(斋马路)崩塌隐患3", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.686111111", "纬度": "39.9315833375", "Value": "30" }, { "隐患点名称": "斋堂镇马栏村马栏林场路(斋马路)崩塌隐患4", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.689055558", "纬度": "39.9343611187999", "Value": "30" }, { "隐患点名称": "斋堂镇马栏村村北斋马路崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "马栏村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.688777782", "纬度": "39.9384444467999", "Value": "30" }, { "隐患点名称": "柏峪路K6向后700至K7向后0处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "川底下村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.629694447", "纬度": "40.0024722256", "Value": "30" }, { "隐患点名称": "柏峪路K6向后250至450处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "川底下村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.633944443999", "纬度": "40.0008055568", "Value": "30" }, { "隐患点名称": "柏峪路路K4向后90至120处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "双石头村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.644472222999", "纬度": "39.9866388924", "Value": "30" }, { "隐患点名称": "柏峪路K2向后0至150青龙涧村崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "青龙涧村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.65061111", "纬度": "39.9721944480999", "Value": "30" }, { "隐患点名称": "沿黄路沿河口村崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "沿河口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.696055558", "纬度": "40.0691666715", "Value": "30" }, { "隐患点名称": "沿黄路崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "沿河口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.674583334", "纬度": "40.0734722205", "Value": "30" }, { "隐患点名称": "斋堂镇沿河口村沿黄路崩塌隐患1", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "沿河口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.670666669", "纬度": "40.0785277820999", "Value": "30" }, { "隐患点名称": "斋堂镇沿河口村沿黄路崩塌隐患2", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "沿河口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.655305557", "纬度": "40.0890833325999", "Value": "30" }, { "隐患点名称": "斋堂镇沿河城村沿龙路崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "沿河城村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.594583336", "纬度": "40.0742500052", "Value": "30" }, { "隐患点名称": "斋堂镇龙门口村沿龙路崩塌隐患1", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "龙门口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.624027785", "纬度": "40.0717222318", "Value": "30" }, { "隐患点名称": "斋堂镇龙门口村沿龙路崩塌隐患2", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "龙门口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.636555556", "纬度": "40.0727222227", "Value": "30" }, { "隐患点名称": "斋堂镇龙门口村沿龙路崩塌隐患3", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "龙门口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.655444446999", "纬度": "40.0670555531999", "Value": "30" }, { "隐患点名称": "房良村崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "雁翅镇", "村名": "房良村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.860722221", "纬度": "40.1273611188", "Value": "30" }, { "隐患点名称": "马套村泥石流沟隐患", "区县名称": "门头沟区", "乡镇名称": "雁翅镇", "村名": "马套村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.815333333", "纬度": "40.1274166629", "Value": "30" }, { "隐患点名称": "田寺村崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "田寺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.590638887", "纬度": "39.9021666757999", "Value": "30" }, { "隐患点名称": "上达摩村地面塌陷", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "上达摩村", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.666777778", "纬度": "39.9114444554", "Value": "30" }, { "隐患点名称": "洪水峪村南地面塌陷", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水峪村", "灾害类型": "地面塌陷", "灾害等级": "小型", "RuleID": "2", "经度": "115.65330556", "纬度": "39.8957500085", "Value": "30" }, { "隐患点名称": "双大路X022燕家台崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "燕家台村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.577000002999", "纬度": "40.0096388906", "Value": "30" }, { "隐患点名称": "双大路X022燕家台崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "燕家台村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.570583332", "纬度": "40.0076666661", "Value": "30" }, { "隐患点名称": "双大路X022燕家台崩塌隐患1", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "燕家台村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.566944443", "纬度": "39.9926666729", "Value": "30" }, { "隐患点名称": "双大路X022燕家台崩塌隐患2", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "燕家台村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.557527781", "纬度": "39.9908333384", "Value": "30" }, { "隐患点名称": "双大路X022黎园岭崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "燕家台村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.532722224", "纬度": "39.9838055633", "Value": "30" }, { "隐患点名称": "双大路X022黎园岭村崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "燕家台村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.526888888", "纬度": "39.9813888966999", "Value": "30" }, { "隐患点名称": "双大路X022_K6向后140至270黎园岭村崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "齐家庄村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.514416669", "纬度": "39.9763055629999", "Value": "30" }, { "隐患点名称": "G109国道K118向后800处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.430888891", "纬度": "39.9863333404", "Value": "30" }, { "隐患点名称": "G109国道K118处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.428305558999", "纬度": "39.980750002", "Value": "30" }, { "隐患点名称": "G109国道K116向后800至K117向后0处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.427166670999", "纬度": "39.9753055572999", "Value": "30" }, { "隐患点名称": "G109国道K116处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.426611114", "纬度": "39.9693888947", "Value": "30" }, { "隐患点名称": "G109国道K115向后700处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.426361114", "纬度": "39.968583338", "Value": "30" }, { "隐患点名称": "G109国道K114向后980至K115向后20处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.430305555", "纬度": "39.9670833424", "Value": "30" }, { "隐患点名称": "G109国道K115处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.430611111", "纬度": "39.9639444462999", "Value": "30" }, { "隐患点名称": "G109国道K113向后720至K114向后0处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.436166666", "纬度": "39.9640000053", "Value": "30" }, { "隐患点名称": "G109国道K113向后490至560处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.438416667", "纬度": "39.9618888907", "Value": "30" }, { "隐患点名称": "G109国道K113向后400处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.442250005999", "纬度": "39.9615277796999", "Value": "30" }, { "隐患点名称": "G109国道K112向后600处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.449750002", "纬度": "39.9591111093999", "Value": "30" }, { "隐患点名称": "G109国道K111向后370至390处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.458750002", "纬度": "39.9601666741", "Value": "30" }, { "隐患点名称": "G109国道K110向后170至K110向后940处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.460527778", "纬度": "39.969083339", "Value": "30" }, { "隐患点名称": "G109国道K105向后800处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "齐家庄村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.495666668", "纬度": "39.9410833381", "Value": "30" }, { "隐患点名称": "G109国道_K104向后970至K105向后60处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "齐家庄村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.498944446", "纬度": "39.9389999956", "Value": "30" }, { "隐患点名称": "G109国道K99向后250处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "杜家庄村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.558083333", "纬度": "39.9245555513", "Value": "30" }, { "隐患点名称": "G109国道K98向后150处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "上清水村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.570944443", "纬度": "39.9251389018999", "Value": "30" }, { "隐患点名称": "黄白环路K0向后500处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.573527783", "纬度": "39.8396388926", "Value": "30" }, { "隐患点名称": "黄白环路K0向后800处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.572361115", "纬度": "39.8416666612", "Value": "30" }, { "隐患点名称": "黄白环路K1向后600处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "八亩堰村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.571388889", "纬度": "39.846166674", "Value": "30" }, { "隐患点名称": "黄白环路K1向后900处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "八亩堰村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.574527778", "纬度": "39.8453611173", "Value": "30" }, { "隐患点名称": "黄白环路K2向后400处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "八亩堰村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.574888888999", "纬度": "39.8471666686", "Value": "30" }, { "隐患点名称": "黄白环路K2向后800处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "八亩堰村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.574527778", "纬度": "39.8503888919999", "Value": "30" }, { "隐患点名称": "黄白环路K5向后100处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄安坨村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.58680556", "纬度": "39.8566111103", "Value": "30" }, { "隐患点名称": "黄白环路K6向后200处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄安坨村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.586194444", "纬度": "39.8614722192", "Value": "30" }, { "隐患点名称": "双黄路K5向后700处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄安坨村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.572361115", "纬度": "39.8674444406999", "Value": "30" }, { "隐患点名称": "双黄路K3向后150至k3向后500处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄安坨村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.562694445", "纬度": "39.8674444406999", "Value": "30" }, { "隐患点名称": "双黄路K1向后900至k2向后900处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄塔村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.561638892", "纬度": "39.8713333346", "Value": "30" }, { "隐患点名称": "张公路K3向后750至k4向后50处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "双涧子村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.523250002", "纬度": "39.8334166742999", "Value": "30" }, { "隐患点名称": "张公路K2向后700至k2向后800处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "双涧子村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.531333335", "纬度": "39.8348055518999", "Value": "30" }, { "隐患点名称": "张公路K2向后250至k2向后400处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "双涧子村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.536666669", "纬度": "39.8364722243999", "Value": "30" }, { "隐患点名称": "张公路K1向后700处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "双涧子村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.540750004", "纬度": "39.8386111109999", "Value": "30" }, { "隐患点名称": "张公路K1向后300处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "双涧子村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.541166667", "纬度": "39.8411111124", "Value": "30" }, { "隐患点名称": "艾峪路K0向后400处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "艾峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.546444446", "纬度": "39.8473055585999", "Value": "30" }, { "隐患点名称": "黄梯路崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄塔村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.538055554", "纬度": "39.8666388839", "Value": "30" }, { "隐患点名称": "龙王路崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "龙王村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.546472225", "纬度": "39.8841944523", "Value": "30" }, { "隐患点名称": "灵山路K6向后330崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.477305554", "纬度": "39.9955833331", "Value": "30" }, { "隐患点名称": "洪水口村西北杨润宝农机修配厂泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水口村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.475611109", "纬度": "39.9951388873", "Value": "30" }, { "隐患点名称": "聚灵峡西北1.5km处崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.46313889", "纬度": "39.9978888966", "Value": "30" }, { "隐患点名称": "小龙门中科院生态研究所活动室后山崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.430833332", "纬度": "39.9678333402", "Value": "30" }, { "隐患点名称": "小龙门村西北侧泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "小龙门村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.464972223999", "纬度": "39.9675833322", "Value": "30" }, { "隐患点名称": "灵山路K4向后700至770崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.479666669", "纬度": "39.9886666648", "Value": "30" }, { "隐患点名称": "灵山路K3向后990至K4向后020崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水口村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.480444446", "纬度": "39.9819444454999", "Value": "30" }, { "隐患点名称": "灵山路K3向后0至K3向后280崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "双塘涧村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.478611112", "纬度": "39.9731944389999", "Value": "30" }, { "隐患点名称": "灵山路K2向后270至K2向后320崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "双塘涧村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.480222225", "纬度": "39.9676388911999", "Value": "30" }, { "隐患点名称": "西岗子沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "雁翅镇", "村名": "田庄村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.89230556", "纬度": "40.0769999995999", "Value": "30" }, { "隐患点名称": "东王平村西北坡崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "王平地区", "村名": "东王平村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.978638891", "纬度": "39.9699444435999", "Value": "30" }, { "隐患点名称": "新兴村东北山泥石流灾害隐患", "区县名称": "门头沟区", "乡镇名称": "斋堂镇", "村名": "新兴村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.687027778", "纬度": "39.9868888855", "Value": "30" }, { "隐患点名称": "洪水峪村南董春亮家屋后不稳定斜坡隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.657249998", "纬度": "39.90144445", "Value": "30" }, { "隐患点名称": "洪水峪村委会对面刘增贵屋后斜坡崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.656888890999", "纬度": "39.9044166692", "Value": "30" }, { "隐患点名称": "杨家沟养鸡场东侧道路不稳定斜坡隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.649750002", "纬度": "39.8917777874", "Value": "30" }, { "隐患点名称": "西宝煤矿下部储煤平台东侧道路不稳定斜坡隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "115.653250001", "纬度": "39.9031666666", "Value": "30" }, { "隐患点名称": "杨家沟村东道路崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "洪水峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.652722225", "纬度": "39.9069166705", "Value": "30" }, { "隐患点名称": "艾峪村北侧山坡崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "艾峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.530916668", "纬度": "39.8448611163", "Value": "30" }, { "隐患点名称": "简昌村西道沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "简昌村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.538361114", "纬度": "39.8518888875999", "Value": "30" }, { "隐患点名称": "简昌路K0向后840至900崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "简昌村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.540888894", "纬度": "39.8523055575999", "Value": "30" }, { "隐患点名称": "简昌路K0向后50至80崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "简昌村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.548500000999", "纬度": "39.8531666733", "Value": "30" }, { "隐患点名称": "百花山路K15向后400至K16向后0崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.571527778999", "纬度": "39.838055566", "Value": "30" }, { "隐患点名称": "百花山路K15向后300至K15向后350崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.570138894", "纬度": "39.8355277777", "Value": "30" }, { "隐患点名称": "百花山路K15至K15向后170崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.569500003", "纬度": "39.8361944444", "Value": "30" }, { "隐患点名称": "百花山路K14向后690至K14向后800崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.567833338", "纬度": "39.8388888948", "Value": "30" }, { "隐患点名称": "百花山路K14向后380至K14向后470崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.568500001", "纬度": "39.8409722223999", "Value": "30" }, { "隐患点名称": "百花山路K13向后620至K13向后670崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.566250004", "纬度": "39.8437500037", "Value": "30" }, { "隐患点名称": "百花山路K13向后300至K13向后400崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.563777782", "纬度": "39.8451666683", "Value": "30" }, { "隐患点名称": "百花山路K12向后370至K13向后170崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.562277779", "纬度": "39.8457500040999", "Value": "30" }, { "隐患点名称": "百花山路K12向后110至K12向后160崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.55569445", "纬度": "39.8476111107", "Value": "30" }, { "隐患点名称": "百花山路K12至K12向后030崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.556666676", "纬度": "39.8468055538999", "Value": "30" }, { "隐患点名称": "百花山路K11向后650至K11向后790崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.558555557999", "纬度": "39.8453611173", "Value": "30" }, { "隐患点名称": "百花山路K10向后130至K10向后550崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.552611115999", "纬度": "39.8471944518", "Value": "30" }, { "隐患点名称": "百花山路K9向后550至K9向后600崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "张家铺村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.54844445", "纬度": "39.8518333286", "Value": "30" }, { "隐患点名称": "百花山路K7向后600至K7向后700崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄塔村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.554833333999", "纬度": "39.8654166720999", "Value": "30" }, { "隐患点名称": "百花山路K6向后100至K6向后950崩塌隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄塔村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.554000005", "纬度": "39.8712777868", "Value": "30" }, { "隐患点名称": "百花山路K5向后800至K5向后850崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "塔河村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.551583339", "纬度": "39.8792500086", "Value": "30" }, { "隐患点名称": "百花山路K3向后100至K3向后200崩塌灾害隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "塔河村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "115.557138894", "纬度": "39.8991666697", "Value": "30" }, { "隐患点名称": "黄安坨花树套泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄安坨村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.581638888", "纬度": "39.8645833432999", "Value": "30" }, { "隐患点名称": "黄安村黄崖沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "黄安村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.565499999", "纬度": "39.8814166709999", "Value": "30" }, { "隐患点名称": "梁家铺村西沟泥石流隐患", "区县名称": "门头沟区", "乡镇名称": "清水镇", "村名": "梁家铺村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "115.558472227", "纬度": "39.9050833322", "Value": "30" }, { "隐患点名称": "梁营子南沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "前火石岭村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.901611112", "纬度": "40.7626666649999", "Value": "30" }, { "隐患点名称": "东岭泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "前火石岭村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.874611109", "纬度": "40.774527777", "Value": "30" }, { "隐患点名称": "鲇鱼塘村东坡不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "黄梁根村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.876833338", "纬度": "40.7430833391999", "Value": "30" }, { "隐患点名称": "西苍峪新村南坡不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "西苍峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.85675", "纬度": "40.7602777816", "Value": "30" }, { "隐患点名称": "下仓峪村委会西侧村民活动广场北侧不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "西苍峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.857194449999", "纬度": "40.7616111115", "Value": "30" }, { "隐患点名称": "下仓峪村9号院后侧不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "西苍峪村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.859500002", "纬度": "40.7610833383999", "Value": "30" }, { "隐患点名称": "小梁西民房后不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "司营子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.842333335", "纬度": "40.7678611166999", "Value": "30" }, { "隐患点名称": "冯家峪镇双树西沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "司营子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.86430556", "纬度": "40.7677499986999", "Value": "30" }, { "隐患点名称": "黄梁沟村西坡北沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "黄梁根村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.865027778", "纬度": "40.7491666674999", "Value": "30" }, { "隐患点名称": "梁营子水泉沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "前火石岭村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.915166669", "纬度": "40.763138894", "Value": "30" }, { "隐患点名称": "梁营子村入口处北侧居民房后不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "前火石岭村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.903666668", "纬度": "40.7692777775", "Value": "30" }, { "隐患点名称": "番字牌关门外南队69号院西侧不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.909305558", "纬度": "40.7216944433999", "Value": "30" }, { "隐患点名称": "关门外54号院后不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.907972224", "纬度": "40.7233611122", "Value": "30" }, { "隐患点名称": "小平台沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.896249998", "纬度": "40.7310000061999", "Value": "30" }, { "隐患点名称": "大平台泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.89580556", "纬度": "40.7317500039999", "Value": "30" }, { "隐患点名称": "番字牌村办事处房后丁阳西沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.8805", "纬度": "40.7324722297", "Value": "30" }, { "隐患点名称": "番字牌村小西沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.8805", "纬度": "40.7341666742999", "Value": "30" }, { "隐患点名称": "三道河桥南道东崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.898000002", "纬度": "40.7375277765", "Value": "30" }, { "隐患点名称": "蚂螂峪寿僧岛处公路西侧崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "冯家峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.879111111", "纬度": "40.6337222307999", "Value": "30" }, { "隐患点名称": "梁子东200M道路两侧崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "石湖根村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.834277783", "纬度": "40.7203611098", "Value": "30" }, { "隐患点名称": "大北沟沟门泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "石湖根村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.83852778", "纬度": "40.7219444512999", "Value": "30" }, { "隐患点名称": "大北沟村181号院后北侧边坡泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "石湖根村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.846222225999", "纬度": "40.7227500081", "Value": "30" }, { "隐患点名称": "罗圈厂沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "石湖根村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.871055557999", "纬度": "40.7296944483999", "Value": "30" }, { "隐患点名称": "X008公路_24Km向后770m处崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "黄粱根村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.868222225", "纬度": "40.7453333325999", "Value": "30" }, { "隐患点名称": "X008公路22Km向后300m处崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.888361110999", "纬度": "40.7377499975", "Value": "30" }, { "隐患点名称": "X008公路20Km向后200m处崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "番字牌村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.901805561", "纬度": "40.7248888947", "Value": "30" }, { "隐患点名称": "白马关村东边不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.90869445", "纬度": "40.7123611159999", "Value": "30" }, { "隐患点名称": "X008公路17Km向后300至430m区间崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.912194449", "纬度": "40.7099166773", "Value": "30" }, { "隐患点名称": "下营村南人工边坡崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "下营村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.904972222", "纬度": "40.6585277802999", "Value": "30" }, { "隐患点名称": "冯家峪镇东X008公路4Km向后400至530m区间崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "冯家峪村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.876777778999", "纬度": "40.6307222284", "Value": "30" }, { "隐患点名称": "北栅子村西北崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.822611112", "纬度": "40.7197500019999", "Value": "30" }, { "隐患点名称": "万车村东坡不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.791027777", "纬度": "40.7402222268", "Value": "30" }, { "隐患点名称": "南石门沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.793527782", "纬度": "40.7366944477", "Value": "30" }, { "隐患点名称": "棒小沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.794972226", "纬度": "40.7367500066999", "Value": "30" }, { "隐患点名称": "大台子村北侧不稳定斜坡", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.798527777", "纬度": "40.7368333376999", "Value": "30" }, { "隐患点名称": "大台子村东南崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.802027777", "纬度": "40.7354166730999", "Value": "30" }, { "隐患点名称": "小道沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.802055556", "纬度": "40.7341944463999", "Value": "30" }, { "隐患点名称": "大道沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.802222222", "纬度": "40.7327777818", "Value": "30" }, { "隐患点名称": "沙盖子沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.807444446", "纬度": "40.7257499955999", "Value": "30" }, { "隐患点名称": "牛圈子村西侧冯东沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.807277776", "纬度": "40.7271111160999", "Value": "30" }, { "隐患点名称": "牛圈子村南侧土质不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.809833333", "纬度": "40.7241388969", "Value": "30" }, { "隐患点名称": "抗峪沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.815916669", "纬度": "40.7234444468999", "Value": "30" }, { "隐患点名称": "三十亩地村西北山沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.821416665", "纬度": "40.7228888981", "Value": "30" }, { "隐患点名称": "北山根沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "北栅子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.82216667", "纬度": "40.7224166653999", "Value": "30" }, { "隐患点名称": "喇嘛栅子村西侧崩塌灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.801861114999", "纬度": "40.7133055664999", "Value": "30" }, { "隐患点名称": "喇嘛栅子村东侧不稳定斜坡", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.80352778", "纬度": "40.7120833359999", "Value": "30" }, { "隐患点名称": "喇嘛栅子村北侧村口不稳定斜坡", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.80688889", "纬度": "40.7235833368999", "Value": "30" }, { "隐患点名称": "南台村阳光浴室后方不稳定斜坡", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.798305556", "纬度": "40.7153333350999", "Value": "30" }, { "隐患点名称": "对台子村西沟_西南沟沟口泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.789194446", "纬度": "40.7045277766999", "Value": "30" }, { "隐患点名称": "水泉沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.792055555", "纬度": "40.7061944455", "Value": "30" }, { "隐患点名称": "南台子村东北150m处不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.79427778", "纬度": "40.7082777768", "Value": "30" }, { "隐患点名称": "南台子村35号院南不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.797916666", "纬度": "40.7123333326999", "Value": "30" }, { "隐患点名称": "南台子村杨木洼沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "南台子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.80366667", "纬度": "40.7213333285999", "Value": "30" }, { "隐患点名称": "南化岭与北化岭交界口处崩塌隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.904277783", "纬度": "40.7101666704", "Value": "30" }, { "隐患点名称": "南化岭南北化岭冲沟沟口交汇处泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.90494445", "纬度": "40.7107777781999", "Value": "30" }, { "隐患点名称": "大峪沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.906444445", "纬度": "40.711722225", "Value": "30" }, { "隐患点名称": "白马关村南小峪沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.908083338", "纬度": "40.7142222263", "Value": "30" }, { "隐患点名称": "白马关村东小张火岭沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.911138892", "纬度": "40.7152222170999", "Value": "30" }, { "隐患点名称": "白马关村村委会东侧崩塌灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.909777783", "纬度": "40.7111388892", "Value": "30" }, { "隐患点名称": "X008_15KM向后800M东侧崩塌灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "崩塌", "灾害等级": "小型", "RuleID": "3", "经度": "116.909027778", "纬度": "40.7076944411", "Value": "30" }, { "隐患点名称": "梨树沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "白马关村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.915499999999", "纬度": "40.7034999951999", "Value": "30" }, { "隐患点名称": "东仓峪泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "下营村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.914527781", "纬度": "40.6932222247", "Value": "30" }, { "隐患点名称": "响水峪沟里沟口滑坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "下营村", "灾害类型": "滑坡", "灾害等级": "小型", "RuleID": "6", "经度": "116.934805557", "纬度": "40.6932499967999", "Value": "30" }, { "隐患点名称": "北山根村东北侧不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "下营村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "116.936250001", "纬度": "40.6875833422", "Value": "30" }, { "隐患点名称": "北山根南坡泥石流灾害点", "区县名称": "密云县", "乡镇名称": "冯家峪镇", "村名": "下营村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "116.937583338", "纬度": "40.6859166734", "Value": "30" }, { "隐患点名称": "半城子后沟子沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "117.02980556", "纬度": "40.6229444443999", "Value": "30" }, { "隐患点名称": "半城子小学后沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "117.034000006", "纬度": "40.6260277777999", "Value": "30" }, { "隐患点名称": "半城子村李广文屋后不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "117.030472226", "纬度": "40.6226666756", "Value": "30" }, { "隐患点名称": "召峪沟上游不稳定斜坡", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "117.024222225", "纬度": "40.617138885", "Value": "30" }, { "隐患点名称": "召峪沟泥石流灾害点", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "117.028722223", "纬度": "40.6143611185", "Value": "30" }, { "隐患点名称": "召峪村高振德屋后不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "117.02736111", "纬度": "40.6136388927999", "Value": "30" }, { "隐患点名称": "团山子村朱先辉屋后不稳定斜坡隐患点", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "不稳定斜坡", "灾害等级": "小型", "RuleID": "1", "经度": "117.024361115", "纬度": "40.6137499957999", "Value": "30" }, { "隐患点名称": "团山子后沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "117.023333337", "纬度": "40.6129444390999", "Value": "30" }, { "隐患点名称": "团山子西沟泥石流隐患点", "区县名称": "密云县", "乡镇名称": "不老屯镇", "村名": "半城子村", "灾害类型": "泥石流", "灾害等级": "小型", "RuleID": "4", "经度": "117.021055557", "纬度": "40.6106111146999", "Value": "30" }], "type": "coordinates" };
	exports.default = disaster;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "beijingDisasterData.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GlobalSeismic = function (_Component) {
	    _inherits(GlobalSeismic, _Component);

	    function GlobalSeismic(props) {
	        _classCallCheck(this, GlobalSeismic);

	        var _this = _possibleConstructorReturn(this, (GlobalSeismic.__proto__ || Object.getPrototypeOf(GlobalSeismic)).call(this, props));

	        _this.state = {
	            currentObj: []
	        };
	        return _this;
	    }

	    _createClass(GlobalSeismic, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;

	            new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	                layer: 'beyondb:linyin_0816_world_deepColor',
	                style: '',
	                format: 'image/png',
	                tileMatrixSetID: 'EPSG:4326',
	                tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	                maximumLevel: 19,
	                projection: 'EPSG:4326'
	            }).addTo(earth.layers);
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(116.16, 40.11, 12500000.0)
	            });
	            //添加全球地震数据
	            this.state.currentObj = new GeoVis.GeoJson('http://192.168.4.229:28080/beyonserver/beyondb/wms?service=WMS&version=1.1.0&request=GetMap&layers=beyondb:vt_global_seismic_data_shp_global_seismic_data_v01&styles=&bbox=-179.115479,-89.019896,179.268278,89.108056&width=768&height=443&srs=EPSG:4326&format=application%2Fjson%3Btype%3Dgeojson', {
	                markerSize: 5,
	                markerColor: GeoVis.Color.GREENYELLOW
	            });
	            this.state.currentObj.addTo(window.earth);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return GlobalSeismic;
	}(_react.Component);

	exports.default = GlobalSeismic;

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GlobalSeismic = function (_Component) {
		_inherits(GlobalSeismic, _Component);

		function GlobalSeismic(props) {
			_classCallCheck(this, GlobalSeismic);

			var _this = _possibleConstructorReturn(this, (GlobalSeismic.__proto__ || Object.getPrototypeOf(GlobalSeismic)).call(this, props));

			_this.state = {
				currentObj: ''
			};
			return _this;
		}

		_createClass(GlobalSeismic, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
				//视角跳转至中国
				window.earth.camera.flyTo({
					destination: Engine.Cartesian3.fromDegrees(116.16, 36.51, 10000000.0)
				});
				//添加全球地震数据
				this.state.currentObj = new GeoVis.GeoJson('http://192.168.4.229:28080/beyonserver/beyondb/wms?service=WMS&version=1.1.0&request=GetMap&layers=beyondb:vt_education_collage_20160810_shp_education_collage_20160810_v01&styles=&bbox=76.001549,18.289904,131.166061,50.383831&width=768&height=446&srs=EPSG:4326&format=application%2Fjson%3Btype%3Dgeojson', {
					markerSize: 9,
					markerColor: GeoVis.Color.PURPLE
				});
				this.state.currentObj.addTo(window.earth);
			}
		}, {
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				//删除
				this.state.currentObj.removeFrom(window.earth);
			}
		}, {
			key: 'render',
			value: function render() {
				return _react2.default.createElement('div', null);
			}
		}]);

		return GlobalSeismic;
	}(_react.Component);

	exports.default = GlobalSeismic;

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GlobalSeismic = function (_Component) {
	  _inherits(GlobalSeismic, _Component);

	  function GlobalSeismic(props) {
	    _classCallCheck(this, GlobalSeismic);

	    var _this = _possibleConstructorReturn(this, (GlobalSeismic.__proto__ || Object.getPrototypeOf(GlobalSeismic)).call(this, props));

	    _this.state = {
	      currentObj: ''
	    };
	    return _this;
	  }

	  _createClass(GlobalSeismic, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      //视角跳转至中国
	      window.earth.camera.flyTo({
	        destination: Engine.Cartesian3.fromDegrees(117.56, 39.51, 350000.0)
	      });
	      new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	        layer: 'beyondb:linyin_0816_world_deepColor',
	        style: '',
	        format: 'image/png',
	        tileMatrixSetID: 'EPSG:4326',
	        tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	        maximumLevel: 19,
	        projection: 'EPSG:4326'
	      }).addTo(earth.layers);
	      //添加全球地震数据
	      this.state.currentObj = new GeoVis.GeoJson('http://192.168.4.229:28080/beyonserver/beyondb/wms?service=WMS&version=1.1.0&request=GetMap&layers=beyondb:vt_education_middle_school_20160810_shp_education_middle_school_20160810_v01&styles=&bbox=116.716667,38.566667,118.316667,40.25&width=768&height=449&srs=EPSG:4326&format=application%2Fjson%3Btype%3Dgeojson', {
	        markerSize: 10,
	        markerColor: GeoVis.Color.fromCssString('#021f9b')
	      });
	      this.state.currentObj.addTo(window.earth);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      //删除
	      this.state.currentObj.removeFrom(window.earth);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement('div', null);
	    }
	  }]);

	  return GlobalSeismic;
	}(_react.Component);

	exports.default = GlobalSeismic;

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GlobalSeismic = function (_Component) {
	    _inherits(GlobalSeismic, _Component);

	    function GlobalSeismic(props) {
	        _classCallCheck(this, GlobalSeismic);

	        var _this = _possibleConstructorReturn(this, (GlobalSeismic.__proto__ || Object.getPrototypeOf(GlobalSeismic)).call(this, props));

	        _this.state = {
	            currentObj: ''
	        };
	        return _this;
	    }

	    _createClass(GlobalSeismic, [{
	        key: 'initImg',
	        value: function initImg(id, callback) {
	            fetch('http://192.168.48.3:8690/remotedatasource/' + id, {
	                method: "POST"
	            }).then(function (res) {
	                if (res.status !== 200) {
	                    console.log(res.status);return;
	                }
	                res.json().then(function (data) {

	                    callback(data);
	                });
	            }).catch(function (err) {
	                console.log(err);
	            });
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.initImg(4, function (data) {
	                var a = data.remotedatasource.url;
	                var layer = new GeoVis.TMSLayer(a, {
	                    projection: 'EPSG:4326'
	                }).addTo(window.earth.layers);
	            });
	            //添加全球地震数据
	            this.state.currentObj = new GeoVis.GeoJson('http://192.168.4.229:28080/beyonserver/beyondb/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=beyondb:vt_education_primary_school_20160810_education_primary_school_20160810_v01&maxFeatures=10000&outputFormat=application%2Fjson', {
	                markerSize: 3,
	                markerColor: GeoVis.Color.GREEN
	            });
	            this.state.currentObj.addTo(window.earth);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return GlobalSeismic;
	}(_react.Component);

	exports.default = GlobalSeismic;

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GlobalSeismic = function (_Component) {
	  _inherits(GlobalSeismic, _Component);

	  function GlobalSeismic(props) {
	    _classCallCheck(this, GlobalSeismic);

	    var _this = _possibleConstructorReturn(this, (GlobalSeismic.__proto__ || Object.getPrototypeOf(GlobalSeismic)).call(this, props));

	    _this.state = {
	      currentObj: ''
	    };
	    return _this;
	  }

	  _createClass(GlobalSeismic, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      //视角跳转至中国
	      window.earth.camera.flyTo({
	        destination: Engine.Cartesian3.fromDegrees(116.16, 35.51, 7000000.0)
	      });
	      new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	        layer: 'beyondb:linyin_0816_world_deepColor',
	        style: '',
	        format: 'image/png',
	        tileMatrixSetID: 'EPSG:4326',
	        tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	        maximumLevel: 19,
	        projection: 'EPSG:4326'
	      }).addTo(earth.layers);
	      //添加全球地震数据
	      this.state.currentObj = new GeoVis.GeoJson('http://192.168.4.229:28080/beyonserver/gwc/service?service=WFS&version=1.0.0&request=GetFeature&typeName=beyondb:vt_education_kindergarten_20160810_shp_education_kindergarten_20160810_v01&maxFeatures=3500&outputFormat=application%2Fjson', {
	        markerSize: 6,
	        markerColor: GeoVis.Color.fromCssString('#353f42')
	      });
	      this.state.currentObj.addTo(window.earth);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      //删除
	      this.state.currentObj.removeFrom(window.earth);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement('div', null);
	    }
	  }]);

	  return GlobalSeismic;
	}(_react.Component);

	exports.default = GlobalSeismic;

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GlobalSeismic = function (_Component) {
		_inherits(GlobalSeismic, _Component);

		function GlobalSeismic(props) {
			_classCallCheck(this, GlobalSeismic);

			var _this = _possibleConstructorReturn(this, (GlobalSeismic.__proto__ || Object.getPrototypeOf(GlobalSeismic)).call(this, props));

			_this.state = {
				currentObj: ''
			};
			return _this;
		}

		_createClass(GlobalSeismic, [{
			key: 'initImg',
			value: function initImg(id, callback) {
				fetch('http://192.168.48.3:8690/remotedatasource/' + id, {
					method: "POST"
				}).then(function (res) {
					if (res.status !== 200) {
						console.log(res.status);return;
					}
					res.json().then(function (data) {

						callback(data);
					});
				}).catch(function (err) {
					console.log(err);
				});
			}
		}, {
			key: 'componentDidMount',
			value: function componentDidMount() {

				// //添加全球地震数据
				// this.state.currentObj = new GeoVis.GeoJson('http://192.168.4.229:28080/beyonserver/beyondb/wms?service=WMS&version=1.1.0&request=GetMap&layers=beyondb:vt_education_technical_school_20160810_shp_education_technical_school_20160810_v01&styles=&bbox=115,25,124.8,38&width=768&height=450&srs=EPSG:4326&format=application%2Fjson%3Btype%3Dgeojson', 
				// 	{
				// 		markerSize: 6,
				// 		markerColor:GeoVis.Color.GOLD
				// 	});
				// this.state.currentObj.addTo(window.earth);

				//先变为3D
				window.earth.scene.mode = Engine.SceneMode.SCENE3D;
				//视角跳转至中国
				window.earth.camera.flyTo({
					destination: Engine.Cartesian3.fromDegrees(108.16, 35.51, 7000000.0)
				});
				this.initImg(8, function (data) {
					var a = data.remotedatasource.url;
					a = a.replace(/&amp;/g, '&');
					a = a.replace('[1234]', '2');

					var layer = new GeoVis.TileLayer(a, { projection: 'EPSG:900913' }).addTo(window.earth.layers);
				});

				this.state.currentObj = new GeoVis.MarkerCluster('http://192.168.4.229:28080/beyonserver/beyondb/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=beyondb:vt_education_technical_school_20160810_shp_education_technical_school_20160810_v01&maxFeatures=3000&outputFormat=application%2Fjson', {
					pixelRange: 56,
					minClusterSize: 6,
					markerIcon: ['./src/assets/juhe.png', './src/assets/juhe.png', './src/assets/juhe.png', './src/assets/juhe.png', './src/assets/juhe.png', './src/assets/juhe.png', './src/assets/juhe.png'],
					cluster: {
						fontColor: '#fefefe',
						markerSize: 42
					},
					marker: {
						iconUrl: './src/assets/图层-10-拷贝-2.png',
						width: 36,
						height: 30
					}
				});
				this.state.currentObj.addTo(window.earth);
			}
		}, {
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				//删除
				this.state.currentObj.removeFrom(window.earth);
			}
		}, {
			key: 'render',
			value: function render() {
				return _react2.default.createElement('div', null);
			}
		}]);

		return GlobalSeismic;
	}(_react.Component);

	exports.default = GlobalSeismic;

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GlobalSeismic = function (_Component) {
	    _inherits(GlobalSeismic, _Component);

	    function GlobalSeismic(props) {
	        _classCallCheck(this, GlobalSeismic);

	        var _this = _possibleConstructorReturn(this, (GlobalSeismic.__proto__ || Object.getPrototypeOf(GlobalSeismic)).call(this, props));

	        _this.state = {
	            currentObj1: '',
	            currentObj2: ''
	        };
	        return _this;
	    }

	    _createClass(GlobalSeismic, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(116.16, 40.51, 400000.0)
	            });
	            new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	                layer: 'beyondb:linyin_0816_world_deepColor',
	                style: '',
	                format: 'image/png',
	                tileMatrixSetID: 'EPSG:4326',
	                tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	                maximumLevel: 19,
	                projection: 'EPSG:4326'
	            }).addTo(earth.layers);
	            // console.log(Engine.Cartographic.fromCartesian(this._earth.camera.position);)
	            this.state.currentObj1 = new GeoVis.TileLayer('https://tilelayer.geoq.cn/database/customer/layergroup/379572ce134e4b49e238ac440e27e945/{z}/{x}/{y}@2x.png', {
	                projection: 'EPSG:900913'
	            }).addTo(window.earth.layers);

	            this.state.currentObj2 = new GeoVis.TileLayer('http://tilelayer.geoq.cn/database/customer/layergroup/08822d75c3cd8d99440b40fc06cd123b/{z}/{x}/{y}@2x.png', {
	                projection: 'EPSG:900913'
	            }).addTo(window.earth.layers);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj1.removeFrom(window.earth.layers);
	            this.state.currentObj2.removeFrom(window.earth.layers);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return GlobalSeismic;
	}(_react.Component);

	exports.default = GlobalSeismic;

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	    return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () {
	    function defineProperties(target, props) {
	        for (var i = 0; i < props.length; i++) {
	            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	        }
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	}();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	}

	function _possibleConstructorReturn(self, call) {
	    if (!self) {
	        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	    }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	    if (typeof superClass !== "function" && superClass !== null) {
	        throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var GeoVis = window.GeoVis;
	var Engine = window.Engine;
	var random = function random(max) {
	    return Math.floor((Math.random() < 0.5 ? -1 : 1) * Math.random() * max * 100) / 100;
	};
	var rand2 = function rand2(min, max) {
	    return Math.floor((Math.random() * (max - min) + min) * 100) / 100;
	};

	var Karpersky = function (_Component) {
	    _inherits(Karpersky, _Component);

	    function Karpersky() {
	        _classCallCheck(this, Karpersky);

	        return _possibleConstructorReturn(this, (Karpersky.__proto__ || Object.getPrototypeOf(Karpersky)).apply(this, arguments));
	    }

	    _createClass(Karpersky, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.state = {
	                needUpdatePoints: true
	            };
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            this.earth = window.earth;
	            this.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            this.layer = new GeoVis.TileLayer('./assets/dark/{z}/{x}/{y}.png', {
	                projection: 'EPSG:900913'
	            }).addTo(this.earth.layers);
	            this.geojson = new GeoVis.GeoJson('./src/common/countries.geo.json', {
	                outline: true
	                // fill: true,
	            }).addTo(this.earth);
	            // this.geojson.on('finish', (geojson) => {
	            //     geojson.target.features.polygons.forEach((feature) => {
	            //         feature.fillColor = GeoVis.Color.fromCssString(Math.random() < 0.5 ? '#111' : '#222');
	            //         feature.extrudedHeight = 1e4;
	            //     });
	            // });
	            this.curvers = new Map();
	            this.lines = new Map();

	            this.points = new Map();
	            this.shines = new Map();
	            this.initData();
	            this.loadData();
	            this.inv = window.setInterval(function () {
	                _this2.lines.forEach(function (value, key) {
	                    var length = _this2.curvers.get(key).positions.length - value.line.colors.length;
	                    value.lineIndex = value.lineIndex < length ? value.lineIndex + 1 : 0;
	                    if (value.lineIndex === Math.floor(length / 2)) {
	                        value.start.removeFrom(_this2.earth.features);
	                        value.end.addTo(_this2.earth.features);
	                    } else if (value.lineIndex === 0) {
	                        value.start.addTo(_this2.earth.features);
	                        value.end.removeFrom(_this2.earth.features);
	                    }
	                    value.line.positions = _this2.curvers.get(key).positions.slice(value.lineIndex, value.line.colors.length + value.lineIndex);
	                });
	            }, 10);
	            this.animate();
	            // points
	            this.loadPoints();
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            this.clearOnce(this.inv);
	            window.clearInterval(this.allInv);
	            this.setState({ needUpdatePoints: false });
	            this.removePoints();
	            this.layer.removeFrom(this.earth.layers);
	            this.geojson.removeFrom(this.earth);
	            this.earth.scene.mode = Engine.SceneMode.SCENE2D;
	            this.earth = undefined;
	        }
	    }, {
	        key: 'fetchData',
	        value: function fetchData(url, callback) {
	            fetch(url).then(function (response) {
	                // console.log(response);
	                response.json().then(function (data) {
	                    callback(data);
	                });
	            }).catch(function (err) {
	                console.error(err);
	            });
	        }
	    }, {
	        key: 'initData',
	        value: function initData() {
	            var randomLength = Math.floor(Math.random() * 20 + 30);
	            for (var i = 0; i < randomLength; i++) {
	                var start = void 0,
	                    end = void 0,
	                    color = void 0;
	                if (i < randomLength / 4) {
	                    start = [random(180), random(50), 1000];
	                    end = [random(180), random(50), 1000];
	                    color = GeoVis.Color.fromCssString("#D81B60");
	                } else {
	                    start = [-rand2(80, 120), rand2(30, 40), 1000];
	                    end = [Math.abs(random(180)), Math.abs(random(50)), 1000];
	                    color = GeoVis.Color.fromCssString("#29b2cf");
	                }
	                var curve = new GeoVis.BezierCurve({
	                    start: start,
	                    end: end,
	                    curve: 0.5,
	                    fit: 3
	                });
	                curve.color = color;
	                this.curvers.set(i, curve);
	            }
	        }
	    }, {
	        key: 'initpoints',
	        value: function initpoints(min, max) {
	            var randomPoints = Math.floor(Math.random() * (max - min) + min);
	            for (var i = 0; i < randomPoints; i++) {
	                var point = [random(130), random(40), 1000];
	                var color = Engine.Color.fromRandom({ minimumAlpha: 0.4 });
	                this.points.set(i, { point: point, color: color });
	            }
	        }
	    }, {
	        key: 'loadPoints',
	        value: function loadPoints() {
	            var _this3 = this;

	            if (this.pointInv) {
	                this.shines.forEach(function (value) {
	                    value.removeFrom(_this3.earth.features);
	                });
	                this.points.clear();
	                this.shines.clear();
	            }
	            var min = Math.floor(Math.random() * 10 + 20);
	            var max = Math.floor(Math.random() * 150 + 100);
	            this.initpoints(min, max);
	            var count = 0;
	            this.pointInv = window.setInterval(function () {
	                // console.log(count);
	                var point = new GeoVis.Point(_this3.points.get(count).point, {
	                    color: _this3.points.get(count).color,
	                    pixelSize: 4
	                }).addTo(_this3.earth.features);
	                _this3.shines.set(count, point);
	                setTimeout(function () {
	                    point.removeFrom(_this3.earth.features);
	                }, 1000);
	                count++;
	                if (count >= _this3.points.size) {
	                    window.clearInterval(_this3.pointInv);
	                    if (_this3.state.needUpdatePoints === true) _this3.loadPoints();
	                }
	            }, 50);
	        }
	    }, {
	        key: 'removePoints',
	        value: function removePoints() {
	            var _this4 = this;

	            window.clearInterval(this.pointInv);
	            this.shines.forEach(function (value) {
	                value.removeFrom(_this4.earth.features);
	            });
	            this.points.clear();
	            this.shines.clear();
	        }
	    }, {
	        key: 'loadData',
	        value: function loadData() {
	            var _this5 = this;

	            this.curvers.forEach(function (value, key) {
	                var colorLength = Math.floor(value.positions.length * 0.4);
	                var colors = new Array(colorLength);
	                for (var i = 0; i < colorLength; i++) {
	                    var alpha = i < colorLength / 2 ? i / colorLength : (colorLength - i) / colorLength;
	                    colors[i] = value.color.withAlpha(alpha * 2);
	                }
	                colors.push(value.color.withAlpha(0.0));
	                var line = new GeoVis.Polyline(value.positions.slice(0, colors.length), {
	                    colors: colors,
	                    vertexColor: true,
	                    followSurface: true,
	                    width: 2.0
	                }).addTo(_this5.earth.features);
	                var point = new GeoVis.Point(value.positions[0], {
	                    color: value.color.withAlpha(0.6),
	                    pixelSize: 4
	                }).addTo(_this5.earth.features);
	                var endpoint = new GeoVis.Point(value.positions[value.positions.length - 1], {
	                    color: value.color.withAlpha(0.6),
	                    pixelSize: 4
	                });
	                _this5.lines.set(key, {
	                    line: line,
	                    start: point,
	                    end: endpoint,
	                    lineIndex: 0
	                });
	            });
	        }
	    }, {
	        key: 'animate',
	        value: function animate() {
	            var _this6 = this;

	            this.allInv = window.setInterval(function () {
	                _this6.clearOnce(_this6.inv);
	                _this6.initData();
	                _this6.loadData();
	                _this6.inv = window.setInterval(function () {
	                    _this6.lines.forEach(function (value, key) {
	                        var length = _this6.curvers.get(key).positions.length - value.line.colors.length;
	                        value.lineIndex = value.lineIndex < length ? value.lineIndex + 1 : 0;
	                        if (value.lineIndex === Math.floor(length / 2)) {
	                            value.start.removeFrom(_this6.earth.features);
	                            value.end.addTo(_this6.earth.features);
	                        } else if (value.lineIndex === 0) {
	                            value.start.addTo(_this6.earth.features);
	                            value.end.removeFrom(_this6.earth.features);
	                        }
	                        value.line.positions = _this6.curvers.get(key).positions.slice(value.lineIndex, value.line.colors.length + value.lineIndex);
	                    });
	                }, 10);
	            }, 3000);
	        }
	    }, {
	        key: 'clearOnce',
	        value: function clearOnce(invt) {
	            var _this7 = this;

	            this.lines.forEach(function (value) {
	                value.line.removeFrom(_this7.earth.features);
	                value.start.removeFrom(_this7.earth.features);
	                value.end.removeFrom(_this7.earth.features);
	            });
	            this.curvers.clear();
	            this.lines.clear();
	            window.clearInterval(invt);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return Karpersky;
	}(_react.Component);

	exports.default = Karpersky;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "Karpersky.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Chengdu = function (_Component) {
	    _inherits(Chengdu, _Component);

	    function Chengdu(props) {
	        _classCallCheck(this, Chengdu);

	        var _this = _possibleConstructorReturn(this, (Chengdu.__proto__ || Object.getPrototypeOf(Chengdu)).call(this, props));

	        _this.state = {
	            currentObj: ''
	        };
	        return _this;
	    }

	    _createClass(Chengdu, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            //视角跳转至成都
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(104.06, 30.67, 7000.0)
	            });
	            new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	                layer: 'beyondb:linyin_0816_world_black',
	                style: '',
	                format: 'image/png',
	                tileMatrixSetID: 'EPSG:4326',
	                tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	                maximumLevel: 19,
	                projection: 'EPSG:4326'
	            }).addTo(earth.layers);

	            this.state.currentObj = new GeoVis.TileLayer('https://tilelayer.geoq.cn/database/customer/layergroup/5c4767e3af7b0576195759e03168a7c6/{z}/{x}/{y}@2x.png', {
	                projection: 'EPSG:900913'
	            });
	            this.state.currentObj.addTo(earth.layers);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth.layers);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return Chengdu;
	}(_react.Component);

	exports.default = Chengdu;

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _volcanojson = __webpack_require__(267);

	var _volcanojson2 = _interopRequireDefault(_volcanojson);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Volcano = function (_Component) {
	    _inherits(Volcano, _Component);

	    function Volcano(props) {
	        _classCallCheck(this, Volcano);

	        var _this = _possibleConstructorReturn(this, (Volcano.__proto__ || Object.getPrototypeOf(Volcano)).call(this, props));

	        _this.state = {
	            currentObj: []
	        };
	        return _this;
	    }

	    _createClass(Volcano, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            //删除
	            this.state.currentObj.map(function (val, index) {
	                val.removeFrom(window.earth.features);
	            });
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var re = this;
	            //视角跳转至全球
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(54.06, 30.67, 20000000.0)
	            });
	            for (var i = 0; i < _volcanojson2.default.rows.length; i++) {
	                var markerpoint = new GeoVis.PointMarker([_volcanojson2.default.rows[i].经度, _volcanojson2.default.rows[i].纬度, 0], { id: 'marker_' + i, color: GeoVis.Color.RED }).addTo(window.earth.features);
	                markerpoint.bindPopup("<b>" + '参考位置：' + _volcanojson2.default.rows[i].参考位置 + "</b><br>" + "</b><br>" + "<b>" + '发震时刻：' + _volcanojson2.default.rows[i].发震时刻 + "</b><br>", {
	                    maxWidth: 120
	                });
	                re.state.currentObj.push(markerpoint);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', null);
	        }
	    }]);

	    return Volcano;
	}(_react.Component);

	exports.default = Volcano;

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var volcano = {
	    "fields": ["震级(M)", "纬度(°)", "经度(°)", "深度(千米)", "参考位置", "发震时刻", "死亡人数", "经济损失"],
	    "rows": [{
	        "震级(M)": "7.6",
	        "纬度": "16.7",
	        "经度": "-98.2",
	        "深度(千米)": "20",
	        "参考位置": "墨西哥",
	        "发震时刻": "2012/3/21",
	        "死亡人数": "此次地震首都墨西哥城震感明显，但尚无人员伤亡报告。",
	        "经济损失": "",
	        "geoq_timestamp": "20120321000000"
	    }, {
	        "震级(M)": "8.6",
	        "纬度": "2.3",
	        "经度": "93.1",
	        "深度(千米)": "20",
	        "参考位置": "苏门答腊北部附近海域",
	        "发震时刻": "2012/4/11",
	        "死亡人数": "已经造成苏门答腊岛北端亚齐省５人死亡、４人受伤，还有一座桥梁垮塌。",
	        "经济损失": "",
	        "geoq_timestamp": "20120411000000"
	    }, {
	        "震级(M)": "8.2",
	        "纬度": "0.8",
	        "经度": "92.4",
	        "深度(千米)": "20",
	        "参考位置": "苏门答腊北部附近海域",
	        "发震时刻": "2012/4/11",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20120411000000"
	    }, {
	        "震级(M)": "7.6",
	        "纬度": "10.8",
	        "经度": "126.8",
	        "深度(千米)": "30",
	        "参考位置": "菲律宾群岛附近海域",
	        "发震时刻": "2012/8/31",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20120831000000"
	    }, {
	        "震级(M)": "7.9",
	        "纬度": "10",
	        "经度": "-85.5",
	        "深度(千米)": "20",
	        "参考位置": "哥斯达黎加",
	        "发震时刻": "2012/9/5",
	        "死亡人数": "哥斯达黎加已造成2人死亡，数十人受伤。",
	        "经济损失": "",
	        "geoq_timestamp": "20120905000000"
	    }, {
	        "震级(M)": "7.7",
	        "纬度": "52.8",
	        "经度": "-131.9",
	        "深度(千米)": "20",
	        "参考位置": "夏洛特皇后群岛地区",
	        "发震时刻": "2012/10/28",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20121028000000"
	    }, {
	        "震级(M)": "7.8",
	        "纬度": "55.3",
	        "经度": "-134.7",
	        "深度(千米)": "10",
	        "参考位置": "阿拉斯加东南部海域",
	        "发震时刻": "2013/1/5",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20130105000000"
	    }, {
	        "震级(M)": "7.5",
	        "纬度": "-10.8",
	        "经度": "165",
	        "深度(千米)": "10",
	        "参考位置": "圣克鲁斯群岛",
	        "发震时刻": "2013/2/6",
	        "死亡人数": "造成5人死亡，60多间房屋被毁。",
	        "经济损失": "",
	        "geoq_timestamp": "20130206000000"
	    }, {
	        "震级(M)": "7.6",
	        "纬度": "-11.2",
	        "经度": "165",
	        "深度(千米)": "10",
	        "参考位置": "圣克鲁斯群岛",
	        "发震时刻": "2013/2/6",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20130206000000"
	    }, {
	        "震级(M)": "7.7",
	        "纬度": "28.1",
	        "经度": "62.1",
	        "深度(千米)": "75",
	        "参考位置": "伊朗、巴基斯坦交界地区",
	        "发震时刻": "2013/4/16",
	        "死亡人数": "造成至少37人死亡，800多人受伤",
	        "经济损失": "",
	        "geoq_timestamp": "20130416000000"
	    }, {
	        "震级(M)": "7.6",
	        "纬度": "-23",
	        "经度": "-177.1",
	        "深度(千米)": "150",
	        "参考位置": "汤加以南海域",
	        "发震时刻": "2013/5/24",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20130524000000"
	    }, {
	        "震级(M)": "8.2",
	        "纬度": "54.9",
	        "经度": "153.3",
	        "深度(千米)": "600",
	        "参考位置": "鄂霍次克海",
	        "发震时刻": "2013/5/24",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20130524000000"
	    }, {
	        "震级(M)": "7.8",
	        "纬度": "27",
	        "经度": "65.5",
	        "深度(千米)": "40",
	        "参考位置": "巴基斯坦",
	        "发震时刻": "2013/9/24",
	        "死亡人数": "已导致该国至少220人死亡、1200人受伤",
	        "经济损失": "",
	        "geoq_timestamp": "20130924000000"
	    }, {
	        "震级(M)": "7.8",
	        "纬度": "-60.3",
	        "经度": "-46.4",
	        "深度(千米)": "10",
	        "参考位置": "斯科舍海",
	        "发震时刻": "2013/11/17",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20131117000000"
	    }, {
	        "震级(M)": "8.1",
	        "纬度": "-19.6",
	        "经度": "-70.7",
	        "深度(千米)": "10",
	        "参考位置": "智利北部沿岸近海",
	        "发震时刻": "2014/4/2",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20140402000000"
	    }, {
	        "震级(M)": "7.8",
	        "纬度": "-20.4",
	        "经度": "-70.1",
	        "深度(千米)": "20",
	        "参考位置": "智利北部沿岸近海",
	        "发震时刻": "2014/4/3",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20140403000000"
	    }, {
	        "震级(M)": "7.8",
	        "纬度": "-11.3",
	        "经度": "162.2",
	        "深度(千米)": "30",
	        "参考位置": "所罗门群岛附近海域",
	        "发震时刻": "2014/4/13",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20140413000000"
	    }, {
	        "震级(M)": "7.5",
	        "纬度": "-11.5",
	        "经度": "162.1",
	        "深度(千米)": "30",
	        "参考位置": "所罗门群岛附近海域",
	        "发震时刻": "2014/4/13",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20140413000000"
	    }, {
	        "震级(M)": "7.6",
	        "纬度": "-6.7",
	        "经度": "154.9",
	        "深度(千米)": "40",
	        "参考位置": "巴布亚新几内亚",
	        "发震时刻": "2014/4/19",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20140419000000"
	    }, {
	        "震级(M)": "7.9",
	        "纬度": "51.8",
	        "经度": "178.8",
	        "深度(千米)": "100",
	        "参考位置": "拉特群岛",
	        "发震时刻": "2014/6/24",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20140624000000"
	    }, {
	        "震级(M)": "8.1",
	        "纬度": "28.2",
	        "经度": "84.7",
	        "深度(千米)": "20",
	        "参考位置": "尼泊尔",
	        "发震时刻": "2015/4/25",
	        "死亡人数": "造成8442人死亡，超过10万人受伤",
	        "经济损失": "",
	        "geoq_timestamp": "20150425000000"
	    }, {
	        "震级(M)": "7.5",
	        "纬度": "27.8",
	        "经度": "86.1",
	        "深度(千米)": "10",
	        "参考位置": "尼泊尔",
	        "发震时刻": "2015/5/12",
	        "死亡人数": "造成141人死亡。",
	        "经济损失": "",
	        "geoq_timestamp": "20150512000000"
	    }, {
	        "震级(M)": "8",
	        "纬度": "27.9",
	        "经度": "140.5",
	        "深度(千米)": "690",
	        "参考位置": "日本小笠原群岛地区",
	        "发震时刻": "2015/5/30",
	        "死亡人数": "",
	        "经济损失": "",
	        "geoq_timestamp": "20150530000000"
	    }, {
	        "震级(M)": "8.2",
	        "纬度": "-31.6",
	        "经度": "-71.6",
	        "深度(千米)": "20",
	        "参考位置": "智利中部沿岸近海",
	        "发震时刻": "2015/9/17",
	        "死亡人数": "已造成3人死亡，至少20人受伤",
	        "经济损失": "",
	        "geoq_timestamp": "20150917000000"
	    }, {
	        "震级(M)": "7.8",
	        "纬度": "36.5",
	        "经度": "70.8",
	        "深度(千米)": "210",
	        "参考位置": "兴都库什地区",
	        "发震时刻": "2015/10/26",
	        "死亡人数": "目前地震已造成阿富汗境内至少34人死亡，巴基斯坦境内至少125人死亡",
	        "经济损失": "",
	        "geoq_timestamp": "20151026000000"
	    }],
	    "type": "coordinates",
	    "times": ["2012/3/21", "2012/4/11", "2012/8/31", "2012/9/5", "2012/10/28", "2013/1/5", "2013/2/6", "2013/4/16", "2013/5/24", "2013/9/24", "2013/11/17", "2014/4/2", "2014/4/3", "2014/4/13", "2014/4/19", "2014/6/24", "2015/4/25", "2015/5/12", "2015/5/30", "2015/9/17", "2015/10/26"],
	    "stamps": ["20120321000000", "20120411000000", "20120831000000", "20120905000000", "20121028000000", "20130105000000", "20130206000000", "20130416000000", "20130524000000", "20130924000000", "20131117000000", "20140402000000", "20140403000000", "20140413000000", "20140419000000", "20140624000000", "20150425000000", "20150512000000", "20150530000000", "20150917000000", "20151026000000"]
	};

	exports.default = volcano;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "volcanojson.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _movediv = __webpack_require__(269);

	var _movediv2 = _interopRequireDefault(_movediv);

	var _detail = __webpack_require__(275);

	var _detail2 = _interopRequireDefault(_detail);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var detail = {
	    row1Col1: '省/地区',
	    row1Col2: '人口'
	};
	var legend = {
	    id: 'chinaPerson'
	};

	var ChinaPerson = function (_Component) {
	    _inherits(ChinaPerson, _Component);

	    function ChinaPerson(props) {
	        _classCallCheck(this, ChinaPerson);

	        var _this = _possibleConstructorReturn(this, (ChinaPerson.__proto__ || Object.getPrototypeOf(ChinaPerson)).call(this, props));

	        _this.state = {
	            currentObj: '',
	            name: '',
	            pop: '',
	            isLegend: true,
	            isDetail: false

	        };
	        return _this;
	    }

	    _createClass(ChinaPerson, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(113.16, 39.71, 9000000.0)
	            });
	            new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	                layer: 'beyondb:linyin_0816_world_deepColor',
	                style: '',
	                format: 'image/png',
	                tileMatrixSetID: 'EPSG:4326',
	                tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	                maximumLevel: 19,
	                projection: 'EPSG:4326'
	            }).addTo(earth.layers);
	            //添加中国人口数据
	            this.state.currentObj = new GeoVis.GeoJson('../src/common/china.json', {
	                fillColor: GeoVis.Color.fromCssString('#009688').withAlpha(0.2),
	                fill: true,
	                outline: true,
	                outlineColor: GeoVis.Color.GREEN
	            });
	            this.state.currentObj.addTo(window.earth);
	            this.state.currentObj.on('finish', function (geojson) {
	                console.log(geojson);
	                geojson.target.features.polygons.forEach(function (feature) {
	                    // console.log(feature);
	                    var a = void 0;
	                    var pop = feature.properties.population;
	                    var name = feature.properties.name;
	                    if (104320459 < pop) a = 0;
	                    if (80417528 < pop && pop <= 104320459) a = 32;
	                    if (65700762 < pop && pop <= 80417528) a = 64;
	                    if (46023761 < pop && pop <= 65700762) a = 121;
	                    if (28846170 < pop && pop <= 46023761) a = 150;
	                    if (12938693 < pop && pop <= 28846170) a = 180;
	                    if (pop <= 12938693) a = 220;
	                    feature.fillColor = GeoVis.Color.fromBytes(255, a > 255 ? 255 : a, a > 255 ? a - 255 : 0, 255).withAlpha(1.0);
	                    feature.extrudedHeight = parseInt((pop - 5) / 100);
	                    feature.on('clickIn', function (feature) {
	                        // alert('aaa');
	                        console.log(feature);
	                        feature.target.shine({
	                            color: '#ff0000'
	                        }); //todo：3维点击出现点击位置错乱

	                        _this2.setState({ name: name });
	                        _this2.setState({ pop: pop });
	                        _this2.setState({ isDetail: true });
	                    });
	                });
	            });
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth);
	        }
	    }, {
	        key: 'onclick',
	        value: function onclick() {
	            this.setState({ isLegend: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var aDetail = void 0,
	                aLegend = void 0;
	            aLegend = this.state.isLegend ? _react2.default.createElement(_movediv2.default, { isDetail: this.state.isDetail, row1Col1: detail.row1Col1, row1Col2: detail.row1Col2, row2Col1: this.state.name, row2Col2: this.state.pop, id: legend.id, onclick: this.onclick.bind(this) }) : '';
	            return _react2.default.createElement(
	                'div',
	                null,
	                aLegend
	            );
	        }
	    }]);

	    return ChinaPerson;
	}(_react.Component);

	exports.default = ChinaPerson;

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _movediv = __webpack_require__(270);

	var _movediv2 = _interopRequireDefault(_movediv);

	var _legend = __webpack_require__(272);

	var _legend2 = _interopRequireDefault(_legend);

	var _detail = __webpack_require__(275);

	var _detail2 = _interopRequireDefault(_detail);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Movediv = function (_Component) {
	    _inherits(Movediv, _Component);

	    function Movediv(props) {
	        _classCallCheck(this, Movediv);

	        var _this = _possibleConstructorReturn(this, (Movediv.__proto__ || Object.getPrototypeOf(Movediv)).call(this, props));

	        _this.state = {
	            left: 0,
	            top: 0,
	            currentX: 0,
	            currentY: 0,
	            flag: false
	        };
	        return _this;
	    }

	    _createClass(Movediv, [{
	        key: 'startDrag',
	        value: function startDrag(e) {
	            // var dragBox=document.getElementById('form');
	            var newState = {};
	            var event = e || window.event;
	            event.preventDefault();
	            // var computedStyle=document.defaultView.getComputedStyle(dragBox,null);
	            // newState.left=computedStyle.left;
	            // newState.top=computedStyle.top;
	            newState.currentX = event.clientX;
	            newState.currentY = event.clientY;
	            newState.flag = true;
	            // this.props.callbackParent(newState);
	            /*以下为修改处*/
	            var dragBoxs = document.querySelector('#movediv');
	            var computedStyle = document.defaultView.getComputedStyle(dragBoxs, null);
	            newState.left = computedStyle.left;
	            newState.top = computedStyle.top;
	            /*以上为修改处*/
	            this.setState(newState);
	        }
	    }, {
	        key: 'move',
	        value: function move(event) {
	            var e = event ? event : window.event;
	            var dBox = this.refs.dragBox;
	            if (this.state.flag) {
	                var nowX = e.clientX,
	                    nowY = e.clientY;
	                var disX = nowX - this.state.currentX,
	                    disY = nowY - this.state.currentY;
	                /*增加拖拽范围检测*/
	                var currentLeft = parseInt(this.state.left) + disX;
	                var currentTop = parseInt(this.state.top) + disY;
	                var docX = document.documentElement.clientWidth || document.body.clientWidth;
	                var docY = document.documentElement.clientHeight || document.body.clientHeight;
	                if (currentLeft <= 0) {
	                    //检测屏幕左边，因为我这里的初始居中是利用了负1/2的盒子宽度，所以用250px判断边界
	                    dBox.style.left = 0 + "px";
	                } else if (currentLeft >= docX - dBox.offsetWidth) {
	                    dBox.style.left = docX - this.state.offsetX + "px";
	                } else {
	                    dBox.style.left = currentLeft + "px";
	                }
	                if (currentTop <= 50) {
	                    //检测屏幕上边，因为我这里的初始居中是利用了负1/2的盒子高度，所以用200px判断边界
	                    dBox.style.top = 50 + "px";
	                } else if (currentTop >= docY - dBox.offsetHeight) {
	                    dBox.style.top = docY - this.state.offsetY + "px";
	                } else {
	                    dBox.style.top = currentTop + "px";
	                }
	            }
	        }
	    }, {
	        key: 'endDrag',
	        value: function endDrag() {
	            var computedStyle = document.defaultView.getComputedStyle(document.querySelector('#movediv'), null);
	            this.setState({
	                left: computedStyle.left,
	                top: computedStyle.top,
	                flag: false
	            });
	        }
	        /*
	        组件被装载后才会被调用，也就是说调用这个方法的时候，
	        组件已经被渲染到了页面上，
	        这个时候可以修改DOM。
	        此时把相应的docume事件绑定到上面
	        */

	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            document.addEventListener('mousemove', function (e) {
	                _this2.move(e);
	            }, false); /*ES6新特性，箭头函数，需要依赖jsx编译工具才能正确运行*/
	            document.addEventListener('mouseup', function (e) {
	                _this2.endDrag(e);
	            }, false);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var detail = void 0;
	            detail = this.props.isDetail ? _react2.default.createElement(_detail2.default, { row1Col1: this.props.row1Col1, row1Col2: this.props.row1Col2, row2Col1: this.props.row2Col1, row2Col2: this.props.row2Col2 }) : '';
	            return _react2.default.createElement(
	                'div',
	                { className: _movediv2.default['movediv'], id: 'movediv', ref: 'dragBox', onMouseDown: this.startDrag.bind(this) },
	                detail,
	                _react2.default.createElement(_legend2.default, { id: this.props.id, onclick: this.props.onclick })
	            );
	        }
	    }]);

	    return Movediv;
	}(_react.Component);

	exports.default = Movediv;

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(271);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./movediv.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./movediv.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, ".irXMiQL_ef47M712EL5Wj{\r\n\t\r\n     position: absolute;width: 330px;height: auto; border-radius: 4px;cursor: move;right: 100px;\r\n    bottom: 50px;z-index: 999;\r\n}\r\n@media screen and (max-width: 1366px) {\r\n    .irXMiQL_ef47M712EL5Wj{\r\n\t\twidth: 210px;\r\n\t\tright: 55px;\r\n\t}\r\n}\r\n", ""]);

	// exports
	exports.locals = {
		"movediv": "irXMiQL_ef47M712EL5Wj"
	};

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _legend = __webpack_require__(273);

	var _legend2 = _interopRequireDefault(_legend);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PG_legend = function (_Component) {
	    _inherits(PG_legend, _Component);

	    function PG_legend() {
	        _classCallCheck(this, PG_legend);

	        return _possibleConstructorReturn(this, (PG_legend.__proto__ || Object.getPrototypeOf(PG_legend)).apply(this, arguments));
	    }

	    _createClass(PG_legend, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _legend2.default["PG_legend"] },
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: '#13e113' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u6570<10\u4E07'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: '#12d50c' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u657010\u4E07-100\u4E07'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: '#74b486' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u6570100\u4E07-1000\u4E07'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: '#f17828' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u65701000\u4E07-1\u4EBF'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: '#cc2700' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u6570>1\u4EBF'
	                    )
	                )
	            );
	        }
	    }]);

	    return PG_legend;
	}(_react.Component);

	var CP_legend = function (_Component2) {
	    _inherits(CP_legend, _Component2);

	    function CP_legend() {
	        _classCallCheck(this, CP_legend);

	        return _possibleConstructorReturn(this, (CP_legend.__proto__ || Object.getPrototypeOf(CP_legend)).apply(this, arguments));
	    }

	    _createClass(CP_legend, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _legend2.default["CP_legend"] },
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,220,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u6570<12938693'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,180,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u657012938693-28846170'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,150,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u657028846170-46023761'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,121,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u657046023761-65700762'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,64,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u657065700762-80417528'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,32,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u657080417528-104320459'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,0, 0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u4EBA\u53E3\u6570>104320459'
	                    )
	                )
	            );
	        }
	    }]);

	    return CP_legend;
	}(_react.Component);

	var CW_legend = function (_Component3) {
	    _inherits(CW_legend, _Component3);

	    function CW_legend() {
	        _classCallCheck(this, CW_legend);

	        return _possibleConstructorReturn(this, (CW_legend.__proto__ || Object.getPrototypeOf(CW_legend)).apply(this, arguments));
	    }

	    _createClass(CW_legend, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _legend2.default["CW_legend"] },
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,255,200)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u5C31\u4E1A\u4EBA\u53E3<1293869'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,255,136)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u5C31\u4E1A\u4EBA\u53E31293869-2884617'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(190,255,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u5C31\u4E1A\u4EBA\u53E32884617-4602376'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(165,255,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u5C31\u4E1A\u4EBA\u53E34602376-6570076'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(75,255,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u5C31\u4E1A\u4EBA\u53E36570076-8041752'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(0,255,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u5C31\u4E1A\u4EBA\u53E38041752-10432045'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(0,255,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u5C31\u4E1A\u4EBA\u53E3>10432045'
	                    )
	                )
	            );
	        }
	    }]);

	    return CW_legend;
	}(_react.Component);

	var CO_legend = function (_Component4) {
	    _inherits(CO_legend, _Component4);

	    function CO_legend() {
	        _classCallCheck(this, CO_legend);

	        return _possibleConstructorReturn(this, (CO_legend.__proto__ || Object.getPrototypeOf(CO_legend)).apply(this, arguments));
	    }

	    _createClass(CO_legend, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _legend2.default["CO_legend"] },
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,255,128)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u8001\u9F84\u4EBA\u53E3\u767E\u5206\u6BD4<7.67'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,255,64)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u8001\u9F84\u4EBA\u53E3\u767E\u5206\u6BD47.67-9.73'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,255,32)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u8001\u9F84\u4EBA\u53E3\u767E\u5206\u6BD49.73-11.53'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,255,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u8001\u9F84\u4EBA\u53E3\u767E\u5206\u6BD411.53-13.21'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,128,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u8001\u9F84\u4EBA\u53E3\u767E\u5206\u6BD413.21-15.43'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,64,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u8001\u9F84\u4EBA\u53E3\u767E\u5206\u6BD415.43-17.42'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement('div', { style: { backgroundColor: 'rgb(255,32,0)' } }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u8001\u9F84\u4EBA\u53E3\u767E\u5206\u6BD4>17.42'
	                    )
	                )
	            );
	        }
	    }]);

	    return CO_legend;
	}(_react.Component);

	var Legend = function (_Component5) {
	    _inherits(Legend, _Component5);

	    function Legend() {
	        _classCallCheck(this, Legend);

	        return _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).apply(this, arguments));
	    }

	    _createClass(Legend, [{
	        key: 'render',
	        value: function render() {
	            var who_legend = void 0;
	            switch (this.props.id) {
	                case 'personGlobal':
	                    who_legend = _react2.default.createElement(PG_legend, null);break;
	                case 'chinaPerson':
	                    who_legend = _react2.default.createElement(CP_legend, null);break;
	                case 'chinaWorker':
	                    who_legend = _react2.default.createElement(CW_legend, null);break;
	                case 'chinaOldPerson':
	                    who_legend = _react2.default.createElement(CO_legend, null);break;
	            }
	            return _react2.default.createElement(
	                'div',
	                { ref: 'tablezong', className: _legend2.default["table-zong"] },
	                _react2.default.createElement(
	                    'div',
	                    { className: _legend2.default["table-top"] },
	                    _react2.default.createElement('div', null),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u56FE\u4F8B'
	                    ),
	                    _react2.default.createElement(
	                        'a',
	                        { onClick: this.props.onclick },
	                        'x'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: _legend2.default["table-pop"] },
	                    who_legend
	                )
	            );
	        }
	    }]);

	    return Legend;
	}(_react.Component);

	exports.default = Legend;

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(274);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./legend.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./legend.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, ".bFb4TZXIGj0CIshpQbtTs{background:white}\r\n.bFb4TZXIGj0CIshpQbtTs > table{width:240px;height:auto;color:gray;}\r\n._2WXiGiHAK-eui2chf5sn1J >tr>th{width: 120px;}\r\n._1k9h_9h3-NmbJtE4Y6MWVF{\r\n        /* position: absolute;bottom:40px;right: 100px;width: 260px;border-radius: 4px;     */\r\n}\r\n._3oShVXdZ4IEi4qCYgfPb-U{\r\n    background-color: rgb(220, 220, 220);height: 25px;position: relative;\r\n}\r\n._3oShVXdZ4IEi4qCYgfPb-U >div{background-color: #178D82;\r\n    width: 4px;\r\n    height: 15px;\r\n    position: absolute;\r\n    left: 9px;\r\n    top: 5px;\r\n}\r\n._3oShVXdZ4IEi4qCYgfPb-U>span{\r\n    display: inline-block;\r\n    font-size: 15px;\r\n    position: absolute;\r\n    left: 19px;\r\n    top: 3px;\r\n}\r\n._3oShVXdZ4IEi4qCYgfPb-U>a{\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    font-size: 20px;\r\n    top: -3px;\r\n    color:#8c8c8c;\r\n    cursor: pointer;\r\n}\r\n\r\n/* personGlobal */\r\n._236J9p-PnLzksEl1rMLab4{\r\n    /*height: 180px;*/\r\n}\r\n\r\n._236J9p-PnLzksEl1rMLab4>div{\r\n    height: 25px;\r\n    position: relative;\r\n}\r\n\r\n._236J9p-PnLzksEl1rMLab4>div>span{\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 5px;\r\n    font-size: 8px;\r\n    font-weight: bold;\r\n}\r\n\r\n._236J9p-PnLzksEl1rMLab4>div>div{\r\n    width: 20px;\r\n    height: 16px;\r\n    position: absolute;\r\n    left:10px;\r\n    top: 5px;\r\n}\r\n\r\n\r\n/* chinaPerson */\r\n._1i0BNMm_SCvS3Ujyxh_2KL{\r\n    /*height: 180px;*/\r\n}\r\n\r\n._1i0BNMm_SCvS3Ujyxh_2KL>div{\r\n    height: 25px;\r\n    position: relative;\r\n}\r\n._1i0BNMm_SCvS3Ujyxh_2KL>div>div{\r\n    width: 20px;\r\n    height: 16px;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 5px;\r\n}\r\n._1i0BNMm_SCvS3Ujyxh_2KL>div>span{\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 5px;\r\n    font-size: 8px;\r\n    font-weight: bold;\r\n}\r\n\r\n/* chinaWorker */\r\n._2m1SJiGdtk-IS8ZsaVWzXy{\r\n    /*height: 180px;*/\r\n}\r\n\r\n._2m1SJiGdtk-IS8ZsaVWzXy>div{\r\n    height: 25px;\r\n    position: relative;\r\n}\r\n._2m1SJiGdtk-IS8ZsaVWzXy>div>div{\r\n    width: 20px;\r\n    height: 16px;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 5px;\r\n}\r\n._2m1SJiGdtk-IS8ZsaVWzXy>div>span{\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 5px;\r\n    font-size: 8px;\r\n    font-weight: bold;\r\n}\r\n\r\n/* chinaOldPerson */\r\n.eJTMJr3WSnWDmnDRdqoxx{\r\n    /*height: 180px;*/\r\n}\r\n\r\n.eJTMJr3WSnWDmnDRdqoxx>div{\r\n    height: 25px;\r\n    position: relative;\r\n}\r\n.eJTMJr3WSnWDmnDRdqoxx>div>div{\r\n    width: 20px;\r\n    height: 16px;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 5px;\r\n}\r\n.eJTMJr3WSnWDmnDRdqoxx>div>span{\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 5px;\r\n    font-size: 8px;\r\n    font-weight: bold;\r\n}", ""]);

	// exports
	exports.locals = {
		"table-pop": "bFb4TZXIGj0CIshpQbtTs",
		"tbody-pop": "_2WXiGiHAK-eui2chf5sn1J",
		"table-zong": "_1k9h_9h3-NmbJtE4Y6MWVF",
		"table-top": "_3oShVXdZ4IEi4qCYgfPb-U",
		"PG_legend": "_236J9p-PnLzksEl1rMLab4",
		"CP_legend": "_1i0BNMm_SCvS3Ujyxh_2KL",
		"CW_legend": "_2m1SJiGdtk-IS8ZsaVWzXy",
		"CO_legend": "eJTMJr3WSnWDmnDRdqoxx"
	};

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _detail = __webpack_require__(276);

	var _detail2 = _interopRequireDefault(_detail);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Detail = function (_Component) {
	    _inherits(Detail, _Component);

	    function Detail() {
	        _classCallCheck(this, Detail);

	        return _possibleConstructorReturn(this, (Detail.__proto__ || Object.getPrototypeOf(Detail)).apply(this, arguments));
	    }

	    _createClass(Detail, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _detail2.default["table-pop"], ref: 'table' },
	                _react2.default.createElement(
	                    'div',
	                    { className: _detail2.default['pop1'] },
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        this.props.row2Col1
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: _detail2.default['pop2'] },
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        this.props.row1Col2,
	                        '\uFF1A',
	                        this.props.row2Col2
	                    )
	                )
	            );
	        }
	    }]);

	    return Detail;
	}(_react.Component);

	exports.default = Detail;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(277);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./detail.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./detail.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._1wtz29ptOP6NWDDKw2nusb{position: absolute;right: 0px;top:-65px;background-color: gray;z-index: 999;    width: 183px;\r\n    font-size: 14px;\r\n    background: white;\r\n    padding: 0 14px;\r\n    border-radius: 3px;\r\n}\r\n._1M0kqVwP9XC66mbvGhJny9,._1n5MpBw5YU_0ULTHHdwNx1{\r\n    height: 30px;\r\n    line-height: 30px;\r\n}\r\n._1M0kqVwP9XC66mbvGhJny9{\r\n    border-bottom: 1px solid gray;\r\n}", ""]);

	// exports
	exports.locals = {
		"table-pop": "_1wtz29ptOP6NWDDKw2nusb",
		"pop1": "_1M0kqVwP9XC66mbvGhJny9",
		"pop2": "_1n5MpBw5YU_0ULTHHdwNx1"
	};

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _movediv = __webpack_require__(269);

	var _movediv2 = _interopRequireDefault(_movediv);

	var _detail = __webpack_require__(275);

	var _detail2 = _interopRequireDefault(_detail);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var detail = {
	    row1Col1: '省/地区',
	    row1Col2: '百分比%'
	};
	var legend = {
	    id: 'chinaOldPerson'
	};

	var ChinaOldPerson = function (_Component) {
	    _inherits(ChinaOldPerson, _Component);

	    function ChinaOldPerson(props) {
	        _classCallCheck(this, ChinaOldPerson);

	        var _this = _possibleConstructorReturn(this, (ChinaOldPerson.__proto__ || Object.getPrototypeOf(ChinaOldPerson)).call(this, props));

	        _this.state = {
	            currentObj: '',
	            name: '',
	            pop: '',
	            isLegend: true,
	            isDetail: false
	        };
	        return _this;
	    }

	    _createClass(ChinaOldPerson, [{
	        key: 'initImg',
	        value: function initImg(id, callback) {
	            fetch('http://192.168.48.3:8690/remotedatasource/' + id, {
	                method: "POST"
	            }).then(function (res) {
	                if (res.status !== 200) {
	                    console.log(res.status);return;
	                }
	                res.json().then(function (data) {

	                    callback(data);
	                });
	            }).catch(function (err) {
	                console.log(err);
	            });
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(113.16, 39.71, 9000000.0)
	            });
	            this.initImg(3, function (data) {
	                var a = data.remotedatasource.url;
	                var layer = new GeoVis.ArcGisLayer(a, { minLevel: 0, maxLevel: 20 }).addTo(window.earth.layers);
	            });
	            new GeoVis.TileLayer('../src/Components/ButtonList/dark/{z}/{x}/{y}.png', {
	                projection: 'EPSG:900913'
	            }).addTo(window.earth.layers);
	            //添加中国老年人口数据
	            this.state.currentObj = new GeoVis.GeoJson('../src/common/china.json', {
	                fillColor: GeoVis.Color.fromCssString('#009688').withAlpha(0.2),
	                fill: true,
	                outline: true,
	                outlineColor: GeoVis.Color.GREEN
	            });
	            this.state.currentObj.addTo(earth);
	            this.state.currentObj.on('finish', function (geojson) {
	                console.log(geojson);
	                geojson.target.features.polygons.forEach(function (feature) {
	                    // console.log(feature);
	                    var a = void 0;
	                    var pop = feature.properties.old_ratio;
	                    var name = feature.properties.name;
	                    if (17.42 <= pop) a = 0;
	                    if (15.43 < pop && pop <= 17.42) a = 32;
	                    if (13.21 < pop && pop <= 15.43) a = 64;
	                    if (11.53 < pop && pop <= 13.21) a = 128;
	                    if (9.73 < pop && pop <= 11.53) a = 255;
	                    if (7.67 < pop && pop <= 9.73) a = 255 + 64;
	                    if (pop <= 7.67) a = 255 + 128;
	                    feature.fillColor = GeoVis.Color.fromBytes(255, a > 255 ? 255 : a, a > 255 ? a - 255 : 0, 255).withAlpha(1.0);
	                    feature.extrudedHeight = parseInt((pop - 5) * 100000);
	                    feature.on('clickIn', function (feature) {
	                        // alert('aaa');
	                        console.log(feature);
	                        feature.target.shine({
	                            color: '#ff0000'
	                        });

	                        _this2.setState({ name: name });
	                        _this2.setState({ pop: pop });
	                        _this2.setState({ isDetail: true });
	                    });
	                });
	            });
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth);
	        }
	    }, {
	        key: 'onclick',
	        value: function onclick() {
	            this.setState({ isLegend: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var aDetail = void 0,
	                aLegend = void 0;
	            aLegend = this.state.isLegend ? _react2.default.createElement(_movediv2.default, { isDetail: this.state.isDetail, row1Col1: detail.row1Col1, row1Col2: detail.row1Col2, row2Col1: this.state.name, row2Col2: this.state.pop, id: legend.id, onclick: this.onclick.bind(this) }) : '';
	            return _react2.default.createElement(
	                'div',
	                null,
	                aLegend
	            );
	        }
	    }]);

	    return ChinaOldPerson;
	}(_react.Component);

	exports.default = ChinaOldPerson;

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _movediv = __webpack_require__(269);

	var _movediv2 = _interopRequireDefault(_movediv);

	var _detail = __webpack_require__(275);

	var _detail2 = _interopRequireDefault(_detail);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var detail = {
	    row1Col1: '省/地区',
	    row1Col2: '数量'
	};
	var legend = {
	    id: 'chinaWorker'
	};

	var ChinaWorker = function (_Component) {
	    _inherits(ChinaWorker, _Component);

	    function ChinaWorker(props) {
	        _classCallCheck(this, ChinaWorker);

	        var _this = _possibleConstructorReturn(this, (ChinaWorker.__proto__ || Object.getPrototypeOf(ChinaWorker)).call(this, props));

	        _this.state = {
	            currentObj: '',
	            name: '',
	            pop: '',
	            isLegend: true,
	            isDetail: false
	        };
	        return _this;
	    }

	    _createClass(ChinaWorker, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(113.16, 39.71, 9000000.0)
	            });
	            new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	                layer: 'beyondb:linyin_0816_world_retro',
	                style: '',
	                format: 'image/png',
	                tileMatrixSetID: 'EPSG:4326',
	                tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	                maximumLevel: 19,
	                projection: 'EPSG:4326'
	            }).addTo(earth.layers);
	            //添加中国就业人口数据
	            this.state.currentObj = new GeoVis.GeoJson('../src/common/china.json', {
	                fillColor: GeoVis.Color.fromCssString('#009688').withAlpha(0.2),
	                fill: true,
	                outline: true,
	                outlineColor: GeoVis.Color.GREEN
	            });
	            this.state.currentObj.addTo(earth);
	            this.state.currentObj.on('finish', function (geojson) {
	                console.log(geojson);
	                geojson.target.features.polygons.forEach(function (feature) {
	                    // console.log(feature);
	                    var a = void 0;
	                    var pop = feature.properties.at_work;
	                    var name = feature.properties.name;
	                    if (10432045 < pop) a = 0;
	                    if (8041752 < pop && pop <= 10432045) a = 0;
	                    if (6570076 < pop && pop <= 8041752) a = 75;
	                    if (4602376 < pop && pop <= 6570076) a = 165;
	                    if (2884617 < pop && pop <= 4602376) a = 190;
	                    if (1293869 < pop && pop <= 2884617) a = 225 + 136;
	                    if (pop <= 1293869) a = 255 + 200;
	                    feature.fillColor = GeoVis.Color.fromBytes(a > 255 ? 255 : a, 255, a > 255 ? a - 255 : 0, 255).withAlpha(1.0);
	                    feature.extrudedHeight = parseInt(pop / 10);
	                    feature.on('clickIn', function (feature) {
	                        // alert('aaa');
	                        console.log(feature);
	                        feature.target.shine({
	                            color: '#ff0000'
	                        });

	                        _this2.setState({ name: name });
	                        _this2.setState({ pop: pop });
	                        _this2.setState({ isDetail: true });
	                    });
	                });
	            });
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth);
	        }
	    }, {
	        key: 'onclick',
	        value: function onclick() {
	            this.setState({ isLegend: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var aDetail = void 0,
	                aLegend = void 0;
	            aLegend = this.state.isLegend ? _react2.default.createElement(_movediv2.default, { isDetail: this.state.isDetail, row1Col1: detail.row1Col1, row1Col2: detail.row1Col2, row2Col1: this.state.name, row2Col2: this.state.pop, id: legend.id, onclick: this.onclick.bind(this) }) : '';
	            return _react2.default.createElement(
	                'div',
	                null,
	                aLegend
	            );
	        }
	    }]);

	    return ChinaWorker;
	}(_react.Component);

	exports.default = ChinaWorker;

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _movediv = __webpack_require__(269);

	var _movediv2 = _interopRequireDefault(_movediv);

	var _detail = __webpack_require__(275);

	var _detail2 = _interopRequireDefault(_detail);

	var _themeDesc = __webpack_require__(244);

	var _themeDesc2 = _interopRequireDefault(_themeDesc);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var detail = {

	    row1Col1: '国家/地区',
	    row1Col2: '人口'
	};
	var legend = {
	    id: 'personGlobal'
	};

	var PersonGlobal = function (_Component) {
	    _inherits(PersonGlobal, _Component);

	    function PersonGlobal(props) {
	        _classCallCheck(this, PersonGlobal);

	        var _this = _possibleConstructorReturn(this, (PersonGlobal.__proto__ || Object.getPrototypeOf(PersonGlobal)).call(this, props));

	        _this.state = {
	            currentObj: '',
	            name: '',
	            pop: '',
	            isLegend: true,
	            isDetail: false,
	            title: "全球人口",
	            desc: "截至2016年，全世界人口总数为72亿6291万，中国是世界第一人口大国。2025年世界人口将突破80亿，英国将成欧洲第一人口大国。2050年世界人口将突破94亿，亚洲再增13亿人。非洲的人口也可能增加一倍，达到21亿。"
	        };

	        return _this;
	    }

	    _createClass(PersonGlobal, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            //先变为3D
	            window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            //视角跳转至中国
	            window.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(113.16, 39.71, 20000000.0)
	            });
	            new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	                layer: 'beyondb:linyin_0816_world_deepColor',
	                style: '',
	                format: 'image/png',
	                tileMatrixSetID: 'EPSG:4326',
	                tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	                maximumLevel: 19,
	                projection: 'EPSG:4326'
	            }).addTo(earth.layers);
	            //添加全球人口数据
	            this.state.currentObj = new GeoVis.GeoJson('../src/common/countries.geo.json', {
	                fillColor: GeoVis.Color.fromCssString('#009688').withAlpha(0.2),
	                fill: true,
	                outline: false
	            });
	            this.state.currentObj.addTo(earth);

	            this.state.currentObj.on('finish', function (geojson) {
	                console.log(geojson);

	                geojson.target.features.polygons.forEach(function (feature) {
	                    // console.log(feature);
	                    var a = void 0;
	                    var pop = feature.properties.population;
	                    var name = feature.properties.name;
	                    if (pop > 100000000) a = '#cc2700';
	                    if (10000000 < pop && pop <= 100000000) a = '#f17828';
	                    if (1000000 < pop && pop <= 10000000) a = '#74b486';
	                    if (100000 < pop && pop <= 10000000) a = '#12d50c';
	                    if (pop <= 100000) a = '#13e113';
	                    feature.fillColor = GeoVis.Color.fromCssString(a);
	                    feature.extrudedHeight = parseInt(pop / 1000);
	                    feature.on('clickIn', function (feature) {
	                        // alert('aaa');
	                        console.log(feature);
	                        feature.target.shine({
	                            color: '#ff0000'
	                        });
	                        _this2.setState({ name: name });
	                        _this2.setState({ pop: pop });
	                        _this2.setState({ isDetail: true });
	                    });
	                });
	            });
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //删除
	            this.state.currentObj.removeFrom(window.earth);
	        }
	    }, {
	        key: 'onclick',
	        value: function onclick() {
	            this.setState({ isLegend: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var aDetail = void 0,
	                aLegend = void 0;
	            // aDetail = this.state.isDetail?<Detail  row1Col1={detail.row1Col1} row1Col2={detail.row1Col2} row2Col1={this.state.name} row2Col2={this.state.pop}/>:''
	            aLegend = this.state.isLegend ? _react2.default.createElement(_movediv2.default, { isDetail: this.state.isDetail, row1Col1: detail.row1Col1, row1Col2: detail.row1Col2, row2Col1: this.state.name, row2Col2: this.state.pop, id: legend.id, onclick: this.onclick.bind(this) }) : '';
	            return _react2.default.createElement(
	                'div',
	                null,
	                aLegend,
	                _react2.default.createElement(_themeDesc2.default, { title: this.state.title, desc: this.state.desc })
	            );
	        }
	    }]);

	    return PersonGlobal;
	}(_react.Component);

	exports.default = PersonGlobal;

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _SinkiangPanorama = __webpack_require__(282);

	var _SinkiangPanorama2 = _interopRequireDefault(_SinkiangPanorama);

	var _moveVideo = __webpack_require__(284);

	var _moveVideo2 = _interopRequireDefault(_moveVideo);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GeoVis = window.GeoVis;
	var Engine = window.Engine;

	var SinkiangPanorama = function (_Component) {
	    _inherits(SinkiangPanorama, _Component);

	    function SinkiangPanorama() {
	        _classCallCheck(this, SinkiangPanorama);

	        return _possibleConstructorReturn(this, (SinkiangPanorama.__proto__ || Object.getPrototypeOf(SinkiangPanorama)).apply(this, arguments));
	    }

	    _createClass(SinkiangPanorama, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.state = {
	                isPanorama: false,
	                lon: 0,
	                lat: 0
	            };
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            var state = this.state;
	            // 添加两条路矢量
	            this.earth = window.earth;
	            this.layer = new GeoVis.TileLayer('http://a.tile.openstreetmap.org/{z}/{x}/{y}.png', {
	                projection: 'EPSG:900913'
	            }).addTo(this.earth.layers);
	            var url = 'http://192.168.4.229:28080/beyonserver/beyondb/wms?service=WMS&version=1.1.0&request=GetMap&layers=beyondb:vt_qianjingpoint_b_v01' + '&styles=&bbox=80.115479,31.019896,80.268278,31.108056&width=768&height=443&srs=EPSG:4326&format=application%2Fjson%3Btype%3Dgeojson';
	            this.geojson = new GeoVis.GeoJson(url, {
	                markerSize: 16,
	                markerColor: new GeoVis.Color(0 / 255, 0 / 255, 255 / 255, 1.0)
	            }).addTo(this.earth);
	            this.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            this.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(80.125479, 31.951896, 5000.0),
	                orientation: {
	                    heading: Engine.Math.toRadians(0.0),
	                    pitch: Engine.Math.toRadians(-35.0),
	                    roll: 0.0
	                }
	            });

	            this.geojson.on('finish', function (geojson) {
	                console.log(geojson);
	                _this2.earth.on('leftUp', function (event) {
	                    var point = _this2.earth.scene.pick(new Engine.Cartesian2(event.windowPosition[0], event.windowPosition[1]));
	                    if (point) {
	                        if (point.id) {
	                            // console.log(point);

	                        } else {
	                            // console.log(point);
	                            state.isPanorama = state.isPanorama === false ? true : state.isPanorama;
	                            state.lon = event.position[0];
	                            state.lat = event.position[1];

	                            _this2.setState(state);
	                            // loadPanorama({ lon: event.position[0], lat: event.position[1] });
	                        }
	                    } else {
	                        console.log('此处无街景');
	                    }
	                });
	                _this2.leftUpIndex = _this2.earth._listeners['leftUp'].length - 1;
	            });

	            window.abc = function (lon, lat, heading) {
	                // console.log(lon, lat);
	                // console.log(document.getElementsByClassName());
	                if (!_this2.marker) _this2.marker = new GeoVis.Marker([lon, lat], {
	                    iconUrl: "./assets/图层-10-拷贝-2.png",
	                    width: 30,
	                    height: 30
	                }).addTo(_this2.earth.features);else {
	                    _this2.marker.lon = lon;
	                    _this2.marker.lat = lat;
	                }
	                console.log(_this2.marker);

	                _this2.marker.element.style.transform = 'rotate(' + (heading - 45) + 'deg)';
	                _this2.marker.element.style.width = '30px';
	                _this2.marker.element.style.height = '40px';
	                // console.log(this.marker ? this.marker.lon + ', ' + this.marker.lat : '(0, 0)');
	            };
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            // alert('remove');
	            this.layer.removeFrom(this.earth.layers);
	            if (this.marker) {
	                this.marker.removeFrom(this.earth.features);
	                this.marker = undefined;
	            }
	            this.geojson.removeFrom(this.earth);
	            console.log(this.leftUpIndex);
	            // this.earth.off('leftUp', this.loadPanorama.bind(this));
	            this.earth._listeners['leftUp'].splice(this.leftUpIndex, 1);
	            this.earth = undefined;
	        }
	    }, {
	        key: 'fetchData',
	        value: function fetchData(url, earth, callback) {
	            var _this3 = this;

	            fetch(url).then(function (response) {
	                // console.log(response);
	                response.json().then(function (data) {
	                    data.features.forEach(function (value, key) {
	                        var point = new GeoVis.Point(value.geometry.coordinates, {
	                            color: new GeoVis.Color(255 / 255, 0 / 255, 32 / 255, 1.0),
	                            pixelSize: 32
	                        }).addTo(earth.features);
	                        point.id = value.id;
	                        point.properties = value.properties;
	                        _this3.points.set(value.id, point);
	                    });
	                    callback();
	                });
	            }).catch(function (err) {
	                console.error(err);
	            });
	        }
	    }, {
	        key: 'close',
	        value: function close() {
	            var state = this.state;
	            state.isPanorama = false;
	            this.setState(state);
	            this.marker.removeFrom(this.earth.features);
	            this.marker = undefined;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var canvas = document.getElementById('geovis-earth');
	            var panoWidth = canvas.offsetWidth / canvas.offsetHeight > 1.2 ? canvas.offsetHeight * 1.2 / 2 + 70 : canvas.offsetWidth;
	            var panoStyle = {
	                width: panoWidth + 'px',
	                height: canvas.offsetHeight / 2 + 'px',
	                left: (canvas.offsetWidth - panoWidth) / 2 + 'px'
	            };
	            var panorama = this.state.isPanorama === true ? _react2.default.createElement(_moveVideo2.default, { classname1: _SinkiangPanorama2.default.panorama, classname2: _SinkiangPanorama2.default.close, style: panoStyle, onclick: this.close.bind(this), lon: this.state.lon, lat: this.state.lat, style2: _SinkiangPanorama2.default.frameStyle })
	            // <MoveVideo> </MoveVideo>
	            : null;
	            return _react2.default.createElement(
	                'div',
	                null,
	                panorama
	            );
	        }
	    }]);

	    return SinkiangPanorama;
	}(_react.Component);

	exports.default = SinkiangPanorama;

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(283);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./SinkiangPanorama.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./SinkiangPanorama.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._2-fgkgDNh8DKmT5-RrzvnB {\r\n    \r\n    bottom: 0;\r\n    /* right: 0; */\r\n    z-index: 10;\r\n}\r\n\r\n._18CbD7US-TPVVe_34EwNV9 {\r\n    position: absolute;\r\n    top: 14px;\r\n    right: 4px;\r\n    height: 26px;\r\n    width: 26px;\r\n    /* background-color: #fff; */\r\n    /* border: 1px solid #999; */\r\n    /* border-color: rgba(0, 0, 0, 0.4); */\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    background-image: url(./assets/关闭1.png);\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    z-index: 1;\r\n}\r\n\r\n._18CbD7US-TPVVe_34EwNV9:hover {\r\n    background-image: url(./assets/close.red.svg);\r\n}\r\n\r\n.dFb-n4wm9-7NxVdLjTTla {\r\n    border: none;\r\n    border-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    position: absolute;\r\n    overflow: hidden;\r\n}", ""]);

	// exports
	exports.locals = {
		"panorama": "_2-fgkgDNh8DKmT5-RrzvnB",
		"close": "_18CbD7US-TPVVe_34EwNV9",
		"frameStyle": "dFb-n4wm9-7NxVdLjTTla"
	};

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _moveVideo = __webpack_require__(285);

	var _moveVideo2 = _interopRequireDefault(_moveVideo);

	var _legend = __webpack_require__(272);

	var _legend2 = _interopRequireDefault(_legend);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DragArea = function (_Component) {
	    _inherits(DragArea, _Component);

	    function DragArea(props) {
	        _classCallCheck(this, DragArea);

	        var _this = _possibleConstructorReturn(this, (DragArea.__proto__ || Object.getPrototypeOf(DragArea)).call(this, props));

	        _this.state = {
	            left: 0,
	            top: 0,
	            currentX: 0,
	            currentY: 0,
	            flag: false
	        };
	        return _this;
	    }

	    _createClass(DragArea, [{
	        key: 'startDrag',
	        value: function startDrag(e) {
	            // var dragBox=document.getElementById('form');
	            var newState = {};
	            var event = e || window.event;
	            event.preventDefault();
	            // var computedStyle=document.defaultView.getComputedStyle(dragBox,null);
	            // newState.left=computedStyle.left;
	            // newState.top=computedStyle.top;
	            newState.currentX = event.clientX;
	            newState.currentY = event.clientY;
	            newState.flag = true;
	            this.props.callbackParent(newState);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', { className: _moveVideo2.default['drag'], id: 'drag', onMouseDown: this.startDrag.bind(this) });
	        }
	    }]);

	    return DragArea;
	}(_react.Component);

	var Movediv = function (_Component2) {
	    _inherits(Movediv, _Component2);

	    function Movediv(props) {
	        _classCallCheck(this, Movediv);

	        var _this2 = _possibleConstructorReturn(this, (Movediv.__proto__ || Object.getPrototypeOf(Movediv)).call(this, props));

	        _this2.state = {
	            username: "",
	            password: "",
	            checked: true,
	            left: 0,
	            top: 0,
	            currentX: 0,
	            currentY: 0,
	            flag: false
	        };
	        return _this2;
	    }

	    _createClass(Movediv, [{
	        key: 'onChildChanged',
	        value: function onChildChanged(newState) {
	            /*以下为修改处*/
	            var dragBoxs = document.querySelector('#movediv');
	            var computedStyle = document.defaultView.getComputedStyle(dragBoxs, null);
	            newState.left = computedStyle.left;
	            newState.top = computedStyle.top;
	            /*以上为修改处*/
	            this.setState(newState);
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(event) {
	            var newState = {};
	            var name = event.target.name;
	            newState[name] = name == "checked" ? event.target.checked : event.target.value;
	            this.setState(newState);
	        }
	    }, {
	        key: 'move',
	        value: function move(event) {
	            var e = event ? event : window.event;
	            var dBox = this.refs.dragBox;
	            if (this.state.flag) {
	                var nowX = e.clientX,
	                    nowY = e.clientY;
	                var disX = nowX - this.state.currentX,
	                    disY = nowY - this.state.currentY;
	                /*增加拖拽范围检测*/
	                var currentLeft = parseInt(this.state.left) + disX;
	                var currentTop = parseInt(this.state.top) + disY;
	                var docX = document.documentElement.clientWidth || document.body.clientWidth;
	                var docY = document.documentElement.clientHeight || document.body.clientHeight;
	                if (currentLeft <= 0) {
	                    //检测屏幕左边，因为我这里的初始居中是利用了负1/2的盒子宽度，所以用250px判断边界
	                    dBox.style.left = 0 + "px";
	                } else if (currentLeft >= docX - dBox.offsetWidth) {
	                    dBox.style.left = docX - this.state.offsetX + "px";
	                } else {
	                    dBox.style.left = currentLeft + "px";
	                }
	                if (currentTop <= 50) {
	                    //检测屏幕上边，因为我这里的初始居中是利用了负1/2的盒子高度，所以用200px判断边界
	                    dBox.style.top = 50 + "px";
	                } else if (currentTop >= docY - dBox.offsetHeight - 160) {
	                    dBox.style.top = docY - this.state.offsetY + "px";
	                } else {
	                    dBox.style.top = currentTop + "px";
	                }
	            }
	        }
	    }, {
	        key: 'endDrag',
	        value: function endDrag() {
	            var computedStyle = document.defaultView.getComputedStyle(this.refs.dragBox, null);
	            this.setState({
	                left: computedStyle.left,
	                top: computedStyle.top,
	                flag: false
	            });
	        }
	        /*
	        组件被装载后才会被调用，也就是说调用这个方法的时候，
	        组件已经被渲染到了页面上，
	        这个时候可以修改DOM。
	        此时把相应的docume事件绑定到上面
	        */

	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this3 = this;

	            document.addEventListener('mousemove', function (e) {
	                _this3.move(e);
	            }, false); /*ES6新特性，箭头函数，需要依赖jsx编译工具才能正确运行*/
	            document.addEventListener('mouseup', function (e) {
	                _this3.endDrag(e);
	            }, false);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _moveVideo2.default['movediv'], id: 'movediv', ref: 'dragBox' },
	                _react2.default.createElement(DragArea, { callbackParent: this.onChildChanged.bind(this) }),
	                _react2.default.createElement(
	                    'div',
	                    { className: this.props.classname1, style: this.props.style },
	                    _react2.default.createElement('div', { className: this.props.classname2, onClick: this.props.onclick }),
	                    _react2.default.createElement('iframe', {
	                        width: '100%',
	                        height: '138%',
	                        allowFullScreen: true,
	                        className: this.props.style2,
	                        src: './video.html?lon=' + this.props.lon + '&lat=' + this.props.lat
	                    })
	                )
	            );
	        }
	    }]);

	    return Movediv;
	}(_react.Component);

	exports.default = Movediv;

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(286);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./moveVideo.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./moveVideo.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "\r\n._2puOldF2InENHxNSBvg3oQ{\r\n\t\r\n        width: 663.2px;\r\n    height: 406px;\r\n\tleft: 240.9px;\r\n\tposition: absolute;\r\n\ttop:40%;\r\n\tz-index: 999;\r\n}\r\n.tN9Y4wfajEUSXYolHvbKW{\r\n\tposition: absolute;\r\n\ttop:50px;\r\n\tleft: 0px;\r\n\twidth: 100%;\r\n\theight: 100px;\r\n\tz-index:999;\r\n\tcursor: move;\r\n}\r\n\r\n", ""]);

	// exports
	exports.locals = {
		"movediv": "_2puOldF2InENHxNSBvg3oQ",
		"drag": "tN9Y4wfajEUSXYolHvbKW"
	};

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	    return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () {
	    function defineProperties(target, props) {
	        for (var i = 0; i < props.length; i++) {
	            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	        }
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	}();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _TibetPanorama = __webpack_require__(288);

	var _TibetPanorama2 = _interopRequireDefault(_TibetPanorama);

	var _moveVideo = __webpack_require__(284);

	var _moveVideo2 = _interopRequireDefault(_moveVideo);

	function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	}

	function _possibleConstructorReturn(self, call) {
	    if (!self) {
	        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	    }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	    if (typeof superClass !== "function" && superClass !== null) {
	        throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var GeoVis = window.GeoVis;
	var Engine = window.Engine;

	var TibetPanorama = function (_Component) {
	    _inherits(TibetPanorama, _Component);

	    function TibetPanorama() {
	        _classCallCheck(this, TibetPanorama);

	        return _possibleConstructorReturn(this, (TibetPanorama.__proto__ || Object.getPrototypeOf(TibetPanorama)).apply(this, arguments));
	    }

	    _createClass(TibetPanorama, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.state = {
	                isPanorama: false,
	                lon: 0,
	                lat: 0
	            };
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            var state = this.state;
	            // 添加两条路矢量
	            this.earth = window.earth;
	            this.layer = new GeoVis.TileLayer('http://a.tile.openstreetmap.org/{z}/{x}/{y}.png', {
	                projection: 'EPSG:900913'
	            }).addTo(this.earth.layers);
	            var url = 'http://192.168.4.229:28080/beyonserver/beyondb/wms?service=WMS&version=1.1.0&request=GetMap&layers=beyondb:vt_qianjingpoint_c_v01' + '&styles=&bbox=97.115479,30.019896,97.268278,30.108056&width=768&height=443&srs=EPSG:4326&format=application%2Fjson%3Btype%3Dgeojson';
	            this.geojson = new GeoVis.GeoJson(url, {
	                markerSize: 16,
	                markerColor: new GeoVis.Color(0 / 255, 0 / 255, 255 / 255, 1.0)
	            }).addTo(this.earth);
	            this.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            this.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(97.125479, 29.951896, 5000.0),
	                orientation: {
	                    heading: Engine.Math.toRadians(0.0),
	                    pitch: Engine.Math.toRadians(-35.0),
	                    roll: 0.0
	                }
	            });

	            this.geojson.on('finish', function (geojson) {
	                console.log(geojson);
	                _this2.earth.on('leftUp', function (event) {
	                    var point = _this2.earth.scene.pick(new Engine.Cartesian2(event.windowPosition[0], event.windowPosition[1]));
	                    if (point) {
	                        if (point.id) {
	                            console.log(point);
	                            state.isPanorama = state.isPanorama === false ? true : state.isPanorama;
	                            state.lon = event.position[0];
	                            state.lat = event.position[1];
	                            _this2.setState(state);
	                        } else {
	                            console.log(point);
	                            state.isPanorama = state.isPanorama === false ? true : state.isPanorama;
	                            state.lon = event.position[0];
	                            state.lat = event.position[1];
	                            _this2.setState(state);
	                            // this.loadPanorama({ lon: event.position[0], lat: event.position[1] });
	                        }
	                    } else {
	                        console.log('此处无街景');
	                    }
	                });
	                _this2.leftUpIndex = _this2.earth._listeners['leftUp'].length - 1;
	            });

	            window.abc = function (lon, lat, heading) {
	                // console.log(lon, lat);
	                // console.log(document.getElementsByClassName());
	                if (!_this2.marker) _this2.marker = new GeoVis.Marker([lon, lat], {
	                    iconUrl: "./assets/图层-10-拷贝-2.png",
	                    width: 30,
	                    height: 30
	                }).addTo(_this2.earth.features);else {
	                    _this2.marker.lon = lon;
	                    _this2.marker.lat = lat;
	                }
	                console.log(_this2.marker);

	                _this2.marker.element.style.transform = 'rotate(' + (heading - 45) + 'deg)';
	                _this2.marker.element.style.width = '30px';
	                _this2.marker.element.style.height = '40px';
	                // console.log(this.marker ? this.marker.lon + ', ' + this.marker.lat : '(0, 0)');
	            };
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            // alert('remove');
	            this.layer.removeFrom(this.earth.layers);
	            if (this.marker) {
	                this.marker.removeFrom(this.earth.features);
	                this.marker = undefined;
	            }
	            this.geojson.removeFrom(this.earth);
	            console.log(this.leftUpIndex);
	            // this.earth.off('leftUp', this.loadPanorama.bind(this));
	            this.earth._listeners['leftUp'].splice(this.leftUpIndex, 1);
	            this.earth = undefined;
	        }
	    }, {
	        key: 'fetchData',
	        value: function fetchData(url, earth, callback) {
	            var _this3 = this;

	            fetch(url).then(function (response) {
	                // console.log(response);
	                response.json().then(function (data) {
	                    data.features.forEach(function (value, key) {
	                        var point = new GeoVis.Point(value.geometry.coordinates, {
	                            color: new GeoVis.Color(255 / 255, 0 / 255, 32 / 255, 1.0),
	                            pixelSize: 32
	                        }).addTo(earth.features);
	                        point.id = value.id;
	                        point.properties = value.properties;
	                        _this3.points.set(value.id, point);
	                    });
	                    callback();
	                });
	            }).catch(function (err) {
	                console.error(err);
	            });
	        }
	    }, {
	        key: 'close',
	        value: function close() {
	            var state = this.state;
	            state.isPanorama = false;
	            this.setState(state);
	            this.marker.removeFrom(this.earth.features);
	            this.marker = undefined;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var panoWidth = window.innerWidth / window.innerHeight > 1.2 ? window.innerHeight * 1.2 / 2 + 70 : window.innerWidth;
	            var panoStyle = {
	                width: panoWidth + 'px',
	                height: window.innerHeight / 2 + 'px',
	                left: (window.innerWidth - panoWidth) / 2 + 'px'
	            };
	            var panorama = this.state.isPanorama === true ? _react2.default.createElement(_moveVideo2.default, { classname1: _TibetPanorama2.default.panorama, classname2: _TibetPanorama2.default.close, style: panoStyle, onclick: this.close.bind(this), lon: this.state.lon, lat: this.state.lat, style2: _TibetPanorama2.default.frameStyle })
	            // <MoveVideo> </MoveVideo>
	            : null;
	            return _react2.default.createElement('div', null, panorama);
	        }
	    }]);

	    return TibetPanorama;
	}(_react.Component);

	exports.default = TibetPanorama;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "TibetPanorama.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(289);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./TibetPanorama.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./TibetPanorama.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._2Uqk6gRka8Vvh2M8Wa6hcw {\r\n    \r\n    bottom: 0;\r\n    /* right: 0; */\r\n    z-index: 10;\r\n}\r\n\r\n._2PQ8h0UUeMUyOC3NmMALoF {\r\n    position: absolute;\r\n    top: 14px;\r\n    right: 4px;\r\n    height: 26px;\r\n    width: 26px;\r\n    /* background-color: #fff; */\r\n    /* border: 1px solid #999; */\r\n    /* border-color: rgba(0, 0, 0, 0.4); */\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    background-image: url(./assets/关闭1.png);\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    z-index: 1;\r\n}\r\n\r\n._2PQ8h0UUeMUyOC3NmMALoF:hover {\r\n    background-image: url(./assets/close.red.svg);\r\n}\r\n\r\n.IK2kXsq4jXLlwMf7_So_g {\r\n    border: none;\r\n    border-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    position: absolute;\r\n    overflow: hidden;\r\n}", ""]);

	// exports
	exports.locals = {
		"panorama": "_2Uqk6gRka8Vvh2M8Wa6hcw",
		"close": "_2PQ8h0UUeMUyOC3NmMALoF",
		"frameStyle": "IK2kXsq4jXLlwMf7_So_g"
	};

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	    return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () {
	    function defineProperties(target, props) {
	        for (var i = 0; i < props.length; i++) {
	            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	        }
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	}();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _OgasawaraIslands = __webpack_require__(291);

	var _OgasawaraIslands2 = _interopRequireDefault(_OgasawaraIslands);

	function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	}

	function _possibleConstructorReturn(self, call) {
	    if (!self) {
	        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	    }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
	    if (typeof superClass !== "function" && superClass !== null) {
	        throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
	    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var GeoVis = window.GeoVis;
	var Engine = window.Engine;

	var OgasawaraIslands = function (_Component) {
	    _inherits(OgasawaraIslands, _Component);

	    function OgasawaraIslands() {
	        _classCallCheck(this, OgasawaraIslands);

	        return _possibleConstructorReturn(this, (OgasawaraIslands.__proto__ || Object.getPrototypeOf(OgasawaraIslands)).apply(this, arguments));
	    }

	    _createClass(OgasawaraIslands, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.state = {
	                isPanorama: false,
	                geoid: undefined,
	                lon: 0,
	                lat: 0,
	                yaw: 0
	            };
	            this.isPanoramaLoad = false;
	            this.isLeftDown = false;
	            this.lastsegments = [];
	            this.lastpoints = [];
	            this.pointsMap = new Map();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var state = this.state;
	            // 添加两条路矢量
	            this.earth = window.earth;
	            this.layer = new GeoVis.TileLayer('http://a.tile.openstreetmap.org/{z}/{x}/{y}.png', {
	                projection: 'EPSG:900913'
	            }).addTo(this.earth.layers);
	            this.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            this.earth.camera.flyTo({
	                destination: Engine.Cartesian3.fromDegrees(142.204728, 27.018492, 5000.0),
	                orientation: {
	                    heading: Engine.Math.toRadians(0.0),
	                    pitch: Engine.Math.toRadians(-35.0),
	                    roll: 0.0
	                }
	            });

	            this.init();
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            this.layer.removeFrom(this.earth.layers);
	            if (this.marker) {
	                this.marker.removeFrom(this.earth.features);
	                this.marker = undefined;
	            }
	            this.removePoints();
	            this.earth._listeners['leftUp'].splice(this.earth._listeners['leftUp'].length - 1, 1);
	            this.earth._listeners['mouseMove'].splice(this.earth._listeners['mouseMove'].length - 1, 1);
	            this.earth._listeners['leftDown'].splice(this.earth._listeners['leftDown'].length - 1, 1);
	            this.earth._listeners['wheel'].splice(this.earth._listeners['wheel'].length - 1, 1);
	        }
	    }, {
	        key: 'getBBOX',
	        value: function getBBOX() {
	            var earth = this.earth;
	            var positionArray = [];
	            var leftUp = { x: 0, y: 0 },
	                rightUp = { x: 0, y: 0 },
	                leftDown = { x: 0, y: 0 },
	                rightDown = { x: 0, y: 0 };
	            var upHeight = 0;
	            var windowPositionsLeftUp = new Engine.Cartesian2(0, upHeight);
	            var cartesian = earth.camera.pickEllipsoid(windowPositionsLeftUp, earth.scene.globe.ellipsoid);
	            while (!Engine.defined(cartesian) && upHeight < screen.height) {
	                windowPositionsLeftUp = new Engine.Cartesian2(0, upHeight);
	                cartesian = earth.camera.pickEllipsoid(windowPositionsLeftUp, earth.scene.globe.ellipsoid);
	                upHeight++;
	            }
	            if (Engine.defined(cartesian)) {
	                var cartographic = Engine.Cartographic.fromCartesian(cartesian);
	                var longitudeString = Engine.Math.toDegrees(cartographic.longitude).toFixed(6);
	                var latitudeString = Engine.Math.toDegrees(cartographic.latitude).toFixed(6);
	                leftUp = { x: longitudeString, y: latitudeString };
	            }
	            var windowPositionsRightUp = new Engine.Cartesian2(screen.width, upHeight);
	            cartesian = earth.camera.pickEllipsoid(windowPositionsRightUp, earth.scene.globe.ellipsoid);
	            if (Engine.defined(cartesian)) {
	                var _cartographic = Engine.Cartographic.fromCartesian(cartesian);
	                var _longitudeString = Engine.Math.toDegrees(_cartographic.longitude).toFixed(6);
	                var _latitudeString = Engine.Math.toDegrees(_cartographic.latitude).toFixed(6);
	                rightUp = { x: _longitudeString, y: _latitudeString };
	            } else rightUp = leftUp;
	            var windowPositionsLeftDown = new Engine.Cartesian2(0, screen.height);
	            cartesian = earth.camera.pickEllipsoid(windowPositionsLeftDown, earth.scene.globe.ellipsoid);
	            if (Engine.defined(cartesian)) {
	                var _cartographic2 = Engine.Cartographic.fromCartesian(cartesian);
	                var _longitudeString2 = Engine.Math.toDegrees(_cartographic2.longitude).toFixed(6);
	                var _latitudeString2 = Engine.Math.toDegrees(_cartographic2.latitude).toFixed(6);
	                leftDown = { x: _longitudeString2, y: _latitudeString2 };
	            }
	            var windowPositionsRightDown = new Engine.Cartesian2(screen.width, screen.height);
	            cartesian = earth.camera.pickEllipsoid(windowPositionsRightDown, earth.scene.globe.ellipsoid);
	            if (Engine.defined(cartesian)) {
	                var _cartographic3 = Engine.Cartographic.fromCartesian(cartesian);
	                var _longitudeString3 = Engine.Math.toDegrees(_cartographic3.longitude).toFixed(6);
	                var _latitudeString3 = Engine.Math.toDegrees(_cartographic3.latitude).toFixed(6);
	                rightDown = { x: _longitudeString3, y: _latitudeString3 };
	            }
	            positionArray.push(Math.min(leftUp.x, rightUp.x, leftDown.x, rightDown.x));
	            positionArray.push(Math.min(leftUp.y, rightUp.y, leftDown.y, rightDown.y));
	            positionArray.push(Math.max(leftUp.x, rightUp.x, leftDown.x, rightDown.x));
	            positionArray.push(Math.max(leftUp.y, rightUp.y, leftDown.y, rightDown.y));
	            return positionArray;
	        }
	    }, {
	        key: 'getSegmentInfo',
	        value: function getSegmentInfo(pos) {
	            var _this2 = this;

	            this.fetchData('http://192.168.44.56:8080/geowebcache/street/google_sqlite/query?gridSet=EPSG:4326&format=image/png&BBOX=' + pos[0] + ',' + pos[1] + ',' + pos[2] + ',' + pos[3], function (msg) {
	                if (msg.total > 0) {
	                    try {
	                        var points = JSON.parse(msg.results);
	                        if (points instanceof Array) {
	                            var _iteratorNormalCompletion = true;
	                            var _didIteratorError = false;
	                            var _iteratorError = undefined;

	                            try {
	                                var _loop = function _loop() {
	                                    var p = _step.value;

	                                    if (_this2.lastsegments.indexOf(p.segmentid) < 0) {
	                                        setTimeout(function () {
	                                            _this2.requestPoints(p.segmentid);
	                                        }, 1000);
	                                        // console.log(p.segmentid);
	                                    } else {
	                                        _this2.lastsegments.splice(_this2.lastsegments.indexOf(p.segmentid), 1);
	                                    }
	                                };

	                                for (var _iterator = points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                                    _loop();
	                                }
	                                // removeSegments(lastsegments);
	                            } catch (err) {
	                                _didIteratorError = true;
	                                _iteratorError = err;
	                            } finally {
	                                try {
	                                    if (!_iteratorNormalCompletion && _iterator.return) {
	                                        _iterator.return();
	                                    }
	                                } finally {
	                                    if (_didIteratorError) {
	                                        throw _iteratorError;
	                                    }
	                                }
	                            }

	                            _this2.lastsegments = [];
	                            var _iteratorNormalCompletion2 = true;
	                            var _didIteratorError2 = false;
	                            var _iteratorError2 = undefined;

	                            try {
	                                for (var _iterator2 = points[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                                    var _p = _step2.value;

	                                    _this2.lastsegments.push(_p.segmentid);
	                                }
	                            } catch (err) {
	                                _didIteratorError2 = true;
	                                _iteratorError2 = err;
	                            } finally {
	                                try {
	                                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                                        _iterator2.return();
	                                    }
	                                } finally {
	                                    if (_didIteratorError2) {
	                                        throw _iteratorError2;
	                                    }
	                                }
	                            }
	                        }
	                    } catch (e) {
	                        console.log(e);
	                    }
	                }
	            });
	        }
	    }, {
	        key: 'requestPoints',
	        value: function requestPoints(segmentid) {
	            var _this3 = this;

	            this.fetchData('http://192.168.44.56:8080/geowebcache/street/google_sqlite/panojson?gridSet=EPSG:4326&format=image/png&SEGMENTID=' + segmentid, function (msg) {
	                if (msg.total > 0) {
	                    try {
	                        var points = JSON.parse(msg.results);
	                        if (points instanceof Array) {
	                            var _iteratorNormalCompletion3 = true;
	                            var _didIteratorError3 = false;
	                            var _iteratorError3 = undefined;

	                            try {
	                                for (var _iterator3 = points[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                                    var _p2 = _step3.value;

	                                    if (_this3.lastpoints.indexOf(_p2.segmentid) < 0) {
	                                        _this3.addPoint(_p2);
	                                    } else {
	                                        _this3.lastpoints.splice(_this3.lastpoints.indexOf(_p2.geoid), 1);
	                                    }
	                                }
	                                // removePoints(lastpoints);
	                            } catch (err) {
	                                _didIteratorError3 = true;
	                                _iteratorError3 = err;
	                            } finally {
	                                try {
	                                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                                        _iterator3.return();
	                                    }
	                                } finally {
	                                    if (_didIteratorError3) {
	                                        throw _iteratorError3;
	                                    }
	                                }
	                            }

	                            _this3.lastpoints = [];
	                            var _iteratorNormalCompletion4 = true;
	                            var _didIteratorError4 = false;
	                            var _iteratorError4 = undefined;

	                            try {
	                                for (var _iterator4 = points[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	                                    var _p3 = _step4.value;
	                                    _this3.lastpoints.push(_p3.geoid);
	                                }
	                            } catch (err) {
	                                _didIteratorError4 = true;
	                                _iteratorError4 = err;
	                            } finally {
	                                try {
	                                    if (!_iteratorNormalCompletion4 && _iterator4.return) {
	                                        _iterator4.return();
	                                    }
	                                } finally {
	                                    if (_didIteratorError4) {
	                                        throw _iteratorError4;
	                                    }
	                                }
	                            }
	                        }
	                    } catch (e) {
	                        console.error(e);
	                    }
	                }
	            });
	        }
	    }, {
	        key: 'addPoint',
	        value: function addPoint(p) {
	            // console.log(p.geoid);
	            if (!this.pointsMap.has(p.geoid)) {
	                var point = new GeoVis.Point([parseFloat(p.lng), parseFloat(p.lat), 10], {
	                    id: p.geoid,
	                    color: new GeoVis.Color(255 / 255, 0 / 255, 32 / 255, 1.0),
	                    pixelSize: 8
	                }).addTo(window.earth.features);
	                // console.log(point);
	                // point.id = p.geoid;
	                // point.on('click', () => { alert('ddd'); });
	                this.pointsMap.set(p.geoid, point);
	            }
	        }
	    }, {
	        key: 'removePoints',
	        value: function removePoints() {
	            var _this4 = this;

	            this.pointsMap.forEach(function (value, key) {
	                value.removeFrom(window.earth.features);
	                _this4.pointsMap.delete(key);
	            });
	        }
	    }, {
	        key: 'loadPanorama',
	        value: function loadPanorama(options) {
	            var _this5 = this;

	            var url = '';
	            var state = this.state;
	            if (typeof options === 'string') {
	                url = 'http://192.168.44.56:8080/geowebcache/street/google_sqlite/panojson?gridSet=EPSG:4326&format=image/png&GEOID=' + options;
	            } else {
	                url = 'http://192.168.44.56:8080/geowebcache/street/google_sqlserver/panojson?gridSet=EPSG:4326&format=image/png&LOCATION=' + options.lon + ',' + options.lat;
	            }
	            this.fetchData(url, function (msg) {
	                try {
	                    var config = JSON.parse(msg.results);
	                    if (_this5.isPanoramaLoad === false) {
	                        state.isPanorama = true;
	                        state.geoid = config.geoid;
	                        state.lon = parseFloat(config.lng);
	                        state.lat = parseFloat(config.lat);
	                        state.yaw = parseFloat(config.yaw);
	                        _this5.setState(state);
	                        _this5.isPanoramaLoad = true;
	                    }
	                } catch (e) {
	                    console.error(e);
	                }
	            });
	        }
	    }, {
	        key: 'close',
	        value: function close() {
	            this.setState({
	                isPanorama: false,
	                geoid: undefined,
	                lon: 0,
	                lat: 0,
	                yaw: 0
	            });
	            this.isPanoramaLoad = false;
	        }
	    }, {
	        key: 'init',
	        value: function init() {
	            var _this6 = this;

	            var earth = window.earth;
	            earth.on('mouseMove', function (event) {
	                if (_this6.isLeftDown === true) {
	                    var position = _this6.getBBOX();
	                    if (position[2] - position[0] <= 0.01 && position[3] - position[1] <= 0.01) {
	                        console.log(position);
	                        _this6.getSegmentInfo(position);
	                    }
	                }
	            });
	            earth.on('leftDown', function (event) {
	                _this6.isLeftDown = true;
	            });
	            earth.on('leftUp', function (event) {
	                _this6.isLeftDown = false;
	                // pick points;
	                // console.log(event.windowPosition);
	                var point = earth.scene.pick(new Engine.Cartesian2(event.windowPosition[0], event.windowPosition[1]));
	                if (point) {
	                    console.log(point);
	                    if (point.id) {
	                        _this6.loadPanorama(point.id);
	                    } else {
	                        _this6.loadPanorama({ lon: event.position[0], lat: event.position[1] });
	                    }
	                } else {
	                    console.log('此处无街景');
	                }
	            });
	            earth.on('wheel', function (event) {
	                var position = Engine.Cartographic.fromCartesian(earth.camera.position);
	                if (position.height < 8000) {
	                    var pos = _this6.getBBOX();
	                    if (pos[2] - pos[0] <= 1 && pos[3] - pos[1] <= 1) {
	                        console.log(pos);
	                        _this6.getSegmentInfo(pos);
	                    }
	                } else {
	                    _this6.removePoints();
	                }
	            });
	        }
	    }, {
	        key: 'fetchData',
	        value: function fetchData(url, callback) {
	            fetch(url).then(function (response) {
	                // console.log(response);
	                response.json().then(function (data) {
	                    callback(data);
	                });
	            }).catch(function (err) {
	                console.error(err);
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            // const canvas = document.getElementById('geovis-earth');
	            // const panoWidth = canvas.offsetWidth / canvas.offsetHeight > 1.2 ? canvas.offsetHeight * 1.2 / 2 + 70 : canvas.offsetWidth;
	            // const panoStyle = {
	            //     width: `${panoWidth}px`,
	            //     height: `${canvas.offsetHeight / 2}px`,
	            //     left: `${(canvas.offsetWidth - panoWidth) / 2}px`
	            // }
	            var panorama = this.state.isPanorama === true ? _react2.default.createElement('div', { className: _OgasawaraIslands2.default.panorama }, _react2.default.createElement('div', { className: _OgasawaraIslands2.default.close, onClick: this.close.bind(this) }), _react2.default.createElement('iframe', {
	                width: '100%',
	                height: '100%',
	                allowFullScreen: true,
	                className: _OgasawaraIslands2.default.panorama,
	                src: './google_sqlite.html?geoid=' + this.state.geoid + '&lon=' + this.state.lon + '&lat=' + this.state.lat + '&yaw=' + this.state.yaw
	            })) : null;
	            return _react2.default.createElement('div', null, panorama);
	        }
	    }]);

	    return OgasawaraIslands;
	}(_react.Component);

	exports.default = OgasawaraIslands;

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("D:\\geovisExpolor\\gitgitgitgit\\global_phone\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "OgasawaraIslands.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(292);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./OgasawaraIslands.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./OgasawaraIslands.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._1hcKT8wR8Pj563pAJrN1W- {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 99%;\r\n    width: 100%;\r\n    margin: 0;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    font-family: sans-serif;\r\n}\r\n\r\n._2jXG0WUEu_oORHcjqUpuTQ {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 12;\r\n}\r\n\r\n._2LOctdCxk3WcNEQcPSUeIF {\r\n    position: absolute;\r\n    top: 4px;\r\n    right: 4px;\r\n    height: 26px;\r\n    width: 26px;\r\n    background-color: #fff;\r\n    border: 1px solid #999;\r\n    border-color: rgba(0, 0, 0, 0.4);\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    background-image: url(./assets/close.black.svg);\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    z-index: 13;\r\n}\r\n\r\n._2LOctdCxk3WcNEQcPSUeIF:hover {\r\n    background-image: url(./assets/close.red.svg);\r\n}", ""]);

	// exports
	exports.locals = {
		"fullSize": "_1hcKT8wR8Pj563pAJrN1W-",
		"panorama": "_2jXG0WUEu_oORHcjqUpuTQ",
		"close": "_2LOctdCxk3WcNEQcPSUeIF"
	};

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _home = __webpack_require__(189);

	var _home2 = _interopRequireDefault(_home);

	var _land = __webpack_require__(233);

	var _land2 = _interopRequireDefault(_land);

	var _themeHead = __webpack_require__(236);

	var _themeHead2 = _interopRequireDefault(_themeHead);

	var _Earth = __webpack_require__(294);

	var _Earth2 = _interopRequireDefault(_Earth);

	var _globalPerson = __webpack_require__(242);

	var _globalPerson2 = _interopRequireDefault(_globalPerson);

	var _tianJinExplosion = __webpack_require__(247);

	var _tianJinExplosion2 = _interopRequireDefault(_tianJinExplosion);

	var _globalPolyline = __webpack_require__(252);

	var _globalPolyline2 = _interopRequireDefault(_globalPolyline);

	var _chinaTrain = __webpack_require__(254);

	var _chinaTrain2 = _interopRequireDefault(_chinaTrain);

	var _beijingDisaster = __webpack_require__(255);

	var _beijingDisaster2 = _interopRequireDefault(_beijingDisaster);

	var _globalSeismic = __webpack_require__(257);

	var _globalSeismic2 = _interopRequireDefault(_globalSeismic);

	var _educationCollage = __webpack_require__(258);

	var _educationCollage2 = _interopRequireDefault(_educationCollage);

	var _educationMiddleschool = __webpack_require__(259);

	var _educationMiddleschool2 = _interopRequireDefault(_educationMiddleschool);

	var _educationPrimaryschool = __webpack_require__(260);

	var _educationPrimaryschool2 = _interopRequireDefault(_educationPrimaryschool);

	var _educationKindergarten = __webpack_require__(261);

	var _educationKindergarten2 = _interopRequireDefault(_educationKindergarten);

	var _educationTechnicalschool = __webpack_require__(262);

	var _educationTechnicalschool2 = _interopRequireDefault(_educationTechnicalschool);

	var _beijingBus = __webpack_require__(263);

	var _beijingBus2 = _interopRequireDefault(_beijingBus);

	var _SmartGPhone = __webpack_require__(312);

	var _SmartGPhone2 = _interopRequireDefault(_SmartGPhone);

	var _chinaPerson = __webpack_require__(268);

	var _chinaPerson2 = _interopRequireDefault(_chinaPerson);

	var _chinaOldPerson = __webpack_require__(278);

	var _chinaOldPerson2 = _interopRequireDefault(_chinaOldPerson);

	var _chinaWorker = __webpack_require__(279);

	var _chinaWorker2 = _interopRequireDefault(_chinaWorker);

	var _personGlobal = __webpack_require__(280);

	var _personGlobal2 = _interopRequireDefault(_personGlobal);

	var _TibetPanorama = __webpack_require__(287);

	var _TibetPanorama2 = _interopRequireDefault(_TibetPanorama);

	var _OgasawaraIslands = __webpack_require__(290);

	var _OgasawaraIslands2 = _interopRequireDefault(_OgasawaraIslands);

	var _chengdu = __webpack_require__(265);

	var _chengdu2 = _interopRequireDefault(_chengdu);

	var _reactRouterDom = __webpack_require__(190);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var EarthTheme = function EarthTheme(_ref) {
	  var match = _ref.match;
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(_Earth2.default, null),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/1970\u5E74\u5168\u7403\u4EBA\u53E3', component: _globalPerson2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5929\u6D25\u7206\u70B8', component: _tianJinExplosion2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5168\u7403\u822A\u7EBF', component: _globalPolyline2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5168\u56FD\u706B\u8F66\u7AD9', component: _chinaTrain2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5317\u4EAC\u5730\u8D28\u707E\u5BB3', component: _beijingDisaster2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5168\u7403\u5730\u9707\u5206\u5E03', component: _globalSeismic2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5168\u56FD\u5927\u5B66\u5206\u5E03', component: _educationCollage2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5317\u4EAC\u4E2D\u5B66\u5206\u5E03', component: _educationMiddleschool2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5168\u56FD\u4E3B\u8981\u57CE\u5E02\u5C0F\u5B66\u5206\u5E03', component: _educationPrimaryschool2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5168\u56FD\u4E3B\u8981\u57CE\u5E02\u5E7C\u513F\u56ED\u5206\u5E03', component: _educationKindergarten2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5168\u56FD\u6280\u672F\u9662\u6821\u5206\u5E03', component: _educationTechnicalschool2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u4E2D\u56FD\u4EBA\u53E3\u6BD4\u4F8B', component: _chinaPerson2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u4E2D\u56FD\u8001\u5E74\u4EBA\u53E3\u6BD4\u4F8B', component: _chinaOldPerson2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u4E2D\u56FD\u5C31\u4E1A\u4EBA\u53E3', component: _chinaWorker2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5168\u7403\u4EBA\u53E3', component: _personGlobal2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u5317\u4EAC\u5E02\u516C\u4EA4\u7EBF\u8DEF\u5BC6\u5EA6\u5206\u5E03', component: _beijingBus2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u6210\u90FD3D\u56FE', component: _chengdu2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { path: match.url + '/\u897F\u85CF-\u5DDD\u85CF\u516C\u8DEF', component: _TibetPanorama2.default }),
	    _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: match.url, render: function render() {
	        return _react2.default.createElement(
	          'h1',
	          null,
	          '\u65E0\u6B64\u4E13\u9898'
	        );
	      } })
	  );
	};

	var BasicExample = function BasicExample() {
	  return _react2.default.createElement(
	    _reactRouterDom.HashRouter,
	    null,
	    _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/', component: _home2.default }),
	      _react2.default.createElement(_reactRouterDom.Route, { path: '/land', component: _land2.default }),
	      _react2.default.createElement(_reactRouterDom.Route, { path: '/themeHead', component: _themeHead2.default }),
	      _react2.default.createElement(_reactRouterDom.Route, { path: '/earth', component: EarthTheme }),
	      _react2.default.createElement(_reactRouterDom.Route, { path: '/smartGPhone', component: _SmartGPhone2.default })
	    )
	  );
	};

	exports.default = BasicExample;

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _themeDom = __webpack_require__(295);

	var _themeDom2 = _interopRequireDefault(_themeDom);

	var _sizeChange = __webpack_require__(307);

	var _sizeChange2 = _interopRequireDefault(_sizeChange);

	var _Earth = __webpack_require__(310);

	var _Earth2 = _interopRequireDefault(_Earth);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 项目：Global
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 文件：Earth.js
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 作者：qianjing
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 部门：产品研发部
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 邮箱：jqian@mail.ie.ac.cn
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 日期：2017-XX-XX HH:MM:SS
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 用途：
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	// import GeoVis from '../../../thirdParty/GeoVis-0.8.4/GeoVis';


	var GeoVis = window.GeoVis;
	var Engine = window.Engine;

	var Earth = function (_Component) {
	    _inherits(Earth, _Component);

	    function Earth(props) {
	        _classCallCheck(this, Earth);

	        var _this = _possibleConstructorReturn(this, (Earth.__proto__ || Object.getPrototypeOf(Earth)).call(this, props));

	        _this.state = {
	            isReady: false
	        };
	        return _this;
	    }

	    _createClass(Earth, [{
	        key: 'valueChange',
	        value: function valueChange() {
	            this.setState({
	                currentVal: document.querySelector('.range').value
	            });
	        }
	    }, {
	        key: 'actionValue',
	        value: function actionValue(event) {
	            var re = this;
	            //开始暂停      
	            if (event.target.src.slice(event.target.src.indexOf("assets")) == 'assets/bobo.png') {
	                clearInterval(re.clock);
	            } else {
	                re.clock = setInterval(function () {
	                    if (document.querySelector('.range').value >= re.state.max) {
	                        clearInterval(re.clock);
	                    }
	                    document.querySelector('.range').value++;
	                    re.setState({
	                        currentVal: document.querySelector('.range').value
	                    });
	                    console.log(re.state.currentVal);
	                }, 1000);
	            }
	        }
	    }, {
	        key: 'clickfun',
	        value: function clickfun(event) {
	            var re = this;
	            var currentBtn = void 0;
	            if (event.target.firstChild) {
	                currentBtn = event.target.firstChild.src.slice(event.target.firstChild.src.indexOf("assets"));
	            } else {
	                currentBtn = event.target.src.slice(event.target.src.indexOf("assets"));
	            }
	            switch (currentBtn) {
	                case 'assets/tongji.png':
	                    console.log("统计");
	                    break;
	                case 'assets/shixu.png':
	                    if (re.state.isvisible) {
	                        re.setState({ isvisible: '' });
	                    } else {
	                        re.setState({ isvisible: '' + _Earth2.default['isvisible'] });
	                    }
	                    break;
	                case 'assets/fenji.png':
	                    console.log("分级....");
	                    break;
	                default:
	                    alert("无此数据");
	            }
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            window.earth = new GeoVis.Earth('geovis-earth');
	            var layer = new GeoVis.MultiTypeLayer('img').addTo(window.earth.layers);
	            window.earth.scene.mode = Engine.SceneMode.SCENE2D;
	            if (window.earth) {
	                this.setState({ isReady: true });
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement('div', { id: 'geovis-earth', className: _Earth2.default['geovis-earth'] }),
	                this.state.isReady ? _react2.default.createElement(_themeDom2.default, { clickfun: this.clickfun.bind(this) }) : '',
	                this.state.isReady ? _react2.default.createElement(_sizeChange2.default, null) : ''
	            );
	        }
	    }]);

	    return Earth;
	}(_react.Component);

	exports.default = Earth;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _themeDom = __webpack_require__(296);

	var _themeDom2 = _interopRequireDefault(_themeDom);

	var _themeHead = __webpack_require__(236);

	var _themeHead2 = _interopRequireDefault(_themeHead);

	var _navSlider = __webpack_require__(298);

	var _navSlider2 = _interopRequireDefault(_navSlider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ThemeDom = function (_Component) {
	    _inherits(ThemeDom, _Component);

	    function ThemeDom(props) {
	        _classCallCheck(this, ThemeDom);

	        var _this = _possibleConstructorReturn(this, (ThemeDom.__proto__ || Object.getPrototypeOf(ThemeDom)).call(this, props));

	        _this.state = {
	            isShixu: false
	        };
	        return _this;
	    }

	    _createClass(ThemeDom, [{
	        key: 'onChildClick',
	        value: function onChildClick(e) {

	            if (e.target.innerText === '中国人口') {

	                this.setState({
	                    isShixu: true
	                });
	            }
	        }
	    }, {
	        key: 'actionTool',
	        value: function actionTool(event) {
	            console.log(event.target.parentNode.style.borderColor);
	            if (!event.target.parentNode.style.borderColor || event.target.parentNode.style.borderColor == 'rgb(53, 63, 66)') {
	                this.refs.navSlider.refs.doubleBtn.className = _themeDom2.default['navSlider'] + ' ' + _themeDom2.default['navSlider2'];
	                event.target.parentNode.style.borderColor = '#7d7d7d';
	                console.log('aa');
	            } else {
	                this.refs.navSlider.refs.doubleBtn.className = _themeDom2.default['navSlider'] + ' ' + _themeDom2.default['navSlider3'];
	                event.target.parentNode.style.borderColor = '#353F42';
	                console.log("bb");
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _themeDom2.default['outer-themesdom'] },
	                _react2.default.createElement(_themeHead2.default, { actionTool: this.actionTool.bind(this) }),
	                _react2.default.createElement(_navSlider2.default, { ref: 'navSlider', clickfunction: this.props.clickfun, isShixu: this.state.isShixu })
	            );
	        }
	    }]);

	    return ThemeDom;
	}(_react.Component);

	exports.default = ThemeDom;

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(297);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./themeDom.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./themeDom.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._34hHKJn1L8X4AOQGGX9ei_{width: 100%;height: 60px;background: #353f42;line-height: 60px;font-size: 16px;color: white;padding-left: 20px;}\r\n._34hHKJn1L8X4AOQGGX9ei_ p{float: left;}\r\n.TnzZRRoQYKqHvXMD_BdSb{float: right;margin-right: 30px}\r\n.TnzZRRoQYKqHvXMD_BdSb li{float: left;margin-left: 45px;}\r\n.TnzZRRoQYKqHvXMD_BdSb li img{float: left;margin: 22px 5px 0px 0px}\r\n._3wecfTUDmjJM29mhdt9i8j{\r\n    \r\n    top: 0px;\r\n    left: 0px;\r\n    height: 0;\r\n}\r\n._1E02sGkHbyQdTJN3oc1wpS{\r\n    position: absolute;\r\n    right: 0px;\r\n    top:-220px;\r\n    height:275px;\r\n         z-index: 10;\r\n    width: 56px;\r\n}\r\n._39EhSSogYe-9D4L7SdFnd4{\r\n\tanimation: _2O5lz3vciHjyLpsHM7RO7J 0.5s forwards;\r\n}\r\n@keyframes _2O5lz3vciHjyLpsHM7RO7J{\r\n\t0%{top:-160px;}\r\n\t100%{top:80px;}\r\n}\r\n._3jI1_6D_KTiXALpNw5HjGU{\r\n\tanimation: _1ezHZlAtF_xR4XH3INXHKB 0.5s forwards;\r\n}\r\n@keyframes _1ezHZlAtF_xR4XH3INXHKB{\r\n\t0%{top:80px;}\r\n\t100%{top:-160px;}\r\n}", ""]);

	// exports
	exports.locals = {
		"themes-header": "_34hHKJn1L8X4AOQGGX9ei_",
		"tools-ul": "TnzZRRoQYKqHvXMD_BdSb",
		"outer-themesdom": "_3wecfTUDmjJM29mhdt9i8j",
		"navSlider": "_1E02sGkHbyQdTJN3oc1wpS",
		"navSlider2": "_39EhSSogYe-9D4L7SdFnd4",
		"sliderGoDown": "_2O5lz3vciHjyLpsHM7RO7J",
		"navSlider3": "_3jI1_6D_KTiXALpNw5HjGU",
		"sliderGoUp": "_1ezHZlAtF_xR4XH3INXHKB"
	};

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _navSlider = __webpack_require__(299);

	var _navSlider2 = _interopRequireDefault(_navSlider);

	var _button = __webpack_require__(301);

	var _button2 = _interopRequireDefault(_button);

	var _buttonList = __webpack_require__(304);

	var _buttonList2 = _interopRequireDefault(_buttonList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var imgList = [{
	    img: "./src/assets/tongji.png",
	    name: "统计",
	    pValue: '当前专题没有统计数据',
	    index: 'button4'
	}, {
	    img: "./src/assets/shixu.png",
	    name: "时序",
	    pValue: '当前专题没有时序数据',
	    index: 'button5'
	}, {
	    img: "./src/assets/fenji.png",
	    name: "分级",
	    pValue: '当前专题没有等级数据',
	    index: 'button6'
	}];

	var ButtonList2 = function (_Component) {
	    _inherits(ButtonList2, _Component);

	    function ButtonList2(props) {
	        _classCallCheck(this, ButtonList2);

	        return _possibleConstructorReturn(this, (ButtonList2.__proto__ || Object.getPrototypeOf(ButtonList2)).call(this, props));
	    }

	    _createClass(ButtonList2, [{
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            if (this.props.isShixu) {
	                imgList.splice(1, 1);
	            }
	            return _react2.default.createElement(
	                'div',
	                { className: _navSlider2.default["sliderWrap2"] },
	                imgList.map(function (val, index2) {
	                    return _react2.default.createElement(_button2.default, { key: index2, value: val.value, events: _this2.props.clickfun, buttonImg: val.img, index: val.index, buttonName: val.name, pValue: val.pValue });
	                })
	            );
	        }
	    }]);

	    return ButtonList2;
	}(_react.Component);

	var NavSlider = function (_Component2) {
	    _inherits(NavSlider, _Component2);

	    function NavSlider() {
	        _classCallCheck(this, NavSlider);

	        return _possibleConstructorReturn(this, (NavSlider.__proto__ || Object.getPrototypeOf(NavSlider)).apply(this, arguments));
	    }

	    _createClass(NavSlider, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { ref: 'doubleBtn', className: _navSlider2.default["navSlider"] },
	                _react2.default.createElement(_buttonList2.default, null),
	                _react2.default.createElement(ButtonList2, { clickfun: this.props.clickfunction, isShixu: this.props.isShixu })
	            );
	        }
	    }]);

	    return NavSlider;
	}(_react.Component);

	exports.default = NavSlider;

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(300);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./navSlider.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./navSlider.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._1FMOhVDfPua2lHCGZiWHDy{\r\n    position: absolute;\r\n    right: 15px;\r\n    top:150px;\r\n     background-color: white;\r\n    width: 30px;\r\n    margin-bottom: 14px;\r\n    border-radius: 4px;\r\n    padding:4px;\r\n    display: none;\r\n \r\n}\r\n._1FMOhVDfPua2lHCGZiWHDy button{width:30px;padding: 0px;}\r\n._1gmbt5MzbALFX-pZcySIda{\r\n    position: absolute;\r\n    right: 0px;\r\n    top:-160px;\r\n    height:275px;\r\n         z-index: 10;\r\n    width: 56px;\r\n}\r\n", ""]);

	// exports
	exports.locals = {
		"sliderWrap2": "_1FMOhVDfPua2lHCGZiWHDy",
		"navSlider": "_1gmbt5MzbALFX-pZcySIda"
	};

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _button = __webpack_require__(302);

	var _button2 = _interopRequireDefault(_button);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Button = function (_Component) {
	    _inherits(Button, _Component);

	    function Button(props) {
	        _classCallCheck(this, Button);

	        var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

	        _this.state = {
	            altShow: false,
	            pShow: false,
	            name: '',
	            text: ''
	        };

	        return _this;
	    }

	    _createClass(Button, [{
	        key: 'onmouseover',
	        value: function onmouseover() {
	            this.setState({ altShow: true });
	        }
	    }, {
	        key: 'onmouseleave',
	        value: function onmouseleave() {
	            this.setState({ altShow: false });
	        }
	    }, {
	        key: 'onclick',
	        value: function onclick() {

	            // let timer = setTimeout(
	            //     (this.setState(
	            //         { pShow: false },
	            //     )),5000
	            // )
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var a = void 0;
	            this.state.name = this.state.altShow ? this.props.buttonName : '';
	            this.state.text = this.state.pShow ? this.props.pValue : '';
	            this.state.img = this.state.altShow ? _react2.default.createElement('img', { src: './src/assets/\u4F4E\u680F.png', alt: 'w' }) : '';
	            switch (this.props.index) {
	                case 'button4':
	                    a = _button2.default.button4;break;
	                case 'button5':
	                    a = _button2.default.button5;break;
	                case 'button6':
	                    a = _button2.default.button6;break;
	            };
	            return _react2.default.createElement(
	                'div',
	                { className: a },
	                _react2.default.createElement(
	                    'button',
	                    { onClick: this.props.events, onMouseLeave: this.onmouseleave.bind(this), onMouseEnter: this.onmouseover.bind(this) },
	                    this.props.value,
	                    _react2.default.createElement('img', { src: this.props.buttonImg })
	                ),
	                _react2.default.createElement(
	                    'span',
	                    null,
	                    this.state.name
	                ),
	                this.state.img
	            );
	        }
	    }]);

	    return Button;
	}(_react.Component);

	exports.default = Button;

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(303);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./button.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./button.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "\r\n._1n1EZhYXkgfgPy7mtpc4vA>button._3XtrHbDvBDqp5reASwAJ6h>button{\r\n    height: 40px;  \r\n}\r\n\r\n._3XtrHbDvBDqp5reASwAJ6h>img,._1n1EZhYXkgfgPy7mtpc4vA>img{\r\n    position: absolute;\r\n    right: 55px;\r\n    top:9px;\r\n    position: absolute;\r\n    right: 55px;\r\n    color: white;\r\n}\r\n\r\n._3XtrHbDvBDqp5reASwAJ6h>span,._1n1EZhYXkgfgPy7mtpc4vA>span{\r\n    position: absolute;\r\n    color: white;\r\n    top:9px;\r\n    z-index: 1;\r\n    width: 40px;\r\n    right: 66px;\r\n    position: absolute;\r\n    right: 66px;\r\n    color: white;\r\n    z-index: 10;\r\n}\r\n._3XtrHbDvBDqp5reASwAJ6h,._1n1EZhYXkgfgPy7mtpc4vA{position: relative}", ""]);

	// exports
	exports.locals = {
		"button4": "_1n1EZhYXkgfgPy7mtpc4vA",
		"button6": "_3XtrHbDvBDqp5reASwAJ6h"
	};

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _buttonList = __webpack_require__(305);

	var _buttonList2 = _interopRequireDefault(_buttonList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Engine = window.Engine;
	var GeoVis = window.GeoVis;

	var Button1 = function (_Component) {
	    _inherits(Button1, _Component);

	    function Button1(props) {
	        _classCallCheck(this, Button1);

	        var _this = _possibleConstructorReturn(this, (Button1.__proto__ || Object.getPrototypeOf(Button1)).call(this, props));

	        _this.state = {
	            altShow: false,
	            name: '',
	            text: '',
	            value: _this.props.value
	        };
	        return _this;
	    }

	    _createClass(Button1, [{
	        key: 'onmouseover',
	        value: function onmouseover() {
	            this.setState({ altShow: true });
	        }
	    }, {
	        key: 'onmouseleave',
	        value: function onmouseleave() {
	            this.setState({ altShow: false });
	        }
	    }, {
	        key: 'mouseup',
	        value: function mouseup() {
	            if (this.state.value === '2D') {
	                this.setState({ value: '3D' });
	                window.earth.scene.mode = Engine.SceneMode.SCENE3D;
	            } else {
	                this.setState({ value: '2D' });
	                window.earth.scene.mode = Engine.SceneMode.SCENE2D;
	            }
	        }
	    }, {
	        key: 'mousedown',
	        value: function mousedown() {
	            this.setState({ altShow: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var comp = void 0;
	            this.state.name = this.state.altShow ? this.props.buttonName : '';

	            this.state.img = this.state.altShow ? _react2.default.createElement('img', { src: './src/assets/\u4F4E\u680F.png' }) : '';

	            return _react2.default.createElement(
	                'div',
	                { className: _buttonList2.default["button1"] },
	                _react2.default.createElement(
	                    'button',
	                    { alt: 'btn', onClick: this.props.dimensionTab, onMouseUp: this.mouseup.bind(this), onMouseDown: this.mousedown.bind(this) },
	                    this.state.value,
	                    _react2.default.createElement('img', { src: this.props.buttonImg })
	                ),
	                _react2.default.createElement(
	                    'span',
	                    null,
	                    this.state.name
	                ),
	                _react2.default.createElement(
	                    'p',
	                    null,
	                    this.state.text
	                ),
	                this.state.img
	            );
	        }
	    }]);

	    return Button1;
	}(_react.Component);

	// 第二个button


	var BotImg = function (_Component2) {
	    _inherits(BotImg, _Component2);

	    function BotImg(props) {
	        _classCallCheck(this, BotImg);

	        var _this2 = _possibleConstructorReturn(this, (BotImg.__proto__ || Object.getPrototypeOf(BotImg)).call(this, props));

	        _this2.state = {
	            threeMap: [{
	                url: '../src/Components/ButtonList/images/1.png', alt: '第三方底图1'
	            }, {
	                url: '../src/Components/ButtonList/images/2.png', alt: '第三方底图2'
	            }, {
	                url: '../src/Components/ButtonList/images/3.png', alt: '第三方底图3'
	            }, {
	                url: '../src/Components/ButtonList/images/4.png', alt: '第三方底图4'
	            }, {
	                url: '../src/Components/ButtonList/images/5.png', alt: '第三方底图5'
	            }, {
	                url: '../src/Components/ButtonList/images/6.png', alt: '第三方底图6'
	            }, {
	                url: '../src/Components/ButtonList/images/7.png', alt: '第三方底图7'
	            }, {
	                url: '../src/Components/ButtonList/images/8.png', alt: '第三方底图8'
	            }],
	            baseMap: [{ name: "基础底图1", imgurl: "../src/Components/ButtonList/images/基础底图1.png" }, { name: "基础底图2", imgurl: "../src/Components/ButtonList/images/基础底图2.png" }, { name: "基础底图3", imgurl: "../src/Components/ButtonList/images/基础底图3.png" }, { name: "基础底图4", imgurl: "../src/Components/ButtonList/images/基础底图4.png" }, { name: "基础底图5", imgurl: "../src/Components/ButtonList/images/基础底图5.png" }, { name: "基础底图6", imgurl: "../src/Components/ButtonList/images/基础底图6.png" }, { name: "基础底图7", imgurl: "../src/Components/ButtonList/images/基础底图7.png" }, { name: "基础底图8", imgurl: "../src/Components/ButtonList/images/基础底图8.png" }]
	        };
	        return _this2;
	    }

	    _createClass(BotImg, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {}
	    }, {
	        key: 'onclick',
	        value: function onclick(e) {
	            switch (e.target.id) {
	                case '0':
	                    this.initImg(6, function (data) {
	                        var a = data.remotedatasource.url;
	                        a = a.replace(/&amp;/g, '&');
	                        a = a.replace('[01234567]', '1');
	                        var layer = new GeoVis.TileLayer(a, {
	                            projection: 'EPSG:900913'
	                        }).addTo(window.earth.layers);
	                    });break;
	                case '1':
	                    this.initImg(1, function (data) {
	                        var a = data.remotedatasource.url;
	                        a = a.replace('[abc]', 'a');
	                        var layer = new GeoVis.TileLayer(a, { projection: 'EPSG:900913' }).addTo(window.earth.layers);
	                    });break;
	                case '2':
	                    this.initImg(7, function (data) {
	                        var a = data.remotedatasource.url;
	                        a = a.replace(/&amp;/g, '&');
	                        a = a.replace('[0123]', '0');

	                        var layer = new GeoVis.TileLayer(a, { projection: 'EPSG:900913' }).addTo(window.earth.layers);
	                    });break;
	                case '3':
	                    this.initImg(8, function (data) {
	                        var a = data.remotedatasource.url;
	                        a = a.replace(/&amp;/g, '&');
	                        a = a.replace('[1234]', '2');

	                        var layer = new GeoVis.TileLayer(a, { projection: 'EPSG:900913' }).addTo(window.earth.layers);
	                    });break;
	                case '4':
	                    this.initImg(4, function (data) {
	                        var a = data.remotedatasource.url;
	                        var layer = new GeoVis.TMSLayer(a, {
	                            projection: 'EPSG:4326'
	                        }).addTo(window.earth.layers);
	                    });
	                    break;
	                case '5':
	                    this.initImg(2, function (data) {
	                        var a = data.remotedatasource.url;

	                        var layer = new GeoVis.ArcGisLayer(a, { minLevel: 0, maxLevel: 20 }).addTo(window.earth.layers);
	                    });
	                    break;
	                case '6':
	                    this.initImg(3, function (data) {
	                        var a = data.remotedatasource.url;
	                        var layer = new GeoVis.ArcGisLayer(a, { minLevel: 0, maxLevel: 20 }).addTo(window.earth.layers);
	                    });
	                    break;

	                case '7':
	                    var layer = new GeoVis.TileLayer('../src/Components/ButtonList/dark/{z}/{x}/{y}.png', {
	                        projection: 'EPSG:900913'
	                    }).addTo(window.earth.layers);
	                    break;
	                default:
	                    break;
	            }
	        }
	    }, {
	        key: 'addBaseMap',
	        value: function addBaseMap(prams1) {
	            new GeoVis.WMTSLayer('http://192.168.4.229:28080/beyonserver/gwc/service/wmts', {
	                layer: prams1,
	                style: '',
	                format: 'image/png',
	                tileMatrixSetID: 'EPSG:4326',
	                tileMatrixLabels: ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3'],
	                maximumLevel: 19,
	                projection: 'EPSG:4326'
	            }).addTo(earth.layers);
	        }
	    }, {
	        key: 'baseMapEvent',
	        value: function baseMapEvent(e) {
	            switch (e.target.id) {
	                case '0':
	                    this.addBaseMap('beyondb:linyin_0816_world_black');
	                    break;
	                case '1':
	                    this.addBaseMap('beyondb:linyin_0816_world_blue');
	                    break;
	                case '2':
	                    this.addBaseMap('beyondb:linyin_0816_world_deepColor');
	                    break;
	                case '3':
	                    this.addBaseMap('beyondb:linyin_0816_world_gray');
	                    break;
	                case '4':
	                    this.addBaseMap('beyondb:linyin_0816_world_gray2');
	                    break;
	                case '5':
	                    this.addBaseMap('beyondb:linyin_0816_world_lightColor');
	                    break;
	                case '6':
	                    this.addBaseMap('beyondb:linyin_0816_world_lightColor2');
	                    break;
	                case '7':
	                    this.addBaseMap('beyondb:linyin_0816_world_retro');
	                    break;
	            }
	        }
	    }, {
	        key: 'initImg',
	        value: function initImg(id, callback) {
	            fetch('http://192.168.48.3:8690/remotedatasource/' + id, {
	                method: "POST"
	            }).then(function (res) {
	                if (res.status !== 200) {
	                    console.log(res.status);return;
	                }
	                res.json().then(function (data) {

	                    callback(data);
	                });
	            }).catch(function (err) {
	                console.log(err);
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this3 = this;

	            return _react2.default.createElement(
	                'div',
	                { className: _buttonList2.default["botImg"] },
	                _react2.default.createElement(
	                    'div',
	                    { className: _buttonList2.default["botImg1"] },
	                    _react2.default.createElement('div', null),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u5E95\u56FE\u9009\u62E9'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: _buttonList2.default["botImg2"] },
	                    _react2.default.createElement(
	                        'p',
	                        null,
	                        '\u57FA\u7840\u5E95\u56FE'
	                    ),
	                    this.state.baseMap.map(function (val, index) {
	                        return _react2.default.createElement(
	                            'div',
	                            { key: val.name, className: _buttonList2.default['base-map'], title: val.name, onClick: _this3.baseMapEvent.bind(_this3) },
	                            _react2.default.createElement('img', { id: index, src: val.imgurl, alt: val.name })
	                        );
	                    })
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: _buttonList2.default["botImg3"] },
	                    _react2.default.createElement(
	                        'p',
	                        null,
	                        '\u7B2C\u4E09\u65B9\u5E95\u56FE'
	                    ),
	                    this.state.threeMap.map(function (val, index) {
	                        return _react2.default.createElement(
	                            'div',
	                            { key: index, className: _buttonList2.default['base-map'], title: val.alt },
	                            _react2.default.createElement('img', { id: index, alt: val.alt, src: val.url, onClick: _this3.onclick.bind(_this3) })
	                        );
	                    })
	                )
	            );
	        }
	    }]);

	    return BotImg;
	}(_react.Component);

	var Button2 = function (_Component3) {
	    _inherits(Button2, _Component3);

	    function Button2(props) {
	        _classCallCheck(this, Button2);

	        var _this4 = _possibleConstructorReturn(this, (Button2.__proto__ || Object.getPrototypeOf(Button2)).call(this, props));

	        _this4.state = {
	            altShow: false,
	            name: '',
	            text: ''
	        };
	        return _this4;
	    }

	    _createClass(Button2, [{
	        key: 'onmouseover',
	        value: function onmouseover() {
	            this.setState({ altShow: true });
	        }
	    }, {
	        key: 'onmouseleave',
	        value: function onmouseleave() {
	            this.setState({ altShow: false });
	        }
	    }, {
	        key: 'mousedown',
	        value: function mousedown() {
	            this.setState({ altShow: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            this.state.name = this.state.altShow ? this.props.buttonName : '';

	            if (this.props.pShow2) {
	                this.state.comp = _react2.default.createElement(BotImg, null);
	            } else {
	                this.state.comp = '';
	            }
	            this.state.img = this.state.altShow ? _react2.default.createElement('img', { src: './src/assets/\u4F4E\u680F.png' }) : '';
	            return _react2.default.createElement(
	                'div',
	                { className: _buttonList2.default["button2"] },
	                _react2.default.createElement(
	                    'button',
	                    { onClick: this.props.mapTab, onMouseDown: this.mousedown.bind(this) },
	                    this.props.value,
	                    _react2.default.createElement('img', { alt: 'btn', src: this.props.buttonImg })
	                ),
	                _react2.default.createElement(
	                    'span',
	                    null,
	                    this.state.name
	                ),
	                _react2.default.createElement(
	                    'p',
	                    null,
	                    this.state.text
	                ),
	                this.state.img,
	                this.state.comp
	            );
	        }
	    }]);

	    return Button2;
	}(_react.Component);

	// 第三个button


	var Layer = function (_Component4) {
	    _inherits(Layer, _Component4);

	    function Layer(props) {
	        _classCallCheck(this, Layer);

	        var _this5 = _possibleConstructorReturn(this, (Layer.__proto__ || Object.getPrototypeOf(Layer)).call(this, props));

	        _this5.state = {
	            bianjie: ''
	        };
	        return _this5;
	    }

	    _createClass(Layer, [{
	        key: 'addBianJie',
	        value: function addBianJie(event) {
	            switch (event.target.id) {
	                case 'c1':
	                    console.log('1111111');
	                    break;
	                case 'c2':
	                    if (event.target.checked) {
	                        this.state.bianjie = new GeoVis.GeoJson('./src/Components/ButtonList/data/china.json', {
	                            outline: true
	                        }).addTo(earth);
	                        // var geojson = new GeoVis.GeoJson('./src/Components/ButtonList/data/si_chuan_geo.json', {
	                        //     outline: true
	                        // }).addTo(earth);
	                    } else {
	                        this.state.bianjie.removeFrom(window.earth);
	                    }
	                    break;
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _buttonList2.default["layer"] },
	                _react2.default.createElement(
	                    'div',
	                    { className: _buttonList2.default["layer1"] },
	                    _react2.default.createElement('div', null),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '\u56FE\u5C42'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: _buttonList2.default["layer2"] },
	                    _react2.default.createElement(
	                        'ul',
	                        null,
	                        _react2.default.createElement(
	                            'li',
	                            null,
	                            _react2.default.createElement('input', { type: 'checkbox', id: 'c1', onClick: this.addBianJie.bind(this) }),
	                            _react2.default.createElement(
	                                'label',
	                                { htmlFor: 'c1' },
	                                '\u5730\u540D'
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'li',
	                            null,
	                            _react2.default.createElement('input', { type: 'checkbox', id: 'c2', onClick: this.addBianJie.bind(this) }),
	                            _react2.default.createElement(
	                                'label',
	                                { htmlFor: 'c2' },
	                                '\u56FD/\u7701\u754C\u7EBF'
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return Layer;
	}(_react.Component);

	var Button3 = function (_Component5) {
	    _inherits(Button3, _Component5);

	    function Button3(props) {
	        _classCallCheck(this, Button3);

	        var _this6 = _possibleConstructorReturn(this, (Button3.__proto__ || Object.getPrototypeOf(Button3)).call(this, props));

	        _this6.state = {
	            altShow: false,
	            name: '',
	            text: ''
	        };
	        return _this6;
	    }

	    _createClass(Button3, [{
	        key: 'onmouseover',
	        value: function onmouseover() {
	            this.setState({ altShow: true });
	        }
	    }, {
	        key: 'onmouseleave',
	        value: function onmouseleave() {
	            this.setState({ altShow: false });
	        }
	    }, {
	        key: 'mousedown',
	        value: function mousedown() {
	            this.setState({ altShow: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            this.state.name = this.state.altShow ? this.props.buttonName : '';
	            // this.state.text = this.state.pShow ? this.props.pValue : '';
	            if (this.props.pShow3) {
	                this.state.comp = _react2.default.createElement(Layer, null);
	            } else {
	                this.state.comp = '';
	            }
	            this.state.img = this.state.altShow ? _react2.default.createElement('img', { src: './src/assets/\u4F4E\u680F.png' }) : '';
	            return _react2.default.createElement(
	                'div',
	                { className: _buttonList2.default["button3"] },
	                _react2.default.createElement(
	                    'button',
	                    { onClick: this.props.layerTab, onMouseDown: this.mousedown.bind(this) },
	                    this.props.value,
	                    _react2.default.createElement('img', { alt: 'btn', src: this.props.buttonImg })
	                ),
	                _react2.default.createElement(
	                    'span',
	                    null,
	                    this.state.name
	                ),
	                _react2.default.createElement(
	                    'p',
	                    null,
	                    this.state.text
	                ),
	                this.state.img,
	                this.state.comp
	            );
	        }
	    }]);

	    return Button3;
	}(_react.Component);

	// 三个button放在一起


	var imgList = [{
	    img: '',
	    name: '视图',
	    value: '2D',
	    index: 'button1'
	}, {
	    img: "./src/assets/低图.png",
	    name: '底图',
	    pValue: '',
	    index: 'button2'
	}, {
	    img: "./src/assets/图层.png",
	    name: "图层",
	    pValue: '最多可加载五个数据图层',
	    index: 'button3'

	}];

	var ButtonList1 = function (_Component6) {
	    _inherits(ButtonList1, _Component6);

	    function ButtonList1(props) {
	        _classCallCheck(this, ButtonList1);

	        var _this7 = _possibleConstructorReturn(this, (ButtonList1.__proto__ || Object.getPrototypeOf(ButtonList1)).call(this, props));

	        _this7.state = {
	            pShow: false,
	            pShow2: false,
	            pShow3: false
	        };
	        return _this7;
	    }

	    _createClass(ButtonList1, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var re = this;
	            window.earth.on('leftDown', function () {
	                if (event.target.alt != 'btn') {
	                    re.setState({
	                        pShow: false,
	                        pShow2: false,
	                        pShow3: false
	                    });
	                }
	            });
	            document.onclick = function (event) {
	                if (event.target.alt == 'gotool') {
	                    re.setState({
	                        pShow: false,
	                        pShow2: false,
	                        pShow3: false
	                    });
	                }
	            };
	        }
	    }, {
	        key: 'dimensionTab',
	        value: function dimensionTab() {
	            this.setState({ pShow: !this.state.pShow, pShow2: false, pShow3: false });
	        }
	    }, {
	        key: 'mapTab',
	        value: function mapTab() {
	            this.setState({ pShow2: !this.state.pShow2, pShow: false, pShow3: false });
	        }
	    }, {
	        key: 'layerTab',
	        value: function layerTab() {
	            this.setState({ pShow3: !this.state.pShow3, pShow: false, pShow2: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: _buttonList2.default["sliderWrap"] },
	                _react2.default.createElement(Button1, { dimensionTab: this.dimensionTab.bind(this), pShow: this.state.pShow, value: imgList[0].value, buttonImg: imgList[0].img, index: imgList[0].index, buttonName: imgList[0].name, pValue: imgList[0].pValue }),
	                _react2.default.createElement(Button2, { mapTab: this.mapTab.bind(this), pShow2: this.state.pShow2, value: imgList[1].value, buttonImg: imgList[1].img, index: imgList[1].index, buttonName: imgList[1].name, pValue: imgList[1].pValue }),
	                _react2.default.createElement(Button3, { layerTab: this.layerTab.bind(this), pShow3: this.state.pShow3, value: imgList[2].value, buttonImg: imgList[2].img, index: imgList[2].index, buttonName: imgList[2].name, pValue: imgList[2].pValue })
	            );
	        }
	    }]);

	    return ButtonList1;
	}(_react.Component);

	exports.default = ButtonList1;

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(306);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./buttonList.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./buttonList.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "\r\n\r\n._3MmMOFz9igdi46gGjAsWaZ{\r\n\r\n}\r\n._3MmMOFz9igdi46gGjAsWaZ>button{\r\n    height: 40px;\r\n    width: 30px;\r\n    padding: 0px;\r\n}\r\n._3MmMOFz9igdi46gGjAsWaZ>span{\r\n    position: absolute;\r\n    color: white;\r\n    top:94px;\r\n    z-index: 1;\r\n    width: 40px;\r\n    right: 66px;\r\n}\r\n\r\n._3MmMOFz9igdi46gGjAsWaZ>img{\r\n    position: absolute;\r\n    right: 55px;\r\n    top:94px;\r\n}\r\n.ifRm6UgDeHkQV96AU-JFy{\r\n    position: absolute;\r\n    right: 45px;\r\n    top:0px;\r\n    width: 180px;\r\n    height: 100px;\r\n    background-color: white;\r\n    border-radius: 2px;\r\n    z-index: 2;\r\n}\r\n._1S2syJ-e0OJc1R2loijtVp{\r\n    width: 100%;\r\n    height: 30px;\r\n    border-bottom: 1px solid #B8B8B8;\r\n}\r\n._1S2syJ-e0OJc1R2loijtVp>div{\r\n    background-color:#009999;\r\n    width:8px;\r\n    height:16px;\r\n    float: left;\r\n    margin: 8px 8px 0px 8px;\r\n}\r\n._1S2syJ-e0OJc1R2loijtVp>span{\r\n    position: absolute;\r\n    top:6px;\r\n}\r\n._33ZjxemW366lslPWSCSuG->ul>li{\r\n    height: 18px;\r\n    padding: 5px;\r\n}\r\n\r\n\r\n\r\n\r\n._27zZf9tOUwqHeBb_Q5GGas{\r\n    position: relative;\r\n    margin:0 24px;\r\n}\r\n._27zZf9tOUwqHeBb_Q5GGas>li{\r\n    float: left;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin:10px;\r\n}\r\n._27zZf9tOUwqHeBb_Q5GGas>li>div>img{\r\n    \r\n    width: 60px;\r\n    height: 60px;\r\n    \r\n}\r\n\r\n\r\n._6GLMjcTlqHvJvEa4FP99s{\r\n\r\n}\r\n._6GLMjcTlqHvJvEa4FP99s>button{\r\n    height: 40px;\r\n    border-bottom: 1px solid #B8B8B8;\r\n    width: 30px;\r\n    padding: 0px;\r\n}\r\n\r\n._6GLMjcTlqHvJvEa4FP99s>span{\r\n    position: absolute;\r\n    color: white;\r\n    top:54px;\r\n    z-index: 1;\r\n    width: 40px;\r\n    right: 66px;\r\n}\r\n._6GLMjcTlqHvJvEa4FP99s>img{\r\n    position: absolute;\r\n    right: 55px;\r\n    top:54px;\r\n}\r\n._2UmV0pf1-xYE3QLsRaWTwK{\r\n    position: absolute;\r\n    right: 45px;\r\n    top:0px;\r\n    width: 215px;\r\n    height: 270px;\r\n    background-color: white;\r\n    border-radius: 2px;\r\n    z-index: 2;\r\n    color: #333333;\r\n    font-size: 14px;\r\n    overflow-y: scroll;\r\n}\r\n._2UmV0pf1-xYE3QLsRaWTwK::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 50px 8px 1px none;\r\n    border-radius: 50px;\r\n    background-color: none;\r\n}\r\n._2UmV0pf1-xYE3QLsRaWTwK::-webkit-scrollbar{\r\n    width: 6px;\r\n    margin-top:6px;\r\n}\r\n._2UmV0pf1-xYE3QLsRaWTwK::-webkit-scrollbar-thumb{\r\n    background-color: #7d7d7d;\r\n}\r\n\r\n._3YA5tV3vva5eRxRnh6MNaG{\r\n    width: 100%;\r\n    height: 30px;\r\n    border-bottom:  1px solid #CDCDCD;\r\n    font-size: 16px;    \r\n}\r\n._1Hdn1VUfhf6vc5Zjy5HGaJ{\r\n    width: 100%;\r\n    height: auto;\r\n    border-bottom:  1px solid #CDCDCD;\r\n}\r\n._1Hdn1VUfhf6vc5Zjy5HGaJ > p{\r\n    padding-left: 10px;\r\n}\r\n._2lB8SD9eahbB_WErTb-Jw4{\r\n    width: 100%;\r\n    height: auto;    \r\n}\r\n._2lB8SD9eahbB_WErTb-Jw4 > p{\r\npadding-left: 10px;\r\n}\r\n\r\n._3YA5tV3vva5eRxRnh6MNaG>div{\r\n    background-color:#009999;\r\n    width:8px;\r\n    height:16px;\r\n    float: left;\r\n    margin: 8px 8px 0px 8px;\r\n}\r\n._3YA5tV3vva5eRxRnh6MNaG>span{\r\n    position: absolute;\r\n    top:7px;\r\n    font-size: 14px;\r\n}\r\n._1Hdn1VUfhf6vc5Zjy5HGaJ>span{\r\n    position: absolute;\r\n    left: 30px;\r\n    top:44px;\r\n}\r\n._1Hdn1VUfhf6vc5Zjy5HGaJ>div ,._2lB8SD9eahbB_WErTb-Jw4>div{\r\n    width: 40px;\r\n    height: 40px;\r\n}\r\n._1Hdn1VUfhf6vc5Zjy5HGaJ>div>img , ._2lB8SD9eahbB_WErTb-Jw4>div>img{\r\n    width:100%;\r\n    height: 100%;  \r\n}\r\n._2lB8SD9eahbB_WErTb-Jw4>span{\r\n    position: absolute;\r\n    left: 30px;\r\n}\r\n\r\n\r\n\r\n._2xDD-ETpxSDvSjzpcO6pWD{\r\n\r\n}\r\n._2xDD-ETpxSDvSjzpcO6pWD>button{\r\n    height: 40px;\r\n    border-bottom: 1px solid #B8B8B8;\r\n    width: 30px;\r\n    padding: 0px;\r\n}\r\n\r\n._2xDD-ETpxSDvSjzpcO6pWD>span{\r\n    position: absolute;\r\n    color: white;\r\n    top:14px;\r\n    z-index: 1;\r\n    width: 40px;\r\n    right: 66px;\r\n}\r\n\r\n\r\n._2xDD-ETpxSDvSjzpcO6pWD>img{\r\n    position: absolute;\r\n    right: 55px;\r\n    top:14px;\r\n}\r\n._2NtFNzqb8BNID0kcQ29hkN{\r\n    position: absolute;\r\n    right: 45px;\r\n    width: 80px;\r\n    height: 80px;\r\n    background-color: white;\r\n    border-radius: 2px;\r\n    top:-20px;\r\n    z-index: 20;\r\n}\r\n.EmMO3H3OT0ABmqcm_DMmD,._1gHZe5XxkoLYxGK7zEVF3Q{\r\n    padding: 10px;\r\n    text-align: center\r\n}\r\n\r\n\r\n.wF8kSxQXG1remqcDkKVFr{\r\n    position: absolute;\r\n    right: 15px;\r\n    top:10px;\r\n     background-color: white;\r\n    width: 30px;\r\n    margin-bottom: 14px;\r\n    border-radius: 4px;\r\n    padding: 4px;\r\n    height: 116px;\r\n}\r\n.AtQ9w_mwpnTuRCMZHwY3o{display: inline-block;margin: 5px 0px 5px 10px;}", ""]);

	// exports
	exports.locals = {
		"button3": "_3MmMOFz9igdi46gGjAsWaZ",
		"layer": "ifRm6UgDeHkQV96AU-JFy",
		"layer1": "_1S2syJ-e0OJc1R2loijtVp",
		"layer2": "_33ZjxemW366lslPWSCSuG-",
		"imgUl": "_27zZf9tOUwqHeBb_Q5GGas",
		"button2": "_6GLMjcTlqHvJvEa4FP99s",
		"botImg": "_2UmV0pf1-xYE3QLsRaWTwK",
		"botImg1": "_3YA5tV3vva5eRxRnh6MNaG",
		"botImg2": "_1Hdn1VUfhf6vc5Zjy5HGaJ",
		"botImg3": "_2lB8SD9eahbB_WErTb-Jw4",
		"button1": "_2xDD-ETpxSDvSjzpcO6pWD",
		"radio": "_2NtFNzqb8BNID0kcQ29hkN",
		"radio1": "EmMO3H3OT0ABmqcm_DMmD",
		"radio2": "_1gHZe5XxkoLYxGK7zEVF3Q",
		"sliderWrap": "wF8kSxQXG1remqcDkKVFr",
		"base-map": "AtQ9w_mwpnTuRCMZHwY3o"
	};

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _sizeChange = __webpack_require__(308);

	var _sizeChange2 = _interopRequireDefault(_sizeChange);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var imgList = [{
	    img: "./src/assets/放大.png",
	    name: 'img1'

	}, {
	    img: "./src/assets/缩小.png",
	    name: 'img2'
	}, {
	    img: "./src/assets/复位.png",
	    name: 'img3'
	}];

	var SizeChange = function (_Component) {
	    _inherits(SizeChange, _Component);

	    function SizeChange() {
	        _classCallCheck(this, SizeChange);

	        return _possibleConstructorReturn(this, (SizeChange.__proto__ || Object.getPrototypeOf(SizeChange)).apply(this, arguments));
	    }

	    _createClass(SizeChange, [{
	        key: 'onclick',
	        value: function onclick() {

	            earth.flyTo([105.218, 35.58, 18000000]);
	        }
	    }, {
	        key: 'onclick1',
	        value: function onclick1() {
	            earth.zoomIn();
	        }
	    }, {
	        key: 'onclick2',
	        value: function onclick2() {
	            earth.zoomOut();
	        }
	    }, {
	        key: 'render',
	        value: function render() {

	            return _react2.default.createElement(
	                'div',
	                { className: _sizeChange2.default['sizeChange'] },
	                _react2.default.createElement(
	                    'button',
	                    { onClick: this.onclick1 },
	                    _react2.default.createElement('img', { src: imgList[0].img })
	                ),
	                _react2.default.createElement(
	                    'button',
	                    { onClick: this.onclick2 },
	                    _react2.default.createElement('img', { src: imgList[1].img })
	                ),
	                _react2.default.createElement(
	                    'button',
	                    { className: _sizeChange2.default['reset'], onClick: this.onclick.bind(this) },
	                    _react2.default.createElement('img', { src: './src/assets/\u590D\u4F4D.png' })
	                )
	            );
	        }
	    }]);

	    return SizeChange;
	}(_react.Component);

	exports.default = SizeChange;

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(309);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./sizeChange.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./sizeChange.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._1gSSXWWUjKjYKzHwkldc17{\r\n     position: absolute;\r\n    bottom: 50px;\r\n    right: 17px;\r\n    width: 25px;\r\n    background-color: white;\r\n    border-radius: 4px;\r\n    height: 100px; \r\n   z-index: 10;\r\n   padding-left: 5px;\r\n\r\n}\r\n._1gSSXWWUjKjYKzHwkldc17 > button{\r\n    border-bottom: 1px solid gray;\r\n    height: 32px;\r\n    width: 20px;\r\n        padding: 0px;\r\n}\r\n._1gSSXWWUjKjYKzHwkldc17 >button >img{\r\n    display: table-cell;\r\ntext-align: center;\r\n vertical-align:middle;\r\n}\r\n._2bBxsBSRiB8hfeycQnIFAA{\r\n    border-bottom: none !important;\r\n}\r\n", ""]);

	// exports
	exports.locals = {
		"sizeChange": "_1gSSXWWUjKjYKzHwkldc17",
		"reset": "_2bBxsBSRiB8hfeycQnIFAA"
	};

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(311);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./Earth.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./Earth.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._2Sha0AgWKPWEYSOdoezfPc {\r\n    position: absolute !important;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    font-family: sans-serif;\r\n}\r\n._30kSdF9BJvNRul0qus8EHn{display: none;}", ""]);

	// exports
	exports.locals = {
		"geovis-earth": "_2Sha0AgWKPWEYSOdoezfPc",
		"isvisible": "_30kSdF9BJvNRul0qus8EHn"
	};

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _reactRouterDom = __webpack_require__(190);

	var _smartGPhone = __webpack_require__(313);

	var _smartGPhone2 = _interopRequireDefault(_smartGPhone);

	var _data = __webpack_require__(232);

	var _data2 = _interopRequireDefault(_data);

	var _globalPerson = __webpack_require__(242);

	var _globalPerson2 = _interopRequireDefault(_globalPerson);

	var _tianJinExplosion = __webpack_require__(247);

	var _tianJinExplosion2 = _interopRequireDefault(_tianJinExplosion);

	var _globalPolyline = __webpack_require__(252);

	var _globalPolyline2 = _interopRequireDefault(_globalPolyline);

	var _chinaTrain = __webpack_require__(254);

	var _chinaTrain2 = _interopRequireDefault(_chinaTrain);

	var _beijingDisaster = __webpack_require__(255);

	var _beijingDisaster2 = _interopRequireDefault(_beijingDisaster);

	var _globalSeismic = __webpack_require__(257);

	var _globalSeismic2 = _interopRequireDefault(_globalSeismic);

	var _educationCollage = __webpack_require__(258);

	var _educationCollage2 = _interopRequireDefault(_educationCollage);

	var _educationMiddleschool = __webpack_require__(259);

	var _educationMiddleschool2 = _interopRequireDefault(_educationMiddleschool);

	var _educationPrimaryschool = __webpack_require__(260);

	var _educationPrimaryschool2 = _interopRequireDefault(_educationPrimaryschool);

	var _educationKindergarten = __webpack_require__(261);

	var _educationKindergarten2 = _interopRequireDefault(_educationKindergarten);

	var _educationTechnicalschool = __webpack_require__(262);

	var _educationTechnicalschool2 = _interopRequireDefault(_educationTechnicalschool);

	var _beijingBus = __webpack_require__(263);

	var _beijingBus2 = _interopRequireDefault(_beijingBus);

	var _chengdu = __webpack_require__(265);

	var _chengdu2 = _interopRequireDefault(_chengdu);

	var _volcano = __webpack_require__(266);

	var _volcano2 = _interopRequireDefault(_volcano);

	var _chinaPerson = __webpack_require__(268);

	var _chinaPerson2 = _interopRequireDefault(_chinaPerson);

	var _chinaOldPerson = __webpack_require__(278);

	var _chinaOldPerson2 = _interopRequireDefault(_chinaOldPerson);

	var _chinaWorker = __webpack_require__(279);

	var _chinaWorker2 = _interopRequireDefault(_chinaWorker);

	var _personGlobal = __webpack_require__(280);

	var _personGlobal2 = _interopRequireDefault(_personGlobal);

	var _detail = __webpack_require__(275);

	var _detail2 = _interopRequireDefault(_detail);

	var _TibetPanorama = __webpack_require__(287);

	var _TibetPanorama2 = _interopRequireDefault(_TibetPanorama);

	var _OgasawaraIslands = __webpack_require__(290);

	var _OgasawaraIslands2 = _interopRequireDefault(_OgasawaraIslands);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	// import createFragment from 'react-addons-create-fragment';


	//单个专题的list
	var SingerList = function (_Component) {
	    _inherits(SingerList, _Component);

	    function SingerList() {
	        _classCallCheck(this, SingerList);

	        return _possibleConstructorReturn(this, (SingerList.__proto__ || Object.getPrototypeOf(SingerList)).apply(this, arguments));
	    }

	    _createClass(SingerList, [{
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            return _react2.default.createElement(
	                'ul',
	                { className: this.props.class },
	                this.props.lists.map(function (con) {
	                    return _react2.default.createElement(
	                        'li',
	                        { key: con.name },
	                        _react2.default.createElement('input', { id: con.name, type: 'checkbox', onClick: _this2.props.checkboxEvent, value: con.name, className: _smartGPhone2.default["smartgInput-li"] }),
	                        _react2.default.createElement('img', { onClick: _this2.props.checkboxEvent, className: _smartGPhone2.default["smartgInput-liImg"], src: con.img }),
	                        _react2.default.createElement(
	                            'label',
	                            { className: _smartGPhone2.default['label-input'], htmlFor: con.name },
	                            con.name
	                        )
	                    );
	                })
	            );
	        }
	    }]);

	    return SingerList;
	}(_react.Component);
	//专题列表


	var ListChunk = function (_Component2) {
	    _inherits(ListChunk, _Component2);

	    function ListChunk(props) {
	        _classCallCheck(this, ListChunk);

	        var _this3 = _possibleConstructorReturn(this, (ListChunk.__proto__ || Object.getPrototypeOf(ListChunk)).call(this, props));

	        _this3.state = {
	            isActive: _smartGPhone2.default['themes-mainLi'],
	            lists: ['全部11', '全部22', '全部33', '全部44', '全部55'],
	            liChild: _smartGPhone2.default['themes-mainLi-child']
	        };
	        return _this3;
	    }

	    _createClass(ListChunk, [{
	        key: 'slideDown',
	        value: function slideDown(event) {
	            if (event.target.childNodes.length > 0) {
	                if (event.target.className === _smartGPhone2.default['themes-mainLi']) {
	                    event.target.className = _smartGPhone2.default.activeStyle + ' ' + _smartGPhone2.default['themes-mainLi'];
	                    event.target.nextSibling.className = '';
	                    event.target.lastChild.src = './src/assets/xiajian.png';
	                    event.target.lastChild.style.margin = '21px 25px';
	                } else {
	                    event.target.className = '' + _smartGPhone2.default['themes-mainLi'];
	                    event.target.nextSibling.className = '' + _smartGPhone2.default['themes-mainLi-child'];
	                    event.target.lastChild.src = './src/assets/youjian.png';
	                    event.target.lastChild.style.margin = '18px 25px';
	                }
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'ul',
	                null,
	                _react2.default.createElement(
	                    'li',
	                    { className: this.state.isActive, onClick: this.slideDown.bind(this) },
	                    _react2.default.createElement('img', { className: _smartGPhone2.default["smartg-titlePng"], src: this.props.titlelogo }),
	                    this.props.title,
	                    _react2.default.createElement('img', { className: _smartGPhone2.default["smartg-titlegoPng"], src: './src/assets/youjian.png' })
	                ),
	                _react2.default.createElement(SingerList, { lists: this.props.lists, 'class': this.state.liChild, checkboxEvent: this.props.checkEvents })
	            );
	        }
	    }]);

	    return ListChunk;
	}(_react.Component);

	var SmartG = function (_Component3) {
	    _inherits(SmartG, _Component3);

	    function SmartG(props) {
	        _classCallCheck(this, SmartG);

	        var _this4 = _possibleConstructorReturn(this, (SmartG.__proto__ || Object.getPrototypeOf(SmartG)).call(this, props));

	        _this4.state = {
	            isGoLeft: true,
	            smartgInputMove: _smartGPhone2.default['smartg-input'] + ' ' + _smartGPhone2.default['fl'],
	            isGoDown: '' + _smartGPhone2.default['smartg-list'],
	            checkedArr: [],
	            data: _data2.default.details1,
	            title: '社会焦点',
	            isReady: false,
	            themesTitles: [],
	            imgList: ["./src/assets/shehuijiaodian.png", "./src/assets/scholl.png", "./src/assets/ziranzaihai.png", "./src/assets/jiaotong.png", "./src/assets/personcha.png", "./src/assets/jiejing.png", "./src/assets/zhihuic.png"],
	            themesTitles2: [{ title: '社会焦点', img: "./src/assets/shehuijiaodian.png", lists: [{ 'name': '天津爆炸', 'img': './src/assets/02_30.png' }] }, { title: '学校分布', img: "./src/assets/scholl.png", lists: [{ 'name': '全国大学分布', 'img': './src/assets/0.png' }, { 'name': '北京中学分布', 'img': './src/assets/07_30.png' }, { 'name': '全国主要城市小学分布', 'img': './src/assets/03_30.png' }, { 'name': '全国主要城市幼儿园分布', 'img': './src/assets/04_30.png' }, { 'name': '全国技术院校分布', 'img': './src/assets/05_30.png' }] }, { title: '自然灾害', img: "./src/assets/ziranzaihai.png", lists: [{ 'name': '北京地质灾害', 'img': './src/assets/06_300.png' }, { 'name': '全球地震分布', 'img': './src/assets/09_300.png' }] }, { title: '交通', img: "./src/assets/jiaotong.png", lists: [{ 'name': '全球航线', 'img': './src/assets/30.png' }, { 'name': '全国火车站', 'img': './src/assets/10_30.png' }, { 'name': '北京市公交线路密度分布', 'img': './src/assets/01_30.png' }] }, { title: '人口普查', img: "./src/assets/personcha.png", lists: [{ 'name': '1970年全球人口', 'img': './src/assets/11_30.png' }, { 'name': '全球人口', 'img': './src/assets/12_30.png' }, { 'name': '中国人口比例', 'img': './src/assets/13_30.png' }, { 'name': '中国老年人口比例', 'img': './src/assets/14_30.png' }, { 'name': '中国就业人口', 'img': './src/assets/08_30.png' }] }, { title: '街景', img: "./src/assets/jiejing.png", lists: [{ 'name': '西藏-川藏公路', 'img': './src/assets/15_30.png' }] }, { title: '智慧城市', img: "./src/assets/zhihuic.png", lists: [{ 'name': '成都3D图', 'img': './src/assets/chengdu.png' }] }]
	        };
	        return _this4;
	    }

	    _createClass(SmartG, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            // const re = this;
	            // let toke = 'feaQuaIKtUxemo8maVp4q8AO+qJj0qN2h1TZdKvLHCogm5zgLiTc1oXdQq8/akUbfqm/2c/njmGOp3QqTweoctXYV17RC9myFmeqt2wnxfHJMcUPQ3jNMAm4wY+im/PmoHGHknyzmzoj/ftsR3YnzeqLL+cIOywHCo/AuU5YyDA=';
	            // fetch("http://192.168.48.3:8808/metadata-service/metadata/manage/query", {
	            //       method: "POST",
	            //       headers: {
	            //         'Content-Type': 'application/x-www-form-urlencoded'
	            //       },
	            //       body: "dataType=LAB0&token="+toke+""
	            //     }).then(function(response) {
	            //         response.json().then( (dataval) => {
	            //             let allArr = [];
	            //             let emptyArr = [];                    
	            //             let listArr = [];
	            //             let titleArr = [];
	            //             dataval.map( (val) => {
	            //                 if(titleArr.indexOf(val.subject) == -1){
	            //                     titleArr.push(val.subject)
	            //                 }
	            //             })                    
	            //             titleArr.map( (value) => {
	            //                 dataval.map( (val) => {    
	            //                     if(val.subject == value){
	            //                         listArr.push({ name: val.tag, img: val.icon})                                
	            //                     }
	            //                 }) 
	            //                 emptyArr.push({ 
	            //                     title: value, 
	            //                     img : re.state.imgList,
	            //                     lists: listArr
	            //                 })
	            //                 allArr.push(emptyArr)
	            //                 emptyArr = []; 
	            //                 listArr = [];                      
	            //             })
	            //             re.setState({
	            //                 themesTitles : allArr,
	            //                 isReady : true
	            //             })
	            //         })
	            // });
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var re = this;
	            document.querySelectorAll('.' + _smartGPhone2.default['smartg-main'])[0].style.height = window.innerHeight - 60 + 'px';
	            document.querySelectorAll('.' + _smartGPhone2.default['smartg-list'])[0].style.height = window.innerHeight - 60 + 'px';
	            document.querySelectorAll('.' + _smartGPhone2.default['themes-main'])[0].style.height = window.innerHeight - 140 + 'px';
	            //监听输入框 input时 其中的值 实时展示小g中的内容
	            this.refs.inputVal.addEventListener("input", function () {
	                //当输入框内容为空 展示xiaog中所有专题
	                // if(this.value == ''){
	                // re.searchTheme()
	                // }
	            });
	            //监听input回车
	            this.refs.inputVal.addEventListener("keydown", function (event) {
	                //当输入框内容为空 展示xiaog中所有专题
	                if (event.keyCode == '13') {
	                    // re.searchTheme()
	                }
	            });
	        }
	    }, {
	        key: 'allChecked',
	        value: function allChecked() {
	            this.setState({ checkedArr: [] });
	            document.querySelectorAll('.' + _smartGPhone2.default['smartgInput-li']).forEach(function (val, index) {
	                val.checked = false;
	            });
	        }
	    }, {
	        key: 'checkedEvents',
	        value: function checkedEvents(event) {
	            var hrefCon = event.target.value;
	            window.location.href = "http://m.lab.geovis.ai:10019/#/earth/" + hrefCon + "";
	        }
	    }, {
	        key: 'slideUp',
	        value: function slideUp() {
	            this.setState({ liChild: _smartGPhone2.default['themes-mainLi-child'] });
	            for (var i = 0; i < document.querySelectorAll('.' + _smartGPhone2.default['themes-main'] + ' > ' + 'ul' + ' > ' + 'ul').length; i++) {
	                document.querySelectorAll('.' + _smartGPhone2.default['themes-main'] + ' > ' + 'ul' + ' > ' + 'ul')[i].className = '' + _smartGPhone2.default['themes-mainLi-child'];
	                document.querySelectorAll('.' + _smartGPhone2.default['themes-main'] + ' > ' + 'ul' + ' > ' + 'li')[i].className = '' + _smartGPhone2.default['themes-mainLi'];
	            }
	        }
	    }, {
	        key: 'searchTheme',
	        value: function searchTheme() {

	            var paramName = this.refs.inputVal.value;
	            var re = this;
	            var toke = 'feaQuaIKtUxemo8maVp4q8AO+qJj0qN2h1TZdKvLHCogm5zgLiTc1oXdQq8/akUbfqm/2c/njmGOp3QqTweoctXYV17RC9myFmeqt2wnxfHJMcUPQ3jNMAm4wY+im/PmoHGHknyzmzoj/ftsR3YnzeqLL+cIOywHCo/AuU5YyDA=';
	            fetch("http://192.168.48.3:8808/metadata-service/metadata/manage/query", {
	                method: "POST",
	                headers: {
	                    'Content-Type': 'application/x-www-form-urlencoded'
	                },
	                body: "dataType=LAB0&name=" + paramName + "&token=" + toke + ""
	            }).then(function (response) {
	                response.json().then(function (dataval) {
	                    console.log(dataval);
	                    var allArr = [];
	                    var emptyArr = [];
	                    var listArr = [];
	                    var titleArr = [];
	                    dataval.map(function (val) {
	                        if (titleArr.indexOf(val.subject) == -1) {
	                            titleArr.push(val.subject);
	                        }
	                    });
	                    titleArr.map(function (value) {
	                        dataval.map(function (val) {
	                            if (val.subject == value) {
	                                listArr.push({ name: val.tag, img: val.icon });
	                            }
	                        });
	                        emptyArr.push({
	                            title: value,
	                            img: re.state.imgList,
	                            lists: listArr
	                        });
	                        allArr.push(emptyArr);
	                        emptyArr = [];
	                        listArr = [];
	                    });
	                    console.log(allArr);
	                    re.setState({
	                        themesTitles: allArr,
	                        isReady: true
	                    });
	                });
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this5 = this;

	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'div',
	                    { className: _smartGPhone2.default["smartg-top"] },
	                    _react2.default.createElement(
	                        _reactRouterDom.Link,
	                        { to: '/' },
	                        'GV Lab'
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: _smartGPhone2.default["smartg-search"] },
	                        _react2.default.createElement(
	                            'div',
	                            { className: _smartGPhone2.default["smartg-logo"] + ' ' + _smartGPhone2.default.fl + ' ' },
	                            _react2.default.createElement('img', { src: './src/assets/globalsmartg1.png' })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: this.state.smartgInputMove },
	                            _react2.default.createElement('input', { ref: 'inputVal', placeholder: '\u8BF7\u8F93\u5165\u5173\u952E\u5B57' }),
	                            _react2.default.createElement(
	                                'div',
	                                { onClick: this.searchTheme.bind(this), className: _smartGPhone2.default["fr"] },
	                                _react2.default.createElement('img', { src: './src/assets/search.png' })
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: _smartGPhone2.default["smartg-main"] },
	                    _react2.default.createElement(
	                        'div',
	                        { className: this.state.isGoDown },
	                        _react2.default.createElement(
	                            'div',
	                            { className: _smartGPhone2.default["ulList-title"] },
	                            _react2.default.createElement(
	                                'span',
	                                null,
	                                '\u4E13\u9898'
	                            ),
	                            _react2.default.createElement(
	                                'p',
	                                { className: _smartGPhone2.default["fr"], onClick: this.allChecked.bind(this) },
	                                '\u6E05\u9664\u9009\u62E9'
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: _smartGPhone2.default["themes-main"] },
	                            this.state.themesTitles2.map(function (val, index) {
	                                return _react2.default.createElement(ListChunk, { title: val.title, titlelogo: val.img, lists: val.lists, checkEvents: _this5.checkedEvents.bind(_this5), key: val.title.toString() });
	                            })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: _smartGPhone2.default['bottom-slide'], onClick: this.slideUp.bind(this) },
	                            _react2.default.createElement('img', { className: _smartGPhone2.default['shouqi-png'], src: './src/assets/shouqi.png' })
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return SmartG;
	}(_react.Component);

	exports.default = SmartG;

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(314);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(188)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./smartGPhone.css", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js?module&localIndentName=[hash:base64:5]&-url!./smartGPhone.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(187)();
	// imports


	// module
	exports.push([module.id, "._30vlCM0G-q10uQfkHP2Rx9{float: left;}\r\n.IQSYJDkAQLz2RVVFHs_0r{float: right;font-size: 13px;}\r\n._2yCBpHRDJFoEYkUXVOjJEM{width: 100%;height: 550px;position: absolute;border-radius: 5px;overflow: hidden;z-index: 10;}\r\n.KMsBzzw5LLmzT0T_pQ3em{width:50px;height: 30px;box-sizing: border-box;}\r\n.KMsBzzw5LLmzT0T_pQ3em img{    margin: 4px 0px 0px 18px;\r\n    width: 18px;}\r\n._3awgbsOl22T9OtKeVcOEKr{width: 175px;height: 30px;line-height: 30px;box-sizing: border-box;}\r\n._2omKdo7Mrvys67ZoqZFXoa{width: 100%;height:45px;padding-top: 15px;background: url('./src/assets/indexbg.png');}\r\n._2omKdo7Mrvys67ZoqZFXoa a{color: white;    display: inline-block;\r\n    line-height: 30px;    padding-left: 25px;\r\n    font-size: 17px;}\r\n._2DWMdiuQrUgH1GgQIK8z9l{width: 235px;height: 30px;margin:0 auto;border: 1px solid #b8b8b8;background: #ebebeb;border-radius: 30px;float: right;    margin-right: 15px;}\r\n._3awgbsOl22T9OtKeVcOEKr input{width:134px;height: 100%;font-size: 14px;padding: 0px; border-right:1px solid #b8b8b8;text-indent: 10px;color: #333;    border-left: 1px solid #b8b8b8;box-sizing: border-box;border-radius: 0px;}\r\n._3awgbsOl22T9OtKeVcOEKr img{    width: 17px;\r\n    margin: 7px 8px 0px 0px;}\r\n._2tUW0GkmcA2SYJY5-X3jiX{width: 100%;height:500px;background: #ebebeb;border-radius: 5px;}\r\n._3QV9D69WfrjJhBKfEK1k6C{display: none;}\r\n._2DRkhMDvzhzntPbEmhjp7i{width:100%;height:30px;margin: 0 auto;line-height:30px;color: #a1a1a1}\r\n._2DRkhMDvzhzntPbEmhjp7i p{padding-right: 20px;display: none;}\r\n._2DRkhMDvzhzntPbEmhjp7i span{padding-left: 20px;}\r\n._2DRkhMDvzhzntPbEmhjp7i span{font-size: 16px;color: black;}\r\n._2iWmBTYbW6d_AV413gNs9t{width:100%;height: 420px;margin: 0 auto;overflow-y: scroll;line-height: 30px;    font-size: 15px;color: #1d334b;}\r\n._2iWmBTYbW6d_AV413gNs9t::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 50px 8px 1px none;\r\n    border-radius: 50px;\r\n    background-color: none;\r\n}\r\n._2iWmBTYbW6d_AV413gNs9t::-webkit-scrollbar{\r\n    width: 2px;\r\n    margin-top:2px;\r\n}\r\n._2iWmBTYbW6d_AV413gNs9t::-webkit-scrollbar-thumb{\r\n    background-color: #7d7d7d;\r\n}\t\r\n._2iWmBTYbW6d_AV413gNs9t ul{width: 100%;}\r\n._2iWmBTYbW6d_AV413gNs9t ul ul{text-indent: 10px;}\r\n._30PWrgeoRizifntZAuuwDx{background: #e2e0e0;    margin-bottom: 1px;height: 50px;line-height: 50px;}\r\n._30PWrgeoRizifntZAuuwDx:hover{background: #009899;color: white;}\r\n.Ad9HMJooqW3vbmGYpytkP{background: #009899;color: white;}\r\n._1d0aWQhh7wZU9-jhZ_BFjK{width:100%;display: none;background: #ebebeb;text-indent: 25px;}\r\n._1d0aWQhh7wZU9-jhZ_BFjK li{width:100%;height:40px;line-height: 40px;text-align: left;font-size: 15px;}\r\n.juzmOfizU1BcF_Cpb_zT0{width:100px;height: 35px;line-height: 35px;text-align: center; color: #818181;background: #ebebeb;font-size: 14px;border-radius: 5px;float: left;margin-left: 15px;cursor: pointer;margin-top: 10px;}\r\n.juzmOfizU1BcF_Cpb_zT0 span{width:70px;display: inline-block; overflow: hidden;\r\n\ttext-overflow: ellipsis;\r\n    white-space: nowrap;}\r\n.juzmOfizU1BcF_Cpb_zT0 span:last-child{width: 10px;cursor: pointer;}\r\n.juzmOfizU1BcF_Cpb_zT0 img{width: 10px; margin: 13px 8px 0px 0px;float: right;}\r\n._30M_hiTvA9bdwPy3bRB3Bm{position: absolute;top: 73px;left: 345px;z-index: 10}\r\n._2glNEtwbxhVzu6Tju9bfUp { color: #000; position: absolute;\r\n    width: 30px;\r\n    height: 30px;\r\n    opacity: 0;}\r\n    ._2TF3aRa4VsM3o1JgHHb-Gk{    line-height: 40px;}\r\n._1ZvC4p4NspBjwroytpokzW{width: 20px;padding:10px;}\r\n.h-E_1uAxvMq1RCNrRIclU{    margin: 15px auto;\r\n    display: block;}\r\n._148bh22-QdRC7PxpB8K8tG{height: 40px;}\r\n\r\n.g-aBzK2rX933Z749hi5ca{width: 17px;margin: 16px 25px;}\r\n._29IAQPujxHbLmYJMlGIBMR{float: right;\r\n        margin: 18px 25px;\r\n    /*height: 15px;*/\r\n}\r\n", ""]);

	// exports
	exports.locals = {
		"fl": "_30vlCM0G-q10uQfkHP2Rx9",
		"fr": "IQSYJDkAQLz2RVVFHs_0r",
		"smartg-main": "_2yCBpHRDJFoEYkUXVOjJEM",
		"smartg-logo": "KMsBzzw5LLmzT0T_pQ3em",
		"smartg-input": "_3awgbsOl22T9OtKeVcOEKr",
		"smartg-top": "_2omKdo7Mrvys67ZoqZFXoa",
		"smartg-search": "_2DWMdiuQrUgH1GgQIK8z9l",
		"smartg-list": "_2tUW0GkmcA2SYJY5-X3jiX",
		"isMainVisble": "_3QV9D69WfrjJhBKfEK1k6C",
		"ulList-title": "_2DRkhMDvzhzntPbEmhjp7i",
		"themes-main": "_2iWmBTYbW6d_AV413gNs9t",
		"themes-mainLi": "_30PWrgeoRizifntZAuuwDx",
		"activeStyle": "Ad9HMJooqW3vbmGYpytkP",
		"themes-mainLi-child": "_1d0aWQhh7wZU9-jhZ_BFjK",
		"checked-li": "juzmOfizU1BcF_Cpb_zT0",
		"checked-item": "_30M_hiTvA9bdwPy3bRB3Bm",
		"smartgInput-li": "_2glNEtwbxhVzu6Tju9bfUp",
		"label-input": "_2TF3aRa4VsM3o1JgHHb-Gk",
		"smartgInput-liImg": "_1ZvC4p4NspBjwroytpokzW",
		"shouqi-png": "h-E_1uAxvMq1RCNrRIclU",
		"bottom-slide": "_148bh22-QdRC7PxpB8K8tG",
		"smartg-titlePng": "g-aBzK2rX933Z749hi5ca",
		"smartg-titlegoPng": "_29IAQPujxHbLmYJMlGIBMR"
	};

/***/ })
/******/ ]);